{"version":3,"sources":["pages/options.module.css","serviceWorker.js","side-effects.js","data-types/constants.js","data-types/types.js","data-types/factories.js","data-types/helpers.js","pairing-scoring/types.js","pairing-scoring/scoring.js","pairing-scoring/factories.js","pairing-scoring/converters.js","pairing-scoring/pairing.js","pairing-scoring/ratings.js","components/icons.jsx","pages/tournament/crosstable.jsx","components/utility.jsx","components/new-player.jsx","hooks/reducers/generic-db-reducer.js","hooks/reducers/options-reducer.js","hooks/default-options.js","demo-data/index.js","hooks/hooks.js","hooks/db.js","pages/tournament/player-select/selecting.jsx","pages/tournament/player-select/index.jsx","pages/tournament/pair-picker/player-info.jsx","pages/tournament/pair-picker/select-list.jsx","pages/tournament/pair-picker/stage.jsx","pages/tournament/pair-picker/index.jsx","components/404.jsx","pages/tournament/round/player-match-info.jsx","pages/tournament/round/match-row.jsx","pages/tournament/round/round-table.jsx","pages/tournament/round/round.jsx","pages/tournament/round/index.jsx","pages/tournament/round/round-panels.jsx","pages/tournament/scores.jsx","pages/tournament/setup.jsx","pages/tournament/sidebar.jsx","pages/tournament/tournament-data/players-reducer.js","pages/tournament/tournament-data/match-functions.js","pages/tournament/tournament-data/tournament-reducer.js","electron-utils.js","components/about-dialog.jsx","components/sidebar-default.jsx","components/windows-controls.jsx","components/window.jsx","pages/tournament/tournament-data/index.jsx","pages/tournament/status.jsx","pages/tournament/tournament.jsx","pages/tournament/tournament-list.jsx","pages/tournament/index.jsx","test-data/index.js","pages/options.jsx","pages/players/player-list.jsx","pages/players/player-profile.jsx","pages/players/index.jsx","components/caution/index.jsx","pages/splash.jsx","App.jsx","index.jsx","pages/tournament/index.module.css","pages/tournament/round/round.module.css","components/windows-controls.module.css","pages/splash.module.css","icon-min.svg","pages/players/index.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["module","exports","options","Boolean","window","location","hostname","match","numeral","register","format","value","roundingFunction","whole","Math","floor","remainder","fraction","String","regexps","unformat","Number","WHITE","BLACK","DUMMY_ID","Id","t","refinement","id","test","Color","num","AvoidPair","tuple","Player","interface","firstName","lastName","matchCount","rating","type","Match","newRating","origRating","playerIds","result","RoundList","list","Tournament","byeQueue","date","Date","name","roundList","tieBreaks","db","Object","freeze","Options","avoidPairs","byeValue","lastBackup","Tourneys","dict","Players","createMatch","importObj","types","assign","nanoid","createPlayer","isDummyId","playerId","isDummyObj","playerObj","dummyPlayer","createMissingPlayer","getPlayerMaybe","playerDict","player","rounds2Matches","lastRound","arguments","length","undefined","slice","reduce","acc","round","concat","getUnmatched","players","roundId","matchedIds","_ref","values","includes","assoc","isRoundComplete","unmatched","results","map","_ref2","keys","ColorScore","ScoreData","colorScores","colors","isDummy","opponentResults","ratings","resultsNoByes","PairingData","avoidIds","halfPos","isUpperHalf","opponents","score","ScoreCalculator","func","Standing","BLACKVALUE","WHITEVALUE","getOpponentScores","scoreData","filter","oppId","getPlayerScore","sum","getCumulativeScore","scoreList","last","tieBreakMethods","0","of","scores","pipe","sort","ascend","init","tail","1","2","3","4","getTieBreakNames","idList","i","createBlankScoreData","createStandingList","methods","selectedTieBreaks","standings","sortFuncList","key","descend","path","prop","sortWith","createStandingTree","standingList","standing","orig","standing1","standing2","prevStanding","append","over","lensIndex","match2ScoreDataReducer","_map","color","origData","lensProp","defaultTo","scoreTypes","color2Score","lensPath","add","_map2","slicedToArray","p1Data","p2Data","matches2ScoreData","matchList","avoidPairReducer","pair","createPairingData","playerData","avoidDict","data","playerStats","pairData","priority","condition","divisiblePriority","dividend","divisor","avoidMeetingTwice","sameScores","halfPosition","sameHalfPriority","differentHalf","isDiffHalf","differentDueColor","maxPriority","calcPairIdeal","player1","player2","metBefore","mustAvoid","p1LastColor","p2LastColor","scoreDiff","abs","halfDiff","splitInHalf","splitAt","upperHalfReducer","ignore","src","_pipe","p2","p","_pipe2","upperHalfIds","lowerHalfIds","indexOf","mergeRight","setUpperHalves","sortByScoreThenRating","assignColorsForPair","_pair","sortByNetScoreThenRating","pair1","pair2","pluck","getKFactor","calcNewRatings","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","simpleIcon","icon","props","react_default","a","createElement","dangerouslySetInnerHTML","__html","svg","aria-label","title","role","style","fill","hex","icons","Activity","Alert","ArrowDown","ArrowLeft","ArrowUp","Award","Check","CheckCircle","ChevronDown","ChevronLeft","ChevronRight","ChevronUp","Circle","Download","Edit","Help","Info","Javascript","Layers","List","Plus","React","ReactIcon","Repeat","Settings","Sidebar","Trash","Unfullscreen","UserMinus","UserPlus","Users","X","Crosstable","tournament","tourney","getPlayer","className","table","rank","colSpan","index","row","scope","playerName","opponent","index2","player1Id","player2Id","getXScore","firstRating","lastRating","change","Fragment","getRatingChangeTds","Panel","children","styles","panel","objectSpread","PanelContainer","rest","objectWithoutProperties","classNames","panels","dateFormat","Intl","DateTimeFormat","day","month","year","timeFormat","hour","minute","DateFormat","_ref5","showTime","dateTime","toISOString","Notification","_ref6","success","warning","error","tooltip","_ref7","_ref8","notifClassName","SortLabel","_ref9","sortKey","dispatch","chevronStyle","opacity","width","onClick","isDescending","aria-hidden","visually_hidden_es","findById","x","NewPlayer","newPlayerDefault","_useState","useState","_useState2","newPlayerData","setNewPlayerdata","updateField","event","preventDefault","_event$currentTarget","currentTarget","prevState","onSubmit","htmlFor","required","onChange","genericDbReducer","state","action","nextId","console","warn","item","dissoc","mergeLeft","Error","optionsReducer","option","union","demo_data","fromJSON","tournaments","toLowerCaseIfPossible","toLowerCase","sortedTableReducer","oldState","newState","_oldState$newState","direction","caseInsensitiveProp","sortFunc","useSortedTable","initialState","_useReducer","useReducer","_useReducer2","useEffect","useLoadingCursor","isLoaded","document","body","cursor","setItemsPrototype","localForage","removeItemsPrototype","optionsStore","createInstance","storeName","playerStore","tourneyStore","loadDemoDB","_loadDemoDB","apply","this","_callee3","regenerator_default","wrap","_context3","prev","next","setItems","demoData","alert","stop","useAllItemsFromDb","store","items","setIsLoaded","didCancel","asyncToGenerator","mark","_callee","cleanResults","_context","getItems","sent","is","_callee2","deleted","_context2","difference","removeItems","useAllPlayersDb","useAllTournamentsDb","useOptionsDb","_useReducer3","defaultOptions","_useReducer4","_useState3","_useState4","iterate","then","Selecting","tourneyDispatch","_useAllPlayersDb","_useAllPlayersDb2","allPlayersDispatch","togglePlayer","target","checked","pId","PlayerList","disabled","PlayerSelect","activePlayers","isSelecting","setIsSelecting","matches","flexShrink","dialog_es","isOpen","onDismiss","PlayerInfo","_useOptionsDb","colorBalance","hasBye","avoidList","prettyBalance","data-testid","entries","_ref3","opId","SelectList","stagedPlayers","setStagedPlayers","_useSortedTable","_useSortedTable2","sorted","sortedDispatch","isOnePlayerSelected","Set","size","selectedIds","selectedPlayer","calcIdealOrNot","ideal","setWhite","set","setBlack","selectPlayer","Stage","_stagedPlayers","white","black","whiteName","blackName","unstage","matchIdeal","player0stats","player1stats","react","every","PairPicker","unmatchedCount","unmatchedWithDummy","isModalOpen","setIsModalOpen","useMemo","curry","p1","flexGrow","NotFound","PlayerMatchInfo","_scoreData$playerId","MatchRow","compact","pos","selectedMatch","setSelectedMatch","playersDispatch","openModal","setOpenModal","resultCode","whitePlayer","blackPlayer","ResultDisplay","setMatchResult","matchId","rowId","playerResult","matchResult","winnerSelect","onBlur","controls","RoundTable","tbody","Round","_404","moveMatch","oldIndex","newIndex","forEach","unMatch","WrappedComponent","RoundWithData","activePlayersCount","initialTab","openTab","setOpenTab","tabs_es","_props$tournament","ScoreTable","tieBreakNames","standingTree","obj","defineProperty","topHeader","standingsFlat","rowSpan","dashify","j","SelectTieBreaks","selectedTb","setSelectedTb","toggleTb","defaultId","moveTb","button-primary","selected","marginTop","Scores","_ref4","Setup","isEditingName","setIsEditingName","isEditingDate","setIsEditingDate","dateInput","getFullYear","getMonth","getDate","textAlign","_event$currentTarget$","split","_event$currentTarget$2","rawYear","rawMonth","rawDay","es","to","noDraggy","onDragStart","e","navigate","isItOver","isNewRoundReady","isComplete","_delLastRound","confirm","playersReducer","scoreByeMatch","autoPair","filteredData","_setByePlayer","dummyId","dataList","playersWithoutByes","nextByeSignup","dataForNextBye","byeData","setByePlayer","_setByePlayer2","pairDataNoByes","byePlayerData","pairs","pairingData","playerIdArray","reduceWithIndices","addIndex","accArr","srcArr","playerMatches","blossom","p1Index","p2Index","matched","pairPlayers","pairsWithBye","idsPair","tournamentReducer","remove","move","__","findIndex","propEq","reverse","electron","require","ifElectron","fn","IfElectron","_ref$onlyWin","onlyWin","_ref$onlyMac","onlyMac","win","navigator","appVersion","mac","ifElectronOpen","url","shell","openExternal","macOSDoubleClick","doubleClickAction","getUserDefault","remote","systemPreferences","getCurrentWindow","minimize","isMaximized","unmaximize","maximize","toggleMaximize","propTypes","PropTypes","node","isRequired","bool","onlyWindows","GITHUB_URL","LICENSE_URL","About","display","justifyContent","flex","logo","height","alt","href","margin","Close","viewBox","xmlns","d","Maximize","Minimize","Restore","Controls","middleButton","isFullScreen","winButton","setFullScreen","windows_controls_Restore","windows_controls_Maximize","container","windows_controls_Minimize","close","windows_controls_Close","WindowContext","createContext","useWindowContext","useContext","GLOBAL_TITLE","formatTitle","initialWinState","isBlur","isDialogOpen","isSidebarOpen","windowReducer","isMac","isWin","toolbarClasses","macos-button-toolbar","button-ghost","WindowTitleBar","traffic-light-padding","onDoubleClick","alignItems","marginLeft","marginRight","left","position","right","Window","unregisterListeners","removeAllListeners","on","isFocused","open-sidebar","closed-sidebar","window-blur","isWindows","isMacOS","isElectron","window_WindowTitleBar","Provider","winDispatch","winState","backgroundColor","about_dialog","WindowBody","footer","sidebar","_ref3$footerProps","footerProps","winBody-hasFooter","sidebar_default_Sidebar","emptyTourney","loadReducer","initLoading","noDbError","TournamentData","tourneyId","tourneyReducer","_useReducer5","_useReducer6","loadedDispatch","getItem","allTheIds","allPlayers","Array","from","getAllPlayerIdsFromMatches","symmetricDifference","setItem","catch","roundCount","playerCount","ceil","log2","isFinite","calcNumOfRounds","shape","object","number","Status","lastRoundId","Footer","tooltipText","isTooltipWarn","minHeight","default","TournamentList","_useAllTournamentsDb","_useAllTournamentsDb2","tourneys","sortDispatch","newTourneyName","setNewTourneyName","isFormOpen","setIsFormOpen","message","deleteTournament","placeholder","TournamentIndex","invalidAlert","LastBackupDate","getTime","tourneysDispatch","text","setText","_useOptionsDb2","optionsDispatch","exportData","loadData","JSON","stringify","download","encodeURIComponent","reader","FileReader","onload","ev","parse","_unused2","readAsText","files","process","_unused","cols","rows","spellCheck","delPlayer","PlayerProfile","avoidObj","singAvoidList","unAvoided","selectedAvoider","setSelectedAvoider","handleChange","handleAvoidChange","playerInfo","defaultValue","readOnly","arial-label","newSelected","PlayerProfileWrapper","childProps","basepath","player_list_PlayerList","Caution","caution","caution__text","caution__link","ISSUES_URL","Splash","border","splash","hint","titleIcon","titleText","subtitle","fontSize","source","createHashSource","history","createHistory","App","pages_tournament","tournament_Tournament","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister","header","contentFrame","__webpack_require__"],"mappings":"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","file":"static/js/main.3b0b4abc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__2hUUH\"};","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import numeral from \"numeral\";\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"fraction\", {\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        const whole = Math.floor(value);\n        const remainder = value - whole;\n        const fraction = (function () {\n            switch (remainder) {\n            case 0.25:\n                return \"¼\";\n            case 0.5:\n                return \"½\";\n            case 0.75:\n                return \"¾\";\n            default:\n                return \"\";\n            }\n        }());\n        const stringedWhole = whole === 0 && remainder ? \"\" : String(whole);\n        return stringedWhole + fraction;\n    },\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    unformat: function (value) {\n        // TODO: This doesn't do anything currently\n        return Number(value);\n    }\n});\n","// These define the array indices used in `Match` objects.\n// @example: `[WhitePlayer, BlackPlayer1]`, `[WhiteScore, BlackScore]`\nconst WHITE = 0;\nconst BLACK = 1;\n// This is used in by matches to indicate a dummy player. The\n// `getPlayerMaybe()` method returns a special dummy player profile when\n// fetching this ID.\n// This ID conforms to the NanoID regex.\nconst DUMMY_ID = \"________DUMMY________\";\n\nexport {BLACK, DUMMY_ID, WHITE};\n","import {BLACK, WHITE} from \"./constants\";\nimport t from \"tcomb\";\n\nconst Id = t.refinement(\n    t.String,\n    (id) => /^[A-Za-z0-9_-]{21}$/.test(id),\n    \"NanoId\"\n);\n\nconst Color = t.refinement(\n    t.Number,\n    (num) => num === BLACK || num === WHITE,\n    \"Color\"\n);\n\nconst AvoidPair = t.tuple([Id, Id], \"AvoidPair\");\n\nconst Player = t.interface(\n    {\n        firstName: t.String,\n        id: Id,\n        lastName: t.String,\n        matchCount: t.Number,\n        rating: t.Number,\n        type: t.String // used for CSS styling etc\n    },\n    \"Player\"\n);\n\nconst Match = t.interface(\n    {\n        id: Id,\n        newRating: t.tuple([t.Number, t.Number]),\n        origRating: t.tuple([t.Number, t.Number]),\n        playerIds: t.tuple([Id, Id]),\n        result: t.tuple([t.Number, t.Number])\n    },\n    \"Match\"\n);\n\nconst RoundList = t.list(t.list(Match), \"RoundList\");\n\nconst Tournament = t.interface(\n    {\n        byeQueue: t.list(t.String),\n        date: Date,\n        id: Id,\n        name: t.String,\n        playerIds: t.list(t.String),\n        roundList: RoundList,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Tournament\"\n);\n\nconst db = Object.freeze({\n    Options: t.interface(\n        {\n            avoidPairs: t.list(AvoidPair),\n            byeValue: t.refinement(t.Number, (num) => num === 1 || num === 0.5),\n            lastBackup: Date\n        },\n        \"Options\"\n    ),\n    Tourneys: t.dict(Id, Tournament, \"TournamentsDB\"),\n    Players: t.dict(Id, Player, \"PlayersDB\")\n});\n\nexport default Object.freeze({\n    AvoidPair,\n    Color,\n    Id,\n    Match,\n    Player,\n    RoundList,\n    Tournament,\n    db\n});\n","// These factories are mainly useful as a shortcut for default values.\nimport nanoid from \"nanoid\";\nimport types from \"./types\";\n\nexport function createMatch(importObj) {\n    return types.Match(\n        Object.assign(\n            {\n                id: nanoid(),\n                result: [0, 0]\n            },\n            importObj\n        )\n    );\n}\n\nexport function createPlayer(importObj) {\n    return types.Player(\n        Object.assign(\n            {\n                id: nanoid(),\n                matchCount: 0,\n                rating: 0,\n                type: \"person\" // used for CSS styling etc.\n            },\n            importObj\n        )\n    );\n}\n\nexport function createTournament(importObj) {\n    return types.Tournament(\n        Object.assign(\n            {\n                byeQueue: [],\n                date: new Date(),\n                id: nanoid(),\n                playerIds: [],\n                roundList: [],\n                tieBreaks: [0, 1, 2, 3]\n            },\n            importObj\n        )\n    );\n}\n","import {DUMMY_ID} from \"./constants\";\nimport {assoc} from \"ramda\";\nimport {createPlayer} from \"./factories\";\n// import t from \"tcomb\";\nimport types from \"./types\";\n\n/*******************************************************************************\n * Player functions\n ******************************************************************************/\n// These are useful for passing to `filter()` methods.\nconst isDummyId = (playerId) => types.Id(playerId) === DUMMY_ID;\nexport {isDummyId};\n// This can take any object with a compliant `id` property.\nconst isDummyObj = (playerObj) => types.Id(playerObj.id) === DUMMY_ID;\nexport {isDummyObj};\n\n// This is the dummy profile that `getPlayerMaybe()` returns for bye rounds.\nconst dummyPlayer = createPlayer({\n    firstName: \"Bye\",\n    id: DUMMY_ID,\n    lastName: \"Player\",\n    type: \"dummy\"\n});\n\n// If `getPlayerMaybe()` can't find a profile (e.g. if it was deleted) then it\n// outputs this instead. The ID will be the same as missing player's ID.\nconst createMissingPlayer = (id) => createPlayer({\n    firstName: \"Anonymous\",\n    id: id,\n    lastName: \"Player\",\n    type: \"missing\"\n});\n\n// This function should always be used in components that *might* not be able to\n// display current player information. This includes bye rounds with \"dummy\"\n// players, or scoreboards where a player may have been deleted.\nexport function getPlayerMaybe(playerDict, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = playerDict[id];\n    return player ? player : createMissingPlayer(id);\n}\n\n/*******************************************************************************\n * Round functions\n ******************************************************************************/\n\n// This flattens a list of rounds to a list of matches.\n// The optional `lastRound` parameter will slice the rounds to only the last\n// index specified. For example: if you just want to see the scores through\n// round 2 and not include round 3.\nexport function rounds2Matches(roundList, lastRound = null) {\n    const rounds = (\n        lastRound === null\n        ? roundList\n        : roundList.slice(0, lastRound + 1)\n    );\n    return rounds.reduce((acc, round) => acc.concat(round), []);\n}\n\n// This creates a filtered version of `players` with only the players that are\n// not matched for the specified round.\nexport function getUnmatched(roundList, players, roundId) {\n    const matchList = roundList[roundId] || [];\n    const matchedIds = matchList.reduce(\n        (acc, {playerIds}) => acc.concat(playerIds),\n        []\n    );\n    const playerList = Object.values(players);\n    const unmatched = playerList.reduce(\n        (acc, player) => (\n            matchedIds.includes(player.id)\n            ? acc\n            : assoc(player.id, player, acc)\n        ),\n        {}\n    );\n    return unmatched;\n}\n\nexport function isRoundComplete(roundList, players, roundId) {\n    if (roundId < roundList.length - 1) {\n        // If it's not the last round, it's complete.\n        return true;\n    }\n    const unmatched = getUnmatched(roundList, players, roundId);\n    const results = roundList[roundId].map(({result}) => result[0] + result[1]);\n    return Object.keys(unmatched).length === 0 && !results.includes(0);\n}\n","// This file is a complement to `../data-types/`, except its types are specific\n// to the scoring and pairing functions.\nimport t from \"tcomb\";\nimport {types} from \"../data-types\";\n\nconst BLACKVALUE = 1;\nconst WHITEVALUE = -1;\nconst ColorScore = t.refinement(\n    t.Number,\n    (num) => num === BLACKVALUE || num === WHITEVALUE,\n    \"ColorScore\"\n);\nconst ScoreData = t.interface(\n    {\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        id: types.Id,\n        isDummy: t.Boolean,\n        opponentResults: t.dict(types.Id, t.Number),\n        ratings: t.list(t.Number),\n        results: t.list(t.Number),\n        resultsNoByes: t.list(t.Number)\n    },\n    \"ScoreData\"\n);\nconst PairingData = t.interface(\n    {\n        avoidIds: t.list(types.Id),\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        // `halfPos` is the index of the player within their scoregroup that's\n        // split into upper and lower halves. Example: in a group of 8, the\n        // first and the fifth players would both be `halfPos: 0`.\n        halfPos: t.Number,\n        id: types.Id,\n        // isDueBye: t.Boolean,\n        isUpperHalf: t.Boolean,\n        opponents: t.list(types.Id),\n        rating: t.Number,\n        score: t.Number\n    },\n    \"PairingData\"\n);\nconst ScoreCalculator = t.func(\n    [t.dict(t.String, ScoreData), types.Id],\n    t.Number,\n    \"ScoreCalulator\"\n);\nconst Standing = t.interface(\n    {\n        id: types.Id,\n        score: t.Number,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Standing\"\n);\n\nexport default Object.freeze({\n    BLACKVALUE,\n    PairingData,\n    ScoreCalculator,\n    ScoreData,\n    Standing,\n    WHITEVALUE\n});\n","// This implements the tiebreak methods specified in USCF § 34E.\n// This is incomplete; many more tiebreak methods need to be added. These are\n// simply the most commonly used.\nimport {\n    ascend,\n    init,\n    last,\n    pipe,\n    sort,\n    sum,\n    tail\n} from \"ramda\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\nfunction getOpponentScores(scoreData, id) {\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\n    return opponentIds.filter(\n        (oppId) => !scoreData[oppId].isDummy\n    ).map(\n        (oppId) => getPlayerScore(scoreData, oppId)\n    );\n}\n\n/*******************************************************************************\n * The main scoring methods\n ******************************************************************************/\nfunction getPlayerScore(scoreData, id) {\n    return sum(scoreData[id].results);\n}\nexport {getPlayerScore};\n\n\n// USCF § 34E1.\nfunction getMedianScore(scoreData, id) {\n    const scores = getOpponentScores(scoreData, id);\n    return pipe(\n        sort(ascend),\n        init,\n        tail,\n        sum\n    )(scores);\n}\n\n// USCF § 34E2.\nfunction getSolkoffScore(scoreData, id) {\n    return sum(getOpponentScores(scoreData, id));\n}\n// USCF § 34E3.\nfunction getCumulativeScore(scoreData, id) {\n    // turn the regular score list into a \"running\" score list\n    const scoreList = scoreData[id].resultsNoByes.reduce(\n        (acc, score) => acc.concat([last(acc) + score]),\n        [0]\n    );\n    return sum(scoreList);\n}\n\n// USCF § 34E4.\nfunction getCumulativeOfOpponentScore(scoreData, id) {\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\n    const scoreList = opponentIds.filter(\n        (oppId) => !scoreData[oppId].isDummy\n    ).map(\n        (oppId) => getCumulativeScore(scoreData, oppId)\n    );\n    return sum(scoreList);\n}\n\nfunction getColorBalanceScore(scoreData, id) {\n    return sum(scoreData[id].colorScores);\n};\n\nconst {ScoreCalculator} = types;\nconst tieBreakMethods = {\n    0: {\n        func: ScoreCalculator.of(getMedianScore),\n        id: 0,\n        name: \"Median\"\n    },\n    1: {\n        func: ScoreCalculator.of(getSolkoffScore),\n        id: 1,\n        name: \"Solkoff\"\n    },\n    2: {\n        func: ScoreCalculator.of(getCumulativeScore),\n        id: 2,\n        name: \"Cumulative score\"\n    },\n    3: {\n        func: ScoreCalculator.of(getCumulativeOfOpponentScore),\n        id: 3,\n        name: \"Cumulative of opposition\"\n    },\n    4: {\n        func: ScoreCalculator.of(getColorBalanceScore),\n        id: 4,\n        name: \"Most black\"\n    }\n};\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\n// Returns the names of the tiebreak methods selected for your tournament.\nconst getTieBreakNames = (idList) => (\n    t.list(t.Number)(idList).map((i) => tieBreakMethods[i].name)\n);\nexport {getTieBreakNames};\n","import {\n    append,\n    descend,\n    lensIndex,\n    over,\n    path,\n    prop,\n    sortWith\n} from \"ramda\";\nimport {\n    getPlayerScore,\n    tieBreakMethods\n} from \"./scoring\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\n// This is useful for cases where the regular factory functions return empty\n// results because a player hasn't been added yet.\nconst createBlankScoreData = (id) => types.ScoreData({\n    colorScores: [],\n    colors: [],\n    halfPos: 0,\n    id,\n    isDummy: false,\n    opponentResults: {},\n    ratings: [],\n    results: [],\n    resultsNoByes: []\n});\nexport {createBlankScoreData};\n\n// Sort the standings by score, see USCF tie-break rules from § 34.\n// Returns the list of the standings. Each standing has a `tieBreaks` property\n// which lists the score associated with each method. The order of these\n// coresponds to the order of the method names in the second list.\nexport function createStandingList(methods, scoreData) {\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\n    // Get a flat list of all of the players and their scores.\n    const standings = Object.keys(scoreData).map(\n        (id) => types.Standing({\n            id,\n            score: getPlayerScore(scoreData, id),\n            tieBreaks: selectedTieBreaks.map(({func}) => func(scoreData, id))\n        })\n    );\n    // create a list of functions to pass to `sortWith`. This will sort by\n    // scores and then by each tiebreak value.\n    const sortFuncList = Object.keys(selectedTieBreaks).reduce(\n        (acc, key) => acc.concat([descend(path([\"tieBreaks\", key]))]),\n        [descend(prop(\"score\"))]\n    );\n    const standingsSorted = sortWith(sortFuncList, standings);\n    return standingsSorted;\n}\n\nfunction areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any tie-break values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n// Groups the standings by score, see USCF tie-break rules from § 34.\n// example: `[[Dale, Audrey], [Pete], [Bob]]` Dale and Audrey are tied for\n// first, Pete is 2nd, Bob is 3rd.\nexport function createStandingTree(standingList) {\n    const standingsTree = t.list(types.Standing)(standingList).reduce(\n        function assignStandingsToTree(acc, standing, i, orig) {\n            const prevStanding = orig[i - 1];\n            // Always make a new rank for the first player\n            const isNewRank = (\n                i === 0\n                ? true\n                // Make a new rank if the scores aren't equal\n                : !areScoresEqual(standing, prevStanding)\n            );\n            return (\n                isNewRank\n                // If this player doesn't have the same score, create a new\n                // branch of the tree\n                ? append([standing], acc)\n                // If this player has the same score as the last, append it\n                // to the last branch\n                : over(lensIndex(acc.length - 1), append(standing), acc)\n            );\n        },\n        []\n    );\n    return standingsTree;\n}\n","// These functions are for converting data types defined in `../data-types` to\n// data that can be used by the scoring functions in rest of this module.\nimport {\n    BLACK,\n    WHITE,\n    isDummyId,\n    types\n} from \"../data-types\";\nimport {\n    add,\n    append,\n    assoc,\n    defaultTo,\n    lensPath,\n    lensProp,\n    over,\n    pipe,\n    sum\n} from \"ramda\";\nimport {createBlankScoreData} from \"./factories\";\nimport scoreTypes from \"./types\";\n// import t from \"tcomb\";\n\nfunction color2Score(color) {\n    return (\n        types.Color(color) === BLACK\n        ? scoreTypes.BLACKVALUE\n        : scoreTypes.WHITEVALUE\n    );\n}\n\nfunction match2ScoreDataReducer(acc, match) {\n    const {playerIds, result, newRating, origRating} = match;\n    const [p1Data, p2Data] = [WHITE, BLACK].map(function dataForColor(color) {\n        const id = playerIds[color];\n        const oppColor = color === WHITE ? BLACK : WHITE;\n        const oppId = playerIds[oppColor];\n        // Get existing score data to update, or create it fresh\n        // The ratings will always begin with the `origRating` of the\n        // first match they were in.\n        const origData = acc[id] || {id, ratings: [origRating[color]]};\n        return pipe(\n            over(lensProp(\"results\"), append(result[color])),\n            over(\n                lensProp(\"resultsNoByes\"),\n                isDummyId(oppId) ? defaultTo([]) : append(result[color])\n            ),\n            over(lensProp(\"colors\"), append(color)),\n            over(lensProp(\"colorScores\"), append(color2Score(color))),\n            over(\n                lensPath([\"opponentResults\", oppId]),\n                pipe(defaultTo(0), add(result[color]))\n            ),\n            over(lensProp(\"ratings\"), append(newRating[color])),\n            assoc(\"isDummy\", isDummyId(id))\n        )(origData);\n    });\n    return pipe(\n        assoc(p1Data.id, p1Data),\n        assoc(p2Data.id, p2Data)\n    )(acc);\n}\n\nexport function matches2ScoreData(matchList) {\n    return matchList.reduce(match2ScoreDataReducer, {});\n}\n\n// Flatten the `[[id1, id2], [id1, id3]]` structure into an easy-to-read\n// `{id1: [id2, id3], id2: [id1], id3: [id1]}` structure.\nexport function avoidPairReducer(acc, pair) {\n    return pipe(\n        over(lensProp(pair[0]), append(pair[1])),\n        over(lensProp(pair[1]), append(pair[0]))\n    )(acc);\n}\n\nexport function createPairingData(playerData, avoidPairs, scoreData) {\n    const avoidDict = avoidPairs.reduce(avoidPairReducer, {});\n    const pairingData = Object.values(playerData).reduce(\n        function pairingDataReducer(acc, data) {\n            // If there's no scoreData for a player, use empty values\n            const playerStats = (\n                scoreData[data.id]\n                ? scoreData[data.id]\n                : createBlankScoreData(data.id)\n            );\n            // `isUpperHalf` and `halfPos` will have to be set by another\n            // function later.\n            const pairData = {\n                avoidIds: avoidDict[data.id] || [],\n                colorScores: playerStats.colorScores,\n                colors: playerStats.colors,\n                halfPos: 0,\n                id: data.id,\n                // isDueBye: false,\n                isUpperHalf: false,\n                opponents: Object.keys(playerStats.opponentResults),\n                rating: data.rating,\n                // `score` is calculated and cached here because the blossom\n                // pairing will reuse it many times.\n                score: sum(playerStats.results)\n            };\n            return assoc(data.id, pairData, acc);\n        },\n        {}\n    );\n    return pairingData;\n}\n","import {\n    addIndex,\n    assoc,\n    descend,\n    dissoc,\n    filter,\n    last,\n    map,\n    mergeRight,\n    pipe,\n    pluck,\n    prop,\n    reduce,\n    sort,\n    sortWith,\n    splitAt,\n    sum\n} from \"ramda\";\nimport blossom from \"edmonds-blossom\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\nconst priority = (value) => (condition) => condition ? value : 0;\nconst divisiblePriority = (dividend) => (divisor) => dividend / divisor;\n\n// These following consts probably need to be tweaked a lot.\n\n// The weight given to avoid players meeting twice. This same weight is given to\n// avoid matching players on each other's \"avoid\" list.\n// This is the highest priority. (USCF § 27A1)\nconst avoidMeetingTwice = priority(32);\n\n// The weight given to match players with equal scores. This gets divided\n// against the difference between each players' scores, plus one. For example,\n// players with scores `1` and `3` would have this priority divided by `3`.\n// Players with scores `0` and `3` would have this priority divided by `4`.\n// Players with equal scores would divide it by `1`, leaving it unchanged.\n// (USCF § 27A2)\nconst sameScores = divisiblePriority(16);\n\n// The weight given to match players in lower versus upper halves. This is only\n// applied to players being matched within the same score group. (USCF § 27A3)\nconst halfPosition = divisiblePriority(8);\nconst sameHalfPriority = () => 0;\nconst differentHalf = (isDiffHalf) => (\n    isDiffHalf\n    ? halfPosition\n    : sameHalfPriority\n);\n\n// The weight given to match players with opposite due colors.\n// (USCF § 27A4 and § 27A5)\nconst differentDueColor = priority(4);\n\n// This is useful for dividing against a calculated priority, to inspect how\n// \"compatible\" two players may be.\nconst maxPriority = sum([\n    differentHalf(true)(1),\n    differentDueColor(true),\n    sameScores(1),\n    avoidMeetingTwice(true)\n]);\nexport {maxPriority};\n\n// The pairing code is broken up into several functions which take each other's\n// input to build the data necessary to pair players appropriately.\n// Using a function like Ramda's `pipe` to put them together, the final product\n// will look something like this:\n// ```js\n// const pairs = pipe(\n//     rounds2Matches,\n//     matches2ScoreData,\n//     createPairingData,\n//     setUpperHalves,\n//     setByePlayer,\n//     pairPlayers // <-- the function that actually pairs them!\n// )(roundList);\n// ```\n// (This may be outdated as the actual functions aren't stable yet.)\n\n// Given two `PairingData` objects, this assigns a number for how much they\n// should be matched. The number gets fed to the `blossom` algorithm.\nexport function calcPairIdeal(player1, player2) {\n    if (player1.id === player2.id) {\n        return 0;\n    }\n    const metBefore = player1.opponents.includes(player2.id);\n    const mustAvoid = player1.avoidIds.includes(player2.id);\n    const p1LastColor = last(player1.colors);\n    const p2LastColor = last(player2.colors);\n    const scoreDiff = Math.abs(player1.score - player2.score) + 1;\n    const halfDiff = Math.abs(player1.halfPos - player2.halfPos) + 1;\n    const isDiffHalf = (\n        player1.isUpperHalf !== player2.isUpperHalf\n        && player1.score === player2.score\n    );\n    return sum([\n        differentDueColor(\n            p1LastColor === undefined || p1LastColor !== p2LastColor\n        ),\n        sameScores(scoreDiff),\n        differentHalf(isDiffHalf)(halfDiff),\n        avoidMeetingTwice(!metBefore && !mustAvoid)\n    ]);\n}\n\nconst splitInHalf = (list) => splitAt(list.length / 2, list);\n\n// for each object sent to this, it determines whether or not it's in the\n// \"upper half\" of it's score group.\n// (USCF § 29C1.)\nfunction upperHalfReducer(acc, playerData, ignore, src) {\n    types.PairingData(playerData);\n    const [upperHalfIds, lowerHalfIds] = pipe(\n        filter((p2) => p2.score === playerData.score),\n        // this may be redundant if the list was already sorted.\n        sort(descend(prop(\"rating\"))),\n        map((p) => p.id),\n        splitInHalf\n    )(src);\n    const isUpperHalf = upperHalfIds.includes(playerData.id);\n    const halfPos = (\n        isUpperHalf\n        ? upperHalfIds.indexOf(playerData.id)\n        : lowerHalfIds.indexOf(playerData.id)\n    );\n    return assoc(\n        playerData.id,\n        mergeRight(playerData, {halfPos, isUpperHalf}),\n        acc\n    );\n}\nexport function setUpperHalves(data) {\n    return Object.values(data).reduce(upperHalfReducer, {});\n}\n\n// Sort the data so matchups default to order by score and rating.\nconst sortByScoreThenRating = sortWith([\n    descend(prop(\"score\")),\n    descend(prop(\"rating\"))\n]);\n// This this returns a tuple of two objects: The modified array of player data\n// without the player assigned a bye, and the player assigned a bye.\n// If no player is assigned a bye, the second object is `null`.\n// After calling this, be sure to add the bye round after the non-bye'd\n// players are paired.\nexport function setByePlayer(byeQueue, dummyId, data) {\n    const hasNotHadBye = (p) => !p.opponents.includes(dummyId);\n    // if the list is even, just return it.\n    if (Object.keys(data).length % 2 === 0) {\n        return [data, null];\n    }\n    const dataList = pipe(\n        Object.values,\n        filter(hasNotHadBye),\n        sortByScoreThenRating\n    )(data);\n    const playersWithoutByes = dataList.map((p) => p.id);\n    const nextByeSignup = t.list(t.String)(byeQueue).filter(\n        (id) => playersWithoutByes.includes(id)\n    )[0];\n    const dataForNextBye = (\n        nextByeSignup\n        // Assign the bye to the next person who signed up.\n        ? data[nextByeSignup]\n        // Assign a bye to the lowest-rated player in the lowest score group.\n        // Because the list is sorted, the last player is the lowest.\n        // (USCF § 29L2.)\n        : last(dataList)\n    );\n    // In the impossible situation that *everyone* has played a bye round\n    // previously, then just pick the last player.\n    const id = (\n        dataForNextBye\n        ? dataForNextBye.id\n        : pipe(Object.values, sortByScoreThenRating, last)(data).id\n    );\n    const byeData = data[id];\n    const dataWithoutBye = dissoc(id, data);\n    return [dataWithoutBye, byeData];\n}\n\nfunction assignColorsForPair(pair) {\n    const [player1, player2] = pair;\n    // This is a quick-and-dirty heuristic to keep color balances\n    // mostly equal. Ideally, it would also examine due colors and how\n    // many times a player played each color last.\n    return (\n        sum(player1.colorScores) < sum(player2.colorScores)\n        // player 1 has played as white more than player 2\n        ? [player2.id, player1.id]\n        // player 1 has played as black more than player 2\n        // (or they're equal).\n        : [player1.id, player2.id]\n    );\n}\n\nconst netScoreDescend = (pair1, pair2) => (\n    sum(pluck(\"score\", pair2)) - sum(pluck(\"score\", pair1))\n);\nconst netRatingDescend = (pair1, pair2) => (\n    sum(pluck(\"rating\", pair2)) - sum(pluck(\"rating\", pair1))\n);\nconst sortByNetScoreThenRating = sortWith([netScoreDescend, netRatingDescend]);\n\n// Create pairings according to the rules specified in USCF § 27, § 28,\n//  and § 29. This is a work in progress and does not account for all of the\n// rules yet.\nexport function pairPlayers(pairingData) {\n    // Because `blossom` has to use numbers that correspond to array indices,\n    // we'll use `playerIdArray` as our source for that.\n    const playerIdArray = Object.keys(pairingData);\n    // Turn the data into blossom-compatible input.\n    function pairIdealReducer(accArr, player1, index, srcArr) {\n        // slice out players who have already computed, plus the current one\n        const playerMatches = srcArr.slice(index + 1).map(\n            (player2) => [\n                playerIdArray.indexOf(player1.id),\n                playerIdArray.indexOf(player2.id),\n                calcPairIdeal(player1, player2)\n            ]\n        );\n        return accArr.concat(playerMatches);\n    }\n    function blossom2Pairs(acc, p1Index, p2Index) {\n        // Filter out unmatched players. Blossom will automatically include\n        // their missing IDs in its results.\n        if (p1Index === -1) {\n            return acc;\n        }\n        // Translate the indices into ID strings\n        const p1 = pairingData[playerIdArray[p1Index]];\n        const p2 = pairingData[playerIdArray[p2Index]];\n        // TODO: in the future, we may store the ideal for debugging. Because it\n        // rarely serves a purpose, we're not including it now.\n        // const ideal = potentialMatches.filter(\n        //     (pair) => pair[0] === p1Id && pair[1] === p2Id\n        // )[0][2];\n        // Blossom returns a lot of redundant matches. Check that this matchup\n        // wasn't already added.\n        const matched = acc.map((pair) => pair[0]);\n        if (!matched.includes(p1) && !matched.includes(p2)) {\n            return acc.concat([[p1, p2]]);\n        }\n        return acc;\n    }\n    // This makes Ramda's `reduce` work more like `Array.prototype.reduce`.\n    const reduceWithIndices = addIndex(reduce);\n    return pipe(\n        Object.values,\n        reduceWithIndices(pairIdealReducer, []),\n        // Feed all of the potential matches to Edmonds-blossom and let the\n        // algorithm work its magic. This returns an array where each index is the\n        // ID of one player and each value is the ID of the matched player.\n        blossom,\n        // Translate those IDs into actual pairs of player Ids.\n        reduceWithIndices(blossom2Pairs, []),\n        sortByNetScoreThenRating,\n        map(assignColorsForPair)\n    )(pairingData);\n}\n","import {BLACK, WHITE} from \"../data-types\";\nimport EloRank from \"elo-rank\";\nimport t from \"tcomb\";\n\nfunction getKFactor(matchCount) {\n    const ne = t.Number(matchCount) || 1;\n    return (800 / ne);\n}\n\nfunction calcNewRatings(origRatings, matchCounts, result) {\n    t.tuple([t.Number, t.Number])(origRatings);\n    t.tuple([t.Number, t.Number])(matchCounts);\n    t.tuple([t.Number, t.Number])(result);\n    const whiteElo = new EloRank(getKFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(getKFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    return newRating.map((rating) => rating < FLOOR ? FLOOR : rating);\n}\n\nexport default Object.freeze({\n    calcNewRatings,\n    getKFactor\n});\n","import Activity from \"react-feather/dist/icons/activity\";\nimport Alert from \"react-feather/dist/icons/alert-triangle\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport ArrowLeft from \"react-feather/dist/icons/arrow-left\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport Award from \"react-feather/dist/icons/award\";\nimport Check from \"react-feather/dist/icons/check\";\nimport CheckCircle from \"react-feather/dist/icons/check-circle\";\nimport ChevronDown from \"react-feather/dist/icons/chevron-down\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport ChevronUp from \"react-feather/dist/icons/chevron-up\";\nimport Circle from \"react-feather/dist/icons/circle\";\nimport Download from \"react-feather/dist/icons/download\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Help from \"react-feather/dist/icons/help-circle\";\nimport Info from \"react-feather/dist/icons/info\";\nimport Javascript from \"simple-icons/icons/javascript\";\nimport Layers from \"react-feather/dist/icons/layers\";\nimport List from \"react-feather/dist/icons/list\";\n// import Logo from \"./logo\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport React from \"react\";\nimport ReactIcon from \"simple-icons/icons/react\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Settings from \"react-feather/dist/icons/settings\";\nimport Sidebar from \"react-feather/dist/icons/sidebar\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport Unfullscreen from \"react-feather/dist/icons/minimize-2\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Users from \"react-feather/dist/icons/users\";\nimport X from \"react-feather/dist/icons/x\";\n\n// This converts a specified `simple-icons` icon into a React component.\nconst simpleIcon = (icon) => (props) => (\n    <span\n        dangerouslySetInnerHTML={{__html: icon.svg}}\n        aria-label={icon.title}\n        role=\"img\"\n        style={{fill: \"#\" + icon.hex}}\n        {...props}\n    />\n);\n\nexport default {\n    Activity,\n    Alert,\n    ArrowDown,\n    ArrowLeft,\n    ArrowUp,\n    Award,\n    Check,\n    CheckCircle,\n    ChevronDown,\n    ChevronLeft,\n    ChevronRight,\n    ChevronUp,\n    Circle,\n    Download,\n    Edit,\n    Help,\n    Info,\n    Javascript: simpleIcon(Javascript),\n    Layers,\n    List,\n    // Logo,\n    Plus,\n    React: simpleIcon(ReactIcon),\n    Repeat,\n    Settings,\n    Sidebar,\n    Trash,\n    Unfullscreen,\n    UserMinus,\n    UserPlus,\n    Users,\n    X\n};\n","import {\n    createStandingList,\n    matches2ScoreData\n} from \"../../pairing-scoring\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {last} from \"ramda\";\nimport numeral from \"numeral\";\nimport {rounds2Matches} from \"../../data-types\";\nimport style from \"./index.module.css\";\n\nexport default function Crosstable({tournament}) {\n    const {tourney, getPlayer} = tournament;\n    const {tieBreaks, roundList} = tourney;\n    const scoreData = matches2ScoreData(rounds2Matches(roundList));\n    const standings = createStandingList(tieBreaks, scoreData);\n\n    function getXScore(player1Id, player2Id) {\n        if (player1Id === player2Id) {\n            return <Icons.X className=\"disabled\" />;\n        }\n        const result = scoreData[player1Id].opponentResults[player2Id];\n        if (result === undefined) {\n            return null;\n        }\n        return numeral(result).format(\"1/2\");\n    }\n\n    function getRatingChangeTds(playerId) {\n        const firstRating = scoreData[playerId].ratings[0];\n        const lastRating = last(scoreData[playerId].ratings);\n        const change = numeral(lastRating - firstRating).format(\"+0\");\n        return (\n            <>\n            <td className=\"table__number\">\n                {lastRating}\n            </td>\n            <td className=\"table__number body-10\">\n                ({change})\n            </td>\n            </>\n        );\n    }\n\n    return (\n        <table className={style.table}>\n            <caption>Crosstable</caption>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    {/* Display a rank as a shorthand for each player. */}\n                    {Object.keys(standings).map((rank) =>\n                        <th key={rank}>\n                            {Number(rank) + 1}\n                        </th>\n                    )}\n                    <th>Score</th>\n                    <th colSpan={2}>Rating</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* Output a row for each player */}\n                {standings.map((standing, index)=>\n                    <tr key={index} className={style.row}>\n                        <th className={style.rank} scope=\"col\">\n                            {index + 1}\n                        </th>\n                        <th className={style.playerName} scope=\"row\">\n                            {getPlayer(standing.id).firstName}&nbsp;\n                            {getPlayer(standing.id).lastName}\n                        </th>\n                        {/* Output a cell for each other player */}\n                        {standings.map((opponent, index2) =>\n                            <td\n                                key={index2}\n                                className=\"table__number\"\n                            >\n                                {getXScore(standing.id, opponent.id)}\n                            </td>\n                        )}\n                        {/* Output their score and rating change */}\n                        <td className=\"table__number\">\n                            {numeral(standing.score).format(\"1/2\")}\n                        </td>\n                        {getRatingChangeTds(standing.id)}\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nCrosstable.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport classNames from \"classnames\";\nimport styles from \"./utility.module.css\";\n\nexport function Panel({children, style}) {\n    return (\n        <div className={styles.panel} style={{...style}}>\n            {children}\n        </div>\n    );\n}\nPanel.propTypes = {\n    children: PropTypes.node.isRequired,\n    style: PropTypes.object\n};\n\nexport function PanelContainer({children, className, ...rest}) {\n    return (\n        <div {...rest} className={classNames(styles.panels, className)}>\n            {children}\n        </div>\n    );\n}\nPanelContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string\n};\n\nconst {format: dateFormat} = new Intl.DateTimeFormat(\n    \"en-US\",\n    {\n        day: \"2-digit\",\n        month: \"short\",\n        year: \"numeric\"\n    }\n);\nconst {format: timeFormat} = new Intl.DateTimeFormat(\n    \"en-US\",\n    {\n        day: \"2-digit\",\n        month: \"short\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    }\n);\n\nexport function DateFormat({date, showTime, ...rest}) {\n    const format = showTime ? timeFormat : dateFormat;\n    return (\n        <time dateTime={date.toISOString()} {...rest}>\n            {format(date)}\n        </time>\n    );\n}\nDateFormat.propTypes = {\n    date: PropTypes.instanceOf(Date).isRequired,\n    showTime: PropTypes.bool\n};\n\nexport function Notification({\n    children,\n    success,\n    warning,\n    error,\n    className,\n    tooltip,\n    ...rest\n}) {\n    const [icon, notifClassName] = (function () {\n        if (success) {\n            return [<Icons.Check />, \"notification__success\"];\n        } else if (warning) {\n            return [<Icons.Alert />, \"notification__warning\"];\n        } else if (error) {\n            return [<Icons.X />, \"notification__error\"];\n        } else {\n            return [<Icons.Info />, \"notification__generic\"];\n        }\n    }());\n    return (\n        <div\n            {...rest}\n            className={classNames(\"notification\", notifClassName, className)}\n        >\n            <div\n                aria-label={tooltip}\n                className=\"notification__icon\"\n                title={tooltip}\n            >\n                {icon}\n            </div>\n            <div className=\"notification__text\">\n                {children}\n            </div>\n        </div>\n    );\n}\nNotification.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    success: PropTypes.bool,\n    tooltip: PropTypes.string,\n    warning: PropTypes.bool\n};\n\n// This just creates empty space to balance the layout, e.g. if there's a button\n// on one side of a centered element that's offsetting it.\nconst PlaceholderButton = () => (\n    <button\n        className=\"button-ghost placeholder\"\n        aria-hidden\n        disabled\n    />\n);\nexport {PlaceholderButton};\n\nexport function SortLabel({children, sortKey, data, dispatch}) {\n    function setKeyOrToggleDir() {\n        if (data.key === sortKey) {\n            dispatch({isDescending: !data.isDescending});\n        } else {\n            dispatch({key: sortKey});\n        }\n    }\n    const chevronStyle = data.key === sortKey ? {opacity: 1} : {opacity: 0};\n    return (\n        <button\n            className=\"button-micro dont-hide button-text-ghost title-20\"\n            style={{width: \"100%\"}}\n            onClick={setKeyOrToggleDir}\n        >\n            <Icons.ChevronUp style={{opacity: 0}} aria-hidden/>\n            {children}{\" \"}\n            {data.isDescending\n            ? (\n                <span style={chevronStyle}>\n                    <Icons.ChevronUp />\n                    <VisuallyHidden>Sort ascending.</VisuallyHidden>\n                </span>\n            ) : (\n                <span style={chevronStyle}>\n                    <Icons.ChevronDown />\n                    <VisuallyHidden>Sort descending.</VisuallyHidden>\n                </span>\n            )}\n        </button>\n    );\n}\nSortLabel.propTypes = {\n    children: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    sortKey: PropTypes.string.isRequired\n};\n\n/*******************************************************************************\n * Non-JSX functions\n ******************************************************************************/\n// TODO: get rid of this.\nexport function findById(id, list) {\n    return list.filter((x) => x.id === id)[0];\n}\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer({dispatch}) {\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        dispatch({\n            firstName,\n            lastName,\n            rating: Number(rating),\n            type: \"ADD_PLAYER\"\n        });\n    };\n\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        name=\"firstName\"\n                        type=\"text\"\n                        value={newPlayerData.firstName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        name=\"lastName\"\n                        type=\"text\"\n                        value={newPlayerData.lastName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        name=\"rating\"\n                        type=\"number\"\n                        value={newPlayerData.rating}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\nNewPlayer.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n","import {\n    assoc,\n    dissoc,\n    lensProp,\n    mergeLeft,\n    over\n} from \"ramda\";\nimport {createPlayer, createTournament, types} from \"../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function genericDbReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_ITEM\":\n        console.warn(\"Use a more specific action instead, please.\");\n        return assoc(nextId, action.item, state);\n    case \"ADD_TOURNEY\":\n        t.interface({name: t.String})(action);\n        return assoc(\n            nextId,\n            createTournament({id: nextId, name: action.name}),\n            state\n        );\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"DEL_ITEM\":\n        // If using the player DB, be sure to delete avoid-pairs too.\n        t.interface({id: t.String})(action);\n        return dissoc(action.id, state);\n    case \"SET_PLAYER\":\n        // This is copied from players-reducer since the profile editor uses it\n        // TODO: unify those\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","import {append, assoc, filter, lensProp, over} from \"ramda\";\nimport t from \"tcomb\";\nimport {types} from \"../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function optionsReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !(\n                pair.includes(action.pair[0]) && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"DEL_AVOID_SINGLE\":\n        t.interface({id: types.Id})(action);\n        // call this when you delete a player ID\n        // TODO: make the avoidPairs list smartly auto-clean itself\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !pair.includes(action.id)),\n            state\n        );\n    case \"SET_OPTION\":\n        t.interface({\n            option: t.String,\n            value: t.union([\n                t.Number,\n                t.list(types.AvoidPair),\n                Date\n            ])\n        })(action);\n        return assoc(\n            action.option,\n            action.value,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n","export default Object.freeze({\n    \"byeValue\" : 1,\n    \"avoidPairs\": [],\n    \"lastBackup\": new Date(0)\n});\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\n// import t from \"tcomb\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default {\n    options: fromJSON(options, types.db.Options),\n    players: fromJSON(players, types.db.Players),\n    tournaments: fromJSON(tournaments, types.db.Tourneys)\n};\n","import {ascend, descend, pipe, prop, sort} from \"ramda\";\nimport {useEffect, useReducer} from \"react\";\n// import t from \"tcomb\";\n\nconst toLowerCaseIfPossible = (x) => x.toLowerCase ? x.toLowerCase() : x;\n\nfunction sortedTableReducer(oldState, newState) {\n    const {isDescending, key, table} = {...oldState, ...newState};\n    const direction = isDescending ? descend : ascend;\n    const caseInsensitiveProp = pipe(prop(key), toLowerCaseIfPossible);\n    const sortFunc = sort(direction(caseInsensitiveProp));\n    return {isDescending, key, table: sortFunc(table)};\n}\n\nexport function useSortedTable(table, key, isDescending = true) {\n    const initialState = {isDescending, key, table};\n    const [state, dispatch] = useReducer(sortedTableReducer, initialState);\n    useEffect(\n        function callDispatchOnceToTriggerInitialSort() {\n            dispatch({});\n        },\n        []\n    );\n    return [state, dispatch];\n}\n\nexport function useLoadingCursor(isLoaded) {\n    useEffect(\n        function () {\n            if (isLoaded) {\n                document.body.style.cursor = \"auto\";\n            } else {\n                document.body.style.cursor = \"wait\";\n            }\n            // Just in case the component unmounts before the data loads.\n            return function () {\n                document.body.style.cursor = \"auto\";\n            };\n        },\n        [isLoaded]\n    );\n}\n","import \"localforage-getitems\";\nimport {difference, filter} from \"ramda\";\nimport {genericDbReducer, optionsReducer} from \"./reducers\";\nimport {useEffect, useReducer, useState} from \"react\";\nimport defaultOptions from \"./default-options\";\nimport demoData from \"../demo-data\";\nimport localForage from \"localforage\";\nimport {extendPrototype as removeItemsPrototype} from \"localforage-removeitems\";\nimport {extendPrototype as setItemsPrototype} from \"localforage-setitems\";\nimport {types} from \"../data-types\";\nimport {useLoadingCursor} from \"./hooks\";\n\n/*******************************************************************************\n * Initialize the databases\n ******************************************************************************/\nsetItemsPrototype(localForage);\nremoveItemsPrototype(localForage);\nconst DATABASE_NAME = \"Chessahoochee\";\nconst optionsStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Options\"\n});\nconst playerStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Players\"\n});\nconst tourneyStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Tournaments\"\n});\n\nexport {optionsStore, playerStore, tourneyStore};\n\nexport async function loadDemoDB() {\n    document.body.style.cursor = \"wait\";\n    await optionsStore.setItems(demoData.options);\n    await playerStore.setItems(demoData.players);\n    await tourneyStore.setItems(demoData.tournaments);\n    // TODO: for some reason in Electron, this `window.alert()` will disable all\n    // focus after it runs. This affects other `window.alert()`s too.\n    window.alert(\"Demo data loaded!\");\n    document.body.style.cursor = \"auto\";\n}\n\n/*******************************************************************************\n * Generic database hooks\n ******************************************************************************/\nfunction useAllItemsFromDb(store, type) {\n    const [items, dispatch] = useReducer(genericDbReducer, {});\n    const [isLoaded, setIsLoaded] = useState(false);\n    useLoadingCursor(isLoaded);\n    useEffect(\n        function loadItemsFromDb() {\n            let didCancel = false;\n            (async function () {\n                const results = await store.getItems();\n                // console.log(\"loaded items from\", store.config().storeName);\n                // TODO: This will silently delete invalid entries from the DB.\n                // Because invalid entries are typically just older data that\n                // was created with a different tcomb interface, this should\n                // ideally update the data to a valid type instead of removing\n                // it completely.\n                const cleanResults =  filter(type.is, results);\n                if (!didCancel) {\n                    dispatch({state: cleanResults, type: \"LOAD_STATE\"});\n                    setIsLoaded(true);\n                }\n            }());\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        [store, type]\n    );\n    useEffect(\n        function saveChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            (async function () {\n                await store.setItems(items);\n                // console.log(\"saved items to\", store.config().storeName);\n                const keys = await store.keys();\n                const deleted = difference(keys, Object.keys(items));\n                if (deleted.length > 0 ) {\n                    await store.removeItems(deleted);\n                    // console.log(\"Deleted \" + deleted.length + \" items.\");\n                }\n            }());\n        },\n        [store, items, isLoaded]\n    );\n    return [items, dispatch];\n}\n\n/*******************************************************************************\n * Player & tournament wrapper hooks\n ******************************************************************************/\nexport function useAllPlayersDb() {\n    return useAllItemsFromDb(playerStore, types.Player);\n}\n\nexport function useAllTournamentsDb() {\n    return useAllItemsFromDb(tourneyStore, types.Tournament);\n}\n\n/*******************************************************************************\n * Options database hooks\n ******************************************************************************/\nexport function useOptionsDb() {\n    const [options, dispatch] = useReducer(optionsReducer, defaultOptions);\n    const [isLoaded, setIsLoaded] = useState(false);\n    useEffect(\n        function initOptionsFromDb() {\n            let didCancel = false;\n            // This uses `iterate` to easily set key-value pairs.\n            optionsStore.iterate(function (value, key) {\n                if (!didCancel) {\n                    dispatch({option: key, type: \"SET_OPTION\", value: value});\n                }\n            }).then(function () {\n                if (!didCancel) {\n                    setIsLoaded(true);\n                }\n            });\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        []\n    );\n    useEffect(\n        function writeChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            optionsStore.setItems(options);\n        },\n        [options, isLoaded]\n    );\n    return [options, dispatch];\n}\n","import NewPlayer from \"../../../components/new-player\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {useAllPlayersDb} from \"../../../hooks\";\n\nexport default function Selecting({tourney, tourneyDispatch}) {\n    const [players, allPlayersDispatch] = useAllPlayersDb();\n\n    function togglePlayer(event) {\n        const id = event.target.value;\n        if (event.target.checked) {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.concat([id]),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        } else {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.filter((pId) => pId !== id),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: Object.keys(players),\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select all\n                </button>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: [],\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select none\n                </button>\n            </div>\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.values(players).map(({id, firstName, lastName}) =>\n                        <tr key={id}>\n                            <td>{firstName}</td>\n                            <td>{lastName}</td>\n                            <td>\n                                <VisuallyHidden>\n                                    <label htmlFor={\"select-\" + id}>\n                                        Select {firstName} {lastName}\n                                    </label>\n                                </VisuallyHidden>\n                                <input\n                                    checked={tourney.playerIds.includes(id)}\n                                    type=\"checkbox\"\n                                    value={id}\n                                    id={\"select-\" + id}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <NewPlayer dispatch={allPlayersDispatch}/>\n        </div>\n    );\n}\nSelecting.propTypes = {\n    tourney: PropTypes.object.isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n","import {DUMMY_ID, rounds2Matches, types} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport Selecting from \"./selecting\";\nimport classNames from \"classnames\";\nimport t from \"tcomb\";\n// import {useTournament} from \"../../../hooks\";\n\nfunction hasHadBye(matchList, playerId) {\n    return t.list(types.Match)(matchList).filter(\n        (match) => match.playerIds.includes(playerId)\n    ).reduce(\n        (acc, match) => acc.concat(match.playerIds),\n        []\n    ).includes(DUMMY_ID);\n}\n\nfunction PlayerList({players, dispatch, byeQueue}) {\n    return (\n        <>\n        {Object.values(players).map((p) => (\n            <tr key={p.id} className={p.type + \" player\"}>\n                <td>{p.firstName}</td>\n                <td>{p.lastName}</td>\n                <td>\n                    <button\n                        className=\"button-micro\"\n                        disabled={byeQueue.includes(p.id)}\n                        onClick={() =>\n                            dispatch({\n                                byeQueue:\n                                    byeQueue.concat([p.id]),\n                                type: \"SET_BYE_QUEUE\"\n                            })\n                        }\n                    >\n                        Bye signup\n                    </button>\n                </td>\n            </tr>\n        )\n        )}\n        </>\n    );\n}\nPlayerList.propTypes = {\n    byeQueue: PropTypes.arrayOf(PropTypes.string).isRequired,\n    dispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired\n};\n\nexport default function PlayerSelect({tournament}) {\n    const {tourney, tourneyDispatch, activePlayers} = tournament;\n    const {playerIds, roundList, byeQueue} = tourney;\n    const dispatch = tourneyDispatch;\n    const [isSelecting, setIsSelecting] = useState(playerIds.length === 0);\n    const matches = rounds2Matches(roundList);\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button onClick={() => setIsSelecting(true)}>\n                    <Icons.Edit /> Edit player roster\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel style={{flexShrink: \"0\"}}>\n                    <table>\n                        <caption>Current roster</caption>\n                        <thead>\n                            <tr>\n                                <th colSpan={2}>Name</th>\n                                <th>Options</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"content\">\n                            <PlayerList\n                                byeQueue={byeQueue}\n                                dispatch={dispatch}\n                                players={activePlayers}\n                            />\n                        </tbody>\n                    </table>\n                </Panel>\n                <Panel>\n                    <h3>Bye queue</h3>\n                    {byeQueue.length === 0 &&\n                        <p>No players have signed up for a bye round.</p>\n                    }\n                    <ol>\n                        {byeQueue.map((pId) => (\n                            <li\n                                key={pId}\n                                className={classNames(\n                                    \"buttons-on-hover\",\n                                    {\"disabled\": hasHadBye(matches, pId)}\n                                )}\n                            >\n                                {activePlayers[pId].firstName}{\" \"}\n                                {activePlayers[pId].lastName}{\" \"}\n                                <button\n                                    className=\"button-micro\"\n                                    onClick={() =>\n                                        dispatch({\n                                            byeQueue: byeQueue.filter(\n                                                (id) => pId !== id\n                                            ),\n                                            type: \"SET_BYE_QUEUE\"\n                                        })\n                                    }\n                                >\n                                    Remove\n                                </button>\n                            </li>\n                        ))}\n                    </ol>\n                </Panel>\n                <Dialog\n                    isOpen={isSelecting}\n                    onDismiss={() => setIsSelecting(false)}\n                >\n                    <button\n                        className=\"button-micro button-primary\"\n                        onClick={() => setIsSelecting(false)}\n                    >\n                        Done\n                    </button>\n                    <Selecting\n                        tourney={tourney}\n                        tourneyDispatch={tourneyDispatch}\n                    />\n                </Dialog>\n            </PanelContainer>\n        </div>\n    );\n}\nPlayerSelect.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import {\n    avoidPairReducer,\n    createBlankScoreData\n} from \"../../../pairing-scoring\";\n// this component should eventually replace player-match-info.jsx\nimport {DUMMY_ID} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {sum} from \"ramda\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function PlayerInfo({playerId, players, getPlayer, scoreData}) {\n    const [options] = useOptionsDb();\n    const avoidDict = options.avoidPairs.reduce(avoidPairReducer, {});\n    const playerData = scoreData[playerId] || createBlankScoreData(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = playerData;\n    const colorBalance = sum(colorScores);\n    const player = getPlayer(playerId);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const avoidList = avoidDict[playerId] || [];\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <p>Score: {sum(results)}</p>\n            <p data-testid={\"rating-\" + player.id}>\n                Rating: {player.rating}\n            </p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {Object.entries(opponentResults).map(([opId, result]) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}{\" \"}\n                        -{\" \"}\n                        {result === 0 && \"Lost\"}\n                        {result === 1 && \"Won\"}\n                        {result === 0.5 && \"Draw\"}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    players[pId] && // don't show players not in this tourney\n                        <li key={pId}>\n                            {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                        </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\nPlayerInfo.propTypes = {\n    getPlayer: PropTypes.func.isRequired,\n    playerId: PropTypes.string.isRequired,\n    players: PropTypes.object.isRequired,\n    scoreData: PropTypes.object.isRequired\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport React, {useEffect} from \"react\";\nimport {assoc, lensIndex, set} from \"ramda\";\nimport {\n    calcPairIdeal,\n    maxPriority\n} from \"../../../pairing-scoring\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport {SortLabel} from \"../../../components/utility\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport numeral from \"numeral\";\nimport {useSortedTable} from \"../../../hooks\";\n\nexport default function SelectList({\n    pairData,\n    stagedPlayers,\n    setStagedPlayers,\n    unmatched\n}) {\n    const initialTable = Object.values(unmatched);\n    const [sorted, sortedDispatch] = useSortedTable(initialTable, \"firstName\");\n    const isOnePlayerSelected = (\n        new Set(stagedPlayers).size === 2\n        && stagedPlayers.includes(null)\n    );\n    useEffect(\n        function hydrateIdealToTable() {\n            function calcIdealOrNot(player) {\n                const selectedIds = stagedPlayers.filter((p) => p !== null);\n                if (selectedIds.length !== 1) {\n                    return 0;\n                }\n                const selectedPlayer = pairData[selectedIds[0]];\n                if (!player || !selectedPlayer) {\n                    return 0; // if it's a bye player\n                }\n                return calcPairIdeal(selectedPlayer, player) / maxPriority;\n            }\n            const table = Object.values(unmatched).map(\n                (data) => assoc(\n                    \"ideal\",\n                    calcIdealOrNot(pairData[data.id]),\n                    data\n                ),\n                []\n            );\n            sortedDispatch({table});\n        },\n        [unmatched, pairData, sortedDispatch, stagedPlayers]\n    );\n    // only use unmatched players if this is the last round.\n    function selectPlayer(id) {\n        const setWhite = set(lensIndex(WHITE), id);\n        const setBlack = set(lensIndex(BLACK), id);\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers((prevState) => setWhite(prevState));\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers((prevState) => setBlack(prevState));\n        }\n        // else... nothing happens\n    }\n    if (Object.keys(unmatched).length === 0) {\n        return null;\n    }\n    return (\n        <table className=\"content\">\n            <thead>\n                <tr>\n                    <th>\n                        <VisuallyHidden>Controls</VisuallyHidden>\n                    </th>\n                    <th>\n                        <SortLabel\n                            sortKey=\"firstName\"\n                            data={sorted}\n                            dispatch={sortedDispatch}\n                        >\n                            Name\n                        </SortLabel>\n                    </th>\n                    <th>\n                        <SortLabel\n                            sortKey=\"ideal\"\n                            data={sorted}\n                            dispatch={sortedDispatch}\n                        >\n                            Ideal\n                        </SortLabel>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {sorted.table.map(({id, firstName, lastName, ideal}) =>\n                    <tr key={id}>\n                        <td>\n                            <button\n                                className=\"button-ghost\"\n                                disabled={\n                                    !stagedPlayers.includes(null)\n                                    || stagedPlayers.includes(id)\n                                }\n                                onClick={() => selectPlayer(id)}\n                            >\n                                <Icons.UserPlus/>\n                                <Hidden>\n                                    Add {firstName} {lastName}\n                                </Hidden>\n                            </button>\n                        </td>\n                        <td>\n                            {firstName} {lastName}\n                        </td>\n                        <td>\n                            {isOnePlayerSelected\n                            ? numeral(ideal).format(\"%\")\n                            : \"-\"}\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nSelectList.propTypes = {\n    pairData: PropTypes.object,\n    setStagedPlayers: PropTypes.func,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string),\n    unmatched: PropTypes.object\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport React, {Fragment} from \"react\";\nimport {\n    calcPairIdeal,\n    maxPriority\n} from \"../../../pairing-scoring\";\nimport {lensIndex, set} from \"ramda\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function Stage({\n    getPlayer,\n    pairData,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers,\n    tourneyDispatch\n}) {\n    const [options] = useOptionsDb();\n    const [white, black] = stagedPlayers;\n    const whiteName = (\n        white\n        ? getPlayer(white).firstName + \" \" + getPlayer(white).lastName\n        : \"\"\n    );\n    const blackName = (\n        black\n        ? getPlayer(black).firstName + \" \" + getPlayer(black).lastName\n        : \"\"\n    );\n\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n\n    function match() {\n        tourneyDispatch({\n            byeValue: options.byeValue,\n            pair: [getPlayer(white), getPlayer(black)],\n            roundId,\n            type: \"MANUAL_PAIR\"\n        });\n        setStagedPlayers([null, null]);\n    }\n\n    const matchIdeal = (function () {\n        if (stagedPlayers.includes(null)) {\n            return null;\n        }\n        const player0stats = pairData[stagedPlayers[0]];\n        const player1stats = pairData[stagedPlayers[1]];\n        if (!player0stats || !player1stats) {\n            return null;\n        }\n        const ideal = calcPairIdeal(player0stats, player1stats);\n        return numeral(ideal / maxPriority).format(\"%\");\n    }());\n\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <div className=\"content\">\n                <p>\n                    White:{\" \"}\n                    {white !== null &&\n                        <Fragment>\n                            {whiteName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + whiteName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(WHITE)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n                <p>\n                    Black:{\" \"}\n                    {black !== null &&\n                        <Fragment>\n                            {blackName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + blackName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(BLACK)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n                <p>Match ideal: {matchIdeal}</p>\n            </div>\n            <div className=\"toolbar\">\n                <button\n                    disabled={\n                        stagedPlayers.every((id) => id === null)\n                    }\n                    onClick={() => setStagedPlayers(\n                        (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                    )}\n                >\n                    <Icons.Repeat/> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-primary\"\n                    disabled={stagedPlayers.includes(null)}\n                    onClick={match}\n                >\n                    <Icons.Check/> Match selected\n                </button>\n            </div>\n        </div>\n    );\n}\nStage.propTypes = {\n    getPlayer: PropTypes.func.isRequired,\n    pairData: PropTypes.object.isRequired,\n    roundId: PropTypes.number.isRequired,\n    setStagedPlayers: PropTypes.func.isRequired,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string).isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n","import {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {\n    createPairingData,\n    // matches2ScoreData,\n    setUpperHalves\n} from \"../../../pairing-scoring\";\nimport {curry, pipe} from \"ramda\";\nimport {Dialog} from \"@reach/dialog\";\nimport PlayerInfo from \"./player-info\";\nimport PropTypes from \"prop-types\";\nimport SelectList  from \"./select-list\";\nimport Selecting from \"../player-select/selecting\";\nimport Stage from \"./stage\";\n// import {rounds2Matches} from \"../../../data-types\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function PairPicker({\n    roundId,\n    tournament,\n    scoreData,\n    unmatched,\n    unmatchedCount,\n    unmatchedWithDummy\n}) {\n    const [stagedPlayers, setStagedPlayers] = useState([null, null]);\n    const [options] = useOptionsDb();\n    const {\n        tourney,\n        activePlayers,\n        players,\n        getPlayer,\n        tourneyDispatch\n    } = tournament;\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    // `createPairingData` is relatively expensive\n    const pairData = useMemo(\n        function memoizedGetStats() {\n            return pipe(\n                curry(createPairingData)(activePlayers, options.avoidPairs),\n                // sortDataForPairing,\n                setUpperHalves\n            )(scoreData);\n        },\n        [activePlayers, options.avoidPairs, scoreData]\n    );\n    useEffect(\n        function cleanPlayersThatWereRemoved() {\n            const [p1, p2] = stagedPlayers;\n            if (!unmatchedWithDummy[p1] && p1 !== null) {\n                setStagedPlayers((pair) => [null, pair[1]]);\n            }\n            if (!unmatchedWithDummy[p2] && p2 !== null) {\n                setStagedPlayers((pair) => [pair[0], null]);\n            }\n        },\n        [unmatchedWithDummy, stagedPlayers]\n    );\n    return (\n        <div className=\"content-area\" style={{width: \"720px\"}}>\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-primary\"\n                    disabled={unmatchedCount === 0}\n                    onClick={() => tourneyDispatch({\n                        byeValue: options.byeValue,\n                        pairData: pairData,\n                        players: unmatched,\n                        roundId,\n                        type: \"AUTO_PAIR\"\n                    })}\n                >\n                    Auto-pair unmatched players\n                </button>{\" \"}\n                <button onClick={() => setIsModalOpen(true)}>\n                    Add or remove players from the roster.\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel>\n                    <SelectList\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                        unmatched={unmatchedWithDummy}\n                        pairData={pairData}\n                    />\n                </Panel>\n                <Panel style={{flexGrow: \"1\"}}>\n                    <Stage\n                        roundId={roundId}\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                        pairData={pairData}\n                        tourneyDispatch={tourneyDispatch}\n                        getPlayer={getPlayer}\n                    />\n                    <PanelContainer>\n                        {stagedPlayers.map((id) =>\n                            id !== null && (\n                                <Panel key={id}>\n                                    <PlayerInfo\n                                        playerId={id}\n                                        scoreData={scoreData}\n                                        players={players}\n                                        getPlayer={getPlayer}\n                                    />\n                                </Panel>\n                            )\n                        )}\n                    </PanelContainer>\n                </Panel>\n            </PanelContainer>\n            <Dialog\n                isOpen={isModalOpen}\n                onDismiss={() => setIsModalOpen(false)}\n            >\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsModalOpen(false)}\n                >\n                    Done\n                </button>\n                <Selecting\n                    tourney={tourney}\n                    tourneyDispatch={tourneyDispatch}\n                />\n            </Dialog>\n        </div>\n    );\n}\nPairPicker.propTypes = {\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    tournament: PropTypes.object.isRequired,\n    unmatched: PropTypes.object.isRequired,\n    unmatchedCount: PropTypes.number.isRequired,\n    unmatchedWithDummy: PropTypes.object.isRequired\n};\n","import React from \"react\";\n\nconst NotFound = () => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","import {\n    DUMMY_ID\n    // rounds2Matches\n} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport {sum} from \"ramda\";\n\nexport default function PlayerMatchInfo({color, scoreData, match, getPlayer}) {\n    const playerId = match.playerIds[color];\n    const player = getPlayer(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = scoreData[playerId];\n    const colorBalance = sum(colorScores);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{sum(results)}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerId}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{hasBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {Object.entries(\n                        opponentResults\n                    ).map(([opId, result], i, src) => (\n                        // don't show the most recent (current) opponent\n                        i < src.length - 1 && (\n                            <li key={opId}>\n                                {getPlayer(opId).firstName}{\" \"}\n                                {getPlayer(opId).lastName}{\" \"}\n                                -{\" \"}\n                                {result === 0 && \"Lost\"}\n                                {result === 1 && \"Won\"}\n                                {result === 0.5 && \"Draw\"}\n                            </li>\n                        )\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\nPlayerMatchInfo.propTypes = {\n    color: PropTypes.number.isRequired,\n    getPlayer: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired,\n    scoreData: PropTypes.object.isRequired\n};\n","import \"@reach/dialog/styles.css\";\nimport {BLACK, DUMMY_ID, WHITE} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PlayerMatchInfo from \"./player-match-info\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {ratings} from \"../../../pairing-scoring\";\nimport styles from \"./round.module.css\";\nimport {sum} from \"ramda\";\n\nexport default function MatchRow({\n    compact,\n    pos,\n    match,\n    roundId,\n    selectedMatch,\n    setSelectedMatch,\n    scoreData,\n    tournament\n}) {\n    const {\n        tourney,\n        tourneyDispatch,\n        players,\n        getPlayer,\n        playersDispatch\n    } = tournament;\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whitePlayer = getPlayer(match.playerIds[WHITE]);\n    const blackPlayer = getPlayer(match.playerIds[BLACK]);\n    const whiteName = whitePlayer.firstName + \" \" + whitePlayer.lastName;\n    const blackName = blackPlayer.firstName + \" \" + blackPlayer.lastName;\n\n    function ResultDisplay(color) {\n        if (resultCode === \"NOTSET\") {\n            return <VisuallyHidden>Not set</VisuallyHidden>;\n        } else if (resultCode === \"DRAW\") {\n            // return <Icons.Minus aria-label=\"Draw\" />;\n            // TODO: find a better icon for draws.\n            return (\n                <span\n                    aria-label=\"Draw\"\n                    role=\"img\"\n                    style={{filter: \"grayscale(100%)\"}}\n                >\n                    🤝\n                </span>\n            );\n        } else if (resultCode === color) {\n            return <Icons.Award  aria-label=\"Won\" />;\n        } else {\n            return <VisuallyHidden>Lost</VisuallyHidden>;\n        }\n    }\n\n    function setMatchResult(event) {\n        const result = (function () {\n            switch (event.target.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        if (result === resultCode) {\n            // if it hasn't changed, then do nothing\n            return;\n        }\n        const white = players[match.playerIds[WHITE]];\n        const black = players[match.playerIds[BLACK]];\n        const newRating = (\n            event.currentTarget.value === \"NOTSET\"\n            ? match.origRating\n            : ratings.calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playersDispatch({\n            id: white.id,\n            rating: newRating[WHITE],\n            type: \"SET_PLAYER_RATING\"\n        });\n        playersDispatch({\n            id: black.id,\n            rating: newRating[BLACK],\n            type: \"SET_PLAYER_RATING\"\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (sum(match.result) === 0) {\n            playersDispatch({\n                id: white.id,\n                matchCount: white.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n            playersDispatch({\n                id: black.id,\n                matchCount: black.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n        }\n        tourneyDispatch({\n            matchId: match.id,\n            newRating,\n            result,\n            roundId,\n            type: \"SET_MATCH_RESULT\"\n        });\n    }\n\n    return (\n        <tr\n            className={\n                match.id === selectedMatch\n                ? \"selected\"\n                : \"buttons-on-hover\"\n            }\n        >\n            <th className={\"table__number \" + styles.rowId} scope=\"row\">\n                {pos + 1}\n            </th>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"WHITE\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + whitePlayer.type}\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}\n            </td>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"BLACK\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + blackPlayer.type}\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}\n            </td>\n            <td className={styles.matchResult + \" data__input row__controls\"}>\n                <select\n                    className={styles.winnerSelect}\n                    disabled={match.playerIds.includes(DUMMY_ID)}\n                    value={resultCode}\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                >\n                    <option value=\"NOTSET\">\n                        Select winner\n                    </option>\n                    <option value=\"WHITE\">\n                        White won\n                    </option>\n                    <option value=\"BLACK\">\n                        Black won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            {!compact &&\n                <td className={styles.controls + \" data__input\"}>\n                    {selectedMatch !== match.id\n                    ? (\n                        <button\n                            className=\"button-ghost\"\n                            title=\"Edit match\"\n                            onClick={() => setSelectedMatch(match.id)}\n                        >\n                            <Icons.Circle />\n                            <VisuallyHidden>\n                                Edit match for {whiteName} versus {blackName}\n                            </VisuallyHidden>\n                        </button>\n                    ) : (\n                        <button\n                            className=\"button-ghost button-pressed\"\n                            title=\"End editing match\"\n                            onClick={() => setSelectedMatch(null)}\n                        >\n                            <Icons.CheckCircle />\n                        </button>\n                    )}\n                    <button\n                        className=\"button-ghost\"\n                        title=\"Open match information.\"\n                        onClick={() => setOpenModal(true)}\n                    >\n                        <Icons.Info />\n                        <Hidden>\n                            View information for match:{\" \"}\n                            {whiteName} versus {blackName}\n                        </Hidden>\n                    </button>\n                    <Dialog\n                        isOpen={openModal}\n                        onDismiss={() => setOpenModal(false)}\n                    >\n                        <button\n                            className=\"button-micro button-primary\"\n                            onClick={() => setOpenModal(false)}\n                        >\n                            close\n                        </button>\n                        <p>{tourney.name}</p>\n                        <p>Round {roundId + 1}, match {pos + 1}</p>\n                        <PanelContainer>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={WHITE}\n                                    match={match}\n                                    getPlayer={getPlayer}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={BLACK}\n                                    match={match}\n                                    getPlayer={getPlayer}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                        </PanelContainer>\n                    </Dialog>\n                </td>\n            }\n        </tr>\n    );\n}\nMatchRow.propTypes = {\n    compact: PropTypes.bool,\n    match: PropTypes.object.isRequired,\n    pos: PropTypes.number.isRequired,\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func,\n    tournament: PropTypes.object.isRequired\n};\n","import MatchRow from \"./match-row\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n// import {matches2ScoreData} from \"../../../pairing-scoring\";\n// import {rounds2Matches} from \"../../../data-types\";\nimport style from \"./round.module.css\";\n\nexport default function RoundTable({\n    compact,\n    roundId,\n    selectedMatch,\n    setSelectedMatch,\n    tournament,\n    scoreData\n}) {\n    const {tourney} = tournament;\n    const matchList = tourney.roundList[roundId];\n    // matches2ScoreData is relatively expensive\n    // const scoreData = useMemo(\n    //     () => matches2ScoreData(rounds2Matches(tourney.roundList)),\n    //     [tourney.roundList]\n    // );\n    return (\n        <table className={style.table}>\n            {matchList.length > 0 &&\n                <>\n                <caption\n                    className={compact ? \"title-30\" : \"title-40\"}\n                >\n                    Round {roundId + 1} matches\n                </caption>\n                <thead>\n                    <tr>\n                        <th className={style.rowId} scope=\"col\">\n                            #\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>White result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            White\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>Black result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            Black\n                        </th>\n                        <th className=\"row__result\" scope=\"col\">\n                            Match result\n                        </th>\n                        {!compact &&\n                            <th className=\"row__controls\" scope=\"col\">\n                                <VisuallyHidden>Controls</VisuallyHidden>\n                            </th>\n                        }\n                    </tr>\n                </thead>\n                </>\n            }\n            <tbody className={style.tbody + \" content\"}>\n                {matchList.map((match, pos) => (\n                    <MatchRow\n                        key={match.id}\n                        compact={compact}\n                        match={match}\n                        pos={pos}\n                        roundId={roundId}\n                        selectedMatch={selectedMatch}\n                        setSelectedMatch={setSelectedMatch}\n                        scoreData={scoreData}\n                        tournament={tournament}\n                    />\n                ))}\n            </tbody>\n        </table>\n    );\n}\nRoundTable.propTypes = {\n    compact: PropTypes.bool,\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func,\n    tournament: PropTypes.object.isRequired\n};\n","import React, {useState} from \"react\";\nimport Icons from \"../../../components/icons\";\nimport NotFound from \"../../../components/404\";\nimport PropTypes from \"prop-types\";\nimport RoundTable from \"./round-table\";\nimport {findById} from \"../../../components/utility\";\nimport {sum} from \"ramda\";\n\nexport function findIndexById(id, list) {\n    return list.indexOf(findById(id, list));\n}\n\nexport default function Round({roundId, tournament, scoreData}) {\n    const {\n        tourney,\n        players,\n        tourneyDispatch,\n        playersDispatch\n    } = tournament;\n    const matchList = tourney.roundList[roundId];\n    const [selectedMatch, setSelectedMatch] = useState(null);\n    if (!matchList) {\n        return <NotFound />;\n    }\n    function unMatch(matchId) {\n        const match = findById(matchId, matchList);\n        if (sum(match.result) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.playerIds.forEach(function (pId, color) {\n                // If there was a dummy player or a deleted player then bail\n                // on the dispatch.\n                if (!players[pId]) {\n                    return;\n                }\n                // Decrement the matchcount for each player\n                playersDispatch({\n                    id: pId,\n                    matchCount: players[pId].matchCount - 1,\n                    type: \"SET_PLAYER_MATCHCOUNT\"\n                });\n                // Set each player's rating to the original rating of the match\n                playersDispatch({\n                    id: pId,\n                    rating: match.origRating[color],\n                    type: \"SET_PLAYER_RATING\"\n                });\n            });\n        }\n        tourneyDispatch({matchId, roundId, type: \"DEL_MATCH\"});\n        setSelectedMatch(null);\n    }\n\n    function swapColors(matchId) {\n        tourneyDispatch({matchId, roundId, type: \"SWAP_COLORS\"});\n    }\n\n    function moveMatch(matchId, direction) {\n        const oldIndex = findIndexById(matchId, matchList);\n        const newIndex = (oldIndex + direction >= 0) ? oldIndex + direction : 0;\n        tourneyDispatch({newIndex, oldIndex, roundId, type: \"MOVE_MATCH\"});\n    }\n\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => unMatch(selectedMatch)}\n                >\n                    <Icons.Trash /> Unmatch\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => swapColors(selectedMatch)}\n                >\n                    <Icons.Repeat /> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, -1)}\n                >\n                    <Icons.ArrowUp /> Move up\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, 1)}\n                >\n                    <Icons.ArrowDown /> Move down\n                </button>\n            </div>\n            {matchList.length === 0 &&\n                <p>No players matched yet.</p>\n            }\n            <RoundTable\n                roundId={roundId}\n                selectedMatch={selectedMatch}\n                setSelectedMatch={setSelectedMatch}\n                tournament={tournament}\n                scoreData={scoreData}\n            />\n        </div>\n    );\n}\nRound.propTypes = {\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    tournament: PropTypes.object.isRequired\n};\n","import {DUMMY_ID, getUnmatched} from \"../../../data-types\";\nimport React, {useMemo} from \"react\";\nimport PropTypes from \"prop-types\";\nimport RoundPanels from \"./round-panels\";\nimport {assoc} from \"ramda\";\nimport {matches2ScoreData} from \"../../../pairing-scoring\";\nimport {rounds2Matches} from \"../../../data-types\";\n\n// This is a higher-order component that generates round data and passes it to\n// children. I extracted this logic to its own component so it could be easily\n// reused (e.g. in testing). It may have also made the whole component tree more\n// complicated, though.\nexport function withRoundData(WrappedComponent) {\n    function NewComponent(props) {\n        const roundId = Number(props.roundId); // Reach Router passes a string.\n        const {tourney, activePlayers, getPlayer} = props.tournament;\n        const {roundList} = tourney;\n        // matches2ScoreData is relatively expensive\n        const scoreData = useMemo(\n            () => matches2ScoreData(rounds2Matches(roundList)),\n            [roundList]\n        );\n        // Only calculate unmatched players for the latest round. Old rounds\n        // don't get to add new players.\n        // Should this be memoized?\n        // only use unmatched players if this is the last round.\n        const unmatched = (\n            roundId === roundList.length - 1\n            ? getUnmatched(roundList, activePlayers, roundId)\n            : {}\n        );\n        const unmatchedCount = Object.keys(unmatched).length;\n        // make a new list so as not to affect auto-pairing\n        const unmatchedWithDummy = (\n            unmatchedCount % 2 !== 0\n            ? assoc(DUMMY_ID, getPlayer(DUMMY_ID), unmatched)\n            : unmatched\n        );\n        const activePlayersCount = Object.keys(activePlayers).length;\n        const data = {\n            activePlayersCount,\n            roundId, // this is intentionally reused from props to override it\n            scoreData,\n            unmatched,\n            unmatchedCount,\n            unmatchedWithDummy\n        };\n        return <WrappedComponent {...props} {...data} />;\n    };\n    NewComponent.propTypes = {\n        roundId: PropTypes.string,\n        tournament: PropTypes.object.isRequired\n    };\n    return NewComponent;\n}\n\nconst RoundWithData = withRoundData(RoundPanels);\nexport default RoundWithData;\n","import React, {useEffect, useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport Icons from \"../../../components/icons\";\nimport PairPicker from \"../pair-picker\";\nimport PropTypes from \"prop-types\";\nimport Round from \"./round\";\n\nexport default function RoundPanels({\n    activePlayersCount,\n    unmatched,\n    unmatchedCount,\n    unmatchedWithDummy,\n    roundId,\n    tournament,\n    scoreData\n}) {\n    const initialTab = unmatchedCount === activePlayersCount ? 1 : 0;\n    const [openTab, setOpenTab] = useState(initialTab);\n    useEffect(\n        function autoSwitchTab() {\n            if (unmatchedCount === activePlayersCount) {\n                setOpenTab(1);\n            }\n            if (unmatchedCount === 0) {\n                setOpenTab(0);\n            }\n        },\n        [unmatchedCount, activePlayersCount]\n    );\n    return (\n        <Tabs index={openTab} onChange={setOpenTab}>\n            <TabList>\n                <Tab disabled={unmatchedCount === activePlayersCount}>\n                    <Icons.List/> Matches\n                </Tab>\n                <Tab disabled={unmatchedCount === 0}>\n                    <Icons.Users/> Unmatched players ({unmatchedCount})\n                </Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <Round\n                        roundId={roundId}\n                        tournament={tournament}\n                        scoreData={scoreData}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    {unmatchedCount !== 0 &&\n                        <PairPicker\n                            roundId={roundId}\n                            tournament={tournament}\n                            unmatched={unmatched}\n                            unmatchedWithDummy={unmatchedWithDummy}\n                            unmatchedCount={unmatchedCount}\n                            scoreData={scoreData}\n                        />\n                    }\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nRoundPanels.propTypes = {\n    activePlayersCount: PropTypes.number.isRequired,\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    tournament: PropTypes.object.isRequired,\n    unmatched: PropTypes.object.isRequired,\n    unmatchedCount: PropTypes.number.isRequired,\n    unmatchedWithDummy: PropTypes.object.isRequired\n};\n","import {Panel, PanelContainer} from \"../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport {\n    createStandingList,\n    createStandingTree,\n    getTieBreakNames,\n    matches2ScoreData,\n    tieBreakMethods\n} from \"../../pairing-scoring\";\nimport {defaultTo, filter, pipe} from \"ramda\";\nimport {isDummyObj, rounds2Matches} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport classNames from \"classnames\";\nimport dashify from \"dashify\";\nimport numeral from \"numeral\";\nimport style from \"./index.module.css\";\n// import {useTournament} from \"../../hooks\";\n\nexport function ScoreTable({compact, title, tourney, getPlayer}) {\n    const {tieBreaks, roundList} = tourney;\n    const tieBreakNames = getTieBreakNames(tieBreaks);\n    const standingTree = pipe(\n        rounds2Matches,\n        matches2ScoreData,\n        (data) => createStandingList(tieBreaks, data),\n        filter((obj) => !isDummyObj(obj)),\n        createStandingTree\n    )(roundList);\n    return (\n        <table\n            className={classNames(style.table, {[`${style.compact}`]: compact})\n            }\n        >\n            <caption\n                className={(compact) ? \"title-30\" : \"title-40\"}\n            >\n                {title}\n            </caption>\n            <thead>\n                <tr className={style.topHeader}>\n                    <th className=\"title-10\" scope=\"col\">Rank</th>\n                    <th className=\"title-10\" scope=\"col\">Name</th>\n                    <th className=\"title-10\" scope=\"col\">Score</th>\n                    {!compact && tieBreakNames.map((name, i) => (\n                        <th key={i} className=\"title-10\" scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.map((standing, i, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {i === 0 && ( // Only display the rank once\n                                <th\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                    scope=\"row\"\n                                >\n                                    {rank + 1}\n                                </th>\n                            )}\n                            {compact // use <td> if it's compact.\n                            ? (\n                                <td className={style.playerName}>\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </td>\n                            ) : ( // Use the name as a header if not compact.\n                                <th\n                                    className={style.playerName}\n                                    data-testid={rank}\n                                    scope=\"row\"\n                                >\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </th>\n                            )}\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {!compact && standing.tieBreaks.map((score, j) => (\n                                <td\n                                    key={j}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tieBreakNames[j]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\nScoreTable.propTypes = {\n    compact: PropTypes.bool,\n    getPlayer: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    tourney: PropTypes.object.isRequired\n};\n\nfunction SelectTieBreaks({tourney, tourneyDispatch}) {\n    const {tieBreaks} = tourney;\n    const [selectedTb, setSelectedTb] = useState(null);\n\n    function toggleTb(id = null) {\n        const defaultId = defaultTo(selectedTb);\n        if (tieBreaks.includes(defaultId(id))) {\n            tourneyDispatch({id: defaultId(id), type: \"DEL_TIEBREAK\"});\n            setSelectedTb(null);\n        } else {\n            tourneyDispatch({id: defaultId(id), type: \"ADD_TIEBREAK\"});\n        }\n    }\n\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        tourneyDispatch({\n            newIndex: index + direction,\n            oldIndex: index,\n            type: \"MOVE_TIEBREAK\"\n        });\n    }\n\n    return (\n        <PanelContainer className=\"content-area\">\n            <Panel>\n                <div className=\"toolbar\">\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => toggleTb()}\n                    >\n                        Toggle\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(-1)}\n                    >\n                        <Icons.ArrowUp/> Move up\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(1)}\n                    >\n                        <Icons.ArrowDown/> Move down\n                    </button>\n                    <button\n                        className={classNames(\n                            \"button-micro\",\n                            {\"button-primary\": selectedTb !== null}\n                        )}\n                        disabled={selectedTb === null}\n                        onClick={() => setSelectedTb(null)}\n                    >\n                        Done\n                    </button>\n                </div>\n                <table>\n                    <caption className=\"title-30\">\n                        Selected tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {tieBreaks.map((id) => (\n                            <tr\n                                key={id}\n                                className={classNames(\n                                    {\"selected\": selectedTb === id}\n                                )}\n                            >\n                                <td>\n                                    {tieBreakMethods[id].name}\n                                </td>\n                                <td style={{width: \"48px\"}}>\n                                    <button\n                                        className=\"button-micro\"\n                                        disabled={\n                                            selectedTb !== null\n                                            && selectedTb !== id\n                                        }\n                                        onClick={() =>\n                                            selectedTb === id\n                                            ? setSelectedTb(null)\n                                            : setSelectedTb(id)\n                                        }\n                                    >\n                                        {selectedTb === id ? \"Done\" : \"Edit\"}\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <div className=\"toolbar\">&nbsp;</div>\n                <table style={{marginTop: \"16px\"}}>\n                    <caption className=\"title-30\">\n                        Available tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {Object.values(tieBreakMethods).map(({name, id}) => (\n                            <tr key={id}>\n                                <td>\n                                    <span\n                                        className={\n                                            tieBreaks.includes(id)\n                                            ? \"disabled\"\n                                            : \"enabled\"\n                                        }\n                                    >\n                                        {name}\n                                    </span>\n                                </td>\n                                <td>\n                                    {!tieBreaks.includes(id) && (\n                                        <button\n                                            className=\"button-micro\"\n                                            onClick={() => toggleTb(id)}\n                                        >\n                                            Add\n                                        </button>\n                                    )}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n        </PanelContainer>\n    );\n}\nSelectTieBreaks.propTypes = {\n    tourney: PropTypes.object.isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n\nexport default function Scores({tournament}) {\n    const {getPlayer, tourney, tourneyDispatch} = tournament;\n    return (\n        <Tabs>\n            <TabList>\n                <Tab><Icons.List /> Scores</Tab>\n                <Tab><Icons.Settings /> Edit tiebreak rules</Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <ScoreTable\n                        title=\"Score detail\"\n                        tourney={tourney}\n                        getPlayer={getPlayer}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <SelectTieBreaks\n                        tourney={tourney}\n                        tourneyDispatch={tourneyDispatch}\n                    />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nScores.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import React, {useState} from \"react\";\nimport {DateFormat} from \"../../components/utility\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\n\nexport default function Setup({tournament}) {\n    const {tourney, tourneyDispatch} = tournament;\n    const [isEditingName, setIsEditingName] = useState(false);\n    const [isEditingDate, setIsEditingDate] = useState(false);\n\n    function changeToOne() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 1\n        });\n        window.alert(\"Bye value updated to 1.\");\n    }\n\n    function changeToOneHalf() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 0.5\n        });\n        window.alert(\"Bye value updated to ½.\");\n    }\n\n    // lol, why are dates so complicated?!?\n    const dateInput = (function () {\n        const year = tourney.date.getFullYear();\n        const month = (\n            tourney.date.getMonth() < 9\n            ? \"0\" + (tourney.date.getMonth() + 1)\n            : tourney.date.getMonth() + 1\n        );\n        const day = (\n            tourney.date.getDate() < 10\n            ? \"0\" + tourney.date.getDate()\n            : tourney.date.getDate()\n        );\n        return year + \"-\" + month + \"-\" + day;\n    }());\n\n    function updateDate(event) {\n        const [\n            rawYear,\n            rawMonth,\n            rawDay\n        ] = event.currentTarget.value.split(\"-\");\n        const year = Number(rawYear);\n        const month = Number(rawMonth) - 1;\n        const day = Number(rawDay);\n        tourneyDispatch({\n            date: new Date(year, month, day),\n            type: \"SET_DATE\"\n        });\n    }\n\n    return (\n        <div className=\"content-area\">\n            {isEditingName\n            ? (\n                <p className=\"display-20\" style={{textAlign: \"left\"}}>\n                    <input\n                        className=\"display-20\"\n                        style={{textAlign: \"left\"}}\n                        type=\"text\"\n                        value={tourney.name}\n                        onChange={(event) => tourneyDispatch({\n                            name: event.currentTarget.value,\n                            type: \"SET_NAME\"\n                        })}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </p>\n            ) : (\n                <h1 style={{textAlign: \"left\"}}>\n                    <span className=\"inputPlaceholder\">\n                        {tourney.name}\n                    </span>{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(true)}\n                    >\n                        <Icons.Edit />\n                    </button>\n                </h1>\n            )}\n            {isEditingDate\n            ? (\n                <p className=\"caption-30\">\n                    <input\n                        className=\"caption-30\"\n                        type=\"date\"\n                        value={dateInput}\n                        onChange={updateDate}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </p>\n            )\n            : (\n                <p className=\"caption-30\">\n                    <DateFormat date={tourney.date} />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(true)}\n                    >\n                        <Icons.Edit />\n                    </button>\n                </p>\n            )}\n            <h2>Change bye scores</h2>\n            <button onClick={changeToOne}>Change to 1</button>{\" \"}\n            <button onClick={changeToOneHalf}>Change to ½</button>\n            <p className=\"caption-30\">\n                This will update all bye matches which have been previously\n                scored in this tournament. To change the default bye value in\n                future matches, go to the{\" \"}\n                <Link to=\"/options\">app options</Link>.\n            </p>\n        </div>\n    );\n}\nSetup.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import {curry, last} from \"ramda\";\nimport {DUMMY_ID} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {isRoundComplete} from \"../../data-types\";\n\nconst noDraggy = {onDragStart: (e) => e.preventDefault()};\n\nexport default function Sidebar({className, navigate, tournament}) {\n    const {\n        tourney,\n        isItOver,\n        isNewRoundReady,\n        getPlayer,\n        activePlayers,\n        playersDispatch,\n        tourneyDispatch\n    } = tournament;\n    const {roundList} = tourney;\n    const isComplete = curry(isRoundComplete)(roundList, activePlayers);\n\n    function newRound() {\n        const confirmText = (\n            \"All rounds have completed. Are you sure you want to begin a new \"\n            + \"one?\"\n        );\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        tourneyDispatch({type: \"ADD_ROUND\"});\n    }\n\n    async function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            await navigate(\".\");\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.playerIds.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playersDispatch({\n                        id: pId,\n                        matchCount: matchCount - 1,\n                        type: \"SET_PLAYER_MATCHCOUNT\"\n                    });\n                    playersDispatch({\n                        id: pId,\n                        rating: match.origRating[color],\n                        type: \"SET_PLAYER_RATING\"\n                    });\n                });\n            });\n            tourneyDispatch({type: \"DEL_LAST_ROUND\"});\n            if (tourney.roundList.length === 1) {\n                // Automatically remake round 1.\n                tourneyDispatch({type: \"ADD_ROUND\"});\n            }\n        }\n    }\n\n    return (\n        <div className={classNames(className)}>\n            <nav>\n                <ul style={{marginTop: \"0\"}}>\n                    <li>\n                        <Link to=\"..\" {...noDraggy}>\n                            <Icons.ChevronLeft/>\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Back\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <ul>\n                    <li>\n                        <Link to=\"setup\" {...noDraggy}>\n                            <Icons.Settings />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Setup\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\".\" {...noDraggy}>\n                            <Icons.Users />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Players\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"status\" {...noDraggy}>\n                            <Icons.Activity />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Status\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"crosstable\" {...noDraggy}>\n                            <Icons.Layers />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Crosstable\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"scores\" {...noDraggy}>\n                            <Icons.List />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Score detail\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <h5 className=\"sidebar__hide-on-close sidebar__header\">\n                    Rounds\n                </h5>\n                <ul className=\"center-on-close\">\n                    {Object.keys(roundList).map((id) =>\n                        <li key={id}>\n                            <Link to={`round/${id}`} {...noDraggy}>\n                                {Number(id) + 1}\n                                {isComplete(Number(id))\n                                ? (\n                                    <span\n                                        className={classNames(\n                                            \"sidebar__hide-on-close\",\n                                            \"caption-20\"\n                                        )}\n                                    >\n                                        &nbsp;Complete&nbsp;<Icons.Check />\n                                    </span>\n                                ) : (\n                                    <span\n                                        className={classNames(\n                                            \"sidebar__hide-on-close\",\n                                            \"caption-20\"\n                                        )}\n                                    >\n                                        &nbsp;Not complete&nbsp;<Icons.Alert />\n                                    </span>\n                                )}\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n            </nav>\n            <hr />\n            <ul>\n                <li>\n                    <button\n                        className={\"sidebar-button\"}\n                        disabled={!isNewRoundReady}\n                        onClick={newRound}\n                        style={{width: \"100%\"}}\n                    >\n                        <Icons.Plus/>\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;New round\n                        </span>\n                    </button>\n                </li>\n                <li style={{textAlign: \"center\"}}>\n                    <button\n                        disabled={roundList.length === 0}\n                        onClick={delLastRound}\n                        className=\"button-micro sidebar-button\"\n                        style={{marginTop: \"8px\"}}\n                    >\n                        <Icons.Trash />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Remove last round\n                        </span>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    );\n}\nSidebar.propTypes = {\n    className: PropTypes.string,\n    navigate: PropTypes.func.isRequired,\n    tournament: PropTypes.object.isRequired\n};\n","import {\n    assoc,\n    dissoc,\n    lensPath,\n    lensProp,\n    mergeLeft,\n    over,\n    set\n} from \"ramda\";\nimport {createPlayer, types} from \"../../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function playersReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"SET_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        // You should delete all avoid-pairs with the id too.\n        t.interface({id: types.Id})(action);\n        return dissoc(\n            lensPath(action.id),\n            state\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        t.interface({\n            id: types.Id,\n            matchCount: t.Number\n        })(action);\n        return set(\n            lensPath([action.id, \"matchCount\"]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        t.interface({id: types.Id, rating: t.Number})(action);\n        return set(\n            lensPath([action.id, \"rating\"]),\n            action.rating,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","// TODO: this file needs to be replaced with something more organized.\nimport {\n    BLACK,\n    DUMMY_ID,\n    WHITE,\n    createMatch,\n    getPlayerMaybe,\n    types\n} from \"../../../data-types\";\nimport {assoc, curry, filter} from \"ramda\";\nimport {pairPlayers, setByePlayer} from \"../../../pairing-scoring\";\nimport t from \"tcomb\";\n\nexport function scoreByeMatch(byeValue, match) {\n    if (match.playerIds[WHITE] === DUMMY_ID) {\n        return assoc(\"result\", [0, byeValue], match);\n    } else if (match.playerIds[BLACK] === DUMMY_ID) {\n        return assoc(\"result\", [byeValue, 0], match);\n    }\n    return match;\n}\n\nexport function autoPair({\n    pairData,\n    byeValue,\n    players,\n    tourney\n}) {\n    // the pairData includes any players who were already matched. We need to\n    // only include the specified players. Ramda's `filter` can filter objects.\n    const playerIds = Object.keys(players);\n    const filteredData = filter(({id}) => playerIds.includes(id), pairData);\n    const [\n        pairDataNoByes,\n        byePlayerData\n    ] = setByePlayer(tourney.byeQueue, DUMMY_ID, filteredData);\n    const pairs = pairPlayers(pairDataNoByes);\n    const pairsWithBye = (\n        byePlayerData\n        ? pairs.concat([[byePlayerData.id, DUMMY_ID]])\n        : pairs\n    );\n    const getPlayer = curry(getPlayerMaybe)(players);\n    const newMatchList = pairsWithBye.map(\n        (idsPair) => (\n            createMatch({\n                newRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                origRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                playerIds: [idsPair[WHITE], idsPair[BLACK]]\n            })\n        )\n    );\n    return newMatchList.map(curry(scoreByeMatch)(byeValue));\n}\n\nexport function manualPair(pair, byeValue) {\n    t.tuple([types.Player, types.Player])(pair);\n    const match = createMatch({\n        newRating: [pair[WHITE].rating, pair[BLACK].rating],\n        origRating: [pair[WHITE].rating, pair[BLACK].rating],\n        playerIds: [pair[WHITE].id, pair[BLACK].id]\n    });\n    return scoreByeMatch(byeValue, match);\n}\n","import {\n    __,\n    append,\n    assoc,\n    concat,\n    curry,\n    filter,\n    findIndex,\n    lensPath,\n    lensProp,\n    map,\n    mergeRight,\n    move,\n    over,\n    pipe,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport {autoPair, manualPair, scoreByeMatch} from \"./match-functions\";\nimport scoreTypes from \"../../../pairing-scoring/types\";\nimport t from \"tcomb\";\nimport {types} from \"../../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function tournamentReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number\n        })(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        t.interface({playerIds: t.list(types.Id)})(action);\n        return assoc(\"playerIds\", action.playerIds, state);\n    case \"SET_BYE_QUEUE\":\n        t.interface({byeQueue: t.list(types.Id)})(action);\n        return assoc(\"byeQueue\", action.byeQueue, state);\n    case \"SET_NAME\":\n        t.interface({name: t.String})(action);\n        return assoc(\"name\", action.name, state);\n    case \"AUTO_PAIR\":\n        t.interface({\n            // avoidList: t.list(types.AvoidPair),\n            byeValue: t.Number,\n            pairData: t.dict(types.Id, scoreTypes.PairingData),\n            players: t.dict(types.Id, types.Player),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            concat(\n                __,\n                autoPair({\n                    // avoidList: action.avoidList,\n                    byeValue: action.byeValue,\n                    pairData: action.pairData,\n                    players: action.players,\n                    // roundId: action.roundId,\n                    tourney: state\n                })\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        t.interface({\n            byeValue: t.Number,\n            pair: t.tuple([types.Player, types.Player]),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            append(manualPair(action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_DATE\":\n        t.interface({date: Date})(action);\n        return assoc(\"date\", action.date, state);\n    case \"SET_MATCH_RESULT\":\n        t.interface({\n            matchId: t.String,\n            newRating: t.tuple([t.Number, t.Number]),\n            result: t.tuple([t.Number, t.Number]),\n            roundId: t.Number\n        })(action);\n        // There's probably a better way to do this but... #worksforme\n        return pipe(\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"result\"\n                ]),\n                action.result\n            ),\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n            ),\n        )(state);\n    case \"DEL_MATCH\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state.roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    newRating: reverse(match.newRating),\n                    origRating: reverse(match.origRating),\n                    playerIds: reverse(match.playerIds),\n                    result: reverse(match.result)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number,\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"UPDATE_BYE_SCORES\":\n        t.interface({value: t.Number})(action);\n        return assoc(\n            \"roundList\",\n            map(\n                map(curry(scoreByeMatch)(action.value)),\n                state.roundList\n            ),\n            state\n        );\n    case \"SET_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n","import PropTypes from \"prop-types\";\nconst electron = window.require ? window.require(\"electron\") : false;\nexport {electron};\n\n// Returns the result of a function if Electron is enabled.\nexport function ifElectron(fn) {\n    return electron ? fn() : null;\n}\n\n// This is the JSX version of the previous function\nexport function IfElectron({children, onlyWin = false, onlyMac = false}) {\n    const win = onlyWin ? navigator.appVersion.includes(\"Windows\") : true;\n    const mac = onlyMac ? navigator.appVersion.includes(\"Mac\") : true;\n    if ([electron, win, mac].includes(false)) {\n        return null;\n    } else {\n        return children;\n    }\n}\nIfElectron.propTypes = {\n    children: PropTypes.node.isRequired,\n    onlyMac: PropTypes.bool,\n    onlyWindows: PropTypes.bool\n};\n\nexport function ifElectronOpen(event, url) {\n    return ifElectron(function () {\n        event.preventDefault();\n        electron.shell.openExternal(url);\n    });\n}\n\nfunction toggleMaximize(win) {\n    if (!win.isMaximized()) {\n        win.maximize();\n    } else {\n        win.unmaximize();\n    }\n}\n\n// https://github.com/electron/electron/issues/16385#issuecomment-453955377\nexport function macOSDoubleClick(event) {\n    ifElectron(function () {\n        if (!event.target.className.includes) {\n            return; // sometimes `className` isn't a string.\n        }\n        // We don't want double-clicking buttons to (un)maximize.\n        if (!event.target.className.includes(\"double-click-control\")) {\n            return;\n        }\n        const {getUserDefault} = electron.remote.systemPreferences;\n        const doubleClickAction = getUserDefault(\n            \"AppleActionOnDoubleClick\",\n            \"string\"\n        );\n        const win = electron.remote.getCurrentWindow();\n        if (doubleClickAction === \"Minimize\") {\n            win.minimize();\n        } else if (doubleClickAction === \"Maximize\") {\n            toggleMaximize(win);\n        }\n    });\n};\n","import React from \"react\";\nimport {ifElectronOpen} from \"../electron-utils\";\nimport logo from \"../icon-min.svg\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/chessahoochee\";\nconst LICENSE_URL = (\n    \"https://github.com/johnridesabike/chessahoochee/blob/master/LICENSE\"\n);\n\nconst About = () => (\n    <article\n        style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"100%\"\n        }}\n    >\n        <div style={{flex: \"0 0 48%\", textAlign: \"center\"}}>\n            <img src={logo} height=\"196\" width=\"196\" alt=\"\"/>\n        </div>\n        <div style={{flex: \"0 0 48%\"}}>\n            <h1 className=\"title\">Coronate</h1>\n            <p>Copyright &copy; 2019 John&nbsp;Jackson</p>\n            <p>Coronate is free software.</p>\n            <p>\n                <a\n                    href={GITHUB_URL}\n                    onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n                >\n                    Source code is available\n                </a><br />\n                {\" \"}under the{\" \"}\n                <a\n                    href={LICENSE_URL}\n                    onClick={(e) => ifElectronOpen(e, LICENSE_URL)}\n                >\n                    AGPL v3.0 license\n                </a>.\n            </p>\n        </div>\n    </article>\n);\nexport default About;\n","import Icons from \"./icons\";\nimport {Link} from \"@reach/router\";\n// import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst noDraggy = {onDragStart: (e) => e.preventDefault()};\n\nexport default function Sidebar() {\n    return (\n        <nav>\n            <ul style={{margin: \"0\"}}>\n                <li>\n                    <Link to=\"/tourneys\" {...noDraggy}>\n                        <Icons.Award />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Tournaments\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/players\" {...noDraggy}>\n                        <Icons.Users />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Players\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/options\" {...noDraggy}>\n                        <Icons.Settings />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Options\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/\" {...noDraggy}>\n                        <Icons.Help />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Info\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n","// This handles the window controls for when the Electron app is running on\n// Windows.\nimport {electron, ifElectron} from \"../electron-utils\";\nimport Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./windows-controls.module.css\";\n\n// https://github.com/microsoft/vscode/tree/master/src/vs/workbench/browser/parts/titlebar/media\nconst Close = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M6.279 5.5L11 10.221l-.779.779L5.5 6.279.779 11 0 10.221 4.721 5.5 0 .779.779 0 5.5 4.721 10.221 0 11 .779 6.279 5.5z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nconst Maximize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 0v11H0V0h11zM9.899 1.101H1.1V9.9H9.9V1.1z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Minimize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 4.399V5.5H0V4.399h11z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Restore = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M11 8.798H8.798V11H0V2.202h2.202V0H11v8.798zm-3.298-5.5h-6.6v6.6h6.6v-6.6zM9.9 1.1H3.298v1.101h5.5v5.5h1.1v-6.6z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nconst win = ifElectron(() => electron.remote.getCurrentWindow());\n\nexport default function Controls({state}) {\n    const middleButton = (function (){\n        if (state.isFullScreen) {\n            return (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.setFullScreen(false)}\n                >\n                    <Icons.Unfullscreen />\n                </button>\n            );\n        } else if (state.isMaximized) {\n            return (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.unmaximize()}\n                >\n                    <Restore />\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.maximize()}\n                >\n                    <Maximize />\n                </button>\n            );\n        }\n    }());\n    return (\n        <div className={styles.container}>\n            <button\n                className={classNames(styles.winButton, \"button-ghost\")}\n                onClick={() => win.minimize()}\n            >\n                <Minimize />\n            </button>\n            {middleButton}\n            <button\n                className={classNames(\n                    styles.winButton,\n                    styles.close,\n                    \"button-ghost\"\n                )}\n                onClick={() => win.close()}\n            >\n                <Close />\n            </button>\n        </div>\n    );\n}\nControls.propTypes = {\n    state: PropTypes.object.isRequired\n};\n","import {\n    IfElectron,\n    electron,\n    ifElectron,\n    macOSDoubleClick\n} from \"../electron-utils\";\nimport React, {createContext, useContext, useEffect, useReducer} from \"react\";\nimport About from \"./about-dialog\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"./sidebar-default\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport WindowsControls from \"./windows-controls\";\nimport classNames from \"classnames\";\nimport logo from \"../icon-min.svg\";\n\nconst WindowContext = createContext(null);\n\nexport function useWindowContext() {\n    return useContext(WindowContext);\n}\n\nconst GLOBAL_TITLE = \"Coronate\";\n\nfunction formatTitle(title) {\n    if (!title) {\n        return GLOBAL_TITLE;\n    }\n    return title + \" - \" + GLOBAL_TITLE;\n}\n\nconst initialWinState = {\n    action: \"\",\n    isBlur: false,\n    isDialogOpen: false,\n    isFullScreen: false,\n    isMaximized: false,\n    isSidebarOpen: true,\n    title: \"\"\n};\n\nfunction windowReducer(oldState, newState) {\n    return {...oldState, ...newState};\n}\n\nconst isMac = navigator.appVersion.includes(\"Mac\");\nconst isWin = navigator.appVersion.includes(\"Windows\");\nconst toolbarClasses = classNames(\n    {\"macos-button-toolbar\": isMac && electron},\n    {\"button-ghost\": !(isMac && electron)}\n);\n\nconst WindowTitleBar = ({state, dispatch}) => (\n    <header\n        className={classNames(\n            \"app__header\",\n            \"double-click-control\",\n            {\"traffic-light-padding\": electron && isMac && !state.isFullScreen}\n        )}\n        onDoubleClick={macOSDoubleClick}\n    >\n        <div>\n            <IfElectron onlyWin>\n                <span\n                    style={{\n                        alignItems: \"center\",\n                        display: \"inline-flex\",\n                        marginLeft: \"4px\",\n                        marginRight: \"8px\"}\n                    }\n                >\n                    <img src={logo} alt=\"\" height=\"16\" width=\"16\" />\n                </span>\n            </IfElectron>\n            <button\n                className={toolbarClasses}\n                onClick={() => dispatch({isSidebarOpen: !state.isSidebarOpen})}\n            >\n                <Icons.Sidebar/>\n                <VisuallyHidden>Toggle sidebar</VisuallyHidden>\n            </button>\n            <button\n                className={toolbarClasses}\n                onClick={() => dispatch({isDialogOpen: true})}\n            >\n                <Icons.Help />\n                <VisuallyHidden>About Coronate</VisuallyHidden>\n            </button>\n        </div>\n        <div\n            className={classNames(\n                \"body-20\",\n                \"double-click-control\",\n                {\"disabled\": state.isBlur}\n            )}\n            style={{\n                left: \"0\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                position: \"absolute\",\n                right: \"0\",\n                textAlign: \"center\",\n                width: \"50%\"\n            }}\n        >\n            {formatTitle(state.title)}\n        </div>\n        <IfElectron onlyWin><WindowsControls state={state}/></IfElectron>\n    </header>\n);\nWindowTitleBar.propTypes = {\n    dispatch: PropTypes.func,\n    state: PropTypes.object\n};\n\nexport function Window({children, className, ...rest}) {\n    const [state, dispatch] = useReducer(windowReducer, initialWinState);\n    useEffect(\n        function setDocumentTitle() {\n            document.title = formatTitle(state.title);\n        },\n        [state.title]\n    );\n    useEffect(\n        function addEventListeners() {\n            ifElectron(function () {\n                const win = electron.remote.getCurrentWindow();\n                // This will ensure that stale event listeners aren't persisted.\n                // That typically won't be relevant to production builds, but\n                // in a dev environment, where the page reloads frequently,\n                // stale listeners will accumulate. Note that this can cause\n                // side effects if other listeners are added elsewhere.\n                function unregisterListeners() {\n                    win.removeAllListeners(\"enter-full-screen\");\n                    win.removeAllListeners(\"leave-full-screen\");\n                    win.removeAllListeners(\"blur\");\n                    win.removeAllListeners(\"focus\");\n                    win.removeAllListeners(\"maximize\");\n                    win.removeAllListeners(\"unmaximize\");\n                }\n                unregisterListeners();\n                win.on(\n                    \"enter-full-screen\",\n                    () => dispatch({isFullScreen: true}));\n                win.on(\n                    \"leave-full-screen\",\n                    () => dispatch({isFullScreen: false})\n                );\n                win.on(\"maximize\", () => dispatch({isMaximized: true}));\n                win.on(\"unmaximize\", () => dispatch({isMaximized: false}));\n                win.on(\"blur\", () => dispatch({isBlur: true}));\n                win.on(\"focus\", () => dispatch({isBlur: false}));\n                dispatch({\n                    isBlur: !win.isFocused(),\n                    isFullScreen: win.isFullScreen(),\n                    isMaximized: win.isMaximized()\n                });\n                // I don't think this ever really fires, but can it hurt?\n                return unregisterListeners;\n            });\n        },\n        []\n    );\n    return (\n        <div\n            {...rest}\n            className={classNames(\n                className,\n                {\"open-sidebar\": state.isSidebarOpen},\n                {\"closed-sidebar\": !state.isSidebarOpen},\n                {\"window-blur\": state.isBlur},\n                {\"isWindows\": isWin},\n                {\"isMacOS\": isMac},\n                {\"isElectron\": electron}\n            )}\n        >\n            <WindowTitleBar state={state} dispatch={dispatch} />\n            <WindowContext.Provider\n                value={{winDispatch: dispatch, winState: state}}\n            >\n                {children}\n            </WindowContext.Provider>\n            <Dialog\n                isOpen={state.isDialogOpen}\n                onDismiss={() => dispatch({isDialogOpen: false})}\n                style={{backgroundColor: \"var(--grey-20)\"}}\n            >\n                <button\n                    className=\"button-micro\"\n                    onClick={() => dispatch({isDialogOpen: false})}\n                >\n                    Close\n                </button>\n                <About/>\n            </Dialog>\n        </div>\n    );\n}\nWindow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string\n};\n\nexport function WindowBody({children, footer, sidebar, footerProps = {}}) {\n    return (\n        <div className={classNames(\"winBody\", {\"winBody-hasFooter\": footer})}>\n            <div className=\"win__sidebar\">\n                {sidebar || <Sidebar />}\n            </div>\n            <div className=\"win__content\">\n                {children}\n            </div>\n            {footer && (\n                <footer\n                    {...footerProps}\n                    className={classNames(\"win__footer\", footerProps.className)}\n                >\n                    {footer}\n                </footer>\n            )}\n        </div>\n    );\n}\nWindowBody.propTypes = {\n    children: PropTypes.node.isRequired,\n    footer: PropTypes.node,\n    footerProps: PropTypes.object,\n    sidebar: PropTypes.node\n};\n","import React, {useEffect, useReducer} from \"react\";\nimport {curry, filter, symmetricDifference} from \"ramda\";\nimport {\n    getPlayerMaybe,\n    isRoundComplete,\n    rounds2Matches\n    // types\n} from \"../../../data-types\";\nimport {playerStore, tourneyStore} from \"../../../hooks/db\";\nimport PropTypes from \"prop-types\";\nimport playersReducer from \"./players-reducer\";\n// import t from \"tcomb\";\nimport tourneyReducer from \"./tournament-reducer\";\nimport {useLoadingCursor} from \"../../../hooks\";\nimport {useWindowContext} from \"../../../components/window\";\n\nfunction getAllPlayerIdsFromMatches(matchList) {\n    const allPlayers = matchList.reduce(\n        (acc, {playerIds}) => acc.concat(playerIds),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\nfunction calcNumOfRounds(playerCount) {\n    const roundCount = Math.ceil(Math.log2(playerCount));\n    // If there aren't any players then `roundCount` === `-Infinity`.\n    return Number.isFinite(roundCount) ? roundCount : 0;\n}\n\nconst emptyTourney = {\n    name: \"\",\n    playerIds: [],\n    roundList: []\n};\nconst loadReducer = (oldState, newState) => ({...oldState, ...newState});\n// Usually I would be more comfortable with `dbError: false` instead of the\n// opposite, `noDbError: true`, since the latter leads to awkward logical\n// statements like \"if there is not no db error.\" However, `noDbError` is\n// consistent with the rest of this state's properties in that `true` means\n// something is good, and `false` means something isn't. It allows shortcuts\n// like calling `.includes(false)` on the values.\nconst initLoading = {noDbError: true, players: false, tourney: false};\n\nexport default function TournamentData({children, tourneyId}) {\n    const [tourney, tourneyDispatch] = useReducer(tourneyReducer, emptyTourney);\n    const {name, playerIds, roundList} = tourney;\n    const [players, playersDispatch] = useReducer(playersReducer, {});\n    const [isLoaded, loadedDispatch] = useReducer(loadReducer, initLoading);\n    useLoadingCursor(isLoaded.players && isLoaded.tourney);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            if (!name) {\n                return;\n            }\n            winDispatch({title: name});\n            return () => winDispatch({title: \"\"});\n        },\n        [name, winDispatch]\n    );\n    useEffect(\n        function initTourneyFromDb() {\n            let didCancel = false;\n            (async function () {\n                const value = await tourneyStore.getItem(tourneyId);\n                // console.log(\"loaded:\", tourneyId);\n                if (!value) {\n                    loadedDispatch({noDbError: false});\n                } else if(!didCancel) {\n                    tourneyDispatch({state: value || {}, type: \"SET_STATE\"});\n                    loadedDispatch({tourney: true});\n                }\n            }());\n            return () => didCancel = true;\n        },\n        [tourneyId]\n    );\n    useEffect(\n        function hydrateTourneyPlayersFromDb() {\n            // Don't run this without loading the tourney first. Otherwise, it\n            // will interpret the placeholder `roundList` data as meaning there\n            // are no active players and load an empty object.\n            if (!isLoaded.tourney) {\n                return;\n            }\n            // Include players who have played matches but left the tournament,\n            // as well as players who are registered but havne't played yet.\n            const allTheIds = getAllPlayerIdsFromMatches(\n                rounds2Matches(roundList)\n            ).concat(\n                playerIds\n            );\n            // If there are no ids, update the player state and exit early.\n            if (allTheIds.length === 0) {\n                // This check prevents an infinite loop & memory leak.\n                if (Object.keys(players).length !== 0) {\n                    playersDispatch({state: {}, type: \"LOAD_STATE\"});\n                }\n                loadedDispatch({players: true});\n                return;\n            }\n            let didCancel = false;\n            (async function () {\n                const values = await playerStore.getItems(allTheIds);\n                // This safeguards against trying to fetch dummy IDs or IDs from\n                // deleted players. If we updated without this condition, then\n                // this `useEffect` would trigger an infinite loop and a memory\n                // leak.\n                const unChangedPlayers = symmetricDifference(\n                    Object.keys(values),\n                    Object.keys(players)\n                );\n                // console.log(\n                //     \"unchanged players:\",\n                //     Object.keys(unChangedPlayers).length\n                // );\n                if (unChangedPlayers.length !== 0 && !didCancel) {\n                    // console.log(\"hydrated player data\");\n                    playersDispatch({state: values, type: \"LOAD_STATE\"});\n                    loadedDispatch({players: true});\n                }\n            }());\n            return () => didCancel = true;\n        },\n        [roundList, players, playerIds, isLoaded.tourney]\n    );\n    useEffect(\n        function saveTourneyToDb() {\n            if (\n                !isLoaded.tourney\n                // The tourney length is 0 when it wasn't found in the DB\n                || Object.keys(tourney).length === 0\n                // I don't know why, but this happens sometimes with a bad URL\n                || tourneyId !== tourney.id\n            ) {\n                return;\n            }\n            tourneyStore.setItem(tourneyId, tourney).catch(function (error) {\n                console.error(\"error saving tourney:\", tourneyId, error);\n            });\n        },\n        [tourneyId, tourney, isLoaded.tourney]\n    );\n    useEffect(\n        function savePlayersToDb() {\n            if (!isLoaded.players) {\n                return;\n            }\n            playerStore.setItems(players);\n            // (async function () {\n            //     const values = await playerStore.setItems(players);\n            //     console.log(\n            //         \"saved player changes to DB:\",\n            //         Object.keys(values).length\n            //     );\n            // }());\n        },\n        [players, isLoaded.players]\n    );\n    const getPlayer = curry(getPlayerMaybe)(players);\n    // `players` includes players in past matches who may have left\n    // `activePlayers` is only players to be matched in future matches.\n    // Use Ramda's `filter` because it can filter objects.\n    const activePlayers = filter(({id}) => playerIds.includes(id), players);\n    const roundCount = calcNumOfRounds(Object.keys(activePlayers).length);\n    const isItOver = roundList.length >= roundCount;\n    const isNewRoundReady = (\n        roundList.length === 0\n        ? true\n        : isRoundComplete(roundList, activePlayers, roundList.length - 1)\n    );\n    if (!isLoaded.noDbError) {\n        return <div>Error: tournament not found.</div>;\n    }\n    if (Object.values(isLoaded).includes(false)) {\n        return <div>Loading...</div>;\n    }\n    return children({\n        activePlayers,\n        getPlayer,\n        isItOver,\n        isNewRoundReady,\n        players,\n        playersDispatch,\n        roundCount,\n        tourney,\n        tourneyDispatch\n    });\n}\nTournamentData.propTypes = {\n    children: PropTypes.func.isRequired,\n    tourneyId: PropTypes.string.isRequired\n};\n\nconst TournamentType = PropTypes.shape({\n    activePlayers: PropTypes.object,\n    getPlayer: PropTypes.func,\n    isItOver: PropTypes.bool,\n    isNewRoundReady: PropTypes.bool,\n    players: PropTypes.object,\n    playersDispatch: PropTypes.func,\n    roundCount: PropTypes.number,\n    tourney: PropTypes.object,\n    tourneyDispatch: PropTypes.func\n});\nexport {TournamentType};\n","import React from \"react\";\nimport {Panel, PanelContainer} from \"../../components/utility\";\n// import PropTypes from \"prop-types\";\nimport RoundTable from \"./round/round-table\";\nimport {ScoreTable} from \"./scores\";\nimport {TournamentType} from \"./tournament-data\";\n\nexport default function Status({tournament}) {\n    const {tourney, getPlayer} = tournament;\n    const lastRound = (function () {\n        if (tourney.roundList.length === 0) {\n            return <p>No rounds played yet.</p>;\n        }\n        const lastRoundId = tourney.roundList.length - 1;\n        if (tourney.roundList[lastRoundId].length === 0) {\n            return (\n                <p>Matched players in the current round will be shown here.</p>\n            );\n        }\n        return (\n            <RoundTable\n                roundId={lastRoundId}\n                tournament={tournament}\n                compact\n            />\n        );\n    }());\n    return (\n        <>\n            <h2 style={{textAlign: \"center\"}}>Tournament status</h2>\n            <PanelContainer\n                style={{justifyContent: \"center\"}}\n            >\n                <Panel>\n                    {lastRound}\n                </Panel>\n                <Panel>\n                    <ScoreTable\n                        getPlayer={getPlayer}\n                        title=\"Rankings\"\n                        tourney={tourney}\n                        compact\n                    />\n                </Panel>\n            </PanelContainer>\n        </>\n    );\n}\nStatus.propTypes = {\n    tournament: TournamentType\n};\n","import Crosstable from \"./crosstable\";\nimport NotFound from \"../../components/404\";\nimport {Notification} from \"../../components/utility\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport {Router} from \"@reach/router\";\nimport Scores from \"./scores\";\nimport Setup from \"./setup\";\nimport Sidebar from \"./sidebar\";\nimport Status from \"./status\";\nimport TournamentData from \"./tournament-data\";\nimport {WindowBody} from \"../../components/window\";\n\nfunction Footer({tournament}) {\n    const {roundCount, tourney, isItOver, isNewRoundReady} = tournament;\n    const {roundList} = tourney;\n    const [tooltipText, isTooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"Round in progress.\",\n                false\n            ];\n        } else if (isItOver) {\n            return [\"All rounds have completed.\", false];\n        } else {\n            return [\"Ready to begin a new round.\", true];\n        }\n    }());\n    return (\n        <>\n            <label\n                className=\"win__footer-block\"\n                style={{display: \"inline-block\"}}\n            >\n                Rounds:{\" \"}\n                {roundList.length} <small>out of</small> {roundCount}\n            </label>\n            {/* <meter\n                id=\"round-progress\"\n                max={roundCount}\n                // optimum={roundCount}\n                // low={roundCount - 1}\n                style={{width: \"200px\"}}\n                title={roundList.length + \"/\" + roundCount}\n                value={roundList.length}\n            >\n                {roundList.length}/{roundCount}\n            </meter> */}\n            <hr className=\"win__footer-divider\" />\n            <Notification\n                success={isTooltipWarn}\n                tooltip={tooltipText}\n                style={{\n                    backgroundColor: \"transparent\",\n                    color: \"initial\",\n                    display: \"inline-flex\",\n                    margin: \"0\",\n                    minHeight: \"initial\"\n                }}\n                className=\"win__footer-block\"\n            >\n                {tooltipText}\n            </Notification>\n        </>\n    );\n}\nFooter.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n\nexport default function Tournament({tourneyId, navigate}) {\n    return (\n        <TournamentData tourneyId={tourneyId}>\n            {(tournament) =>\n                <WindowBody\n                    sidebar={\n                        <Sidebar navigate={navigate} tournament={tournament}/>\n                    }\n                    footer={<Footer tournament={tournament} />}\n                >\n                    <Router>\n                        <PlayerSelect path=\"/\" tournament={tournament} />\n                        <Status path=\"status\" tournament={tournament} />\n                        <Crosstable path=\"crosstable\" tournament={tournament} />\n                        <Scores path=\"scores\" tournament={tournament}/>\n                        <Round path=\"round/:roundId\" tournament={tournament}/>\n                        <Setup path=\"setup\" tournament={tournament}/>\n                        <NotFound default />\n                    </Router>\n                </WindowBody>\n            }\n        </TournamentData>\n    );\n}\nTournament.propTypes = {\n    navigate: PropTypes.func,\n    tourneyId: PropTypes.string\n};\n","import {DateFormat, SortLabel} from \"../../components/utility\";\nimport React, {useEffect, useState} from \"react\";\nimport {WindowBody, useWindowContext} from \"../../components/window\";\nimport {useAllTournamentsDb, useSortedTable} from \"../../hooks\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport default function TournamentList() {\n    const [tourneys, dispatch] = useAllTournamentsDb();\n    const [sorted, sortDispatch] = useSortedTable(\n        Object.values(tourneys),\n        \"date\",\n        true\n    );\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Tournament list\"});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch]\n    );\n    useEffect(\n        function () {\n            sortDispatch({table: Object.values(tourneys)});\n        },\n        [tourneys, sortDispatch]\n    );\n\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({name: newTourneyName, type: \"ADD_TOURNEY\"});\n        setNewTourneyName(\"\");\n        setIsFormOpen(false);\n    }\n\n    function deleteTournament(id, name) {\n        const message = \"Are you sure you want to delete “\" + name + \"”?\";\n        if (window.confirm(message)) {\n            dispatch({id, type: \"DEL_ITEM\"});\n        }\n    }\n\n    return (\n        <WindowBody>\n            <div className=\"content-area\">\n                <div className=\"toolbar toolbar__left\">\n                    <button\n                        onClick={() => setIsFormOpen(true)}\n                    >\n                        <Icons.Plus /> Add tournament\n                    </button>\n                </div>\n                {(Object.keys(tourneys).length > 0)\n                ?\n                <table>\n                    <caption>Tournament list</caption>\n                    <thead>\n                        <tr>\n                            <th>\n                                <SortLabel\n                                    data={sorted}\n                                    dispatch={sortDispatch}\n                                    sortKey=\"name\"\n                                >\n                                    Name\n                                </SortLabel>\n                            </th>\n                            <th>\n                                <SortLabel\n                                    data={sorted}\n                                    dispatch={sortDispatch}\n                                    sortKey=\"date\"\n                                >\n                                    Date\n                                </SortLabel>\n                            </th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {sorted.table.map(({date, id, name}) =>\n                            <tr key={id} className=\"buttons-on-hover\">\n                                <td>\n                                    <Link to={id}>\n                                        {name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <DateFormat date={date} />\n                                </td>\n                                <td>\n                                    <button\n                                        aria-label={`Delete “${name}”`}\n                                        className=\"danger button-ghost\"\n                                        title={`Delete “${name}”`}\n                                        onClick={\n                                            () => deleteTournament(id, name)\n                                        }\n                                    >\n                                        <Icons.Trash />\n                                    </button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                : <p>No tournaments added yet.</p>\n                }\n                <Dialog\n                    isOpen={isFormOpen}\n                    onDismiss={() => setIsFormOpen(false)}\n                >\n                    <button\n                        className=\"button-micro\"\n                        onClick={() => setIsFormOpen(false)}\n                    >\n                        Close\n                    </button>\n                    <form onSubmit={makeTournament}>\n                        <fieldset>\n                            <legend>Make a new tournament</legend>\n                            <label htmlFor=\"tourney-name\">Name:</label>\n                            <input\n                                id=\"tourney-name\"\n                                name=\"tourney-name\"\n                                placeholder=\"tournament name\"\n                                required={true}\n                                type=\"text\"\n                                value={newTourneyName}\n                                onChange={updateNewName}\n                            />{\" \"}\n                            <input\n                                className=\"button-primary\"\n                                type=\"submit\"\n                                value=\"Create\"\n                            />\n                        </fieldset>\n                    </form>\n                </Dialog>\n            </div>\n        </WindowBody>\n    );\n}\n","import Crosstable from \"./crosstable\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport Scores from \"./scores\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./tournament-list\";\n\nconst TournamentIndex = ({children}) => (\n    <div className=\"passthrough\">\n        {children}\n    </div>\n);\nTournamentIndex.propTypes = {\n    children: PropTypes.node\n};\n\nexport default TournamentIndex;\nexport {Crosstable, PlayerSelect, Round, Scores, Tournament, TournamentList};\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default Object.freeze({\n    options: fromJSON(options, types.db.Options),\n    players: fromJSON(players, types.db.Players),\n    tournaments: fromJSON(tournaments, types.db.Tourneys)\n});\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport fromJSON from \"tcomb/lib/fromJSON\";\nimport classNames from \"classnames\";\nimport {WindowBody, useWindowContext} from \"../components/window\";\nimport Icons from \"../components/icons\";\nimport {DateFormat} from \"../components/utility\";\nimport demoData from \"../demo-data\";\nimport testData from \"../test-data\";\nimport {types} from \"../data-types\";\nimport styles from \"./options.module.css\";\nimport {\n    useAllPlayersDb,\n    useAllTournamentsDb,\n    useOptionsDb\n} from \"../hooks\";\n\nfunction invalidAlert() {\n    window.alert(\n        \"That data is invalid! A more helpful error message could not be \"\n        + \"written yet.\"\n    );\n}\n\nfunction LastBackupDate({date}) {\n    if (date.getTime() === 0) {\n        return \"never\";\n    }\n    return <DateFormat date={date} showTime/>;\n}\nLastBackupDate.propTypes = {\n    date: PropTypes.instanceOf(Date).isRequired\n};\n\nexport default function Options() {\n    const [tournaments, tourneysDispatch] = useAllTournamentsDb();\n    const [players, playersDispatch] = useAllPlayersDb();\n    const [text, setText] = useState(\"\");\n    const [options, optionsDispatch] = useOptionsDb();\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Options\"});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch]\n    );\n    // memoize this so the `useEffect` hook syncs with the correct states\n    const exportData = useMemo(\n        () => ({options, players, tournaments}),\n        [options, tournaments, players]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    function loadData(data) {\n        tourneysDispatch({\n            state: fromJSON(data.tournaments, types.db.Tourneys),\n            type: \"LOAD_STATE\"\n        });\n        optionsDispatch({\n            state: fromJSON(data.options, types.db.Options),\n            type: \"LOAD_STATE\"\n        });\n        playersDispatch({\n            state: fromJSON(data.players, types.db.Players),\n            type: \"LOAD_STATE\"\n        });\n        window.alert(\"Data loaded!\");\n    }\n    function handleText(event) {\n        event.preventDefault();\n        try {\n            const importData = JSON.parse(text);\n            loadData(importData);\n        } catch {\n            invalidAlert();\n        }\n    }\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        reader.onload = function (ev) {\n            const data = ev.target.result;\n            try {\n                const importData = JSON.parse(data);\n                loadData(importData);\n            } catch {\n                invalidAlert();\n            }\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    function reloadDemoData(event) {\n        event.preventDefault();\n        loadData(demoData);\n    }\n    function loadTestData(event) {\n        event.preventDefault();\n        loadData(testData);\n    }\n    return (\n        <WindowBody>\n            <div className={classNames(styles.options, \"content-area\")}>\n                <h2>Bye settings</h2>\n                <form>\n                    <p className=\"caption-30\">\n                        Select the default score for a bye round.\n                    </p>\n                    <label className=\"monospace body-30\">\n                        1{\" \"}\n                        <input\n                            checked={options.byeValue === 1}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 1\n                            })}\n                        />\n                    </label>\n                    <label className=\"monospace body-30\">\n                        ½{\" \"}\n                        <input\n                            checked={options.byeValue === 0.5}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 0.5\n                            })}\n                        />\n                    </label>\n                </form>\n                <h2>Manage data</h2>\n                <p className=\"caption-20\">\n                    Last export: <LastBackupDate date={options.lastBackup}/>\n                </p>\n                <p>\n                    <a\n                        download=\"coronate.json\"\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                        onClick={() => optionsDispatch({\n                            type: \"SET_OPTION\",\n                            option: \"lastBackup\",\n                            value: new Date()\n                        })}\n                    >\n                        <Icons.Download /> Export all data\n                    </a>\n                </p>\n                <label htmlFor=\"file\">Load data file:</label>\n                <input\n                    id=\"file\"\n                    name=\"file\"\n                    type=\"file\"\n                    onChange={handleFile}\n                />\n                <h2>Danger zone</h2>\n                <p className=\"caption-30\">\n                    I hope you know what you're doing...\n                </p>\n                <button onClick={reloadDemoData}>\n                    Reset demo data (this erases everything else)\n                </button>\n                {\" \"}\n                {process.env.NODE_ENV !== \"production\" &&\n                    <button onClick={loadTestData}>Load testing data</button>\n                }\n                <h3>Advanced: manually edit data</h3>\n                <form onSubmit={handleText}>\n                    <textarea\n                        className=\"json\"\n                        cols={50}\n                        name=\"playerdata\"\n                        rows={25}\n                        spellCheck={false}\n                        value={text}\n                        onChange={(event) => setText(event.currentTarget.value)}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </form>\n            </div>\n        </WindowBody>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport NewPlayer from \"../../components/new-player\";\nimport PropTypes from \"prop-types\";\nimport {SortLabel} from \"../../components/utility\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport styles from \"./index.module.css\";\nimport {useWindowContext} from \"../../components/window\";\n\nexport default function PlayerList({\n    sorted,\n    sortDispatch,\n    players,\n    playersDispatch,\n    optionsDispatch\n}) {\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Players\"});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch]\n    );\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        const message = \"Are you sure you want to delete \"\n            + players[id].firstName + \" \" + players[id].lastName + \"?\";\n        if (window.confirm(message)) {\n            playersDispatch({id, type: \"DEL_ITEM\"});\n            optionsDispatch({id, type: \"DEL_AVOID_SINGLE\"});\n        }\n    };\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar toolbar__left\">\n                <button onClick={() => setIsFormOpen(true)}>\n                    <Icons.UserPlus /> Add a new player\n                </button>\n            </div>\n            <table className={styles.table}>\n                <caption>Player roster</caption>\n                <thead>\n                    <tr>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"firstName\"\n                            >\n                                Name\n                            </SortLabel>\n                        </th>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"rating\"\n                            >\n                                Rating\n                            </SortLabel>\n                        </th>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"matchCount\"\n                            >\n                                Matches\n                            </SortLabel>\n                        </th>\n                        <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                    </tr>\n                </thead>\n                <tbody className=\"content\">\n                    {sorted.table.map((p) =>\n                        <tr key={p.id}  className=\"buttons-on-hover\">\n                            <td className=\"table__player\">\n                                <Link to={p.id}>\n                                    {p.firstName} {p.lastName}\n                                </Link>\n                            </td>\n                            <td className=\"table__number\">\n                                {p.rating}\n                            </td>\n                            <td className=\"table__number\">\n                                {p.matchCount}\n                            </td>\n                            <td>\n                                <button\n                                    className=\"danger button-ghost\"\n                                    onClick={\n                                        (event) => delPlayer(event, p.id)\n                                    }\n                                >\n                                    <Icons.Trash />\n                                    <VisuallyHidden>\n                                        Delete {p.firstName} {p.lastName}\n                                    </VisuallyHidden>\n                                </button>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <Dialog isOpen={isFormOpen} onDismiss={() => setIsFormOpen(false)}>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsFormOpen(false)}\n                >\n                    Close\n                </button>\n                <NewPlayer dispatch={playersDispatch} />\n            </Dialog>\n        </div>\n    );\n}\nPlayerList.propTypes = {\n    optionsDispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired,\n    sortDispatch: PropTypes.func.isRequired,\n    sorted: PropTypes.object.isRequired\n};\n","import React, {useEffect, useState} from \"react\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport {avoidPairReducer} from \"../../pairing-scoring\";\nimport numeral from \"numeral\";\nimport {ratings} from \"../../pairing-scoring\";\nimport styles from \"./index.module.css\";\nimport {useWindowContext} from \"../../components/window\";\n\nfunction PlayerProfile({\n    playerId,\n    players,\n    playersDispatch,\n    options,\n    optionsDispatch\n}) {\n    const player = players[playerId];\n    const playerName = (player) ? player.firstName + \" \" + player.lastName : \"\";\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Profile for \" + playerName});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch, playerName]\n    );\n    const avoidObj = options.avoidPairs.reduce(avoidPairReducer, {});\n    const singAvoidList = (avoidObj[playerId]) ? avoidObj[playerId] : [];\n    const unAvoided = Object.keys(players).filter(\n        (id) => !singAvoidList.includes(id) && id !== playerId\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    function avoidAdd(event) {\n        event.preventDefault();\n        optionsDispatch({\n            pair: [playerId, selectedAvoider],\n            type: \"ADD_AVOID_PAIR\"\n        });\n        // Reset the selected avoider to the first on the list, but check to\n        // make sure they weren't they weren't the first.\n        const newSelected = (\n            unAvoided[0] !== selectedAvoider\n            ? unAvoided[0]\n            : unAvoided[1]\n        );\n        setSelectedAvoider(newSelected);\n    }\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playersDispatch({\n            firstName: firstName.value,\n            id: playerId,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value),\n            type: \"SET_PLAYER\"\n        });\n    }\n    function handleAvoidChange(event) {\n        setSelectedAvoider(event.target.value);\n    }\n    if (!player) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <div className={styles.playerInfo + \" content-area\"}>\n            <Link to=\"..\"><Icons.ChevronLeft /> Back</Link>\n            <h2>\n                Profile for {player.firstName} {player.lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        defaultValue={player.firstName}\n                        name=\"firstName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        defaultValue={player.lastName}\n                        name=\"lastName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"matchCount\">Matches played</label>\n                    <input\n                        defaultValue={String(player.matchCount)}\n                        name=\"matchCount\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        defaultValue={String(player.rating)}\n                        name=\"rating\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"Kfactor\">K factor</label>\n                    <input\n                        name=\"kfactor\"\n                        type=\"number\"\n                        disabled\n                        value={\n                            numeral(\n                                ratings.getKFactor(player.matchCount)\n                            ).format(\"00\")\n                        }\n                        readOnly\n                    />\n                </p>\n            </form>\n            <h3>Players to avoid</h3>\n            <ul>\n                {singAvoidList.map((pId) =>\n                    <li key={pId}>\n                        {players[pId].firstName} {players[pId].lastName}\n                        <button\n                            arial-label={`Remove \n${players[pId].firstName} ${players[pId].lastName} from avoid list.`}\n                            className=\"danger button-ghost\"\n                            title={`Remove ${players[pId].firstName} \n${players[pId].lastName}`}\n                            onClick={() =>\n                                optionsDispatch({\n                                    pair: [playerId, pId],\n                                    type: \"DEL_AVOID_PAIR\"\n                                })\n                            }\n                        >\n                            <Icons.Trash />\n                        </button>\n                    </li>\n                )}\n                {singAvoidList.length === 0 &&\n                    <li>None</li>\n                }\n            </ul>\n            <form onSubmit={avoidAdd}>\n                <label htmlFor=\"avoid-select\">\n                    Select a new player to avoid.\n                </label>\n                <select\n                    id=\"avoid-select\"\n                    onBlur={handleAvoidChange}\n                    onChange={handleAvoidChange}\n                    value={selectedAvoider}\n                >\n                    {unAvoided.map((pId) => (\n                        <option key={pId} value={pId}>\n                            {players[pId].firstName} {players[pId].lastName}\n                        </option>\n                    ))}\n                </select>{\" \"}\n                <input className=\"button-micro\" type=\"submit\" value=\"Add\" />\n            </form>\n        </div>\n    );\n}\nPlayerProfile.propTypes = {\n    options: PropTypes.object.isRequired,\n    optionsDispatch: PropTypes.func.isRequired,\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired\n};\n\nexport default function PlayerProfileWrapper(props) {\n    if (!props.players[props.playerId]) {\n        return <div>Error: player profile not found.</div>;\n    } else {\n        return <PlayerProfile {...props} />;\n    }\n}\nPlayerProfileWrapper.propTypes = {\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired\n};\n","import React, {useEffect} from \"react\";\nimport {useAllPlayersDb, useOptionsDb, useSortedTable} from \"../../hooks\";\nimport PlayerList from \"./player-list\";\nimport PlayerProfile from \"./player-profile\";\nimport {Router} from \"@reach/router\";\nimport {WindowBody} from \"../../components/window\";\n\nexport default function Players() {\n    const [players, playersDispatch] = useAllPlayersDb();\n    const [sorted, sortDispatch] = useSortedTable(\n        Object.values(players),\n        \"firstName\",\n        false\n    );\n    useEffect(\n        function () {\n            sortDispatch({table: Object.values(players)});\n        },\n        [players, sortDispatch]\n    );\n    const [options, optionsDispatch] = useOptionsDb();\n    const childProps = {options, optionsDispatch, players, playersDispatch};\n    return (\n        <WindowBody>\n            <Router basepath=\"players\">\n                <PlayerList\n                    path=\"/\"\n                    sorted={sorted}\n                    sortDispatch={sortDispatch}\n                    {...childProps}\n                />\n                <PlayerProfile path=\":playerId\" {...childProps} />\n            </Router>\n        </WindowBody>\n    );\n}\nPlayers.propTypes = {};\n\nexport {PlayerProfile, PlayerList};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {ifElectronOpen} from \"../../electron-utils\";\nimport styles from \"./index.module.css\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/chessahoochee\";\n\nconst Caution = ({className, ...rest}) => (\n    <aside\n        {...rest}\n        className={classNames(styles.caution, \"body-20\", className)}\n    >\n        <p className={styles.caution__text}>\n            This is beta software. Want to help make it better? Check out the\n            {\" \"}\n            <span role=\"img\" aria-hidden>👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href={GITHUB_URL}\n                onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n\n            >\n                Git repository\n            </a>.\n        </p>\n    </aside>\n);\nCaution.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Caution;\n","import Caution from \"../components/caution\";\nimport Icons from \"../components/icons\";\nimport {Notification} from \"../components/utility\";\nimport React from \"react\";\nimport {WindowBody} from \"../components/window\";\nimport {ifElectronOpen} from \"../electron-utils\";\nimport {loadDemoDB} from \"../hooks/db\";\nimport logo from \"../icon-min.svg\";\nimport styles from \"./splash.module.css\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/chessahoochee\";\nconst LICENSE_URL = (\n    \"https://github.com/johnridesabike/chessahoochee/blob/master/LICENSE\"\n);\nconst ISSUES_URL = \"https://github.com/johnridesabike/chessahoochee/issues/new\";\n\nconst Splash = () => (\n    <WindowBody footer={<Caution />} footerProps={{style: {border: \"none\"}}}>\n        <div className={styles.splash}>\n            <aside className={styles.hint}>\n                <ol>\n                    <li>\n                        <button\n                            className=\"button-primary\"\n                            onClick={loadDemoDB}\n                        >\n                            Click here to load the demo data\n                        </button>{\" \"}\n                        (optional)\n                    </li>\n                    <li>\n                        <Icons.ArrowLeft /> Select a menu item.\n                    </li>\n                    <li>\n                        Start creating your tournaments!\n                    </li>\n                </ol>\n                <Notification warning>\n                    If you experience any glitches or crashes,<br />\n                    clear your browser cache and try again.\n                </Notification>\n            </aside>\n            <div className={styles.title}>\n                <div className={styles.titleIcon}>\n                    <img src={logo} alt=\"\" height=\"96\" width=\"96\" />\n                </div>\n                <div className={styles.titleText}>\n                    <h1 className=\"title\">\n                        Coronate\n                    </h1>\n                    <p className={styles.subtitle + \" caption-30\"}>\n                        a chess tournament app\n                    </p>\n                </div>\n            </div>\n            <footer className={\"body-20 \" + styles.footer}>\n                <div style={{textAlign: \"left\"}}>\n                    <p>\n                        Copyright &copy; 2019 John Jackson.\n                    </p>\n                    <p>\n                        Coronate is free software.<br/>\n                        <a\n                            href={GITHUB_URL}\n                            onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n                        >\n                            Source code is available\n                        </a>\n                        {\" \"}under the{\" \"}\n                        <a\n                            href={LICENSE_URL}\n                            onClick={(e) => ifElectronOpen(e, LICENSE_URL)}\n                        >\n                            AGPL v3.0 license\n                        </a>.\n                    </p>\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                    <p>\n                        <a\n                            href={ISSUES_URL}\n                            onClick={(e) => ifElectronOpen(e, ISSUES_URL)}\n                        >\n                            Suggestions and bug reports are welcome.\n                        </a>\n                    </p>\n                    <p>\n                        Built with JavaScript and{\" \"}\n                        <a\n                            href=\"https://reactjs.org/\"\n                            onClick={(e) => ifElectronOpen(\n                                e,\n                                \"https://reactjs.org/\"\n                            )}\n                        >\n                            React\n                        </a>.{\" \"}\n                        <span style={{fontSize: \"16px\"}}>\n                            <Icons.Javascript /> <Icons.React />\n                        </span>\n                    </p>\n                </div>\n            </footer>\n        </div>\n    </WindowBody>\n);\nexport default Splash;\n","import \"./side-effects\";\nimport {\n    LocationProvider,\n    Router,\n    createHistory\n} from \"@reach/router\";\nimport TournamentIndex, {\n    Tournament,\n    TournamentList\n} from \"./pages/tournament\";\nimport NotFound from \"./components/404\";\nimport Options from \"./pages/options\";\nimport Players from \"./pages/players\";\nimport React from \"react\";\nimport Splash from \"./pages/splash\";\nimport {Window} from \"./components/window\";\nimport createHashSource from \"hash-source\";\n\n// These are needed for deploying to GitHub pages.\nconst source = createHashSource();\nconst history = createHistory(source);\n\nfunction App() {\n    return (\n        <LocationProvider history={history}>\n            <Window className=\"app\">\n                <main className=\"app__main\">\n                    <Router>\n                        <Splash path=\"/\" />\n                        <TournamentIndex path=\"tourneys\">\n                            <TournamentList path=\"/\" />\n                            <Tournament path=\":tourneyId/*\" />\n                        </TournamentIndex>\n                        <Players path=\"players/*\" />\n                        <Options path=\"options\" />\n                        <NotFound default />\n                    </Router>\n                </main>\n            </Window>\n        </LocationProvider>\n    );\n}\n\nexport default App;\n","import \"./styles\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport React, {StrictMode} from \"react\";\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"tournament_header__3XvP5\",\"contentFrame\":\"tournament_contentFrame__3ct63\",\"table\":\"tournament_table__1H60d\",\"topHeader\":\"tournament_topHeader__t_tB_\",\"row\":\"tournament_row__2LSFL\",\"compact\":\"tournament_compact__2uTHd\",\"playerName\":\"tournament_playerName__2dXZ_\",\"rank\":\"tournament_rank__2_u9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"winnerSelect\":\"round_winnerSelect__SDt38\",\"table\":\"round_table__1x8KG\",\"tbody\":\"round_tbody__1pAwr\",\"rowId\":\"round_rowId__2gYfm\",\"controls\":\"round_controls__1XYFl\",\"matchResult\":\"round_matchResult__1tb7r\",\"playerResult\":\"round_playerResult__3TMo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"windows-controls_container__1-7Ur\",\"winButton\":\"windows-controls_winButton__2s6YB\",\"close\":\"windows-controls_close__3i226\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splash\":\"splash_splash__2ZYEI\",\"hint\":\"splash_hint__22vCa\",\"footer\":\"splash_footer__HxH6K\",\"title\":\"splash_title__2TA4V\",\"titleIcon\":\"splash_titleIcon__3Nzmb\",\"titleText\":\"splash_titleText__3P6sf\",\"subtitle\":\"splash_subtitle__4wRgt\"};","module.exports = __webpack_public_path__ + \"static/media/icon-min.4d7ecf66.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"players_table__1xHiA\",\"playerInfo\":\"players_playerInfo__2We7m\",\"controls\":\"players_controls__1d2AM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}