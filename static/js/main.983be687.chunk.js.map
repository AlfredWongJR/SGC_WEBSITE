{"version":3,"sources":["components/about.jsx","components/404.jsx","components/icons.jsx","state/helpers.js","data-types/constants.js","data-types/types.js","data-types/factories.js","data-types/index.js","pairing-scoring/ratings.js","pairing-scoring/helpers.js","pairing-scoring/scoring.js","pairing-scoring/factories.js","pairing-scoring/pairing.js","state/player-state.js","state/match-functions.js","state/tourneys-state.js","state/options-state.js","components/tournament/tournament.jsx","components/tournament/list.jsx","components/tournament/index.jsx","components/players/info-box.jsx","components/utility.jsx","components/players/new-player.jsx","components/players/list.jsx","components/players/index.jsx","components/tournament/scores.jsx","components/tournament/player-select/selecting.jsx","components/tournament/player-select/index.jsx","components/tournament/crosstable.jsx","components/tournament/round/player-match-info.jsx","components/tournament/round/match-row.jsx","components/tournament/round/round.jsx","components/tournament/pair-picker/select-list.jsx","components/tournament/pair-picker/stage.jsx","components/tournament/pair-picker/player-info.jsx","components/tournament/pair-picker/index.jsx","components/tournament/round/index.jsx","components/options.jsx","components/caution/index.jsx","side-effects.js","App.jsx","serviceWorker.js","index.jsx","components/tournament/scores.module.css","components/tournament/tournament.module.css","components/tournament/round/round.module.css","App.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["About","props","react_default","a","createElement","data-testid","href","NotFound","icons","Alert","ArrowDown","ArrowUp","Check","ChevronLeft","ChevronRight","Edit","Info","Layers","List","Plus","Repeat","Settings","Trash","UserMinus","UserPlus","Users","X","localStorageOrDefault","key","defaultValue","value","JSON","parse","localStorage","getItem","setItem","stringify","BLACK","WHITE","DUMMY_ID","AvoidList","t","list","tuple","Number","Player","interface","id","firstName","String","lastName","rating","matchCount","type","PlayerStats","profile","score","dueColor","maybe","colorBalance","opponentHistory","upperHalf","Boolean","avoidList","hasHadBye","isDueBye","Match","players","result","origRating","newRating","RoundList","Tournament","name","tieBreaks","byeQueue","roundList","ScoreCalulator","func","Standing","createMatch","importObj","createPlayer","arguments","length","undefined","dummyPlayer","missingPlayer","kFactor","isNotDummy","playerId","getPlayerById","playerList","player","filter","p","isNotBye","match","includes","getMatchesByPlayer","matchList","getMatchDetailsForPlayer","index","indexOf","color","rounds2Matches","roundId","slice","reduce","acc","round","concat","calcNumOfRounds","playerCount","rounds","Math","ceil","log2","isFinite","getPlayerAvoidList","pair","accumulator","getDueColor","lastMatch","last","getPlayersByOpponent","opponentId","getOpponentScores","map","opponent","getPlayerScore","of","scoreList","getPlayerScoreList","sum","getCumulativeScore","getPlayerScoreListNoByes","getCumulativeOfOpponentScore","oppScores","getColorBalanceScore","colorList","tieBreakMethods","scores","pipe","sort","b","init","tail","Object","freeze","createStandingList","methods","Array","selectedTieBreaks","i","tieBreakNames","m","standings","allPlayers","from","Set","getAllPlayersFromMatches","method","sortFunc","ignore","thenBy","standing1","standing2","firstBy","createStandingTree","_createStandingList","_createStandingList2","slicedToArray","standingsFlat","standing","orig","prevStanding","append","over","lensIndex","createPlayerStats","_ref","playerDataSource","matches","priority","condition","avoidMeetingTwice","sameScores","divider","differentHalf","differentDueColor","maxPriority","add","calcPairIdeal","player1","player2","metBefore","mustAvoid","abs","setUpperHalves","playerStatsList","splitInHalf","splitAt","src","isUpperHalf","view","assoc","setByePlayer","hasNotHadBye","nextByeSignup","indexOfDueBye","findLastIndex","sortPlayersForPairing","defaultPlayers","demoPlayers","avoid","ActionSetPlayer","ActionAddPlayer","ActionDelPlayer","ActionSetMatchcount","ActionSetRating","ActionAvoidPair","ActionLoadState","state","Any","ActionTypes","union","playersReducer","action","getNextId","head","inc","lensPath","findIndex","propEq","mergeLeft","set","Error","dispatch","x","SET_PLAYER","ADD_PLAYER","DEL_PLAYER","SET_PLAYER_MATCHCOUNT","SET_PLAYER_RATING","ADD_AVOID_PAIR","DEL_AVOID_PAIR","LOAD_STATE","PlayerContext","createContext","usePlayers","_useContext","useContext","_useContext2","playerState","playerDispatch","getPlayer","curry","PlayersProvider","loadedData","_useReducer","useReducer","_useReducer2","useEffect","Provider","children","autoPair","tourney","unPairedPlayers","byeValue","playerIds","potentialMatches","playerMatches","reducedResults","blossom","p1Id","p2Id","p1","p2","ideal","matched","pair1","pair2","reverse","byePlayer","pairPlayers","join","ActionAddTourney","ActionDelTourney","ActionAddRound","tourneyId","ActionDelLastRound","ActionAddRemoveTieBreak","ActionMoveTieBreak","oldIndex","newIndex","ActionSetTourneyPlayers","ActionSetByeQueue","ActionAutoPair","unpairedPlayers","ActionManualPair","ActionSetMatchResult","matchId","ActionEditMatch","ActionMoveMatch","tourneysReducer","remove","move","__","manualPair","mergeRight","ADD_TOURNEY","DEL_TOURNEY","ADD_ROUND","DEL_LAST_ROUND","ADD_TIEBREAK","DEL_TIEBREAK","MOVE_TIEBREAK","SET_TOURNEY_PLAYERS","SET_BYE_QUEUE","AUTO_PAIR","MANUAL_PAIR","SET_MATCH_RESULT","DEL_MATCH","SWAP_COLORS","MOVE_MATCH","TournamentContext","useTournaments","useTournament","tourneys","useRound","_useTournament","_useTournament2","unmatched","difference","TournamentProvider","defaultTourneyList","ActionSetByeValue","reducer","SET_BYE_VALUE","OptionsContext","useOptions","OptionsProvider","defaultOptions","_usePlayers","isNewRoundReady","useMemo","lastRound","matchedPlayers","unMatchedPlayers","pId","results","origTitle","document","title","isItOver","_ref2","tooltipText","tooltipWarn","_delLastRound","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","window","confirm","navigate","forEach","stop","apply","this","className","styles","tournament","header","es","to","sidebar","keys","onClick","disabled","tooltip_es","label","toolbarItem","content","TournamentList","_useTournaments","_useTournaments2","_useState","useState","_useState2","newTourneyName","setNewTourneyName","aria-label","onSubmit","event","preventDefault","placeholder","onChange","target","required","TournamentIndex","PlayerInfoBox","singAvoidList","setSingAvoidList","unAvoided","_useState3","_useState4","selectedAvoider","setSelectedAvoider","handleChange","_event$currentTarget","currentTarget","readOnly","numeral","format","arial-label","avoidAdd","onBlur","Panel","_ref4","style","objectSpread","panel","PanelContainer","assign","panels","React","Children","child","PlayerLink","_ref5","findById","NewPlayer","newPlayerDefault","newPlayerData","setNewPlayerdata","updateField","prevState","PlayerList","delPlayer","visually_hidden_es","Players","ScoreTable","_useTournament2$","_createStandingTree","_createStandingTree2","standingTree","tbMethods","table","topHeader","scope","rank","j","row","rowSpan","playerName","dashify","SelectTieBreaks","_useTournament3","_useTournament4","selectedTb","setSelectedTb","toggleTb","defaultId","defaultTo","moveTb","direction","Scores","_ref3","tabs_es","Selecting","togglePlayer","checked","PlayerSelect","isSelecting","setIsSelecting","dialog_es","isOpen","Crosstable","_useMemo","opponentResults","lensProp","_useMemo2","opponentScores","getRatingChange","_getPerformanceRating","firstMatch","getPerformanceRatings","_getPerformanceRating2","firstRating","lastRating","change","index2","player1Id","player2Id","getXScore","PlayerMatchInfo","_useRound","playerData","prettyBalance","opId","MatchRow","pos","selectedMatch","setSelectedMatch","openModal","setOpenModal","resultCode","every","whiteName","blackName","setMatchResult","white","black","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","calcNewRatings","role","aria-hidden","winnerSelect","Round","moveMatch","toolbar","unMatch","SelectList","stagedPlayers","setStagedPlayers","_useOptions","isModalOpen","setIsModalOpen","unmatchedWithDummy","Stage","_stagedPlayers","unstage","react","PlayerInfo","_createPlayerStats","PairPicker","statsList","matchIdeal","Index","openTab","setOpenTab","Options","tourneysDispatch","_useOptions2","options","optionsDispatch","text","setText","exportData","loadData","data","alert","encodeURIComponent","download","reader","FileReader","onload","ev","readAsText","files","defaultTourneys","rows","cols","spellCheck","Caution","caution","caution__text","caution__link","register","regexps","unformat","roundingFunction","whole","floor","remainder","fraction","source","createHashSource","history","createHistory","App","link","path","tournament_Tournament","tournament_scores","about","_404","default","noThrow","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.983be687.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst About = (props) => (\r\n    <p data-testid=\"about\">\r\n        This is an early, proof-of-concept, demo of a\r\n        chess tournament manager.{\" \"}\r\n        <a href=\"https://github.com/johnridesabike/chessahoochee\">\r\n            You can find out more here.\r\n        </a>\r\n    </p>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = (props) => (\r\n    <div data-testid=\"404\">\r\n        <p>Page not found.</p>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import Alert from \"react-feather/dist/icons/alert-circle\";\r\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\r\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\r\nimport Check from \"react-feather/dist/icons/check\";\r\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\r\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\r\nimport Edit from \"react-feather/dist/icons/edit\";\r\nimport Info from \"react-feather/dist/icons/info\";\r\nimport List from \"react-feather/dist/icons/list\";\r\nimport Plus from \"react-feather/dist/icons/plus\";\r\nimport Repeat from \"react-feather/dist/icons/repeat\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\r\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\r\nimport Users from \"react-feather/dist/icons/users\";\r\nimport X from \"react-feather/dist/icons/x\";\r\nimport Layers from \"react-feather/dist/icons/layers\";\r\nimport Settings from \"react-feather/dist/icons/settings\";\r\n\r\nexport default {\r\n    Alert,\r\n    ArrowDown,\r\n    ArrowUp,\r\n    Check,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    Edit,\r\n    Info,\r\n    Layers,\r\n    List,\r\n    Plus,\r\n    Repeat,\r\n    Settings,\r\n    Trash,\r\n    UserMinus,\r\n    UserPlus,\r\n    Users,\r\n    X\r\n};\r\n","/**\r\n * TODO: replace this with something more useful like PouchDB.\r\n */\r\nexport function localStorageOrDefault(key, defaultValue) {\r\n    if (process.env.NODE_ENV === \"test\") {\r\n        return defaultValue; // don't store values during tests\r\n    }\r\n    const value = JSON.parse(localStorage.getItem(key)) || defaultValue;\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n    return value;\r\n}\r\n","const BLACK = 1;\r\nexport {BLACK};\r\nconst WHITE = 0;\r\nexport {WHITE};\r\nconst DUMMY_ID = -1;\r\nexport {DUMMY_ID};\r\n","import t from \"tcomb\";\r\n\r\nconst AvoidList = t.list(t.tuple([t.Number, t.Number]));\r\nexport {AvoidList};\r\n\r\nconst Player = t.interface(\r\n    {\r\n        id: t.Number,\r\n        firstName: t.String,\r\n        lastName: t.String,\r\n        rating: t.Number,\r\n        matchCount: t.Number,\r\n        type: t.String // used for CSS styling etc\r\n    },\r\n    \"Player\"\r\n);\r\nexport {Player};\r\n\r\nconst PlayerStats = t.interface(\r\n    {\r\n        profile: Player,\r\n        id: t.Number,\r\n        score: t.Number,\r\n        dueColor: t.maybe(t.Number),\r\n        colorBalance: t.Number,\r\n        opponentHistory: t.list(t.Number),\r\n        upperHalf: t.Boolean,\r\n        rating: t.Number,\r\n        avoidList: t.list(t.Number),\r\n        hasHadBye: t.Boolean,\r\n        isDueBye: t.Boolean\r\n    },\r\n    \"PlayerStats\"\r\n);\r\nexport {PlayerStats};\r\n\r\nconst Match = t.interface(\r\n    {\r\n        id: t.String,\r\n        players: t.tuple([t.Number, t.Number]),\r\n        result: t.tuple([t.Number, t.Number]),\r\n        origRating: t.tuple([t.Number, t.Number]),\r\n        newRating: t.tuple([t.Number, t.Number])\r\n    },\r\n    \"Match\"\r\n);\r\nexport {Match};\r\n\r\nconst RoundList = t.list(t.list(Match));\r\nexport {RoundList};\r\n\r\nconst Tournament = t.interface(\r\n    {\r\n        name: t.String,\r\n        tieBreaks: t.list(t.Number),\r\n        byeQueue: t.list(t.Number),\r\n        players: t.list(t.Number),\r\n        roundList: t.list(t.list(Match))\r\n    },\r\n    \"Tournament\"\r\n);\r\nexport {Tournament};\r\n\r\nconst ScoreCalulator = t.func(\r\n    [t.Number, t.list(Match)],\r\n    t.Number,\r\n    \"ScoreCalulator\"\r\n);\r\nexport {ScoreCalulator};\r\n\r\nconst Standing = t.interface(\r\n    {\r\n        id: t.Number,\r\n        score: t.Number,\r\n        tieBreaks: t.list(t.Number)\r\n    },\r\n    \"Standing\"\r\n);\r\nexport {Standing};\r\n","import {Player, Match, Tournament} from \"./types\";\r\n\r\nexport function createMatch(importObj) {\r\n    return Match({\r\n        id: importObj.id,\r\n        players: importObj.players,\r\n        result: importObj.result || [0, 0],\r\n        origRating: importObj.origRating,\r\n        newRating: importObj.newRating\r\n    });\r\n}\r\n\r\nexport function createPlayer(importObj = {}) {\r\n    return Player({\r\n        id: importObj.id || 0,\r\n        type: importObj.type || \"person\", // used for CSS styling etc.\r\n        firstName: importObj.firstName || \"\",\r\n        lastName: importObj.lastName || \"\",\r\n        rating: importObj.rating || 0,\r\n        matchCount: importObj.matchCount || 0\r\n    });\r\n}\r\n\r\nexport function createTournament(importObj) {\r\n    return Tournament({\r\n        name: importObj.name || \"\",\r\n        tieBreaks: importObj.tieBreaks || [0, 1, 2, 3],\r\n        byeQueue: importObj.byeQueue || [],\r\n        players: importObj.players || [],\r\n        roundList: importObj.roundList || []\r\n    });\r\n}\r\n","import {BLACK, WHITE, DUMMY_ID} from \"./constants\";\r\nimport {createPlayer, createMatch, createTournament} from \"./factories\";\r\nimport {\r\n    AvoidList,\r\n    Match,\r\n    Player,\r\n    PlayerStats,\r\n    RoundList,\r\n    ScoreCalulator,\r\n    Standing,\r\n    Tournament\r\n} from \"./types\";\r\n\r\nconst dummyPlayer = createPlayer({\r\n    id: DUMMY_ID,\r\n    firstName: \"Bye\",\r\n    lastName: \"Player\",\r\n    type: \"dummy\"\r\n});\r\n\r\nconst missingPlayer = (id) => createPlayer({\r\n    id: id,\r\n    firstName: \"Anonymous\",\r\n    lastName: \"Player\",\r\n    type: \"missing\"\r\n});\r\n\r\nexport {\r\n    AvoidList,\r\n    BLACK,\r\n    DUMMY_ID,\r\n    Match,\r\n    Player,\r\n    PlayerStats,\r\n    RoundList,\r\n    ScoreCalulator,\r\n    Standing,\r\n    Tournament,\r\n    WHITE,\r\n    createMatch,\r\n    createPlayer,\r\n    createTournament,\r\n    dummyPlayer,\r\n    missingPlayer\r\n};\r\n","import EloRank from \"elo-rank\";\r\nimport t from \"tcomb\";\r\nimport {WHITE, BLACK} from \"../data-types\";\r\n\r\nexport function kFactor(matchCount) {\r\n    const ne = t.Number(matchCount) || 1;\r\n    return (800 / ne);\r\n}\r\n\r\n/**\r\n * @returns {[number, number]}\r\n */\r\nexport function calcNewRatings(origRatings, matchCounts, result) {\r\n    t.tuple([t.Number, t.Number])(origRatings);\r\n    t.tuple([t.Number, t.Number])(matchCounts);\r\n    t.tuple([t.Number, t.Number])(result);\r\n    const whiteElo = new EloRank(kFactor(matchCounts[WHITE]));\r\n    const blackElo = new EloRank(kFactor(matchCounts[BLACK]));\r\n    const FLOOR = 100;\r\n    const scoreExpected = [\r\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\r\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\r\n    ];\r\n    const newRating = [\r\n        whiteElo.updateRating(\r\n            scoreExpected[WHITE],\r\n            result[WHITE],\r\n            origRatings[WHITE]\r\n        ),\r\n        blackElo.updateRating(\r\n            scoreExpected[BLACK],\r\n            result[BLACK],\r\n            origRatings[BLACK]\r\n        )\r\n    ];\r\n    return newRating.map(\r\n        (rating) => (rating < FLOOR) ? FLOOR : rating\r\n    );\r\n}\r\n","import t from \"tcomb\";\r\nimport {\r\n    AvoidList,\r\n    DUMMY_ID,\r\n    Match,\r\n    Player,\r\n    RoundList,\r\n    Standing,\r\n    dummyPlayer,\r\n    missingPlayer\r\n} from \"../data-types\";\r\n/*******************************************************************************\r\n * Player functions\r\n ******************************************************************************/\r\nconst isNotDummy = (playerId) => playerId !== DUMMY_ID;\r\nexport {isNotDummy};\r\n\r\nexport function areScoresEqual(standing1, standing2) {\r\n    Standing(standing1);\r\n    Standing(standing2);\r\n    // Check if any of them aren't equal\r\n    if (standing1.score !== standing2.score) {\r\n        return false;\r\n    }\r\n    // Check if any tie-break values are not equal\r\n    return !(\r\n        standing1.tieBreaks.reduce(\r\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\r\n            []\r\n        ).includes(true)\r\n    );\r\n}\r\n\r\nexport function getPlayerById(playerList, id) {\r\n    if (id === DUMMY_ID) {\r\n        return dummyPlayer;\r\n    }\r\n    const player = playerList.filter((p) => p.id === id)[0];\r\n    return (player) ? player : missingPlayer(id);\r\n}\r\n\r\n/*******************************************************************************\r\n * Match functions\r\n ******************************************************************************/\r\nconst isNotBye = (match) => !match.players.includes(DUMMY_ID);\r\nexport {isNotBye};\r\n\r\nfunction getMatchesByPlayer(playerId, matchList) {\r\n    t.list(Match)(matchList);\r\n    return matchList.filter((match) => match.players.includes(playerId));\r\n}\r\nexport {getMatchesByPlayer};\r\n\r\nfunction getMatchDetailsForPlayer(playerId, match) {\r\n    t.Number(playerId);\r\n    Match(match);\r\n    const index = match.players.indexOf(playerId);\r\n    return {\r\n        color: index,\r\n        newRating: match.newRating[index],\r\n        origRating: match.origRating[index],\r\n        result: match.result[index]\r\n    };\r\n}\r\nexport {getMatchDetailsForPlayer};\r\n\r\n/**\r\n * Flatten a list of rounds to a list of matches.\r\n */\r\nexport function rounds2Matches(roundList, roundId = null) {\r\n    RoundList(roundList);\r\n    t.maybe(t.Number)(roundId);\r\n    const rounds = (\r\n        (roundId === null)\r\n        ? roundList\r\n        : roundList.slice(0, roundId + 1)\r\n    );\r\n    return rounds.reduce((acc, round) => acc.concat(round), []);\r\n}\r\n\r\n\r\n/**\r\n * @returns {number[]}\r\n */\r\nexport function getAllPlayersFromMatches(matchList) {\r\n    t.list(Match)(matchList);\r\n    const allPlayers = matchList.reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    );\r\n    return Array.from(new Set(allPlayers));\r\n}\r\n\r\n/**\r\n * Get a list of all of a player's scores from each match.\r\n */\r\nexport function getPlayerScoreList(playerId, matchList) {\r\n    t.Number(playerId);\r\n    t.list(Match)(matchList);\r\n    return getMatchesByPlayer(\r\n        playerId,\r\n        matchList,\r\n    ).map(\r\n        (match) => getMatchDetailsForPlayer(playerId, match).result\r\n    );\r\n}\r\n\r\n/**\r\n * TODO: Maybe merge this with the other function?\r\n * @returns {number[]}\r\n */\r\nexport function getPlayerScoreListNoByes(playerId, matchList) {\r\n    t.Number(playerId);\r\n    t.list(Match)(matchList);\r\n    return getMatchesByPlayer(\r\n        playerId,\r\n        matchList\r\n    ).filter(\r\n        isNotBye\r\n    ).map(\r\n        (match) => getMatchDetailsForPlayer(playerId, match).result\r\n    );\r\n}\r\n\r\n/*******************************************************************************\r\n * Round functions\r\n ******************************************************************************/\r\nexport function calcNumOfRounds(playerCount) {\r\n    const rounds = Math.ceil(Math.log2(playerCount));\r\n    return (Number.isFinite(rounds)) ? rounds : 0;\r\n}\r\n\r\n/*******************************************************************************\r\n * Avoid list functions\r\n ******************************************************************************/\r\nexport function getPlayerAvoidList(playerId, avoidList) {\r\n    AvoidList(avoidList);\r\n    t.Number(playerId);\r\n    return avoidList.filter( // get pairings with the player\r\n        (pair) => pair.includes(playerId)\r\n    ).reduce( // Flatten the array\r\n        (accumulator, pair) => pair.concat(accumulator),\r\n        []\r\n    ).filter( // filter out the player's id\r\n        (id) => id !== playerId\r\n    );\r\n}\r\n\r\nexport function cleanAvoidList(avoidList, playerList) {\r\n    AvoidList(avoidList);\r\n    t.list(Player)(playerList);\r\n    const ids = playerList.map((p) => p.id);\r\n    return avoidList.filter(\r\n        (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\r\n    );\r\n}\r\n","// TODO: Clean this up. Refactor unnecessary functions, etc.\r\nimport {\r\n    init,\r\n    last,\r\n    pipe,\r\n    sort,\r\n    sum,\r\n    tail\r\n} from \"ramda\";\r\nimport {firstBy} from \"thenby\";\r\nimport t from \"tcomb\";\r\nimport {\r\n    BLACK,\r\n    DUMMY_ID,\r\n    Match,\r\n    ScoreCalulator,\r\n    WHITE\r\n} from \"../data-types\";\r\nimport {\r\n    getMatchesByPlayer,\r\n    getMatchDetailsForPlayer,\r\n    isNotBye,\r\n    isNotDummy,\r\n    getPlayerScoreList,\r\n    getPlayerScoreListNoByes\r\n} from \"./helpers\";\r\n\r\n/**\r\n * @returns {typeof WHITE | typeof BLACK?}\r\n */\r\n\r\nexport function getDueColor(playerId, matchList) {\r\n    t.Number(playerId);\r\n    t.list(Match)(matchList);\r\n    const lastMatch = last(getMatchesByPlayer(playerId, matchList));\r\n    if (!lastMatch) {\r\n        return null;\r\n    }\r\n    const {color} = getMatchDetailsForPlayer(playerId, lastMatch);\r\n    return (color === WHITE) ? BLACK : WHITE;\r\n}\r\n\r\n/**\r\n * @returns {boolean}\r\n */\r\nfunction hasHadBye(playerId, matchList) {\r\n    t.Number(playerId);\r\n    t.list(Match)(matchList);\r\n    return getMatchesByPlayer(\r\n        playerId,\r\n        matchList\r\n    ).reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    ).includes(DUMMY_ID);\r\n}\r\nexport {hasHadBye};\r\n\r\n/**\r\n * @returns {number[]}\r\n */\r\nexport function getPlayersByOpponent(opponentId, matchList) {\r\n    t.Number(opponentId);\r\n    t.list(Match)(matchList);\r\n    return getMatchesByPlayer(\r\n        opponentId,\r\n        matchList\r\n    ).reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    ).filter(\r\n        (playerId) => playerId !== opponentId\r\n    );\r\n}\r\n\r\n/**\r\n * Used for `modifiedMedian` and `solkoff`.\r\n * @returns {number[]}\r\n */\r\nfunction getOpponentScores(playerId, matchList) {\r\n    t.Number(playerId);\r\n    t.list(Match)(matchList);\r\n    const scores = getPlayersByOpponent(\r\n        playerId,\r\n        matchList\r\n    ).filter(\r\n        isNotDummy\r\n    ).map(\r\n        (opponent) => getPlayerScore(opponent, matchList)\r\n    );\r\n    return scores;\r\n}\r\n\r\n/*******************************************************************************\r\n * The main scoring methods\r\n ******************************************************************************/\r\n/**\r\n * @returns {number}\r\n */\r\nconst getPlayerScore = ScoreCalulator.of(\r\n    function (playerId, matchList) {\r\n        const scoreList = getPlayerScoreList(playerId, matchList);\r\n        return sum(scoreList);\r\n    }\r\n);\r\nexport {getPlayerScore};\r\n\r\n/**\r\n * The player's cumulative score.\r\n * @returns {number}\r\n */\r\nconst getCumulativeScore = ScoreCalulator.of(\r\n    function (playerId, matchList) {\r\n        const scoreList = getPlayerScoreListNoByes(\r\n            playerId,\r\n            matchList\r\n        ).reduce( // turn the regular score list into a \"running\" score list\r\n            (acc, score) => acc.concat([last(acc) + score]),\r\n            [0]\r\n        );\r\n        return sum(scoreList);\r\n    }\r\n);\r\n\r\n/**\r\n * Get the cumulative scores of a player's opponents.\r\n * @returns {number}\r\n */\r\nconst getCumulativeOfOpponentScore = ScoreCalulator.of(\r\n    function (playerId, matchList) {\r\n        const oppScores = getPlayersByOpponent(\r\n            playerId,\r\n            matchList\r\n        ).filter(\r\n            isNotDummy\r\n        ).map(\r\n            (id) => getCumulativeScore(id, matchList)\r\n        );\r\n        return sum(oppScores);\r\n    }\r\n);\r\n\r\n/**\r\n * Calculate a player's color balance. A negative number means they played as\r\n * white more. A positive number means they played as black more.\r\n * @returns {number}\r\n */\r\nconst getColorBalanceScore = ScoreCalulator.of(\r\n    function (playerId, matchList) {\r\n        const colorList = getMatchesByPlayer(\r\n            playerId,\r\n            matchList\r\n        ).filter(\r\n            isNotBye\r\n        ).reduce(\r\n            (acc, match) => (\r\n                (match.players[WHITE] === playerId)\r\n                ? acc.concat(-1) // White = -1\r\n                : acc.concat(1) // Black = +1\r\n            ),\r\n            [0]\r\n        );\r\n        return sum(colorList);\r\n    }\r\n);\r\nexport {getColorBalanceScore};\r\n\r\n/**\r\n * Gets the modified median factor defined in USCF § 34E1\r\n * @returns {number}\r\n */\r\nconst getModifiedMedianScore = ScoreCalulator.of(\r\n    function (playerId, matchList) {\r\n        const scores = getOpponentScores(playerId, matchList);\r\n        return pipe(\r\n            sort((a, b) => a - b),\r\n            init,\r\n            tail,\r\n            sum\r\n        )(scores);\r\n    }\r\n);\r\n\r\n/**\r\n * @returns {number}\r\n */\r\nconst getSolkoffScore = ScoreCalulator.of(\r\n    function (playerId, matchList) {\r\n        const scoreList = getOpponentScores(playerId, matchList);\r\n        return sum(scoreList);\r\n    }\r\n);\r\n\r\nconst tieBreakMethods = [\r\n    {\r\n        name: \"Modified median\",\r\n        func: getModifiedMedianScore\r\n    },\r\n    {\r\n        name: \"Solkoff\",\r\n        func: getSolkoffScore\r\n    },\r\n    {\r\n        name: \"Cumulative score\",\r\n        func: getCumulativeScore\r\n    },\r\n    {\r\n        name: \"Cumulative of opposition\",\r\n        func: getCumulativeOfOpponentScore\r\n    },\r\n    {\r\n        name: \"Most black\",\r\n        func: getColorBalanceScore\r\n    }\r\n];\r\nObject.freeze(tieBreakMethods);\r\nexport {tieBreakMethods};\r\n\r\n/**\r\n * Create a function to sort the standings. This dynamically creates a `thenBy`\r\n * function based on the desired tiebreak sort methods.\r\n * @returns A function to be used with a list of standings and `sort()`.\r\n */\r\nexport function createTieBreakSorter(tieBreaks) {\r\n    return tieBreaks.reduce(\r\n        (acc, ignore, index) => (\r\n            acc.thenBy(\r\n                (standing1, standing2) => (\r\n                    standing2.tieBreaks[index] - standing1.tieBreaks[index]\r\n                )\r\n            )\r\n        ),\r\n        firstBy((standing1, standing2) => standing2.score - standing1.score)\r\n    );\r\n}\r\n","import t from \"tcomb\";\r\nimport {\r\n    add,\r\n    append,\r\n    defaultTo,\r\n    last,\r\n    lensIndex,\r\n    lensProp,\r\n    over,\r\n    pipe,\r\n    sort\r\n} from \"ramda\";\r\nimport {\r\n    AvoidList,\r\n    Match,\r\n    Player,\r\n    PlayerStats,\r\n    RoundList,\r\n    Standing\r\n} from \"../data-types\";\r\nimport {\r\n    areScoresEqual,\r\n    getAllPlayersFromMatches,\r\n    getMatchesByPlayer,\r\n    getPlayerAvoidList,\r\n    getPlayerById,\r\n    getMatchDetailsForPlayer,\r\n    isNotDummy,\r\n    rounds2Matches\r\n} from \"./helpers\";\r\nimport {\r\n    createTieBreakSorter,\r\n    getDueColor,\r\n    getColorBalanceScore,\r\n    getPlayerScore,\r\n    getPlayersByOpponent,\r\n    hasHadBye,\r\n    tieBreakMethods\r\n} from \"./scoring\";\r\n/**\r\n * Sort the standings by score, see USCF tie-break rules from § 34.\r\n * @returns {[typeof Standing[], string[]]} The standings and the list of method used\r\n */\r\nexport function createStandingList(methods, roundList, roundId) {\r\n    t.list(t.Number)(methods);\r\n    t.list(t.Array)(roundList);\r\n    t.maybe(t.Number)(roundId);\r\n    const matchList = rounds2Matches(roundList, roundId);\r\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\r\n    const tieBreakNames = selectedTieBreaks.map((m) => m.name);\r\n    // Get a flat list of all of the players and their scores.\r\n    const standings = getAllPlayersFromMatches(\r\n        matchList\r\n    ).filter(\r\n        isNotDummy\r\n    ).map(\r\n        (id) => Standing({\r\n            id,\r\n            score: getPlayerScore(id, matchList),\r\n            tieBreaks: selectedTieBreaks.map(\r\n                (method) => method.func(id, matchList)\r\n            )\r\n        })\r\n    );\r\n    const sortFunc = createTieBreakSorter(selectedTieBreaks);\r\n    const standingsSorted = sort(sortFunc, standings);\r\n    return [standingsSorted, tieBreakNames];\r\n}\r\n\r\n/**\r\n * Sort the standings by score, see USCF tie-break rules from § 34.\r\n * example: `[[Dale, Audrey], [Pete], [Bob]]`\r\n * Dale and Audrey are tied for first, Pete is 2nd, Bob is 3rd.\r\n * @returns {[Standing[][], string[]]} The standings and the list of method used\r\n */\r\nexport function createStandingTree(methods, roundList, roundId = null) {\r\n    t.list(t.Number)(methods);\r\n    RoundList(roundList);\r\n    t.maybe(t.Number)(roundId);\r\n    const [\r\n        standingsFlat,\r\n        tieBreakNames\r\n    ] = createStandingList(methods, roundList, roundId);\r\n    const standingsTree = standingsFlat.reduce(\r\n        /** @param {Standing[][]} acc*/\r\n        function (acc, standing, i, orig) {\r\n            const prevStanding = orig[i - 1];\r\n            const isNewRank = (\r\n                (i === 0)\r\n                ? true // Always make a new rank for the first player\r\n                : !areScoresEqual(standing, prevStanding)\r\n            );\r\n            if (isNewRank) {\r\n                return append([standing], acc);\r\n            }\r\n            // If this player has the same score as the last, list them together\r\n            return over(lensIndex(acc.length - 1), append(standing), acc);\r\n        },\r\n        []\r\n    );\r\n    return [standingsTree, tieBreakNames];\r\n}\r\n\r\n/**\r\n * @returns {PlayerStats}\r\n */\r\nexport function createPlayerStats({\r\n    id,\r\n    playerDataSource,\r\n    avoidList,\r\n    roundList,\r\n    roundId\r\n}) {\r\n    t.Number(id);\r\n    t.Number(roundId);\r\n    t.list(Player)(playerDataSource);\r\n    AvoidList(avoidList);\r\n    RoundList(roundList);\r\n    const player = getPlayerById(playerDataSource, id);\r\n    const matches = rounds2Matches(roundList, roundId);\r\n    return PlayerStats({\r\n        profile: player,\r\n        rating: player.rating, // is this shortcut necessary?\r\n        id: id, // is this shortcut necessary?\r\n        score: getPlayerScore(id, matches),\r\n        dueColor: getDueColor(id, matches),\r\n        colorBalance: getColorBalanceScore(id, matches),\r\n        opponentHistory: getPlayersByOpponent(id, matches),\r\n        upperHalf: false,\r\n        avoidList: getPlayerAvoidList(id, avoidList),\r\n        hasHadBye: hasHadBye(id, matches),\r\n        isDueBye: false\r\n    });\r\n}\r\n\r\n/**\r\n * @returns {Object.<string, number>} {opponentId: result}\r\n */\r\nfunction getResultsByOpponent(playerId, matchList) {\r\n    t.Number(playerId);\r\n    t.list(Match)(matchList);\r\n    const matches = getMatchesByPlayer(playerId, matchList);\r\n    return matches.reduce(\r\n        function (acc, match) {\r\n            const opponent = match.players.filter(\r\n                (id) => id !== playerId\r\n            )[0];\r\n            const {result} = getMatchDetailsForPlayer(playerId, match);\r\n            // This sets a default result of 0 and then adds the existing\r\n            // result. Most of the time, this would be the same as using\r\n            // `set()` with the result, but if two players play each other\r\n            // multiple times then the total results will be displayed.\r\n            return over(\r\n                lensProp(String(opponent)),\r\n                pipe(defaultTo(0), add(result)),\r\n                acc\r\n            );\r\n        },\r\n        {}\r\n    );\r\n}\r\nexport {getResultsByOpponent};\r\n\r\nfunction getPerformanceRatings(playerId, matchList) {\r\n    t.Number(playerId);\r\n    t.list(Match)(matchList);\r\n    const matches = getMatchesByPlayer(playerId, matchList);\r\n    const firstMatch = matches[0];\r\n    const lastMatch = last(matches);\r\n    return [\r\n        getMatchDetailsForPlayer(playerId, firstMatch).origRating,\r\n        getMatchDetailsForPlayer(playerId, lastMatch).newRating\r\n    ];\r\n}\r\nexport {getPerformanceRatings};\r\n","// This file is a work in progress. The weighting for the ratings needs to be\r\n// tweaked a lot, and the pairing function itself needs to be cleaned up and\r\n// made more reusable.\r\nimport {firstBy} from \"thenby\";\r\nimport {\r\n    add,\r\n    assoc,\r\n    curry,\r\n    filter,\r\n    findLastIndex,\r\n    lensIndex,\r\n    map,\r\n    pipe,\r\n    over,\r\n    reverse,\r\n    splitAt,\r\n    sort,\r\n    view\r\n} from \"ramda\";\r\nimport blossom from \"edmonds-blossom\";\r\nimport t from \"tcomb\";\r\nimport {createPlayerStats} from \"./factories\";\r\nimport {\r\n    AvoidList,\r\n    DUMMY_ID,\r\n    Player,\r\n    PlayerStats,\r\n    RoundList\r\n} from \"../data-types\";\r\n\r\nconst priority = (value) => (condition) => condition ? value : 0;\r\nconst divisiblePriority = (value) => (divider) => value / divider;\r\n/**\r\n * TODO: These probably need to be tweaked a lot.\r\n */\r\n/**\r\n * @constant avoidMeetingTwicePriority The weight given to avoid players\r\n * meeting twice. This same weight is given to avoid matching players on each\r\n * other's \"avoid\" list. This is the highest priority. (USCF § 27A1)\r\n */\r\nconst avoidMeetingTwice = priority(20);\r\n/**\r\n * @constant sameScoresPriority The weight given to match players with\r\n * equal scores. This gets divided against the difference between each players'\r\n * scores, plus one. For example, players with scores `1` and `3` would have\r\n * this priority divided by `3`. Players with scores `0` and `3` would have this\r\n * priority divided by `4`. Players with equal scores would divide it by `1`,\r\n * leaving it unchanged. (USCF § 27A2)\r\n */\r\nconst sameScores = divisiblePriority(16);\r\n\r\n/**\r\n * @constant differentHalfPriority The weight given to match players in lower\r\n * versus upper halves. This is only applied to players being matched within\r\n * the same score group. (USCF § 27A3)\r\n */\r\nconst differentHalf = priority(2);\r\n/**\r\n * @constant differentDueColorPriority The weight given to match players with\r\n * opposite due colors. (USCF § 27A4 and § 27A5)\r\n */\r\nconst differentDueColor = priority(1);\r\n\r\nconst maxPriority = pipe(\r\n    add(differentHalf(true)),\r\n    add(differentDueColor(true)),\r\n    add(sameScores(1)),\r\n    add(avoidMeetingTwice(true))\r\n)(0);\r\nexport {maxPriority};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\nexport function calcPairIdeal(player1, player2) {\r\n    PlayerStats(player1);\r\n    PlayerStats(player2);\r\n    if (player1.id === player2.id) {\r\n        return 0;\r\n    }\r\n    const metBefore = player1.opponentHistory.includes(player2.id);\r\n    const mustAvoid = player1.avoidList.includes(player2.id);\r\n    return pipe(\r\n        add(differentHalf(\r\n            player1.upperHalf !== player2.upperHalf\r\n            && player1.score === player2.score\r\n        )),\r\n        add(differentDueColor(\r\n            player1.dueColor === null\r\n            || player1.dueColor !== player2.dueColor\r\n        )),\r\n        add(sameScores(Math.abs(player1.score - player2.score) + 1)),\r\n        add(avoidMeetingTwice(!metBefore && !mustAvoid))\r\n    )(0);\r\n}\r\n\r\n/**\r\n * Determine which players are in the upper and lower halves of their score\r\n * groups.\r\n * This function does not sort the list. The list should be sorted first.\r\n */\r\nexport function setUpperHalves(playerStatsList) {\r\n    t.list(PlayerStats)(playerStatsList);\r\n    const splitInHalf = (list) => splitAt(list.length / 2, list);\r\n    return playerStatsList.reduce(\r\n        function (acc, player, ignore, src) {\r\n            const upperHalfIds = pipe(\r\n                filter((a) => a.score === player.score),\r\n                splitInHalf,\r\n                view(lensIndex(0)),\r\n                map((a) => a.id)\r\n            )(src);\r\n            const isUpperHalf = upperHalfIds.includes(player.id);\r\n            return acc.concat([assoc(\"upperHalf\", isUpperHalf, player)]);\r\n        },\r\n        []\r\n    );\r\n}\r\n\r\nfunction setByePlayer(byeQueue, playerStatsList) {\r\n    t.list(t.Number)(byeQueue);\r\n    t.list(PlayerStats)(playerStatsList);\r\n    // if the list is even, just return it.\r\n    if (playerStatsList.length % 2 === 0) {\r\n        return playerStatsList;\r\n    }\r\n    const hasNotHadBye = playerStatsList.filter(\r\n        (p) => !p.hasHadBye\r\n    ).map((p) => p.id);\r\n    const nextByeSignup = byeQueue.filter((id) => hasNotHadBye.includes(id))[0];\r\n    const indexOfDueBye = (\r\n        (nextByeSignup)\r\n        // Assign the bye to the next person who signed up.\r\n        ? findLastIndex((p) => p.id === nextByeSignup, playerStatsList)\r\n        // Assign a bye to the lowest-rated player in the lowest score group.\r\n        // Because the list is sorted, the last player is the lowest.\r\n        // (USCF § 29L2.)\r\n        : findLastIndex((p) => !p.hasHadBye, playerStatsList)\r\n    );\r\n    // In the impossible situation that *everyone* has played a bye round\r\n    // previously, then just pick the last player.\r\n    const index = (\r\n        (indexOfDueBye === -1)\r\n        ? playerStatsList.length - 1\r\n        : indexOfDueBye\r\n    );\r\n    return over(\r\n        lensIndex(index),\r\n        assoc(\"isDueBye\", true),\r\n        playerStatsList\r\n    );\r\n}\r\n\r\n/**\r\n * Sort the data so matchups default to order by score and rating.\r\n */\r\nexport function sortPlayersForPairing(playerStatsList) {\r\n    t.list(PlayerStats)(playerStatsList);\r\n    return sort(\r\n        firstBy(\r\n            (a, b) => b.score - a.score\r\n        ).thenBy(\r\n            (a, b) => b.rating - a.rating\r\n        ),\r\n        playerStatsList\r\n    );\r\n}\r\n\r\n/**\r\n * Creates pairings according to the rules specified in USCF § 27, § 28,\r\n * and § 29. This is a work in progress and does not account for all of the\r\n * rules yet.\r\n */\r\nexport default function pairPlayers({\r\n    playerIds,\r\n    roundId,\r\n    roundList,\r\n    playerDataSource,\r\n    avoidList,\r\n    byeQueue\r\n}) {\r\n    t.list(t.Number)(playerIds);\r\n    t.Number(roundId);\r\n    t.list(Player)(playerDataSource);\r\n    t.list(t.Number)(byeQueue);\r\n    RoundList(roundList);\r\n    AvoidList(avoidList);\r\n    const playerStatsList = pipe(\r\n        map((id) => (\r\n            createPlayerStats({\r\n                id,\r\n                playerDataSource,\r\n                avoidList,\r\n                roundList,\r\n                roundId\r\n            })\r\n        )),\r\n        sortPlayersForPairing,\r\n        setUpperHalves,\r\n        curry(setByePlayer)(byeQueue)\r\n    )(playerIds);\r\n    // Turn the data into blossom-compatible input.\r\n    const potentialMatches = playerStatsList.filter(\r\n        (p) => !p.isDueBye\r\n    ).reduce(\r\n        function (acc, player1, ignore, src) {\r\n            const playerMatches = src.map(\r\n                (player2) => [\r\n                    player1.id,\r\n                    player2.id,\r\n                    calcPairIdeal(player1, player2)\r\n                ]\r\n            );\r\n            return acc.concat(playerMatches);\r\n        },\r\n        []\r\n    );\r\n    // Feed all of the potential matches to Edmonds-blossom and let the\r\n    // algorithm work its magic. This returns an array where each index is the\r\n    // ID of one player and each value is the ID of the matched player.\r\n    const blossomResults = blossom(potentialMatches);\r\n    // Translate those IDs into actual pairs of players.\r\n    /** @type {[PlayerStats, PlayerStats, number][]} */\r\n    const reducedResults = blossomResults.reduce(\r\n        function (acc, p1Id, p2Id) {\r\n            // Filter out unmatched players. Blossom will automatically include\r\n            // their missing IDs in its results.\r\n            if (p1Id !== -1) {\r\n                const p1 = playerStatsList.filter((p) => p.id === p1Id)[0];\r\n                const p2 = playerStatsList.filter((p) => p.id === p2Id)[0];\r\n                const ideal = potentialMatches.filter(\r\n                    (pair) => pair[0] === p1Id && pair[1] === p2Id\r\n                )[0][2];\r\n                // Blossom returns a lot of redundant matches. Check that this\r\n                // matchup wasn't already added.\r\n                const matched = acc.map((pair) => pair[0]);\r\n                if (!matched.includes(p1) && !matched.includes(p2)) {\r\n                    return acc.concat([[p1, p2, ideal]]);\r\n                }\r\n            }\r\n            return acc;\r\n        },\r\n        []\r\n    );\r\n    // Sort by net score and rating for board placement.\r\n    const sortedResults = sort(\r\n        firstBy((pair1, pair2) => (\r\n            pair2[0].score + pair2[1].score - pair1[0].score - pair1[1].score\r\n        )).thenBy((pair1, pair2) => (\r\n            pair2[0].rating + pair2[1].rating\r\n            - pair1[0].rating - pair1[1].rating\r\n        )),\r\n        reducedResults\r\n    );\r\n    const matches = sortedResults.map(\r\n        function (pair) {\r\n            const player1 = pair[0];\r\n            const player2 = pair[1];\r\n            const match = [player1.id, player2.id];\r\n            if (player1.colorBalance < player2.colorBalance) {\r\n                return reverse(match);\r\n            }\r\n            return match;\r\n        }\r\n    );\r\n    // The bye match always gets added last so the the numbering isn't affected.\r\n    const byePlayer = playerStatsList.filter((p) => p.isDueBye)[0];\r\n    if (byePlayer) {\r\n        return matches.concat([[byePlayer.id, DUMMY_ID]]);\r\n    }\r\n    return matches;\r\n}\r\n","import {\r\n    createContext,\r\n    createElement,\r\n    useContext,\r\n    useReducer,\r\n    useEffect\r\n} from \"react\";\r\nimport {\r\n    append,\r\n    assoc,\r\n    curry,\r\n    head,\r\n    inc,\r\n    lensPath,\r\n    lensIndex,\r\n    filter,\r\n    findIndex,\r\n    map,\r\n    mergeLeft,\r\n    over,\r\n    pipe,\r\n    propEq,\r\n    set,\r\n    sort\r\n} from \"ramda\";\r\nimport t from \"tcomb\";\r\nimport {localStorageOrDefault} from \"./helpers\";\r\nimport {getPlayerById} from \"../pairing-scoring\";\r\nimport {createPlayer} from \"../data-types\";\r\nimport demoPlayers from \"./demo-players.json\";\r\n\r\nconst defaultPlayers = {\r\n    players: demoPlayers.playerList.map((p) => createPlayer(p)),\r\n    avoid: demoPlayers.avoidList\r\n};\r\n\r\nconst ActionSetPlayer = t.interface({\r\n    firstName: t.String,\r\n    lastName: t.String,\r\n    rating: t.Number,\r\n    matchCount: t.Number,\r\n    id: t.Number\r\n});\r\nconst ActionAddPlayer = t.interface({\r\n    firstName: t.String,\r\n    lastName: t.String,\r\n    rating: t.Number\r\n});\r\nconst ActionDelPlayer = t.interface({\r\n    id: t.Number\r\n});\r\nconst ActionSetMatchcount = t.interface({\r\n    id: t.Number,\r\n    matchCount: t.Number\r\n});\r\nconst ActionSetRating = t.interface({\r\n    id: t.Number,\r\n    rating: t.Number\r\n});\r\nconst ActionAvoidPair = t.interface({\r\n    pair: t.tuple([t.Number, t.Number])\r\n});\r\nconst ActionLoadState = t.interface({state: t.Any});\r\nconst ActionTypes = t.union([\r\n    ActionSetPlayer,\r\n    ActionAddPlayer,\r\n    ActionDelPlayer,\r\n    ActionSetMatchcount,\r\n    ActionSetRating,\r\n    ActionAvoidPair,\r\n    ActionLoadState\r\n]);\r\nActionTypes.dispatch = function (x) {\r\n    const typeToConstructor = {\r\n        \"SET_PLAYER\": ActionSetPlayer,\r\n        \"ADD_PLAYER\": ActionAddPlayer,\r\n        \"DEL_PLAYER\": ActionDelPlayer,\r\n        \"SET_PLAYER_MATCHCOUNT\": ActionSetMatchcount,\r\n        \"SET_PLAYER_RATING\": ActionSetRating,\r\n        \"ADD_AVOID_PAIR\": ActionAvoidPair,\r\n        \"DEL_AVOID_PAIR\": ActionAvoidPair,\r\n        \"LOAD_STATE\": ActionLoadState\r\n    };\r\n    return typeToConstructor[x.type];\r\n};\r\n\r\n/**\r\n * @param {typeof defaultPlayers} state\r\n * @param {PlayerAction} action\r\n */\r\nfunction playersReducer(state, action ) {\r\n    ActionTypes(action);\r\n    const getNextId = pipe(map((p) => p.id), sort((a, b) => b - a), head, inc);\r\n    switch (action.type) {\r\n    case \"ADD_PLAYER\":\r\n        return over(\r\n            lensPath([\"players\"]),\r\n            append(createPlayer({\r\n                firstName: action.firstName,\r\n                lastName: action.lastName,\r\n                rating: action.rating,\r\n                id: getNextId(state.players)\r\n            })),\r\n            state\r\n        );\r\n    case \"SET_PLAYER\":\r\n        return assoc(\r\n            \"players\",\r\n            over(\r\n                lensIndex(findIndex(propEq(\"id\", action.id), state.players)),\r\n                mergeLeft(\r\n                    {\r\n                        firstName: action.firstName,\r\n                        lastName: action.lastName,\r\n                        rating: action.rating,\r\n                        matchCount: action.matchCount\r\n                    }\r\n                ),\r\n                state.players\r\n            ),\r\n            state\r\n        );\r\n    case \"DEL_PLAYER\":\r\n        return pipe(\r\n            over(\r\n                lensPath([\"avoid\"]),\r\n                filter((pair) => !pair.includes(action.id)),\r\n            ),\r\n            over(\r\n                lensPath([\"players\"]),\r\n                filter((p) => p.id !== action.id),\r\n            )\r\n        )(state);\r\n    case \"SET_PLAYER_MATCHCOUNT\":\r\n        return set(\r\n            lensPath([\r\n                \"players\",\r\n                findIndex(propEq(\"id\", action.id), state.players),\r\n                \"matchCount\"\r\n            ]),\r\n            action.matchCount,\r\n            state\r\n        );\r\n    case \"SET_PLAYER_RATING\":\r\n        return set(\r\n            lensPath([\r\n                \"players\",\r\n                findIndex(propEq(\"id\", action.id), state.players),\r\n                \"rating\"\r\n            ]),\r\n            action.rating,\r\n            state\r\n        );\r\n    // Avoid\r\n    case \"ADD_AVOID_PAIR\":\r\n        return over(\r\n            lensPath([\"avoid\"]),\r\n            append(action.pair),\r\n            state\r\n        );\r\n    case \"DEL_AVOID_PAIR\":\r\n        return over(\r\n            lensPath([\"avoid\"]),\r\n            filter((pair) => !(\r\n                pair.includes(action.pair[0])\r\n                && pair.includes(action.pair[1])\r\n            )),\r\n            state\r\n        );\r\n    case \"LOAD_STATE\":\r\n        return action.state;\r\n    default:\r\n        throw new Error(\"Unexpected action type\");\r\n    }\r\n}\r\n\r\nconst PlayerContext = createContext(null);\r\n\r\nexport function usePlayers() {\r\n    const [playerState, playerDispatch] = useContext(PlayerContext);\r\n    const getPlayer = curry(getPlayerById)(playerState.players);\r\n    return {playerState, playerDispatch, getPlayer};\r\n}\r\n\r\nexport function PlayersProvider(props) {\r\n    const loadedData = localStorageOrDefault(\"players\", defaultPlayers);\r\n    const [state, dispatch] = useReducer(playersReducer, loadedData);\r\n    useEffect(\r\n        function () {\r\n            localStorage.setItem(\"players\", JSON.stringify(state));\r\n        },\r\n        [state]\r\n    );\r\n    return (\r\n        createElement(\r\n            PlayerContext.Provider,\r\n            {value: [state, dispatch]},\r\n            props.children\r\n        )\r\n    );\r\n}\r\n","import {curry, assoc} from \"ramda\";\r\nimport {BLACK, WHITE, DUMMY_ID, createMatch} from \"../data-types\";\r\nimport {getPlayerById, pairPlayers} from \"../pairing-scoring\";\r\n\r\nexport function autoPair(\r\n    tourney,\r\n    playerState,\r\n    roundId,\r\n    unPairedPlayers,\r\n    byeValue\r\n) {\r\n    const roundList = tourney.roundList;\r\n    const getPlayer = curry(getPlayerById)(playerState.players);\r\n    const pairs = pairPlayers({\r\n        playerIds: unPairedPlayers,\r\n        roundId,\r\n        roundList,\r\n        playerDataSource: playerState.players,\r\n        avoidList: playerState.avoid,\r\n        byeQueue: tourney.byeQueue\r\n    });\r\n    const newMatchList = pairs.map(\r\n        (pair) => createMatch({\r\n            id: pair.join(\"-\"),\r\n            players: [pair[WHITE], pair[BLACK]],\r\n            origRating: [\r\n                getPlayer(pair[WHITE]).rating,\r\n                getPlayer(pair[BLACK]).rating\r\n            ],\r\n            newRating: [\r\n                getPlayer(pair[WHITE]).rating,\r\n                getPlayer(pair[BLACK]).rating\r\n            ]\r\n        })\r\n    );\r\n    return newMatchList.reduce(\r\n        // Set match results for bye matches\r\n        function (acc, match) {\r\n            if (match.players[WHITE] === DUMMY_ID) {\r\n                return acc.concat([assoc(\"result\", [0, byeValue], match)]);\r\n            }\r\n            if (match.players[BLACK] === DUMMY_ID) {\r\n                return acc.concat([assoc(\"result\", [byeValue, 0], match)]);\r\n            }\r\n            return acc.concat([match]);\r\n        },\r\n        []\r\n    );\r\n}\r\n\r\nexport function manualPair(players, pair, byeValue) {\r\n    const getPlayer = curry(getPlayerById)(players);\r\n    const match = createMatch({\r\n        id: pair.join(\"-\"),\r\n        players: [pair[WHITE], pair[BLACK]],\r\n        origRating: [\r\n            getPlayer(pair[WHITE]).rating,\r\n            getPlayer(pair[BLACK]).rating\r\n        ],\r\n        newRating: [\r\n            getPlayer(pair[WHITE]).rating,\r\n            getPlayer(pair[BLACK]).rating\r\n        ]\r\n    });\r\n    if (pair[WHITE] === DUMMY_ID) {\r\n        return assoc(\"result\", [0, byeValue], match);\r\n    }\r\n    if (pair[BLACK] === DUMMY_ID) {\r\n        return assoc(\"result\", [byeValue, 0], match);\r\n    }\r\n    return match;\r\n}\r\n","import {\r\n    createContext,\r\n    createElement,\r\n    useContext,\r\n    useReducer,\r\n    useEffect\r\n} from \"react\";\r\nimport {\r\n    __,\r\n    append,\r\n    concat,\r\n    difference,\r\n    lensPath,\r\n    mergeRight,\r\n    filter,\r\n    findIndex,\r\n    move,\r\n    over,\r\n    propEq,\r\n    remove,\r\n    reverse,\r\n    set\r\n} from \"ramda\";\r\nimport t from \"tcomb\";\r\nimport {localStorageOrDefault} from \"./helpers\";\r\nimport defaultTourneyList from \"./demo-tourney.json\";\r\nimport {autoPair, manualPair} from \"./match-functions\";\r\nimport {createTournament, Player} from \"../data-types\";\r\n\r\nconst ActionAddTourney = t.interface({\r\n    name: t.String\r\n});\r\nconst ActionDelTourney = t.interface({\r\n    index: t.Number\r\n});\r\nconst ActionAddRound = t.interface({\r\n    tourneyId: t.Number\r\n});\r\nconst ActionDelLastRound = t.interface({\r\n    tourneyId: t.Number,\r\n    players: t.list(Player)\r\n});\r\nconst ActionAddRemoveTieBreak = t.interface({\r\n    tourneyId: t.Number,\r\n    id: t.Number\r\n});\r\nconst ActionMoveTieBreak = t.interface({\r\n    tourneyId: t.Number,\r\n    oldIndex: t.Number,\r\n    newIndex: t.Number\r\n});\r\nconst ActionSetTourneyPlayers = t.interface({\r\n    tourneyId: t.Number,\r\n    players: t.list(t.Number)\r\n});\r\nconst ActionSetByeQueue = t.interface({\r\n    tourneyId: t.Number,\r\n    byeQueue: t.list(t.Number)\r\n});\r\nconst ActionAutoPair = t.interface({\r\n    tourneyId: t.Number,\r\n    roundId: t.Number,\r\n    unpairedPlayers: t.list(t.Number),\r\n    playerState: t.Any,\r\n    byeValue: t.Number\r\n});\r\nconst ActionManualPair = t.interface({\r\n    tourneyId: t.Number,\r\n    roundId: t.Number,\r\n    pair: t.list(t.Number),\r\n    players: t.list(Player),\r\n    byeValue: t.Number\r\n});\r\nconst ActionSetMatchResult = t.interface({\r\n    tourneyId: t.Number,\r\n    roundId: t.Number,\r\n    matchId: t.String,\r\n    result: t.tuple([t.Number, t.Number]),\r\n    newRating: t.tuple([t.Number, t.Number])\r\n});\r\nconst ActionEditMatch = t.interface({\r\n    tourneyId: t.Number,\r\n    roundId: t.Number,\r\n    matchId: t.String\r\n});\r\nconst ActionMoveMatch = t.interface({\r\n    tourneyId: t.Number,\r\n    roundId: t.Number,\r\n    oldIndex: t.Number,\r\n    newIndex: t.Number\r\n});\r\nconst ActionLoadState = t.interface({state: t.Any});\r\nconst ActionTypes = t.union([\r\n    ActionLoadState,\r\n    ActionAddTourney,\r\n    ActionDelTourney,\r\n    ActionAddRound,\r\n    ActionDelLastRound,\r\n    ActionAddRemoveTieBreak,\r\n    ActionAddRemoveTieBreak,\r\n    ActionMoveTieBreak,\r\n    ActionSetTourneyPlayers,\r\n    ActionSetByeQueue,\r\n    ActionAutoPair,\r\n    ActionManualPair,\r\n    ActionSetMatchResult,\r\n    ActionEditMatch,\r\n    ActionMoveMatch\r\n]);\r\nActionTypes.dispatch = function (x) {\r\n    const typeToConstructor = {\r\n        \"LOAD_STATE\": ActionLoadState,\r\n        \"ADD_TOURNEY\": ActionAddTourney,\r\n        \"DEL_TOURNEY\": ActionDelTourney,\r\n        \"ADD_ROUND\": ActionAddRound,\r\n        \"DEL_LAST_ROUND\": ActionDelLastRound,\r\n        \"ADD_TIEBREAK\": ActionAddRemoveTieBreak,\r\n        \"DEL_TIEBREAK\": ActionAddRemoveTieBreak,\r\n        \"MOVE_TIEBREAK\": ActionMoveTieBreak,\r\n        \"SET_TOURNEY_PLAYERS\": ActionSetTourneyPlayers,\r\n        \"SET_BYE_QUEUE\": ActionSetByeQueue,\r\n        \"AUTO_PAIR\": ActionAutoPair,\r\n        \"MANUAL_PAIR\": ActionManualPair,\r\n        \"SET_MATCH_RESULT\": ActionSetMatchResult,\r\n        \"DEL_MATCH\": ActionEditMatch,\r\n        \"SWAP_COLORS\": ActionEditMatch,\r\n        \"MOVE_MATCH\": ActionMoveMatch\r\n    };\r\n    return typeToConstructor[x.type];\r\n};\r\n\r\nfunction tourneysReducer(state, action) {\r\n    ActionTypes(action);\r\n    switch (action.type) {\r\n    case \"ADD_TOURNEY\":\r\n        return append(createTournament({name: action.name}), state);\r\n    case \"DEL_TOURNEY\":\r\n        return state.filter((ignore, i) => i !== action.index);\r\n    case \"ADD_ROUND\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\"]),\r\n            append([]),\r\n            state\r\n        );\r\n    case \"DEL_LAST_ROUND\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\"]),\r\n            remove(-1, 1),\r\n            state\r\n        );\r\n    case \"ADD_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            append(action.id),\r\n            state\r\n        );\r\n    case \"DEL_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            filter((id) => id !== action.id),\r\n            state\r\n        );\r\n    case \"MOVE_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    case \"SET_TOURNEY_PLAYERS\":\r\n        return set(\r\n            lensPath([action.tourneyId, \"players\"]),\r\n            action.players,\r\n            state\r\n        );\r\n    case \"SET_BYE_QUEUE\":\r\n        return set(\r\n            lensPath([action.tourneyId, \"byeQueue\"]),\r\n            action.byeQueue,\r\n            state\r\n        );\r\n    case \"AUTO_PAIR\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            concat(\r\n                __,\r\n                autoPair(\r\n                    state[action.tourneyId],\r\n                    action.playerState,\r\n                    action.roundId,\r\n                    action.unpairedPlayers,\r\n                    action.byeValue\r\n                )\r\n            ),\r\n            state\r\n        );\r\n    case \"MANUAL_PAIR\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            append(manualPair(action.players, action.pair, action.byeValue)),\r\n            state\r\n        );\r\n    case \"SET_MATCH_RESULT\":\r\n        return set(\r\n            lensPath([\r\n                action.tourneyId,\r\n                \"roundList\",\r\n                action.roundId,\r\n                findIndex(\r\n                    propEq(\"id\", action.matchId),\r\n                    state[action.tourneyId].roundList[action.roundId]\r\n                ),\r\n                \"result\"\r\n            ]),\r\n            action.result,\r\n            set(\r\n                lensPath([\r\n                    action.tourneyId,\r\n                    \"roundList\",\r\n                    action.roundId,\r\n                    findIndex(\r\n                        propEq(\"id\", action.matchId),\r\n                        state[action.tourneyId].roundList[action.roundId]\r\n                    ),\r\n                    \"newRating\"\r\n                ]),\r\n                action.newRating,\r\n                state\r\n            )\r\n        );\r\n    case \"DEL_MATCH\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            filter((match) => match.id !== action.matchId),\r\n            state\r\n        );\r\n    case \"SWAP_COLORS\":\r\n        return over(\r\n            lensPath([\r\n                action.tourneyId,\r\n                \"roundList\",\r\n                action.roundId,\r\n                findIndex(\r\n                    propEq(\"id\", action.matchId),\r\n                    state[action.tourneyId].roundList[action.roundId]\r\n                )\r\n            ]),\r\n            (match) => mergeRight(\r\n                match,\r\n                {\r\n                    result: reverse(match.result),\r\n                    players: reverse(match.players),\r\n                    origRating: reverse(match.origRating),\r\n                    newRating: reverse(match.newRating)\r\n                }\r\n            ),\r\n            state\r\n        );\r\n    case \"MOVE_MATCH\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    case \"LOAD_STATE\":\r\n        return action.state;\r\n    default:\r\n        throw new Error(\"Unexpected action type \" + action.type);\r\n    }\r\n}\r\n\r\nconst TournamentContext = createContext(null);\r\n\r\nexport function useTournaments() {\r\n    return useContext(TournamentContext);\r\n}\r\n\r\nexport function useTournament(tourneyId) {\r\n    const [tourneys, dispatch] = useContext(TournamentContext);\r\n    return [tourneys[tourneyId], dispatch];\r\n}\r\n\r\nexport function useRound(tourneyId, roundId) {\r\n    const [tourney, dispatch] = useTournament(tourneyId);\r\n    const matchList = tourney.roundList[roundId];\r\n    const matched = matchList.reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    );\r\n    const unmatched = difference(tourney.players, matched);\r\n    return {tourney, dispatch, unmatched, matchList};\r\n}\r\n\r\nexport function TournamentProvider(props) {\r\n    const loadedData = localStorageOrDefault(\"tourneys\", defaultTourneyList);\r\n    const [state, dispatch] = useReducer(tourneysReducer, loadedData);\r\n    useEffect(\r\n        function () {\r\n            localStorage.setItem(\"tourneys\", JSON.stringify(state));\r\n        },\r\n        [state]\r\n    );\r\n    return (\r\n        createElement(\r\n            TournamentContext.Provider,\r\n            {value: [state, dispatch]},\r\n            props.children\r\n        )\r\n    );\r\n}\r\n","import {\r\n    createContext,\r\n    createElement,\r\n    useContext,\r\n    useReducer,\r\n    useEffect\r\n} from \"react\";\r\nimport {assoc} from \"ramda\";\r\nimport t from \"tcomb\";\r\nimport {localStorageOrDefault} from \"./helpers\";\r\nimport defaultOptions from \"./demo-options.json\";\r\n\r\nconst ActionLoadState = t.interface({state: t.Any});\r\nconst ActionSetByeValue = t.interface({byeValue: t.Number});\r\nconst ActionTypes = t.union([ActionLoadState, ActionSetByeValue]);\r\nActionTypes.dispatch = function (x) {\r\n    const typeToConstructor = {\r\n        \"LOAD_STATE\": ActionLoadState,\r\n        \"SET_BYE_VALUE\": ActionSetByeValue\r\n    };\r\n    return typeToConstructor[x.type];\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    ActionTypes(action);\r\n    switch (action.type) {\r\n    case \"SET_BYE_VALUE\":\r\n        return assoc(\"byeValue\", action.byeValue, state);\r\n    case \"LOAD_STATE\":\r\n        return action.state;\r\n    default:\r\n        throw new Error(\"Unexpected action type.\");\r\n    }\r\n}\r\n\r\nconst OptionsContext = createContext(null);\r\n\r\nexport function useOptions() {\r\n    return useContext(OptionsContext);\r\n}\r\n\r\nexport function OptionsProvider(props) {\r\n    const loadedData = localStorageOrDefault(\"options\", defaultOptions);\r\n    const [state, dispatch] = useReducer(reducer, loadedData);\r\n    useEffect(\r\n        function () {\r\n            localStorage.setItem(\"options\", JSON.stringify(state));\r\n        },\r\n        [state]\r\n    );\r\n    return (\r\n        createElement(\r\n            OptionsContext.Provider,\r\n            {value: [state, dispatch]},\r\n            props.children\r\n        )\r\n    );\r\n}\r\n","import React, {useEffect, useMemo} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tooltip from \"@reach/tooltip\";\r\nimport {Link} from \"@reach/router\";\r\nimport last from \"ramda/src/last\";\r\nimport Icons from \"../icons\";\r\nimport {useTournament, usePlayers} from \"../../state\";\r\nimport {calcNumOfRounds} from \"../../pairing-scoring\";\r\nimport {DUMMY_ID} from \"../../data-types\";\r\nimport styles from \"./tournament.module.css\";\r\n\r\nexport default function Tournament(props) {\r\n    const tourneyId = Number(props.tourneyId);\r\n    const [tourney, dispatch] = useTournament(tourneyId);\r\n    const {name, players, roundList} = tourney;\r\n    const {playerState, getPlayer, playerDispatch} = usePlayers();\r\n    // This isn't expensive, but why not memoize it?\r\n    const isNewRoundReady = useMemo(\r\n        function () {\r\n            const lastRound = last(roundList);\r\n            if (!lastRound) {\r\n                return true;\r\n            }\r\n            const matchedPlayers = lastRound.reduce(\r\n                /** @param {number[]} acc */\r\n                (acc, match) => acc.concat(match.players),\r\n                []\r\n            );\r\n            const unMatchedPlayers = players.filter(\r\n                (pId) => !matchedPlayers.includes(pId)\r\n            );\r\n            const results = lastRound.map(\r\n                (match) => match.result[0] + match.result[1]\r\n            );\r\n            return (unMatchedPlayers.length === 0 && !results.includes(0));\r\n        },\r\n        [players, roundList]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            const origTitle = document.title;\r\n            document.title = name;\r\n            return function () {\r\n                document.title = origTitle;\r\n            };\r\n        },\r\n        [name]\r\n    );\r\n    const isItOver = roundList.length >= calcNumOfRounds(players.length);\r\n    const [tooltipText, tooltipWarn] = (function () {\r\n        if (!isNewRoundReady) {\r\n            return [\r\n                \"You must complete the last round before beginning a new one.\",\r\n                true\r\n            ];\r\n        } else if (isItOver) {\r\n            return [\"All necessary rounds have completed.\", true];\r\n        } else {\r\n            return [\"Ready to begin a new round.\", false];\r\n        }\r\n    }());\r\n\r\n    function newRound() {\r\n        const confirmText = (\r\n            \"All rounds have completed. Are you sure you want to begin a new \"\r\n            + \"one?\"\r\n        );\r\n        if (isItOver) {\r\n            if (!window.confirm(confirmText)) {\r\n                return;\r\n            }\r\n        }\r\n        dispatch({type: \"ADD_ROUND\", tourneyId});\r\n        return;\r\n    }\r\n\r\n    async function delLastRound() {\r\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\r\n            await props.navigate(\".\");\r\n            // If a match has been scored, then reset it.\r\n            // Should this logic be somewhere else?\r\n            last(roundList).forEach(function (match) {\r\n                if (match.result[0] + match.result[1] === 0) {\r\n                    return; // Don't change players who haven't scored.\r\n                }\r\n                match.players.forEach(function (pId, color) {\r\n                    if (pId === DUMMY_ID) {\r\n                        return; // Don't try to set the dummy.\r\n                    }\r\n                    const {matchCount} = getPlayer(pId);\r\n                    playerDispatch({\r\n                        type: \"SET_PLAYER_MATCHCOUNT\",\r\n                        id: pId,\r\n                        matchCount: matchCount - 1\r\n                    });\r\n                    playerDispatch({\r\n                        type: \"SET_PLAYER_RATING\",\r\n                        id: pId,\r\n                        rating: match.origRating[color]\r\n                    });\r\n                });\r\n            });\r\n            dispatch({\r\n                type: \"DEL_LAST_ROUND\",\r\n                players: playerState.players,\r\n                tourneyId\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.tournament}>\r\n            <div className={styles.header}>\r\n                <nav>\r\n                    <Link to=\"/\">\r\n                        <Icons.ChevronLeft/> Back\r\n                    </Link>\r\n                </nav>\r\n                <h2>{name}</h2>\r\n            </div>\r\n            <div className={styles.sidebar}>\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\".\">\r\n                                <Icons.Users /> Players\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"crosstable\">\r\n                                <Icons.Layers /> Crosstable\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"scores\">\r\n                                <Icons.List /> Score detail\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <hr />\r\n                    <ul>\r\n                        {Object.keys(roundList).map((id) => (\r\n                            <li key={id}>\r\n                                <Link to={`${id}`}>\r\n                                    Round {Number(id) + 1}\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </nav>\r\n                <hr />\r\n                <ul>\r\n                    <li>\r\n                        <button\r\n                            onClick={newRound}\r\n                            disabled={!isNewRoundReady}\r\n                        >\r\n                            <Icons.Plus/> New round\r\n                        </button>{\" \"}\r\n                        <Tooltip label={tooltipText}>\r\n                            <span className=\"helpIcon\">\r\n                                {(tooltipWarn)\r\n                                    ? <Icons.Alert className=\"status-alert\" />\r\n                                    : <Icons.Check className=\"status-ok\" />\r\n                                }\r\n                            </span>\r\n                        </Tooltip>\r\n                    </li>\r\n                    <li>\r\n                        <button\r\n                            className={\"danger \" + styles.toolbarItem}\r\n                            onClick={delLastRound}\r\n                            disabled={roundList.length === 0}\r\n                        >\r\n                            <Icons.Trash /> Remove last round\r\n                        </button>\r\n                    </li>\r\n                    <li>\r\n                        Round progress: {roundList.length}/\r\n                        {calcNumOfRounds(players.length)}{\" \"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={styles.content}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nTournament.propTypes = {\r\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    children: PropTypes.node,\r\n    navigate: PropTypes.func,\r\n    path: PropTypes.string\r\n};\r\n","import React, {useState} from \"react\";\r\nimport Icons from \"../icons\";\r\nimport {Link} from \"@reach/router\";\r\nimport {useTournaments} from \"../../state\";\r\n\r\nexport default function TournamentList(props) {\r\n    const [tourneys, dispatch] = useTournaments();\r\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\r\n\r\n    function updateNewName(event) {\r\n        setNewTourneyName(event.target.value);\r\n    }\r\n\r\n    function makeTournament(event) {\r\n        event.preventDefault();\r\n        dispatch({\r\n            type: \"ADD_TOURNEY\",\r\n            name: newTourneyName\r\n        });\r\n        setNewTourneyName(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(tourneys.length > 0) &&\r\n                <h2>Tournament list</h2>\r\n            }\r\n            {(tourneys.length > 0)\r\n                ?\r\n                <ol>\r\n                    {tourneys.map((tourney, i) =>\r\n                        <li key={i}>\r\n                            <Link to={String(i)}>\r\n                                {tourney.name}\r\n                            </Link>{\" \"}\r\n                            <button\r\n                                title={`Delete “${tourney.name}”`}\r\n                                aria-label={`Delete “${tourney.name}”`}\r\n                                className=\"danger iconButton\"\r\n                                onClick={\r\n                                    () => dispatch({\r\n                                        type: \"DEL_TOURNEY\",\r\n                                        index: i\r\n                                    })\r\n                                }\r\n                            >\r\n                                <Icons.Trash />\r\n                            </button>\r\n                        </li>\r\n                    )}\r\n                </ol>\r\n                : <p>No tournaments added yet.</p>\r\n            }\r\n            <form onSubmit={makeTournament}>\r\n                <fieldset>\r\n                    <legend>Make a new tournament</legend>\r\n                    <label>Name:{\" \"}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"tournament name\"\r\n                            value={newTourneyName}\r\n                            onChange={updateNewName}\r\n                            required={true}\r\n                        />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Create\" />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tournament from \"./tournament\";\r\nimport TournamentList from \"./list\";\r\n\r\nconst TournamentIndex = (props) => (\r\n    <div>\r\n        {props.children}\r\n    </div>\r\n);\r\nTournamentIndex.propTypes = {\r\n    children: PropTypes.node,\r\n    path: PropTypes.string\r\n};\r\n\r\nexport default TournamentIndex;\r\nexport {Tournament, TournamentList};\r\n","import React, {useMemo, useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport numeral from \"numeral\";\r\nimport {Link} from \"@reach/router\";\r\nimport Icons from \"../icons\";\r\nimport {getPlayerAvoidList, kFactor} from \"../../pairing-scoring\";\r\nimport {usePlayers} from \"../../state\";\r\n\r\nexport default function PlayerInfoBox(props) {\r\n    const playerId = Number(props.playerId);\r\n    const {playerState, playerDispatch, getPlayer} = usePlayers();\r\n    const {players, avoid} = playerState;\r\n    const [singAvoidList, setSingAvoidList] = useState(\r\n        getPlayerAvoidList(playerId, avoid)\r\n    );\r\n    const unAvoided = useMemo(\r\n        () => (\r\n            players.map(\r\n                (player) => player.id\r\n            ).filter(\r\n                (pId) => !singAvoidList.includes(pId) && pId !== playerId\r\n            )\r\n        ),\r\n        [players, playerId, singAvoidList]\r\n    );\r\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\r\n    function avoidAdd(event) {\r\n        event.preventDefault();\r\n        playerDispatch({\r\n            type: \"ADD_AVOID_PAIR\",\r\n            pair: [playerId, Number(selectedAvoider)]\r\n        });\r\n    }\r\n    useEffect(\r\n        function () {\r\n            setSingAvoidList(getPlayerAvoidList(playerId, avoid));\r\n        },\r\n        [avoid, playerId]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            setSelectedAvoider(unAvoided[0]);\r\n        },\r\n        [setSelectedAvoider, unAvoided]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            const origTitle = document.title;\r\n            document.title = (\r\n                getPlayer(playerId).firstName\r\n                + \" \" + getPlayer(playerId).lastName\r\n            );\r\n            return function () {\r\n                document.title = origTitle;\r\n            };\r\n        },\r\n        [playerId, getPlayer]\r\n    );\r\n    function handleChange(event) {\r\n        event.preventDefault();\r\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\r\n        playerDispatch({\r\n            type: \"SET_PLAYER\",\r\n            id: playerId,\r\n            firstName: firstName.value,\r\n            lastName: lastName.value,\r\n            matchCount: Number(matchCount.value),\r\n            rating: Number(rating.value)\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <Link to=\"..\"><Icons.ChevronLeft /> Back</Link>\r\n            <h2>\r\n                Profile for{\" \"}\r\n                {getPlayer(playerId).firstName} {getPlayer(playerId).lastName}\r\n            </h2>\r\n            <form onChange={handleChange} onSubmit={handleChange}>\r\n                <p>\r\n                    <label>\r\n                    First name{\" \"}\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            defaultValue={getPlayer(playerId).firstName}\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                    Last name{\" \"}\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            defaultValue={getPlayer(playerId).lastName}\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                    Matches played{\" \"}\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"matchCount\"\r\n                            defaultValue={\r\n                                String(getPlayer(playerId).matchCount)\r\n                            }\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                    Rating\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"rating\"\r\n                            defaultValue={String(getPlayer(playerId).rating)}\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                    K factor\r\n                        <input\r\n                            type=\"number\"\r\n                            readOnly\r\n                            value={(\r\n                                numeral(\r\n                                    kFactor(getPlayer(playerId).matchCount)\r\n                                ).format(\"00\")\r\n                            )}\r\n                        />\r\n                    </label>\r\n                </p>\r\n            </form>\r\n            <ul>\r\n                <h3>Players to avoid</h3>\r\n                {singAvoidList.map((pId) => (\r\n                    <li key={pId}>\r\n                        {getPlayer(pId).firstName}{\" \"}\r\n                        {getPlayer(pId).lastName}{\" \"}\r\n                        <button\r\n                            className=\"danger iconButton\"\r\n                            onClick={() =>\r\n                                playerDispatch({\r\n                                    type: \"DEL_AVOID_PAIR\",\r\n                                    pair: [playerId, pId]\r\n                                })\r\n                            }\r\n                            title={`Remove ${getPlayer(pId).firstName} \r\n${getPlayer(pId).lastName}`}\r\n                            arial-label={`Remove \r\n${getPlayer(pId).firstName} ${getPlayer(pId).lastName} from avoid list.`}\r\n                        >\r\n                            <Icons.Trash />\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n                {avoid.length === 0 && <li>None</li>}\r\n            </ul>\r\n            <form onSubmit={(event) => avoidAdd(event)}>\r\n                <fieldset>\r\n                    <legend>Add player to avoid</legend>\r\n                    <select\r\n                        onBlur={(event) =>\r\n                            setSelectedAvoider(Number(event.target.value))\r\n                        }\r\n                    >\r\n                        {unAvoided.map((pId) => (\r\n                            <option key={pId} value={pId}>\r\n                                {getPlayer(pId).firstName}{\" \"}\r\n                                {getPlayer(pId).lastName}\r\n                            </option>\r\n                        ))}\r\n                    </select>{\" \"}\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nPlayerInfoBox.propTypes = {\r\n    playerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    path: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"@reach/router\";\r\nimport {usePlayers} from \"../state\";\r\nimport styles from \"./utility.module.css\";\r\nimport {DUMMY_ID} from \"../data-types\";\r\n\r\nexport const Button = ({children, action}) => (\r\n    <button onClick={action}>\r\n        {children}\r\n    </button>\r\n);\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    action: PropTypes.func.isRequired\r\n};\r\n\r\nexport const BackButton = ({action}) => (\r\n    <Button action={action}>&lt; Back</Button>\r\n);\r\nBackButton.propTypes = {\r\n    action: PropTypes.func.isRequired\r\n};\r\n\r\nexport const OpenButton = ({action}) => (\r\n    <Button action={action}>Open &gt;</Button>\r\n);\r\nOpenButton.propTypes = {\r\n    action: PropTypes.func.isRequired\r\n};\r\n\r\nexport function Panel({children, style}) {\r\n    return (\r\n        <div style={{...style}} className={styles.panel}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\nPanel.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    style: PropTypes.object\r\n};\r\n\r\nexport function PanelContainer(props) {\r\n    return (\r\n        <div {...props} className={styles.panels}>\r\n            {React.Children.map(props.children, (child) => child)}\r\n        </div>\r\n    );\r\n}\r\nPanelContainer.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n};\r\n\r\nexport function PlayerLink({id, firstName, lastName}) {\r\n    const {getPlayer} = usePlayers();\r\n    const player = getPlayer(id);\r\n    const name = (function () {\r\n        if (firstName && lastName) {\r\n            return player.firstName + \" \" + player.lastName;\r\n        } else if (firstName && !lastName) {\r\n            return player.firstName;\r\n        } else if (!firstName && lastName) {\r\n            return player.lastName;\r\n        } else {\r\n            return null;\r\n        }\r\n    }());\r\n    if (id === DUMMY_ID) { // there's no bye player profile\r\n        return name;\r\n    }\r\n    if (!name) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link to={\"/players/\" + id}>\r\n            {firstName && getPlayer(id).firstName}{\" \"}\r\n            {lastName && getPlayer(id).lastName}\r\n        </Link>\r\n    );\r\n}\r\nPlayerLink.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    firstName: PropTypes.bool,\r\n    lastName: PropTypes.bool\r\n};\r\n\r\n/*******************************************************************************\r\n * Non-JSX functions\r\n ******************************************************************************/\r\nexport function findById(id, list) {\r\n    return list.filter((x) => x.id === id)[0];\r\n}\r\n\r\nexport function findIndexById(id, list) {\r\n    return list.indexOf(findById(id, list));\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {usePlayers} from \"../../state\";\r\nimport {assoc} from \"ramda\";\r\n\r\nexport default function NewPlayer() {\r\n    const {playerDispatch} = usePlayers();\r\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\r\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\r\n\r\n    const handleSubmit = function (event) {\r\n        event.preventDefault();\r\n        const {firstName, lastName, rating} = newPlayerData;\r\n        setNewPlayerdata(newPlayerDefault);\r\n        playerDispatch({type: \"ADD_PLAYER\", firstName, lastName, rating});\r\n    };\r\n\r\n    const updateField = function (event) {\r\n        event.preventDefault();\r\n        const {name, value} = event.currentTarget;\r\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <legend>Register a new player</legend>\r\n                <p>\r\n                    <label>\r\n                        First name{\" \"}\r\n                        <input type=\"text\" name=\"firstName\"\r\n                            onChange={updateField}\r\n                            value={newPlayerData.firstName} required\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        Last name{\" \"}\r\n                        <input type=\"text\" name=\"lastName\"\r\n                            onChange={updateField}\r\n                            value={newPlayerData.lastName} required\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        Rating {\" \"}\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"rating\"\r\n                            onChange={updateField}\r\n                            value={newPlayerData.rating}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <input type=\"submit\" value=\"Add\"/>\r\n                </p>\r\n            </fieldset>\r\n        </form>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"@reach/router\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport Icons from \"../icons\";\r\nimport {usePlayers} from \"../../state\";\r\nimport {PlayerLink} from \"../utility\";\r\nimport NewPlayer from \"./new-player\";\r\n\r\nexport default function PlayerList(props) {\r\n    const {playerState, playerDispatch} = usePlayers();\r\n    const delPlayer = function (event, id) {\r\n        event.preventDefault();\r\n        playerDispatch({type: \"DEL_PLAYER\", id});\r\n    };\r\n    return (\r\n        <div>\r\n            <table>\r\n                <caption>Demo Roster</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Rating</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{playerState.players.map((player) =>\r\n                    <tr key={player.id}>\r\n                        <td className=\"table__player\">\r\n                            <PlayerLink id={player.id} firstName />\r\n                        </td>\r\n                        <td className=\"table__player\">\r\n                            <PlayerLink id={player.id} lastName />\r\n                        </td>\r\n                        <td className=\"table__number\">{player.rating}</td>\r\n                        <td>\r\n                            <button\r\n                                className=\"danger iconButton\"\r\n                                onClick={(event) =>\r\n                                    delPlayer(event, player.id)\r\n                                }\r\n                                // eslint-disable-next-line max-len\r\n                                title={`Delete ${player.firstName} ${player.lastName}`}\r\n                                // eslint-disable-next-line max-len\r\n                                aria-label={`Delete ${player.firstName} ${player.lastName}`}\r\n                            >\r\n                                <Icons.Trash />\r\n                            </button>\r\n                        </td>\r\n                        <td>\r\n                            <Link to={String(player.id)}>\r\n                            Open\r\n                                <VisuallyHidden>\r\n                                    {\" \"}{player.firstName} {player.lastName}\r\n                                </VisuallyHidden>\r\n                                {\" \"}<Icons.ChevronRight />\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n            <NewPlayer />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PlayerInfo from \"./info-box\";\r\nimport PlayerList from \"./list\";\r\n\r\nexport default function Players(props) {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nPlayers.propTypes = {\r\n    children: PropTypes.node,\r\n    path: PropTypes.string\r\n};\r\n\r\nexport {PlayerInfo, PlayerList};\r\n","import React, {useState} from \"react\";\r\nimport numeral from \"numeral\";\r\nimport dashify from \"dashify\";\r\nimport {defaultTo} from \"ramda\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icons from \"../icons\";\r\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\r\nimport {useTournament, usePlayers} from \"../../state\";\r\nimport {\r\n    createStandingTree,\r\n    tieBreakMethods\r\n} from \"../../pairing-scoring\";\r\nimport style from \"./scores.module.css\";\r\n\r\nfunction ScoreTable({tourneyId}) {\r\n    const [{tieBreaks, roundList}] = useTournament(tourneyId);\r\n    const {getPlayer} = usePlayers();\r\n    const [standingTree, tbMethods] = createStandingTree(tieBreaks, roundList);\r\n    return (\r\n        <table className={style.table}>\r\n            <caption>Score detail</caption>\r\n            <tbody>\r\n                <tr className={style.topHeader}>\r\n                    <th scope=\"col\">Rank</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Score</th>\r\n                    {tbMethods.map((name, i) => (\r\n                        <th key={i} scope=\"col\">\r\n                            {name}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                {standingTree.map((standingsFlat, rank) =>\r\n                    standingsFlat.map((standing, j, src) => (\r\n                        <tr key={standing.id} className={style.row}>\r\n                            {j === 0 && ( // Only display the rank once\r\n                                <th\r\n                                    scope=\"row\"\r\n                                    className={\"table__number \" + style.rank}\r\n                                    rowSpan={src.length}\r\n                                >\r\n                                    {numeral(rank + 1).format(\"0o\")}\r\n                                </th>\r\n                            )}\r\n                            <th\r\n                                scope=\"row\"\r\n                                className={style.playerName}\r\n                                data-testid={rank}\r\n                            >\r\n                                {getPlayer(standing.id).firstName}&nbsp;\r\n                                {getPlayer(standing.id).lastName}\r\n                            </th>\r\n                            <td\r\n                                className=\"table__number\"\r\n                                data-testid={dashify(\r\n                                    getPlayer(standing.id).firstName\r\n                                    + getPlayer(standing.id).lastName\r\n                                    + \" score\"\r\n                                )}\r\n                            >\r\n                                {numeral(standing.score).format(\"1/2\")}\r\n                            </td>\r\n                            {standing.tieBreaks.map((score, i) => (\r\n                                <td\r\n                                    key={i}\r\n                                    className=\"table__number\"\r\n                                    data-testid={dashify(\r\n                                        getPlayer(standing.id).firstName\r\n                                        + getPlayer(standing.id).lastName\r\n                                        + tbMethods[i]\r\n                                    )}\r\n                                >\r\n                                    {numeral(score).format(\"1/2\")}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nScoreTable.propTypes = {\r\n    tourneyId: PropTypes.number.isRequired\r\n};\r\n\r\nfunction SelectTieBreaks({tourneyId}) {\r\n    const [{tieBreaks}, dispatch] = useTournament(tourneyId);\r\n    const [selectedTb, setSelectedTb] = useState(null);\r\n\r\n    function toggleTb(id = null) {\r\n        const defaultId = defaultTo(selectedTb);\r\n        if (tieBreaks.includes(defaultId(id))) {\r\n            dispatch({type: \"DEL_TIEBREAK\", id: defaultId(id), tourneyId});\r\n            setSelectedTb(null);\r\n        } else {\r\n            dispatch({type: \"ADD_TIEBREAK\", id: defaultId(id), tourneyId});\r\n        }\r\n    }\r\n\r\n    function moveTb(direction) {\r\n        const index = tieBreaks.indexOf(selectedTb);\r\n        dispatch({\r\n            type: \"MOVE_TIEBREAK\",\r\n            oldIndex: index,\r\n            newIndex: index + direction,\r\n            tourneyId\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Selected tiebreak methods</h3>\r\n            <div className=\"toolbar\">\r\n                <button\r\n                    onClick={() => toggleTb()}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Toggle\r\n                </button>\r\n                <button\r\n                    onClick={() => moveTb(-1)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    <Icons.ArrowUp/> Move up\r\n                </button>\r\n                <button\r\n                    onClick={() => moveTb(1)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    <Icons.ArrowDown/> Move down\r\n                </button>\r\n                <button\r\n                    onClick={() => setSelectedTb(null)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Done\r\n                </button>\r\n            </div>\r\n            <ol>\r\n                {tieBreaks.map((id) => (\r\n                    <li\r\n                        key={id}\r\n                        className={selectedTb === id ? \"selected\" : \"\"}\r\n                    >\r\n                        {tieBreakMethods[id].name}{\" \"}\r\n                        <button\r\n                            onClick={() =>\r\n                                selectedTb === id\r\n                                    ? setSelectedTb(null)\r\n                                    : setSelectedTb(id)\r\n                            }\r\n                            disabled={\r\n                                selectedTb !== null && selectedTb !== id\r\n                            }\r\n                        >\r\n                            {selectedTb === id ? \"Done\" : \"Edit\"}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <h3>Available tiebreak methods</h3>\r\n            <ol>\r\n                {tieBreakMethods.map((method, id) => (\r\n                    <li key={id}>\r\n                        <span\r\n                            className={\r\n                                tieBreaks.includes(id)\r\n                                    ? \"enabled\"\r\n                                    : \"disabled\"\r\n                            }\r\n                        >\r\n                            {method.name}\r\n                        </span>\r\n                        {!tieBreaks.includes(id) && (\r\n                            <button onClick={() => toggleTb(id)}>\r\n                                Add\r\n                            </button>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\nSelectTieBreaks.propTypes = {\r\n    tourneyId: PropTypes.number.isRequired\r\n};\r\n\r\nconst Scores = ({tourneyId}) => (\r\n    <Tabs>\r\n        <TabList>\r\n            <Tab><Icons.List /> Scores</Tab>\r\n            <Tab><Icons.Settings /> Edit tiebreak rules</Tab>\r\n        </TabList>\r\n        <TabPanels>\r\n            <TabPanel>\r\n                <ScoreTable tourneyId={Number(tourneyId)}/>\r\n            </TabPanel>\r\n            <TabPanel>\r\n                <SelectTieBreaks tourneyId={Number(tourneyId)} />\r\n            </TabPanel>\r\n        </TabPanels>\r\n    </Tabs>\r\n);\r\nScores.propTypes = {\r\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    path: PropTypes.string\r\n};\r\n\r\nexport default Scores;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NewPlayer from \"../../players/new-player\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\n\r\nexport default function Selecting({tourneyId}) {\r\n    const [{players}, dispatch] = useTournament(tourneyId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n\r\n    function togglePlayer(event) {\r\n        const id = Number(event.target.value);\r\n        if (event.target.checked) {\r\n            dispatch({\r\n                type: \"SET_TOURNEY_PLAYERS\",\r\n                players: players.concat([id]),\r\n                tourneyId\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: \"SET_TOURNEY_PLAYERS\",\r\n                players: players.filter((pId) => pId !== id),\r\n                tourneyId\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                onClick={() =>\r\n                    dispatch({\r\n                        type: \"SET_TOURNEY_PLAYERS\",\r\n                        players: playerState.players.map(\r\n                            (p) => p.id\r\n                        ),\r\n                        tourneyId\r\n                    })\r\n                }\r\n            >\r\n                Select all\r\n            </button>\r\n            <button\r\n                onClick={() =>\r\n                    dispatch({\r\n                        type: \"SET_TOURNEY_PLAYERS\",\r\n                        players: [],\r\n                        tourneyId\r\n                    })\r\n                }\r\n            >\r\n                Select none\r\n            </button>\r\n            {/* <button onClick={() => setIsSelecting(false)}>\r\n                Done\r\n            </button> */}\r\n            <table>\r\n                <caption>Select players</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Select</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {playerState.players.map(({id}) => (\r\n                        <tr key={id}>\r\n                            <td>{getPlayer(id).firstName}</td>\r\n                            <td>{getPlayer(id).lastName}</td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    value={id}\r\n                                    checked={players.includes(id)}\r\n                                    onChange={togglePlayer}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <NewPlayer />\r\n        </div>\r\n    );\r\n}\r\nSelecting.propTypes = {\r\n    tourneyId: PropTypes.number\r\n};\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Icons from \"../../icons\";\r\nimport Selecting from \"./selecting\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\nimport {PanelContainer, Panel} from \"../../utility\";\r\nimport {hasHadBye, rounds2Matches} from \"../../../pairing-scoring\";\r\n\r\nexport default function PlayerSelect(props) {\r\n    const tourneyId = Number(props.tourneyId);\r\n    const [{players, byeQueue, roundList}, dispatch] = useTournament(tourneyId);\r\n    const {getPlayer} = usePlayers();\r\n    const [isSelecting, setIsSelecting] = useState(players.length === 0);\r\n    const matches = rounds2Matches(roundList);\r\n    return (\r\n        <PanelContainer>\r\n            <Panel>\r\n                <button onClick={() => setIsSelecting(true)}>\r\n                    <Icons.Edit /> Edit player roster\r\n                </button>\r\n                <table>\r\n                    <caption>Current roster</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>First name</th>\r\n                            <th>Last name</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {players.map((pId) => (\r\n                            <tr\r\n                                key={pId}\r\n                                className={getPlayer(pId).type + \" player\"}\r\n                            >\r\n                                <td>{getPlayer(pId).firstName}</td>\r\n                                <td>{getPlayer(pId).lastName}</td>\r\n                                <td>\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            dispatch({\r\n                                                type: \"SET_BYE_QUEUE\",\r\n                                                byeQueue: byeQueue.concat(\r\n                                                    [pId]\r\n                                                ),\r\n                                                tourneyId\r\n                                            })\r\n                                        }\r\n                                        disabled={byeQueue.includes(\r\n                                            pId\r\n                                        )}\r\n                                    >\r\n                                        Bye signup\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Panel>\r\n            <Panel>\r\n                <h3>Bye queue</h3>\r\n                {(byeQueue.length === 0) &&\r\n                    <p>No players have signed up for a bye round.</p>\r\n                }\r\n                <ol>\r\n                    {byeQueue.map((pId) => (\r\n                        <li\r\n                            key={pId}\r\n                            className={\r\n                                hasHadBye(pId, matches)\r\n                                ? \"disabled\"\r\n                                : \"\"\r\n                            }\r\n                        >\r\n                            {getPlayer(pId).firstName}{\" \"}\r\n                            {getPlayer(pId).lastName}\r\n                            <button\r\n                                onClick={() =>\r\n                                    dispatch({\r\n                                        type: \"SET_BYE_QUEUE\",\r\n                                        byeQueue: byeQueue.filter(\r\n                                            (id) => pId !== id\r\n                                        ),\r\n                                        tourneyId\r\n                                    })\r\n                                }\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </Panel>\r\n            <Dialog isOpen={isSelecting}>\r\n                <button onClick={() => setIsSelecting(false)}>Done</button>\r\n                <Selecting tourneyId={tourneyId} />\r\n            </Dialog>\r\n        </PanelContainer>\r\n    );\r\n}\r\nPlayerSelect.propTypes = {\r\n    path: PropTypes.string,\r\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n};\r\n","// TODO: This component is in need of a major cleanup. I made this way too\r\n// complex and fragile.\r\nimport React, {useMemo} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport numeral from \"numeral\";\r\nimport {assoc} from \"ramda\";\r\nimport Icons from \"../icons\";\r\nimport {useTournament, usePlayers} from \"../../state\";\r\nimport {\r\n    createStandingList,\r\n    getResultsByOpponent,\r\n    getPerformanceRatings,\r\n    rounds2Matches\r\n} from \"../../pairing-scoring\";\r\nimport style from \"./scores.module.css\";\r\n\r\nexport default function Crosstable({tourneyId}) {\r\n    const [{tieBreaks, roundList}] = useTournament(Number(tourneyId));\r\n    const {getPlayer} = usePlayers();\r\n    const [standings, opponentScores] = useMemo(\r\n        function () {\r\n            const [standingsFlat] = createStandingList(tieBreaks, roundList);\r\n            const matches = rounds2Matches(roundList);\r\n            const opponentResults = standingsFlat.reduce(\r\n                (acc, standing) => (\r\n                    assoc(\r\n                        String(standing.id),\r\n                        getResultsByOpponent(standing.id, matches),\r\n                        acc\r\n                    )\r\n                ),\r\n                {}\r\n            );\r\n            return [standingsFlat, opponentResults];\r\n        },\r\n        [roundList, tieBreaks]\r\n    );\r\n\r\n    function getXScore(player1Id, player2Id) {\r\n        if (player1Id === player2Id) {\r\n            return <Icons.X/>;\r\n        }\r\n        const result = opponentScores[String(player1Id)][player2Id];\r\n        if (result === undefined) {\r\n            return null;\r\n        }\r\n        return numeral(result).format(\"1/2\");\r\n    }\r\n\r\n    function getRatingChange(playerId) {\r\n        const matches = rounds2Matches(roundList);\r\n        const [\r\n            firstRating,\r\n            lastRating\r\n        ] = getPerformanceRatings(playerId, matches);\r\n        const change = numeral(lastRating - firstRating).format(\"+0\");\r\n        return `${lastRating}\\xA0(${change})`; // \\xA0 = &nsbp;\r\n    }\r\n    return (\r\n        <table className={style.table}>\r\n            <caption>Crosstable</caption>\r\n            <tbody>\r\n                <tr>\r\n                    <th>Rank</th>\r\n                    <th>Name</th>\r\n                    {standings.map((ignore, index) =>\r\n                        <th key={index}>\r\n                            {index + 1}\r\n                        </th>\r\n                    )}\r\n                    <th>Score</th>\r\n                    <th>Rating</th>\r\n                </tr>\r\n                {standings.map((standing, index)=>\r\n                    <tr key={index} className={style.row}>\r\n                        <th scope=\"col\">\r\n                            {index + 1}\r\n                        </th>\r\n                        <th\r\n                            scope=\"row\"\r\n                            className={style.playerName}\r\n                        >\r\n                            {getPlayer(standing.id).firstName}&nbsp;\r\n                            {getPlayer(standing.id).lastName}\r\n                        </th>\r\n                        {standings.map((opponent, index2) =>\r\n                            <td\r\n                                key={index2}\r\n                                className=\"table__number\"\r\n                            >\r\n                                {getXScore(standing.id, opponent.id)}\r\n                            </td>\r\n                        )}\r\n                        <td\r\n                            className=\"table__number\"\r\n                        >\r\n                            {numeral(standing.score).format(\"1/2\")}\r\n                        </td>\r\n                        <td className=\"table__number\">\r\n                            {getRatingChange(standing.id)}\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nCrosstable.propTypes = {\r\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    path: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport numeral from \"numeral\";\r\nimport {createPlayerStats} from \"../../../pairing-scoring\";\r\nimport {useRound, usePlayers} from \"../../../state\";\r\nimport {findById} from \"../../utility\";\r\n\r\nexport default function PlayerMatchInfo({matchId, color, tourneyId, roundId}) {\r\n    const {tourney, matchList} = useRound(tourneyId, roundId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const match = findById(matchId, matchList);\r\n    const playerData = createPlayerStats({\r\n        id: match.players[color],\r\n        playerDataSource: playerState.players,\r\n        avoidList: playerState.avoid,\r\n        roundList: tourney.roundList,\r\n        roundId\r\n    });\r\n    const colorBalance = playerData.colorBalance;\r\n    const prettyBalance = (function () {\r\n        if (colorBalance < 0) {\r\n            return \"White +\" + Math.abs(colorBalance);\r\n        } else if (colorBalance > 0) {\r\n            return \"Black +\" + colorBalance;\r\n        } else {\r\n            return \"Even\";\r\n        }\r\n    }());\r\n    return (\r\n        <dl className=\"player-card\">\r\n            <h3>\r\n                {playerData.profile.firstName} {playerData.profile.lastName}\r\n            </h3>\r\n            <dt>Score</dt>\r\n            <dd>{playerData.score}</dd>\r\n            <dt>Rating</dt>\r\n            <dd data-testid={`rating-${playerData.id}`}>\r\n                {match.origRating[color]} (\r\n                {numeral(\r\n                    match.newRating[color] - match.origRating[color]\r\n                ).format(\"+0\")}\r\n                )\r\n            </dd>\r\n            <dt>Color balance</dt>\r\n            <dd>{prettyBalance}</dd>\r\n            <dt>Has had a bye round</dt>\r\n            <dd>{playerData.hasHadBye ? \"Yes\" : \"No\"}</dd>\r\n            <dt>Opponent history</dt>\r\n            <dd>\r\n                <ol>\r\n                    {playerData.opponentHistory.map((opId) => (\r\n                        <li key={opId}>\r\n                            {getPlayer(opId).firstName}{\" \"}\r\n                            {getPlayer(opId).lastName}\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </dd>\r\n        </dl>\r\n    );\r\n}\r\nPlayerMatchInfo.propTypes = {\r\n    matchId: PropTypes.string,\r\n    color: PropTypes.number,\r\n    tourneyId: PropTypes.number,\r\n    roundId: PropTypes.number\r\n};\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Hidden from \"@reach/visually-hidden\";\r\nimport Icons from \"../../icons\";\r\nimport {PanelContainer, Panel} from \"../../utility\";\r\nimport {calcNewRatings} from \"../../../pairing-scoring\";\r\nimport {BLACK, WHITE, DUMMY_ID} from \"../../../data-types\";\r\nimport {useRound, usePlayers} from \"../../../state\";\r\nimport PlayerMatchInfo from \"./player-match-info\";\r\nimport {winnerSelect} from \"./round.module.css\";\r\nimport \"@reach/dialog/styles.css\";\r\n\r\nexport default function MatchRow({\r\n    pos,\r\n    match,\r\n    tourneyId,\r\n    roundId,\r\n    selectedMatch,\r\n    setSelectedMatch\r\n}) {\r\n    const {tourney, dispatch} = useRound(tourneyId, roundId);\r\n    const {playerDispatch, getPlayer} = usePlayers();\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const resultCode = (function () {\r\n        if (match.result[0] > match.result[1]) {\r\n            return \"WHITE\";\r\n        } else if (match.result[1] > match.result[0]) {\r\n            return \"BLACK\";\r\n        } else if (match.result.every((x) => x === 0.5)) {\r\n            return \"DRAW\";\r\n        } else {\r\n            return \"NOTSET\";\r\n        }\r\n    }());\r\n    const whiteName = (\r\n        getPlayer(match.players[0]).firstName\r\n        + \" \"\r\n        + getPlayer(match.players[0]).lastName\r\n    );\r\n    const blackName = (\r\n        getPlayer(match.players[1]).firstName\r\n        + \" \"\r\n        + getPlayer(match.players[1]).lastName\r\n    );\r\n\r\n    function setMatchResult(event) {\r\n        const result = (function () {\r\n            switch (event.target.value) {\r\n            case \"WHITE\":\r\n                return [1, 0];\r\n            case \"BLACK\":\r\n                return [0, 1];\r\n            case \"DRAW\":\r\n                return [0.5, 0.5];\r\n            case \"NOTSET\":\r\n                return [0, 0];\r\n            default:\r\n                throw new Error();\r\n            }\r\n        }());\r\n        const white = getPlayer(match.players[WHITE]);\r\n        const black = getPlayer(match.players[BLACK]);\r\n        const newRating = (\r\n            (event.currentTarget.value === \"NOTSET\")\r\n            ? match.origRating\r\n            : calcNewRatings(\r\n                match.origRating,\r\n                [white.matchCount, black.matchCount],\r\n                result\r\n            )\r\n        );\r\n        playerDispatch({\r\n            type: \"SET_PLAYER_RATING\",\r\n            id: white.id,\r\n            rating: newRating[WHITE]\r\n        });\r\n        playerDispatch({\r\n            type: \"SET_PLAYER_RATING\",\r\n            id: black.id,\r\n            rating: newRating[BLACK]\r\n        });\r\n        // if the result hasn't been scored yet, increment the matchCount\r\n        if (match.result.reduce((a, b) => a + b) === 0) {\r\n            playerDispatch({\r\n                type: \"SET_PLAYER_MATCHCOUNT\",\r\n                id: white.id,\r\n                matchCount: white.matchCount + 1\r\n            });\r\n            playerDispatch({\r\n                type: \"SET_PLAYER_MATCHCOUNT\",\r\n                id: black.id,\r\n                matchCount: black.matchCount + 1\r\n            });\r\n        }\r\n        dispatch({\r\n            type: \"SET_MATCH_RESULT\",\r\n            tourneyId,\r\n            roundId,\r\n            matchId: match.id,\r\n            result,\r\n            newRating\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr className={match.id === selectedMatch ? \"selected\" : \"\"}>\r\n            <th className=\"table__number row__id\" scope=\"row\">{pos + 1}</th>\r\n            <td\r\n                className=\"table__player row__player\"\r\n                data-testid={`match-${pos}-white`}\r\n            >\r\n                {whiteName}{\" \"}\r\n                {resultCode === \"WHITE\" && (\r\n                    <span role=\"img\" aria-hidden>\r\n                        🏆\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td\r\n                className=\"table__player row__player\"\r\n                data-testid={`match-${pos}-black`}\r\n            >\r\n                {blackName}{\" \"}\r\n                {resultCode === \"BLACK\" && (\r\n                    <span role=\"img\" aria-hidden>\r\n                        🏆\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td className=\"data__input row__controls\">\r\n                <select\r\n                    onBlur={setMatchResult}\r\n                    onChange={setMatchResult}\r\n                    disabled={match.players.includes(DUMMY_ID)}\r\n                    value={resultCode}\r\n                    className={winnerSelect}\r\n                >\r\n                    <option value=\"NOTSET\">\r\n                        Select a winner\r\n                    </option>\r\n                    <option value=\"WHITE\">\r\n                        {whiteName} won\r\n                    </option>\r\n                    <option value=\"BLACK\">\r\n                        {blackName} won\r\n                    </option>\r\n                    <option value=\"DRAW\">\r\n                        Draw\r\n                    </option>\r\n                </select>\r\n            </td>\r\n            <td className=\"data__input row__controls\">\r\n                {(selectedMatch !== match.id)\r\n                ? (\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => setSelectedMatch(match.id)}\r\n                        title=\"Edit match\"\r\n                    >\r\n                        <Icons.Edit />\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => setSelectedMatch(null)}\r\n                        title=\"End editing match\"\r\n                    >\r\n                        <Icons.Check />\r\n                    </button>\r\n                )}\r\n                <button\r\n                    className=\"iconButton\"\r\n                    onClick={() => setOpenModal(true)}\r\n                    title=\"Open match information.\"\r\n                >\r\n                    <Icons.Info />\r\n                    <Hidden>\r\n                        View information for match:{\" \"}\r\n                        {whiteName} versus {blackName}\r\n                    </Hidden>\r\n                </button>\r\n                <Dialog isOpen={openModal}>\r\n                    <button onClick={() => setOpenModal(false)}>\r\n                        close\r\n                    </button>\r\n                    <p>{tourney.name}</p>\r\n                    <p>Round {roundId + 1}, match {pos + 1}</p>\r\n                    <PanelContainer>\r\n                        <Panel>\r\n                            <PlayerMatchInfo\r\n                                matchId={match.id}\r\n                                color={0}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                            />\r\n                        </Panel>\r\n                        <Panel>\r\n                            <PlayerMatchInfo\r\n                                matchId={match.id}\r\n                                color={1}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                            />\r\n                        </Panel>\r\n                    </PanelContainer>\r\n                </Dialog>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\nMatchRow.propTypes = {\r\n    pos: PropTypes.number,\r\n    match: PropTypes.object,\r\n    tourneyId: PropTypes.number,\r\n    roundId: PropTypes.number,\r\n    selectedMatch: PropTypes.string,\r\n    setSelectedMatch: PropTypes.func\r\n};\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icons from \"../../icons\";\r\nimport MatchRow from \"./match-row\";\r\nimport {findById, findIndexById} from \"../../utility\";\r\nimport {useRound, usePlayers} from \"../../../state\";\r\nimport style from \"./round.module.css\";\r\n\r\nexport default function Round({roundId, tourneyId}) {\r\n    const {matchList, dispatch} = useRound(tourneyId, roundId);\r\n    const {playerDispatch, getPlayer} = usePlayers();\r\n    const [selectedMatch, setSelectedMatch] = useState(null);\r\n    if (!matchList) {\r\n        throw new Error(\"Round \" + roundId + \" does not exist.\");\r\n    }\r\n    function unMatch(matchId) {\r\n        const match = findById(matchId, matchList);\r\n        if (match.result.reduce((a, b) => a + b) !== 0) {\r\n            // checks if the match has been scored yet & resets the players'\r\n            // records\r\n            match.players.forEach(function (pId, color) {\r\n                playerDispatch({\r\n                    type: \"SET_PLAYER_MATCHCOUNT\",\r\n                    id: pId,\r\n                    matchCount: getPlayer(pId).matchCount - 1\r\n                });\r\n                playerDispatch({\r\n                    type: \"SET_PLAYER_RATING\",\r\n                    id: pId,\r\n                    rating: match.origRating[color]\r\n                });\r\n            });\r\n        }\r\n        dispatch({type: \"DEL_MATCH\", tourneyId, roundId, matchId});\r\n        setSelectedMatch(null);\r\n    }\r\n\r\n    function swapColors(matchId) {\r\n        dispatch({type: \"SWAP_COLORS\", tourneyId, roundId, matchId});\r\n    }\r\n\r\n    function moveMatch(matchId, direction) {\r\n        const oldIndex = findIndexById(matchId, matchList);\r\n        const newIndex = (\r\n            (oldIndex + direction >= 0)\r\n            ? oldIndex + direction\r\n            : 0\r\n        );\r\n        dispatch({type: \"MOVE_MATCH\", tourneyId, roundId, oldIndex, newIndex});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.toolbar}>\r\n                <button\r\n                    className=\"danger iconButton\"\r\n                    onClick={() => unMatch(selectedMatch)}\r\n                    disabled={selectedMatch === null}\r\n                >\r\n                    <Icons.Trash /> Unmatch\r\n                </button>\r\n                <button\r\n                    className=\"iconButton\"\r\n                    onClick={() => swapColors(selectedMatch)}\r\n                    disabled={selectedMatch === null}\r\n                >\r\n                    <Icons.Repeat /> Swap colors\r\n                </button>\r\n                <button\r\n                    className=\"iconButton\"\r\n                    onClick={() => moveMatch(selectedMatch, -1)}\r\n                    disabled={selectedMatch === null}\r\n                >\r\n                    <Icons.ArrowUp /> Move up\r\n                </button>\r\n                <button\r\n                    className=\"iconButton\"\r\n                    onClick={() => moveMatch(selectedMatch, 1)}\r\n                    disabled={selectedMatch === null}\r\n                >\r\n                    <Icons.ArrowDown /> Move down\r\n                </button>\r\n            </div>\r\n            {(matchList.length === 0) &&\r\n                <p>No players matched yet.</p>\r\n            }\r\n            <table className={style.table}>\r\n                {(matchList.length > 0) &&\r\n                    <caption>Round {roundId + 1} results</caption>\r\n                }\r\n                <tbody>\r\n                    {(matchList.length > 0) &&\r\n                        <tr>\r\n                            <th className=\"row__id\" scope=\"col\">\r\n                                #\r\n                            </th>\r\n                            <th className=\"row__player\" scope=\"col\">\r\n                                White\r\n                            </th>\r\n                            <th className=\"row__player\" scope=\"col\">\r\n                                Black\r\n                            </th>\r\n                            <th className=\"row__result\" scope=\"col\">\r\n                                Result\r\n                            </th>\r\n                            <th className=\"row__controls\" scope=\"col\">\r\n                                Controls\r\n                            </th>\r\n                        </tr>\r\n                    }\r\n                    {matchList.map((match, pos) => (\r\n                        <MatchRow\r\n                            key={match.id}\r\n                            pos={pos}\r\n                            match={match}\r\n                            tourneyId={tourneyId}\r\n                            roundId={roundId}\r\n                            selectedMatch={selectedMatch}\r\n                            setSelectedMatch={setSelectedMatch}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\nRound.propTypes = {\r\n    tourneyId: PropTypes.number,\r\n    roundId: PropTypes.number\r\n};\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {set, lensIndex, append} from \"ramda\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Hidden from \"@reach/visually-hidden\";\r\nimport Icons from \"../../icons\";\r\nimport Selecting from \"../player-select/selecting\";\r\nimport {useRound, usePlayers, useOptions} from \"../../../state\";\r\nimport {WHITE, BLACK, DUMMY_ID} from \"../../../data-types\";\r\n\r\nexport default function SelectList({\r\n    tourneyId,\r\n    roundId,\r\n    stagedPlayers,\r\n    setStagedPlayers\r\n}) {\r\n    const {dispatch, unmatched} = useRound(tourneyId, roundId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const [{byeValue}] = useOptions();\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    function selectPlayer(id) {\r\n        if (stagedPlayers[WHITE] === null) {\r\n            setStagedPlayers(\r\n                (prevState) => set(lensIndex(WHITE), id, prevState)\r\n            );\r\n        } else if (stagedPlayers[BLACK] === null) {\r\n            setStagedPlayers(\r\n                (prevState) => set(lensIndex(BLACK), id, prevState)\r\n            );\r\n        }\r\n        // else... nothing happens\r\n    }\r\n\r\n    // make a new list so as not to affect auto-pairing\r\n    const unmatchedWithDummy = (\r\n        (unmatched.length % 2 !== 0)\r\n        ? append(DUMMY_ID, unmatched)\r\n        : unmatched\r\n    );\r\n    if (unmatched.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <button\r\n                onClick={() => dispatch({\r\n                    type: \"AUTO_PAIR\",\r\n                    unpairedPlayers: unmatched,\r\n                    tourneyId,\r\n                    roundId,\r\n                    playerState,\r\n                    byeValue\r\n                })}\r\n                disabled={unmatched.length === 0}\r\n            >\r\n                Auto-pair unmatched players\r\n            </button><br/>\r\n            <button onClick={() => setIsModalOpen(true)}>\r\n                Add or remove players from the roster.\r\n            </button>\r\n            <ul>\r\n                {unmatchedWithDummy.map((pId) => (\r\n                    <li key={pId}>\r\n                        {stagedPlayers.includes(pId)\r\n                        ? <button disabled>Selected</button>\r\n                        : (\r\n                            <button\r\n                                disabled={!stagedPlayers.includes(null)}\r\n                                onClick={() => selectPlayer(pId)}\r\n                            >\r\n                                <Icons.UserPlus/>\r\n                                <Hidden>\r\n                                    Select {getPlayer(pId).firstName}{\" \"}\r\n                                    {getPlayer(pId).lastName}\r\n                                </Hidden>\r\n                            </button>\r\n                        )}{\" \"}\r\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <Dialog isOpen={isModalOpen}>\r\n                <button onClick={() => setIsModalOpen(false)}>Done</button>\r\n                <Selecting tourneyId={tourneyId} />\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nSelectList.propTypes = {\r\n    tourneyId: PropTypes.number,\r\n    roundId: PropTypes.number,\r\n    stagedPlayers: PropTypes.arrayOf(PropTypes.number),\r\n    setStagedPlayers: PropTypes.func\r\n};\r\n","import React, {Fragment} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {set, lensIndex} from \"ramda\";\r\nimport Icons from \"../../icons\";\r\nimport {useTournament, usePlayers, useOptions} from \"../../../state\";\r\nimport {WHITE, BLACK} from \"../../../data-types\";\r\n\r\nexport default function Stage({\r\n    tourneyId,\r\n    roundId,\r\n    stagedPlayers,\r\n    setStagedPlayers\r\n}) {\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const {players} = playerState;\r\n    const dispatch = useTournament(tourneyId)[1];\r\n    const [{byeValue}] = useOptions();\r\n    const [white, black] = stagedPlayers;\r\n\r\n    function unstage(color) {\r\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\r\n    }\r\n\r\n    function match() {\r\n        dispatch({\r\n            type: \"MANUAL_PAIR\",\r\n            pair: [white, black],\r\n            tourneyId,\r\n            roundId,\r\n            byeValue,\r\n            players\r\n        });\r\n        setStagedPlayers([null, null]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Selected for matching:</h2>\r\n            <p>\r\n                White:{\" \"}\r\n                {white !== null &&\r\n                    <Fragment>\r\n                        {getPlayer(white).firstName}{\" \"}\r\n                        {getPlayer(white).lastName}{\" \"}\r\n                        <button onClick={() => unstage(WHITE)}>\r\n                            <Icons.UserMinus /> Remove\r\n                        </button>\r\n                    </Fragment>\r\n                }\r\n            </p>\r\n            <p>\r\n                Black:{\" \"}\r\n                {black !== null &&\r\n                    <Fragment>\r\n                        {getPlayer(black).firstName}{\" \"}\r\n                        {getPlayer(black).lastName}{\" \"}\r\n                        <button onClick={() => unstage(BLACK)}>\r\n                            <Icons.UserMinus /> Remove\r\n                        </button>\r\n                    </Fragment>\r\n                }\r\n            </p>\r\n            <button\r\n                onClick={() => setStagedPlayers(\r\n                    (prevState) => ([prevState[BLACK], prevState[WHITE]])\r\n                )}\r\n                disabled={\r\n                    stagedPlayers.every((id) => id === null)\r\n                }\r\n            >\r\n                <Icons.Repeat/> Swap colors\r\n            </button>{\" \"}\r\n            <button\r\n                onClick={match}\r\n                disabled={stagedPlayers.includes(null)}\r\n            >\r\n                <Icons.Check/> Match selected\r\n            </button>{\" \"}\r\n        </div>\r\n    );\r\n}\r\nStage.propTypes = {\r\n    tourneyId: PropTypes.number,\r\n    roundId: PropTypes.number,\r\n    stagedPlayers: PropTypes.arrayOf(PropTypes.number),\r\n    setStagedPlayers: PropTypes.func\r\n};\r\n","// this component should eventually replace player-match-info.jsx\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {createPlayerStats} from \"../../../pairing-scoring\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\n\r\nexport default function PlayerInfo({playerId, tourneyId, roundId}) {\r\n    const [{roundList}] = useTournament(tourneyId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const {players, avoid} = playerState;\r\n    const {\r\n        profile,\r\n        rating,\r\n        score,\r\n        colorBalance,\r\n        hasHadBye,\r\n        opponentHistory,\r\n        avoidList\r\n    } = createPlayerStats({\r\n        id: playerId,\r\n        playerDataSource: players,\r\n        avoidList: avoid,\r\n        roundList,\r\n        roundId\r\n    });\r\n    const prettyBalance = (function () {\r\n        if (colorBalance < 0) {\r\n            return \"White +\" + Math.abs(colorBalance);\r\n        } else if (colorBalance > 0) {\r\n            return \"Black +\" + colorBalance;\r\n        } else {\r\n            return \"Even\";\r\n        }\r\n    }());\r\n    return (\r\n        <dl className=\"player-card\">\r\n            <h3>\r\n                {profile.firstName} {profile.lastName}\r\n            </h3>\r\n            <p>Score: {score}</p>\r\n            <p>Rating: {rating}</p>\r\n            <p>Color balance: {prettyBalance}</p>\r\n            <p>Has had a bye round: {hasHadBye ? \"Yes\" : \"No\"}</p>\r\n            <p>Opponent history:</p>\r\n            <ol>\r\n                {opponentHistory.map((opId) => (\r\n                    <li key={opId}>\r\n                        {getPlayer(opId).firstName}{\" \"}\r\n                        {getPlayer(opId).lastName}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <p>\r\n                Players to avoid:\r\n            </p>\r\n            <ol>\r\n                {avoidList.map((pId) => (\r\n                    <li key={pId}>\r\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </dl>\r\n    );\r\n}\r\nPlayerInfo.propTypes = {\r\n    tourneyId: PropTypes.number,\r\n    roundId: PropTypes.number,\r\n    playerId: PropTypes.number\r\n};\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport numeral from \"numeral\";\r\nimport {pipe, map} from \"ramda\";\r\nimport SelectList  from \"./select-list\";\r\nimport Stage from \"./stage\";\r\nimport PlayerInfo from \"./player-info\";\r\nimport {PanelContainer, Panel} from \"../../utility\";\r\nimport {usePlayers, useTournament} from \"../../../state\";\r\nimport {findById} from \"../../utility\";\r\nimport {\r\n    calcPairIdeal,\r\n    maxPriority,\r\n    sortPlayersForPairing,\r\n    setUpperHalves,\r\n    createPlayerStats\r\n} from \"../../../pairing-scoring\";\r\n\r\nexport default function PairPicker({tourneyId, roundId}) {\r\n    const [stagedPlayers, setStagedPlayers] = useState([null, null]);\r\n    const {playerState} = usePlayers();\r\n    const [tourney] = useTournament(tourneyId);\r\n    const statsList = React.useMemo(\r\n        () => (\r\n            pipe(\r\n                map((id) => (\r\n                    createPlayerStats({\r\n                        id,\r\n                        playerDataSource: playerState.players,\r\n                        avoidList: playerState.avoid,\r\n                        roundList: tourney.roundList,\r\n                        roundId\r\n                    })\r\n                )),\r\n                sortPlayersForPairing,\r\n                setUpperHalves\r\n            )(tourney.players)\r\n        ),\r\n        [\r\n            tourney.players,\r\n            tourney.roundList,\r\n            playerState.avoid,\r\n            playerState.players,\r\n            roundId\r\n        ]\r\n    );\r\n    const matchIdeal = React.useMemo(\r\n        function () {\r\n            if (stagedPlayers.includes(null)) {\r\n                return null;\r\n            }\r\n            const player0stats = findById(stagedPlayers[0], statsList);\r\n            const player1stats = findById(stagedPlayers[1], statsList);\r\n            const ideal = calcPairIdeal(player0stats, player1stats);\r\n            return numeral(ideal / maxPriority).format(\"%\");\r\n        },\r\n        [stagedPlayers, statsList]\r\n    );\r\n    return (\r\n        <PanelContainer>\r\n            <Panel>\r\n                <SelectList\r\n                    tourneyId={tourneyId}\r\n                    roundId={roundId}\r\n                    stagedPlayers={stagedPlayers}\r\n                    setStagedPlayers={setStagedPlayers}\r\n                />\r\n            </Panel>\r\n            <Panel>\r\n                <Stage\r\n                    tourneyId={tourneyId}\r\n                    roundId={roundId}\r\n                    stagedPlayers={stagedPlayers}\r\n                    setStagedPlayers={setStagedPlayers}\r\n                />\r\n                <PanelContainer>\r\n                    {stagedPlayers.map((id) =>\r\n                        id !== null && (\r\n                            <Panel key={id}>\r\n                                <PlayerInfo\r\n                                    playerId={id}\r\n                                    tourneyId={tourneyId}\r\n                                    roundId={roundId}\r\n                                />\r\n                            </Panel>\r\n                        )\r\n                    )}\r\n                </PanelContainer>\r\n                Match ideal: {matchIdeal}\r\n            </Panel>\r\n        </PanelContainer>\r\n    );\r\n}\r\nPairPicker.propTypes = {\r\n    tourneyId: PropTypes.number,\r\n    roundId: PropTypes.number\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\r\nimport Icons from \"../../icons\";\r\nimport Round from \"./round\";\r\nimport PairPicker from \"../pair-picker\";\r\nimport {useRound} from \"../../../state\";\r\n\r\nexport default function Index(props) {\r\n    // reach router passes strings instead\r\n    const tourneyId = Number(props.tourneyId);\r\n    const roundId = Number(props.roundId);\r\n    const {unmatched} = useRound(tourneyId, roundId);\r\n    const [openTab, setOpenTab] = useState(0);\r\n    useEffect(\r\n        function () {\r\n            if (unmatched.length > 0) {\r\n                setOpenTab(1);\r\n            } else {\r\n                setOpenTab(0);\r\n            }\r\n        },\r\n        [unmatched.length]\r\n    );\r\n    return (\r\n        <Tabs index={openTab} onChange={(index) => setOpenTab(index)}>\r\n            <TabList>\r\n                <Tab><Icons.List/> Matches</Tab>\r\n                <Tab disabled={unmatched.length === 0}>\r\n                    <Icons.Users/> Unmatched players\r\n                </Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n                <TabPanel>\r\n                    <Round\r\n                        tourneyId={tourneyId}\r\n                        roundId={roundId}\r\n                    />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                    <PairPicker\r\n                        tourneyId={tourneyId}\r\n                        roundId={roundId}\r\n                    />\r\n                </TabPanel>\r\n            </TabPanels>\r\n        </Tabs>\r\n    );\r\n}\r\nIndex.propTypes = {\r\n    tourneyId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    roundId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    path: PropTypes.string\r\n};\r\n","import React, {useState, useEffect, useMemo} from \"react\";\r\nimport {useTournaments, useOptions, usePlayers} from \"../state\";\r\nimport {createPlayer} from \"../data-types\";\r\nimport defaultPlayers from \"../state/demo-players.json\";\r\nimport defaultOptions from \"../state/demo-options.json\";\r\nimport defaultTourneys from \"../state/demo-tourney.json\";\r\n\r\nexport function Options(props) {\r\n    const [tourneys, tourneysDispatch] = useTournaments();\r\n    const [options, optionsDispatch] = useOptions();\r\n    const {playerState, playerDispatch} = usePlayers();\r\n    const [text, setText] = useState(\"\");\r\n    // memoize this so the `useEffect` hook syncs with the correct state\r\n    const exportData = useMemo(\r\n        () => ({options, tourneys, playerState}),\r\n        [options, tourneys, playerState]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            setText(JSON.stringify(exportData, null, 4));\r\n        },\r\n        [exportData]\r\n    );\r\n    function loadData(data) {\r\n        tourneysDispatch({type: \"LOAD_STATE\", state: data.tourneys});\r\n        optionsDispatch({type: \"LOAD_STATE\", state: data.options});\r\n        playerDispatch({type: \"LOAD_STATE\", state: data.playerState});\r\n        window.alert(\"Data loaded!\");\r\n    }\r\n    function handleText(event) {\r\n        event.preventDefault();\r\n        const importData = JSON.parse(text);\r\n        loadData(importData);\r\n    }\r\n    function handleFile(event) {\r\n        event.preventDefault();\r\n        const reader = new FileReader();\r\n        // eslint-disable-next-line fp/no-mutation\r\n        reader.onload = function (ev) {\r\n            const data = ev.target.result;\r\n            const importData = JSON.parse(data);\r\n            loadData(importData);\r\n        };\r\n        reader.readAsText(event.currentTarget.files[0]);\r\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\r\n    }\r\n    function reloadDemoData(event) {\r\n        event.preventDefault();\r\n        loadData({\r\n            options: defaultOptions,\r\n            playerState: {\r\n                players: defaultPlayers.playerList.map((p) => createPlayer(p)),\r\n                avoid: defaultPlayers.avoidList\r\n            },\r\n            tourneys: defaultTourneys\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <form>\r\n                <fieldset>\r\n                    <legend>Bye options</legend>\r\n                    Select how many points a bye is worth:{\" \"}\r\n                    <label>\r\n                        1\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={options.byeValue === 1}\r\n                            onChange={() => optionsDispatch({\r\n                                type: \"SET_BYE_VALUE\",\r\n                                byeValue: 1\r\n                            })}\r\n                        />\r\n                    </label>{\" \"}\r\n                    <label>\r\n                        ½\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={options.byeValue === 0.5}\r\n                            onChange={() => optionsDispatch({\r\n                                type: \"SET_BYE_VALUE\",\r\n                                byeValue: 0.5\r\n                            })}\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <fieldset>\r\n                <legend>Manage data</legend>\r\n                <p>\r\n                    <a\r\n                        href={\r\n                            \"data:application/json,\"\r\n                            + encodeURIComponent(JSON.stringify(exportData))\r\n                        }\r\n                        download=\"chessahoochee.json\"\r\n                    >\r\n                        Download all data\r\n                    </a>\r\n                </p>\r\n                <label>\r\n                    Load data file:{\" \"}\r\n                    <input type=\"file\" id=\"file\" onChange={handleFile}/>\r\n                </label>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Reset all changes</legend>\r\n                <button onClick={reloadDemoData}>Reload demo data</button>\r\n            </fieldset>\r\n            <form onSubmit={handleText}>\r\n                <fieldset>\r\n                    <legend>\r\n                        Advanced: manually edit data\r\n                    </legend>\r\n                    <textarea\r\n                        className=\"json\"\r\n                        rows={25}\r\n                        cols={50}\r\n                        value={text}\r\n                        name=\"playerdata\"\r\n                        onChange={(event) => setText(event.currentTarget.value)}\r\n                        spellCheck={false}\r\n                    />\r\n                    <p>\r\n                        <input type=\"submit\" value=\"Load\" />\r\n                    </p>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Caution = () => (\r\n    <aside className={styles.caution}>\r\n        <p className={styles.caution__text}>\r\n            <span role=\"img\" aria-label=\"WARNING.\">⚠️</span>\r\n            &nbsp;\r\n            This is beta software.\r\n            &nbsp;\r\n            <span role=\"img\" aria-label=\"WARNING.\">⚠️</span>\r\n            {\" \"}\r\n            Want to help make it better? Check out the\r\n            {\" \"}\r\n            <span role=\"img\" aria-hidden>👉</span>\r\n            &nbsp;\r\n            <a\r\n                className={styles.caution__link}\r\n                href=\"https://github.com/johnridesabike/chessahoochee\"\r\n            >\r\n                Git repository\r\n            </a>.\r\n        </p>\r\n    </aside>\r\n);\r\n\r\nexport default Caution;\r\n","import numeral from \"numeral\";\r\n\r\n// let's make a custom numeral format. I don't really know how this works.\r\nnumeral.register(\"format\", \"half\", {\r\n    regexps: {\r\n        format: /(1\\/2)/,\r\n        unformat: /(1\\/2)/\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    format: function (value, format, roundingFunction) {\r\n        const whole = Math.floor(value);\r\n        const remainder = value - whole;\r\n        const fraction = (function () {\r\n            switch (remainder) {\r\n            case 0.25:\r\n                return \"¼\";\r\n            case 0.5:\r\n                return \"½\";\r\n            case 0.75:\r\n                return \"¾\";\r\n            default:\r\n                return \"\";\r\n            }\r\n        }());\r\n        const stringedWhole = (\r\n            (whole === 0 && remainder)\r\n            ? \"\"\r\n            : String(whole)\r\n        );\r\n        return stringedWhole + fraction;\r\n    },\r\n    /** @param {string} value */\r\n    unformat: function (value) {\r\n        return Number(value); // doesn't work... todo?\r\n    }\r\n});\r\n","import React from \"react\";\r\nimport {\r\n    Router,\r\n    Link,\r\n    LocationProvider,\r\n    createHistory,\r\n    Redirect\r\n} from \"@reach/router\";\r\nimport createHashSource from \"hash-source\";\r\nimport About from \"./components/about\";\r\nimport NotFound from \"./components/404\";\r\nimport TournamentIndex from \"./components/tournament\";\r\nimport {TournamentList, Tournament} from \"./components/tournament\";\r\nimport Players, {PlayerList, PlayerInfo} from \"./components/players\";\r\nimport Scores from \"./components/tournament/scores\";\r\nimport PlayerSelect from \"./components/tournament/player-select\";\r\nimport Crosstable from \"./components/tournament/crosstable\";\r\nimport Round from \"./components/tournament/round\";\r\nimport {Options} from \"./components/options\";\r\nimport Caution from \"./components/caution\";\r\nimport {OptionsProvider, TournamentProvider, PlayersProvider} from \"./state\";\r\nimport \"side-effects\";\r\nimport \"@reach/tabs/styles.css\";\r\nimport \"@reach/tooltip/styles.css\";\r\nimport {link} from \"./App.module.css\";\r\n// These are just for deploying to GitHub pages.\r\nlet source = createHashSource();\r\nlet history = createHistory(source);\r\n\r\n// const electron = window.require(\"electron\");\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <Caution />\r\n            <LocationProvider history={history}>\r\n                <header className=\"header\">\r\n                    <h1>\r\n                        ♘ Chessahoochee: <small>a chess tournament app.</small>\r\n                    </h1>\r\n                    <nav>\r\n                        <Link to=\"tourneys\" className={link}>\r\n                            Tournaments\r\n                        </Link>\r\n                        <Link to=\"players\" className={link}>\r\n                            Players\r\n                        </Link>\r\n                        <Link to=\"options\" className={link}>\r\n                            Options\r\n                        </Link>\r\n                        <Link to=\"about\" className={link}>\r\n                            About\r\n                        </Link>\r\n                    </nav>\r\n                </header>\r\n                <main className=\"content\">\r\n                    {/* Lots of nested contexts. Is there a better way? */}\r\n                    <OptionsProvider>\r\n                        <PlayersProvider>\r\n                            <TournamentProvider>\r\n                                <Router>\r\n                                    <TournamentIndex path=\"tourneys\">\r\n                                        <TournamentList path=\"/\" />\r\n                                        <Tournament path=\":tourneyId\">\r\n                                            <PlayerSelect path=\"/\" />\r\n                                            <Crosstable path=\"crosstable\" />\r\n                                            <Scores path=\"scores\" />\r\n                                            <Round path=\":roundId\" />\r\n                                        </Tournament>\r\n                                    </TournamentIndex>\r\n                                    <Players path=\"players\">\r\n                                        <PlayerList path=\"/\"/>\r\n                                        <PlayerInfo path=\":playerId\" />\r\n                                    </Players>\r\n                                    <Options path=\"options\" />\r\n                                    <About path=\"about\" />\r\n                                    <NotFound default />\r\n                                    <Redirect from=\"/\" to=\"tourneys\" noThrow />\r\n                                </Router>\r\n                            </TournamentProvider>\r\n                        </PlayersProvider>\r\n                    </OptionsProvider>\r\n                </main>\r\n            </LocationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {StrictMode} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n// if (process.env.NODE_ENV !== \"production\") {\r\n//     const axe = require(\"react-axe\");\r\n//     axe(React, ReactDOM, 1000);\r\n// }\r\n\r\nReactDOM.render(\r\n    <StrictMode><App /></StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"scores_table__2rxnd\",\"topHeader\":\"scores_topHeader__1NdDN\",\"row\":\"scores_row__ecCJQ\",\"playerName\":\"scores_playerName__3zgHS\",\"rank\":\"scores_rank__f-nA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__3ygmL\",\"header\":\"tournament_header__3QL7-\",\"sidebar\":\"tournament_sidebar__Od_Rn\",\"content\":\"tournament_content__294HZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"round_table__3_NXr\",\"winnerSelect\":\"round_winnerSelect__1TUKD\",\"toolbar\":\"round_toolbar__1eb5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__1tXRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__2rrOM\",\"caution__text\":\"caution_caution__text__LxysE\",\"caution__link\":\"caution_caution__link__3X8Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__5PR5o\",\"panel\":\"utility_panel__12Wgy\"};"],"sourceRoot":""}