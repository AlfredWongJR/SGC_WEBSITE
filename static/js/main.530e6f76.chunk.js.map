{"version":3,"sources":["pages/tournament/index.module.css","pages/options.module.css","serviceWorker.js","side-effects.js","electron-utils.js","data-types/constants.js","data-types/types.js","data-types/factories.js","data-types/helpers.js","pairing-scoring/types.js","pairing-scoring/scoring.js","pairing-scoring/factories.js","pairing-scoring/converters.js","pairing-scoring/pairing.js","pairing-scoring/ratings.js","components/logo.jsx","components/icons.jsx","hooks/reducers/generic-db-reducer.js","hooks/reducers/options-reducer.js","hooks/reducers/players-reducer.js","hooks/reducers/match-functions.js","hooks/reducers/tournament-reducer.js","demo-data/index.js","hooks/hooks.js","hooks/db.js","hooks/tournament-provider.jsx","pages/tournament/crosstable.jsx","components/utility.jsx","components/new-player.jsx","pages/tournament/player-select/selecting.jsx","pages/tournament/player-select/index.jsx","pages/tournament/pair-picker/player-info.jsx","pages/tournament/pair-picker/select-list.jsx","pages/tournament/pair-picker/stage.jsx","pages/tournament/pair-picker/index.jsx","components/404.jsx","pages/tournament/round/player-match-info.jsx","pages/tournament/round/match-row.jsx","pages/tournament/round/round-table.jsx","pages/tournament/round/round.jsx","pages/tournament/round/index.jsx","pages/tournament/round/round-panels.jsx","pages/tournament/scores.jsx","pages/tournament/header.jsx","pages/tournament/options.jsx","pages/tournament/sidebar.jsx","pages/tournament/status.jsx","pages/tournament/tournament.jsx","components/sidebar-default.jsx","pages/tournament/tournament-list.jsx","pages/tournament/index.jsx","test-data/index.js","pages/options.jsx","pages/players/player-list.jsx","pages/players/player-profile.jsx","pages/players/index.jsx","components/caution/index.jsx","pages/splash.jsx","components/windows-controls.jsx","App.jsx","index.jsx","pages/tournament/round/round.module.css","pages/splash.module.css","components/windows-controls.module.css","pages/players/index.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["module","exports","tournament","header","contentFrame","table","topHeader","row","compact","playerName","rank","options","Boolean","window","location","hostname","match","numeral","register","format","value","roundingFunction","whole","Math","floor","remainder","fraction","String","regexps","unformat","Number","electron","require","ifElectron","fn","macOSDoubleClick","event","target","className","includes","doubleClickAction","getUserDefault","remote","systemPreferences","win","getCurrentWindow","minimize","isMaximized","unmaximize","maximize","toggleMaximize","IfIsWinApp","_ref","children","navigator","appVersion","propTypes","PropTypes","node","isRequired","WHITE","BLACK","DUMMY_ID","Id","t","refinement","id","test","Color","num","AvoidPair","tuple","Player","interface","firstName","lastName","matchCount","rating","type","Match","newRating","origRating","playerIds","result","RoundList","list","Tournament","byeQueue","date","Date","name","roundList","tieBreaks","OptionsDb","avoidPairs","byeValue","TourneysDb","dict","PlayersDb","Object","freeze","createMatch","importObj","types","assign","nanoid","createPlayer","isDummyId","playerId","isDummyObj","playerObj","dummyPlayer","createMissingPlayer","getPlayerMaybe","playerDict","player","rounds2Matches","lastRound","arguments","length","undefined","slice","reduce","acc","round","concat","getUnmatched","players","roundId","matchedIds","values","assoc","ColorScore","ScoreData","colorScores","colors","isDummy","opponentResults","ratings","results","resultsNoByes","PairingData","avoidIds","halfPos","isUpperHalf","opponents","score","ScoreCalculator","func","Standing","BLACKVALUE","WHITEVALUE","getOpponentScores","scoreData","keys","filter","oppId","map","getPlayerScore","sum","getCumulativeScore","scoreList","last","tieBreakMethods","0","of","scores","pipe","sort","ascend","init","tail","1","2","3","4","getTieBreakNames","idList","i","createBlankScoreData","createStandingList","methods","selectedTieBreaks","standings","sortFuncList","key","descend","path","prop","sortWith","createStandingTree","standingList","standing","orig","standing1","standing2","prevStanding","append","over","lensIndex","match2ScoreDataReducer","_map","color","origData","lensProp","defaultTo","scoreTypes","color2Score","lensPath","add","_map2","slicedToArray","p1Data","p2Data","matches2ScoreData","matchList","data","avoidPairReducer","pair","createPairingData","playerData","avoidDict","pairingData","playerStats","pairData","priority","condition","divisiblePriority","dividend","divisor","avoidMeetingTwice","sameScores","halfPosition","sameHalfPriority","differentHalf","isDiffHalf","differentDueColor","maxPriority","calcPairIdeal","player1","player2","metBefore","mustAvoid","p1LastColor","p2LastColor","scoreDiff","abs","halfDiff","splitInHalf","splitAt","upperHalfReducer","ignore","src","_pipe","p2","p","_pipe2","upperHalfIds","lowerHalfIds","indexOf","mergeRight","setUpperHalves","sortByScoreThenRating","assignColorsForPair","_pair","sortByNetScoreThenRating","pair1","pair2","pluck","getKFactor","calcNewRatings","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","SvgComponent","props","react_default","a","createElement","height","width","viewBox","d","transform","fill","r","cy","cx","clipPath","href","xlinkHref","x","y","simpleIcon","icon","dangerouslySetInnerHTML","__html","svg","aria-label","title","role","style","hex","icons","Activity","Alert","ArrowDown","ArrowLeft","ArrowUp","Award","Check","CheckCircle","ChevronDown","ChevronLeft","ChevronRight","ChevronUp","Circle","Download","Edit","Help","Info","Javascript","Layers","List","Logo","Plus","React","ReactIcon","Repeat","Settings","Sidebar","Trash","UserMinus","UserPlus","Users","X","genericDbReducer","state","action","nextId","console","warn","item","dissoc","mergeLeft","Error","optionsReducer","option","union","playersReducer","set","scoreByeMatch","autoPair","_setByePlayer","dummyId","dataList","playersWithoutByes","nextByeSignup","dataForNextBye","byeData","setByePlayer","tourney","_setByePlayer2","pairDataNoByes","byePlayerData","pairs","playerIdArray","reduceWithIndices","addIndex","accArr","index","srcArr","playerMatches","blossom","p1Index","p2Index","p1","matched","pairPlayers","pairsWithBye","getPlayer","curry","idsPair","tournamentReducer","remove","newIndex","oldIndex","move","__","matchId","findIndex","propEq","reverse","log","demo_data","tournaments","fromJSON","useSortedTable","origTable","defaultKey","defaultDescend","_useState","useState","_useState2","setTable","_useState3","_useState4","setKey","_useState5","_useState6","isDescending","setIsDescending","useEffect","direction","toggleDirection","useDocumentTitle","origTitle","document","useLoadingCursor","isLoaded","body","cursor","setItemsPrototype","localForage","removeItemsPrototype","optionsStore","createInstance","storeName","playerStore","tourneyStore","loadDemoDB","_loadDemoDB","apply","this","_callee3","regenerator_default","wrap","_context3","prev","next","setItems","demoData","alert","stop","useAllItemsFromDb","store","_useReducer","useReducer","_useReducer2","items","dispatch","setIsLoaded","didCancel","asyncToGenerator","mark","_callee","cleanResults","_context","getItems","sent","config","is","_callee2","deleted","_context2","difference","removeItems","useAllPlayersDb","useAllTournamentsDb","useOptionsDb","_useReducer3","defaultOptions","_useReducer4","iterate","then","TournamentContext","createContext","useTournament","useContext","TournamentProvider","tourneyId","tourneyDispatch","playersDispatch","isTourneyLoaded","setIsTourneyLoaded","isPlayersLoaded","setIsPlayersLoaded","isDbError","setIsDbError","getItem","allTheIds","allPlayers","Array","from","Set","getAllPlayerIdsFromMatches","unChangedPlayers","symmetricDifference","setItem","catch","error","activePlayers","Provider","Crosstable","_useTournament","colSpan","scope","opponent","index2","player1Id","player2Id","getXScore","firstRating","lastRating","change","Fragment","getRatingChangeTds","Panel","styles","panel","objectSpread","PanelContainer","classNames","panels","DateFormat","dateFormat","Intl","DateTimeFormat","day","month","year","cleanProps","omit","dateTime","toISOString","Notification","_ref2","success","warning","_ref3","tooltip","PlaceholderButton","aria-hidden","disabled","SortLabel","_ref4","label","sortKey","utility_PlaceholderButton","onClick","dont-hide","findById","NewPlayer","newPlayerDefault","newPlayerData","setNewPlayerdata","updateField","preventDefault","_event$currentTarget","currentTarget","prevState","onSubmit","htmlFor","required","onChange","Selecting","_useAllPlayersDb","_useAllPlayersDb2","allPlayersDispatch","togglePlayer","checked","pId","visually_hidden_es","PlayerList","PlayerSelect","isSelecting","setIsSelecting","matches","flexShrink","dialog_es","isOpen","PlayerInfo","_useOptionsDb","colorBalance","hasBye","avoidList","prettyBalance","data-testid","entries","opId","SelectList","stagedPlayers","setStagedPlayers","unmatched","selectPlayer","Stage","_stagedPlayers","white","black","whiteName","blackName","unstage","react","every","PairPicker","isModalOpen","setIsModalOpen","_useMemo","useMemo","_scoreData","_useMemo2","unmatchedCount","unmatchedWithDummy","matchIdeal","player0stats","player1stats","ideal","flexGrow","NotFound","PlayerMatchInfo","_scoreData$match$play","MatchRow","pos","selectedMatch","setSelectedMatch","openModal","setOpenModal","resultCode","whitePlayer","blackPlayer","ResultDisplay","setMatchResult","rowId","playerResult","matchResult","winnerSelect","onBlur","controls","RoundTable","tbody","Round","_404","moveMatch","forEach","unMatch","RoundPanels","activePlayersCount","openTab","setOpenTab","tabs_es","ScoreTable","tieBreakNames","standingTree","obj","standingsFlat","rowSpan","dashify","j","SelectTieBreaks","_useTournament2","selectedTb","setSelectedTb","toggleTb","defaultId","moveTb","marginTop","Scores","Header","isEditingName","setIsEditingName","isEditingDate","setIsEditingDate","dateInput","getFullYear","getMonth","getDate","_event$currentTarget$","split","_event$currentTarget$2","rawYear","rawMonth","rawDay","Options","es","to","isRoundComplete","isComplete","isNewRoundReady","roundCount","playerCount","ceil","log2","isFinite","calcNumOfRounds","isItOver","tooltipText","tooltipWarn","_delLastRound","confirm","navigate","max","Status","lastRoundId","textAlign","justifyContent","sidebar","tournament_scores","default","HasSidebar","sidebar_default_Sidebar","TournamentList","_useAllTournamentsDb","_useAllTournamentsDb2","tourneys","sorted","newTourneyName","setNewTourneyName","isFormOpen","setIsFormOpen","message","deleteTournament","placeholder","TournamentIndex","invalidAlert","tourneysDispatch","text","setText","_useOptionsDb2","optionsDispatch","exportData","loadData","JSON","stringify","download","encodeURIComponent","reader","FileReader","onload","ev","parse","_unused2","readAsText","files","process","_unused","cols","rows","spellCheck","delPlayer","PlayerProfile","avoidObj","singAvoidList","unAvoided","selectedAvoider","setSelectedAvoider","handleChange","handleAvoidChange","playerInfo","defaultValue","readOnly","arial-label","PlayerProfileWrapper","Players","childProps","basepath","player_list_PlayerList","Caution","caution","caution__text","caution__link","Splash","splash","hint","titleIcon","titleText","subtitle","footer","display","fontSize","margin","Close","xmlns","Maximize","Minimize","Restore","Controls","setIsMaximized","unregisterListeners","removeAllListeners","on","container","winButton","windows_controls_Minimize","windows_controls_Restore","windows_controls_Maximize","close","windows_controls_Close","source","createHashSource","history","createHistory","App","isSidebarOpen","setIsSidebarOpen","isFullScreen","setIsFullScreen","isWindowBlur","setIsWindowBlur","isFocused","open-sidebar","closed-sidebar","window-blur","isWindows","isElectron","traffic-light-padding","onDoubleClick","alignItems","marginRight","pathname","left","marginLeft","position","right","tournament_Tournament","options_Options","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.530e6f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__3rjgf\",\"header\":\"tournament_header__3XvP5\",\"contentFrame\":\"tournament_contentFrame__3ct63\",\"table\":\"tournament_table__1H60d\",\"topHeader\":\"tournament_topHeader__t_tB_\",\"row\":\"tournament_row__2LSFL\",\"compact\":\"tournament_compact__2uTHd\",\"playerName\":\"tournament_playerName__2dXZ_\",\"rank\":\"tournament_rank__2_u9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__2hUUH\"};","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import numeral from \"numeral\";\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"fraction\", {\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        const whole = Math.floor(value);\n        const remainder = value - whole;\n        const fraction = (function () {\n            switch (remainder) {\n            case 0.25:\n                return \"¼\";\n            case 0.5:\n                return \"½\";\n            case 0.75:\n                return \"¾\";\n            default:\n                return \"\";\n            }\n        }());\n        const stringedWhole = (\n            (whole === 0 && remainder)\n            ? \"\"\n            : String(whole)\n        );\n        return stringedWhole + fraction;\n    },\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    unformat: function (value) {\n        // TODO: This doesn't do anything currently\n        return Number(value);\n    }\n});\n","import PropTypes from \"prop-types\";\nconst electron = (window.require) ? window.require(\"electron\") : false;\nexport {electron};\n\n// Returns the result of a function if Electron is enabled.\nexport function ifElectron(fn) {\n    return (electron) ? fn() : null;\n}\n\nfunction toggleMaximize(win) {\n    if (!win.isMaximized()) {\n        win.maximize();\n    } else {\n        win.unmaximize();\n    }\n}\n\n// https://github.com/electron/electron/issues/16385#issuecomment-453955377\nexport function macOSDoubleClick(event) {\n    ifElectron(function () {\n        if (!event.target.className.includes) {\n            return; // sometimes `className` isn't a string.\n        }\n        // We don't want double-clicking buttons to (un)maximize.\n        if (!event.target.className.includes(\"double-click-control\")) {\n            return;\n        }\n        const {getUserDefault} = electron.remote.systemPreferences;\n        const doubleClickAction = getUserDefault(\n            \"AppleActionOnDoubleClick\",\n            \"string\"\n        );\n        const win = electron.remote.getCurrentWindow();\n        if (doubleClickAction === \"Minimize\") {\n            win.minimize();\n        } else if (doubleClickAction === \"Maximize\") {\n            toggleMaximize(win);\n        }\n    });\n};\n\nexport function IfIsWinApp({children}) {\n    if (electron && navigator.appVersion.includes(\"Windows\")) {\n        return children;\n    } else {\n        return null;\n    }\n};\nIfIsWinApp.propTypes = {\n    children: PropTypes.node.isRequired\n};\n","// These define the array indices used in `Match` objects.\n// @example: `[WhitePlayer, BlackPlayer1]`, `[WhiteScore, BlackScore]`\nconst WHITE = 0;\nconst BLACK = 1;\n// This is used in by matches to indicate a dummy player. The\n// `getPlayerMaybe()` method returns a special dummy player profile when\n// fetching this ID.\n// This ID conforms to the NanoID regex.\nconst DUMMY_ID = \"________DUMMY________\";\n\nexport {BLACK, DUMMY_ID, WHITE};\n","import {BLACK, WHITE} from \"./constants\";\nimport t from \"tcomb\";\n\nconst Id = t.refinement(\n    t.String,\n    (id) => /^[A-Za-z0-9_-]{21}$/.test(id),\n    \"NanoId\"\n);\n\nconst Color = t.refinement(\n    t.Number,\n    (num) => num === BLACK || num === WHITE,\n    \"Color\"\n);\n\nconst AvoidPair = t.tuple([Id, Id], \"AvoidPair\");\n\nconst Player = t.interface(\n    {\n        firstName: t.String,\n        id: Id,\n        lastName: t.String,\n        matchCount: t.Number,\n        rating: t.Number,\n        type: t.String // used for CSS styling etc\n    },\n    \"Player\"\n);\n\nconst Match = t.interface(\n    {\n        id: Id,\n        newRating: t.tuple([t.Number, t.Number]),\n        origRating: t.tuple([t.Number, t.Number]),\n        playerIds: t.tuple([Id, Id]),\n        result: t.tuple([t.Number, t.Number])\n    },\n    \"Match\"\n);\n\nconst RoundList = t.list(t.list(Match), \"RoundList\");\n\nconst Tournament = t.interface(\n    {\n        byeQueue: t.list(t.String),\n        date: Date,\n        id: Id,\n        name: t.String,\n        playerIds: t.list(t.String),\n        roundList: RoundList,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Tournament\"\n);\n\n// Database stuff:\nconst OptionsDb = t.interface(\n    {\n        avoidPairs: t.list(AvoidPair),\n        byeValue: t.refinement(t.Number, (num) => num === 1 || num === 0.5)\n    },\n    \"Options\"\n);\nconst TourneysDb = t.dict(Id, Tournament, \"TournamentsDB\");\nconst PlayersDb = t.dict(Id, Player, \"PlayersDB\");\n\nexport default Object.freeze({\n    AvoidPair,\n    Color,\n    Id,\n    Match,\n    OptionsDb,\n    Player,\n    PlayersDb,\n    RoundList,\n    Tournament,\n    TourneysDb\n});\n","// These factories are mainly useful as a shortcut for default values.\nimport nanoid from \"nanoid\";\nimport types from \"./types\";\n\nexport function createMatch(importObj) {\n    return types.Match(\n        Object.assign(\n            {\n                id: nanoid(),\n                result: [0, 0]\n            },\n            importObj\n        )\n    );\n}\n\nexport function createPlayer(importObj) {\n    return types.Player(\n        Object.assign(\n            {\n                id: nanoid(),\n                matchCount: 0,\n                rating: 0,\n                type: \"person\" // used for CSS styling etc.\n            },\n            importObj\n        )\n    );\n}\n\nexport function createTournament(importObj) {\n    return types.Tournament(\n        Object.assign(\n            {\n                byeQueue: [],\n                date: new Date(),\n                id: nanoid(),\n                playerIds: [],\n                roundList: [],\n                tieBreaks: [0, 1, 2, 3]\n            },\n            importObj\n        )\n    );\n}\n","import {DUMMY_ID} from \"./constants\";\nimport {assoc} from \"ramda\";\nimport {createPlayer} from \"./factories\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\n/*******************************************************************************\n * Player functions\n ******************************************************************************/\n// These are useful for passing to `filter()` methods.\nconst isDummyId = (playerId) => types.Id(playerId) === DUMMY_ID;\nexport {isDummyId};\n// This can take any object with a compliant `id` property.\nconst isDummyObj = (playerObj) => types.Id(playerObj.id) === DUMMY_ID;\nexport {isDummyObj};\n\n// This is the dummy profile that `getPlayerMaybe()` returns for bye rounds.\nconst dummyPlayer = createPlayer({\n    firstName: \"Bye\",\n    id: DUMMY_ID,\n    lastName: \"Player\",\n    type: \"dummy\"\n});\n\n// If `getPlayerMaybe()` can't find a profile (e.g. if it was deleted) then it\n// outputs this instead. The ID will be the same as missing player's ID.\nconst createMissingPlayer = (id) => createPlayer({\n    firstName: \"Anonymous\",\n    id: id,\n    lastName: \"Player\",\n    type: \"missing\"\n});\n\n// This function should always be used in components that *might* not be able to\n// display current player information. This includes bye rounds with \"dummy\"\n// players, or scoreboards where a player may have been deleted.\nexport function getPlayerMaybe(playerDict, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = t.dict(types.Id, types.Player)(playerDict)[id];\n    return (player) ? player : createMissingPlayer(id);\n}\n\n/*******************************************************************************\n * Round functions\n ******************************************************************************/\n\n// This flattens a list of rounds to a list of matches.\n// The optional `lastRound` parameter will slice the rounds to only the last\n// index specified. For example: if you just want to see the scores through\n// round 2 and not include round 3.\nexport function rounds2Matches(roundList, lastRound = null) {\n    const rounds = (lastRound === null)\n        ? roundList\n        : roundList.slice(0, lastRound + 1);\n    return rounds.reduce((acc, round) => acc.concat(round), []);\n}\n\n// This creates a filtered version of `players` with only the players that are\n// not matched for the specified round.\nexport function getUnmatched(roundList, players, roundId) {\n    const matchList = types.RoundList(roundList)[t.Number(roundId)] || [];\n    const matchedIds = matchList.reduce(\n        (acc, match) => acc.concat(match.playerIds),\n        []\n    );\n    const playerList = t.list(types.Player)(Object.values(players));\n    const unmatched = playerList.reduce(\n        (acc, player) => (\n            (matchedIds.includes(player.id))\n            ? acc\n            : assoc(player.id, player, acc)\n        ),\n        {}\n    );\n    return unmatched;\n}\n","/**\n * This file is a complement to `../data-types/`, except its types are specific\n * to the scoring and pairing functions.\n */\nimport t from \"tcomb\";\nimport {types} from \"../data-types\";\n\nconst BLACKVALUE = 1;\nconst WHITEVALUE = -1;\nconst ColorScore = t.refinement(\n    t.Number,\n    (num) => num === BLACKVALUE || num === WHITEVALUE,\n    \"ColorScore\"\n);\nconst ScoreData = t.interface(\n    {\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        id: types.Id,\n        isDummy: t.Boolean,\n        opponentResults: t.dict(types.Id, t.Number),\n        ratings: t.list(t.Number),\n        results: t.list(t.Number),\n        resultsNoByes: t.list(t.Number)\n    },\n    \"ScoreData\"\n);\nconst PairingData = t.interface(\n    {\n        avoidIds: t.list(types.Id),\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        // `halfPos` is the index of the player within their scoregroup that's\n        // split into upper and lower halves. Example: in a group of 8, the\n        // first and the fifth players would both be `halfPos: 0`.\n        halfPos: t.Number,\n        id: types.Id,\n        // isDueBye: t.Boolean,\n        isUpperHalf: t.Boolean,\n        opponents: t.list(types.Id),\n        rating: t.Number,\n        score: t.Number\n    },\n    \"PairingData\"\n);\nconst ScoreCalculator = t.func(\n    [t.dict(t.String, ScoreData), types.Id],\n    t.Number,\n    \"ScoreCalulator\"\n);\nconst Standing = t.interface(\n    {\n        id: types.Id,\n        score: t.Number,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Standing\"\n);\n\nexport default Object.freeze({\n    BLACKVALUE,\n    PairingData,\n    ScoreCalculator,\n    ScoreData,\n    Standing,\n    WHITEVALUE\n});\n","// This implements the tiebreak methods specified in USCF § 34E.\n// This is incomplete; many more tiebreak methods need to be added. These are\n// simply the most commonly used.\nimport {\n    ascend,\n    init,\n    last,\n    pipe,\n    sort,\n    sum,\n    tail\n} from \"ramda\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\nfunction getOpponentScores(scoreData, id) {\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\n    return opponentIds.filter(\n        (oppId) => !scoreData[oppId].isDummy\n    ).map(\n        (oppId) => getPlayerScore(scoreData, oppId)\n    );\n}\n\n/*******************************************************************************\n * The main scoring methods\n ******************************************************************************/\nfunction getPlayerScore(scoreData, id) {\n    return sum(scoreData[id].results);\n}\nexport {getPlayerScore};\n\n\n// USCF § 34E1.\nfunction getMedianScore(scoreData, id) {\n    const scores = getOpponentScores(scoreData, id);\n    return pipe(\n        sort(ascend),\n        init,\n        tail,\n        sum\n    )(scores);\n}\n\n// USCF § 34E2.\nfunction getSolkoffScore(scoreData, id) {\n    return sum(getOpponentScores(scoreData, id));\n}\n// USCF § 34E3.\nfunction getCumulativeScore(scoreData, id) {\n    // turn the regular score list into a \"running\" score list\n    const scoreList = scoreData[id].resultsNoByes.reduce(\n        (acc, score) => acc.concat([last(acc) + score]),\n        [0]\n    );\n    return sum(scoreList);\n}\n\n// USCF § 34E4.\nfunction getCumulativeOfOpponentScore(scoreData, id) {\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\n    const scoreList = opponentIds.filter(\n        (oppId) => !scoreData[oppId].isDummy\n    ).map(\n        (oppId) => getCumulativeScore(scoreData, oppId)\n    );\n    return sum(scoreList);\n}\n\nfunction getColorBalanceScore(scoreData, id) {\n    return sum(scoreData[id].colorScores);\n};\n\nconst {ScoreCalculator} = types;\nconst tieBreakMethods = {\n    0: {\n        func: ScoreCalculator.of(getMedianScore),\n        id: 0,\n        name: \"Median\"\n    },\n    1: {\n        func: ScoreCalculator.of(getSolkoffScore),\n        id: 1,\n        name: \"Solkoff\"\n    },\n    2: {\n        func: ScoreCalculator.of(getCumulativeScore),\n        id: 2,\n        name: \"Cumulative score\"\n    },\n    3: {\n        func: ScoreCalculator.of(getCumulativeOfOpponentScore),\n        id: 3,\n        name: \"Cumulative of opposition\"\n    },\n    4: {\n        func: ScoreCalculator.of(getColorBalanceScore),\n        id: 4,\n        name: \"Most black\"\n    }\n};\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\n// Returns the names of the tiebreak methods selected for your tournament.\nconst getTieBreakNames = (idList) => (\n    t.list(t.Number)(idList).map((i) => tieBreakMethods[i].name)\n);\nexport {getTieBreakNames};\n","import {\n    append,\n    descend,\n    lensIndex,\n    over,\n    path,\n    prop,\n    sortWith\n} from \"ramda\";\nimport {\n    getPlayerScore,\n    tieBreakMethods\n} from \"./scoring\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\n// This is useful for cases where the regular factory functions return empty\n// results because a player hasn't been added yet.\nconst createBlankScoreData = (id) => types.ScoreData({\n    colorScores: [],\n    colors: [],\n    halfPos: 0,\n    id,\n    isDummy: false,\n    opponentResults: {},\n    ratings: [],\n    results: [],\n    resultsNoByes: []\n});\nexport {createBlankScoreData};\n\n// Sort the standings by score, see USCF tie-break rules from § 34.\n// Returns the list of the standings. Each standing has a `tieBreaks` property\n// which lists the score associated with each method. The order of these\n// coresponds to the order of the method names in the second list.\nexport function createStandingList(methods, scoreData) {\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\n    // Get a flat list of all of the players and their scores.\n    const standings = Object.keys(scoreData).map(\n        (id) => types.Standing({\n            id,\n            score: getPlayerScore(scoreData, id),\n            tieBreaks: selectedTieBreaks.map(({func}) => func(scoreData, id))\n        })\n    );\n    // create a list of functions to pass to `sortWith`. This will sort by\n    // scores and then by each tiebreak value.\n    const sortFuncList = Object.keys(selectedTieBreaks).reduce(\n        (acc, key) => acc.concat([descend(path([\"tieBreaks\", key]))]),\n        [descend(prop(\"score\"))]\n    );\n    const standingsSorted = sortWith(sortFuncList, standings);\n    return standingsSorted;\n}\n\nfunction areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any tie-break values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n// Groups the standings by score, see USCF tie-break rules from § 34.\n// example: `[[Dale, Audrey], [Pete], [Bob]]` Dale and Audrey are tied for\n// first, Pete is 2nd, Bob is 3rd.\nexport function createStandingTree(standingList) {\n    const standingsTree = t.list(types.Standing)(standingList).reduce(\n        function assignStandingsToTree(acc, standing, i, orig) {\n            const prevStanding = orig[i - 1];\n            // Always make a new rank for the first player\n            const isNewRank = (i === 0)\n                ? true\n                // Make a new rank if the scores aren't equal\n                : !areScoresEqual(standing, prevStanding);\n            return (isNewRank)\n                // If this player doesn't have the same score, create a new\n                // branch of the tree\n                ? append([standing], acc)\n                // If this player has the same score as the last, append it\n                // to the last branch\n                : over(lensIndex(acc.length - 1), append(standing), acc);\n        },\n        []\n    );\n    return standingsTree;\n}\n","// These functions are for converting data types defined in `../data-types` to\n// data that can be used by the scoring functions in rest of this module.\nimport {\n    BLACK,\n    WHITE,\n    isDummyId,\n    types\n} from \"../data-types\";\nimport {\n    add,\n    append,\n    assoc,\n    defaultTo,\n    lensPath,\n    lensProp,\n    over,\n    pipe,\n    sum\n} from \"ramda\";\nimport {createBlankScoreData} from \"./factories\";\nimport scoreTypes from \"./types\";\nimport t from \"tcomb\";\n\nfunction color2Score(color) {\n    return (types.Color(color) === BLACK)\n        ? scoreTypes.BLACKVALUE\n        : scoreTypes.WHITEVALUE;\n}\n\nfunction match2ScoreDataReducer(acc, match) {\n    const {playerIds, result, newRating, origRating} = match;\n    const [p1Data, p2Data] = [WHITE, BLACK].map(function dataForColor(color) {\n        const id = playerIds[color];\n        const oppColor = (color === WHITE) ? BLACK : WHITE;\n        const oppId = playerIds[oppColor];\n        // Get existing score data to update, or create it fresh\n        // The ratings will always begin with the `origRating` of the\n        // first match they were in.\n        const origData = acc[id] || {id, ratings: [origRating[color]]};\n        return pipe(\n            over(lensProp(\"results\"), append(result[color])),\n            over(\n                lensProp(\"resultsNoByes\"),\n                (isDummyId(oppId)) ? defaultTo([]) : append(result[color])\n            ),\n            over(lensProp(\"colors\"), append(color)),\n            over(lensProp(\"colorScores\"), append(color2Score(color))),\n            over(\n                lensPath([\"opponentResults\", oppId]),\n                pipe(defaultTo(0), add(result[color]))\n            ),\n            over(lensProp(\"ratings\"), append(newRating[color])),\n            assoc(\"isDummy\", isDummyId(id))\n        )(origData);\n    });\n    return pipe(\n        assoc(p1Data.id, p1Data),\n        assoc(p2Data.id, p2Data)\n    )(acc);\n}\n\nexport function matches2ScoreData(matchList) {\n    const data = matchList.reduce(match2ScoreDataReducer, {});\n    // TODO: remove this tcomb check for production\n    return t.dict(types.Id, scoreTypes.ScoreData)(data);\n}\n\n// Flatten the `[[id1, id2], [id1, id3]]` structure into an easy-to-read\n// `{id1: [id2, id3], id2: [id1], id3: [id1]}` structure.\nexport function avoidPairReducer(acc, pair) {\n    return pipe(\n        over(lensProp(pair[0]), append(pair[1])),\n        over(lensProp(pair[1]), append(pair[0]))\n    )(t.dict(types.Id, t.list(types.Id))(acc));\n}\n\nexport function createPairingData(playerData, avoidPairs, scoreData) {\n    const avoidDict = avoidPairs.reduce(avoidPairReducer, {});\n    const pairingData = Object.values(playerData).reduce(\n        function pairingDataReducer(acc, data) {\n            // If there's no scoreData for a player, use empty values\n            const playerStats = (scoreData[data.id])\n                ? scoreData[data.id]\n                : createBlankScoreData(data.id);\n            // `isUpperHalf` and `halfPos` will have to be set by another\n            // function later.\n            const pairData = {\n                avoidIds: avoidDict[data.id] || [],\n                colorScores: playerStats.colorScores,\n                colors: playerStats.colors,\n                halfPos: 0,\n                id: data.id,\n                // isDueBye: false,\n                isUpperHalf: false,\n                opponents: Object.keys(playerStats.opponentResults),\n                rating: data.rating,\n                // `score` is calculated and cached here because the blossom\n                // pairing will reuse it many times.\n                score: sum(playerStats.results)\n            };\n            return assoc(data.id, pairData, acc);\n        },\n        {}\n    );\n    // TODO: remove this tcomb check for production\n    return t.dict(types.Id, scoreTypes.PairingData)(pairingData);\n}\n","import {\n    addIndex,\n    assoc,\n    descend,\n    dissoc,\n    filter,\n    last,\n    map,\n    mergeRight,\n    pipe,\n    pluck,\n    prop,\n    reduce,\n    sort,\n    sortWith,\n    splitAt,\n    sum\n} from \"ramda\";\nimport blossom from \"edmonds-blossom\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\nconst priority = (value) => (condition) => (condition) ? value : 0;\nconst divisiblePriority = (dividend) => (divisor) => dividend / divisor;\n\n// These following consts probably need to be tweaked a lot.\n\n// The weight given to avoid players meeting twice. This same weight is given to\n// avoid matching players on each other's \"avoid\" list.\n// This is the highest priority. (USCF § 27A1)\nconst avoidMeetingTwice = priority(32);\n\n// The weight given to match players with equal scores. This gets divided\n// against the difference between each players' scores, plus one. For example,\n// players with scores `1` and `3` would have this priority divided by `3`.\n// Players with scores `0` and `3` would have this priority divided by `4`.\n// Players with equal scores would divide it by `1`, leaving it unchanged.\n// (USCF § 27A2)\nconst sameScores = divisiblePriority(16);\n\n// The weight given to match players in lower versus upper halves. This is only\n// applied to players being matched within the same score group. (USCF § 27A3)\nconst halfPosition = divisiblePriority(8);\nconst sameHalfPriority = () => 0;\nconst differentHalf = (isDiffHalf) => (isDiffHalf)\n    ? halfPosition\n    : sameHalfPriority;\n\n// The weight given to match players with opposite due colors.\n// (USCF § 27A4 and § 27A5)\nconst differentDueColor = priority(4);\n\n// This is useful for dividing against a calculated priority, to inspect how\n// \"compatible\" two players may be.\nconst maxPriority = sum([\n    differentHalf(true)(1),\n    differentDueColor(true),\n    sameScores(1),\n    avoidMeetingTwice(true)\n]);\nexport {maxPriority};\n\n// The pairing code is broken up into several functions which take each other's\n// input to build the data necessary to pair players appropriately.\n// Using a function like Ramda's `pipe` to put them together, the final product\n// will look something like this:\n// ```js\n// const pairs = pipe(\n//     rounds2Matches,\n//     matches2ScoreData,\n//     createPairingData,\n//     setUpperHalves,\n//     setByePlayer,\n//     pairPlayers // <-- the function that actually pairs them!\n// )(roundList);\n// ```\n// (This may be outdated as the actual functions aren't stable yet.)\n\n// Given two `PairingData` objects, this assigns a number for how much they\n// should be matched. The number gets fed to the `blossom` algorithm.\nexport function calcPairIdeal(player1, player2) {\n    if (player1.id === player2.id) {\n        return 0;\n    }\n    const metBefore = player1.opponents.includes(player2.id);\n    const mustAvoid = player1.avoidIds.includes(player2.id);\n    const p1LastColor = last(player1.colors);\n    const p2LastColor = last(player2.colors);\n    const scoreDiff = Math.abs(player1.score - player2.score) + 1;\n    const halfDiff = Math.abs(player1.halfPos - player2.halfPos) + 1;\n    const isDiffHalf = (\n        player1.isUpperHalf !== player2.isUpperHalf\n        && player1.score === player2.score\n    );\n    return sum([\n        differentDueColor(\n            p1LastColor === undefined || p1LastColor !== p2LastColor\n        ),\n        sameScores(scoreDiff),\n        differentHalf(isDiffHalf)(halfDiff),\n        avoidMeetingTwice(!metBefore && !mustAvoid)\n    ]);\n}\n\nconst splitInHalf = (list) => splitAt(list.length / 2, list);\n\n// for each object sent to this, it determines whether or not it's in the\n// \"upper half\" of it's score group.\n// (USCF § 29C1.)\nfunction upperHalfReducer(acc, playerData, ignore, src) {\n    types.PairingData(playerData);\n    const [upperHalfIds, lowerHalfIds] = pipe(\n        filter((p2) => p2.score === playerData.score),\n        // this may be redundant if the list was already sorted.\n        sort(descend(prop(\"rating\"))),\n        map((p) => p.id),\n        splitInHalf\n    )(src);\n    const isUpperHalf = upperHalfIds.includes(playerData.id);\n    const halfPos = (isUpperHalf)\n        ? upperHalfIds.indexOf(playerData.id)\n        : lowerHalfIds.indexOf(playerData.id);\n    return assoc(\n        playerData.id,\n        mergeRight(playerData, {halfPos, isUpperHalf}),\n        acc\n    );\n}\nexport function setUpperHalves(data) {\n    return Object.values(data).reduce(upperHalfReducer, {});\n}\n\n// Sort the data so matchups default to order by score and rating.\nconst sortByScoreThenRating = sortWith([\n    descend(prop(\"score\")),\n    descend(prop(\"rating\"))\n]);\n// This this returns a tuple of two objects: The modified array of player data\n// without the player assigned a bye, and the player assigned a bye.\n// If no player is assigned a bye, the second object is `null`.\n// After calling this, be sure to add the bye round after the non-bye'd\n// players are paired.\nexport function setByePlayer(byeQueue, dummyId, data) {\n    const hasNotHadBye = (p) => !p.opponents.includes(dummyId);\n    // if the list is even, just return it.\n    if (Object.keys(data).length % 2 === 0) {\n        return [data, null];\n    }\n    const dataList = pipe(\n        Object.values,\n        filter(hasNotHadBye),\n        sortByScoreThenRating\n    )(data);\n    const playersWithoutByes = dataList.map((p) => p.id);\n    const nextByeSignup = t.list(t.String)(byeQueue).filter(\n        (id) => playersWithoutByes.includes(id)\n    )[0];\n    const dataForNextBye = (nextByeSignup)\n        // Assign the bye to the next person who signed up.\n        ? data[nextByeSignup]\n        // Assign a bye to the lowest-rated player in the lowest score group.\n        // Because the list is sorted, the last player is the lowest.\n        // (USCF § 29L2.)\n        : last(dataList);\n    // In the impossible situation that *everyone* has played a bye round\n    // previously, then just pick the last player.\n    const id = (dataForNextBye)\n        ? dataForNextBye.id\n        // TODO: test for this\n        : pipe(Object.values, sortByScoreThenRating, last)(data);\n    const byeData = data[id];\n    const dataWithoutBye = dissoc(id, data);\n    return [dataWithoutBye, byeData];\n}\n\n\nfunction assignColorsForPair(pair) {\n    const [player1, player2] = pair;\n    // This is a quick-and-dirty heuristic to keep color balances\n    // mostly equal. Ideally, it would also examine due colors and how\n    // many times a player played each color last.\n    return (sum(player1.colorScores) < sum(player2.colorScores))\n        // player 1 has played as white more than player 2\n        ? [player2.id, player1.id]\n        // player 1 has played as black more than player 2\n        // (or they're equal).\n        : [player1.id, player2.id];\n}\n\nconst netScoreDescend = (pair1, pair2) => (\n    sum(pluck(\"score\", pair2)) - sum(pluck(\"score\", pair1))\n);\nconst netRatingDescend = (pair1, pair2) => (\n    sum(pluck(\"rating\", pair2)) - sum(pluck(\"rating\", pair1))\n);\nconst sortByNetScoreThenRating = sortWith([netScoreDescend, netRatingDescend]);\n// Create pairings according to the rules specified in USCF § 27, § 28,\n//  and § 29. This is a work in progress and does not account for all of the\n// rules yet.\nexport function pairPlayers(pairingData) {\n    // Because `blossom` has to use numbers that correspond to array indices,\n    // we'll use `playerIdArray` as our source for that.\n    const playerIdArray = Object.keys(pairingData);\n    // Turn the data into blossom-compatible input.\n    function pairIdealReducer(accArr, player1, index, srcArr) {\n        // slice out players who have already computed, plus the current one\n        const playerMatches = srcArr.slice(index + 1).map(\n            (player2) => [\n                playerIdArray.indexOf(player1.id),\n                playerIdArray.indexOf(player2.id),\n                calcPairIdeal(player1, player2)\n            ]\n        );\n        return accArr.concat(playerMatches);\n    }\n    function blossom2Pairs(acc, p1Index, p2Index) {\n        // Filter out unmatched players. Blossom will automatically include\n        // their missing IDs in its results.\n        if (p1Index === -1) {\n            return acc;\n        }\n        // Translate the indices into ID strings\n        const p1 = pairingData[playerIdArray[p1Index]];\n        const p2 = pairingData[playerIdArray[p2Index]];\n        // TODO: in the future, we may store the ideal for debugging. Because it\n        // rarely serves a purpose, we're not including it now.\n        // const ideal = potentialMatches.filter(\n        //     (pair) => pair[0] === p1Id && pair[1] === p2Id\n        // )[0][2];\n        // Blossom returns a lot of redundant matches. Check that this matchup\n        // wasn't already added.\n        const matched = acc.map((pair) => pair[0]);\n        if (!matched.includes(p1) && !matched.includes(p2)) {\n            return acc.concat([[p1, p2]]);\n        }\n        return acc;\n    }\n    // This makes Ramda's `reduce` work more like `Array.prototype.reduce`.\n    const reduceWithIndices = addIndex(reduce);\n    return pipe(\n        Object.values,\n        reduceWithIndices(pairIdealReducer, []),\n        // Feed all of the potential matches to Edmonds-blossom and let the\n        // algorithm work its magic. This returns an array where each index is the\n        // ID of one player and each value is the ID of the matched player.\n        blossom,\n        // Translate those IDs into actual pairs of player Ids.\n        reduceWithIndices(blossom2Pairs, []),\n        sortByNetScoreThenRating,\n        map(assignColorsForPair)\n    )(pairingData);\n}\n","import {BLACK, WHITE} from \"../data-types\";\nimport EloRank from \"elo-rank\";\nimport t from \"tcomb\";\n\nfunction getKFactor(matchCount) {\n    const ne = t.Number(matchCount) || 1;\n    return (800 / ne);\n}\n\nfunction calcNewRatings(origRatings, matchCounts, result) {\n    t.tuple([t.Number, t.Number])(origRatings);\n    t.tuple([t.Number, t.Number])(matchCounts);\n    t.tuple([t.Number, t.Number])(result);\n    const whiteElo = new EloRank(getKFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(getKFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    return newRating.map((rating) => (rating < FLOOR) ? FLOOR : rating);\n}\n\nexport default Object.freeze({\n    calcNewRatings,\n    getKFactor\n});\n","import React from \"react\";\n\nconst SvgComponent = (props) => (\n    <svg height=\"1em\" width=\"1em\" viewBox=\"0 0 512 512\" {...props}>\n        <defs>\n            <g id=\"prefix__d\">\n                <path\n                    d=\"M397 278l66 244-33 187q-1 0-3 4-5 7-28.5 18.5T344 771q-44 37-68.5 60T231 881q-61 84-68 203-10 115 93 229 104 114 281 107 66-4 155-32 29-12 59.5-23.5T812 1341q16-8 28-16-5 21-5 42 0 78 55.5 133t133.5 56q78 0 133-55.5t55-132.5q0-16-4-42 14 9 27 15 46 20 121 47 86 29 155 33 177 8 280-107 101-114 94-229-8-119-69-203-20-27-45-50.5t-67-59.5q-33-28-56-39.5t-27-18.5q-1-2-2-3t-1-2l-32-188 66-247q-50-45-224-74t-402-29q-232 0-408 30.5T397 278zm663 1411l-1-130h-71v131h-83q-34 0-34 33v1q0 33 34 33h83v85q0 35 36 35 35 0 35-35v-85h86q33 0 33-33v-1q0-33-33-33l-85-1z\"\n                    transform=\"scale(.15 -.15)\"\n                />\n                <path\n                    d=\"M1502 513l16 101q-184 51-490 51-308 0-496-52l15-101q189 49 481 49 291 0 474-48zm42-198l-30 118q-195 45-490 45-292 0-488-45l-32-119q190 58 521 58 159 0 295-16t224-41zm-411 550q0 29 6.5 82.5t20.5 83.5q37 81 106 150 20 20 86 54 65 32 139 32 56 0 111.5-19.5t83.5-59.5q25-34 25-110 0-60-49-112-32-33-69-66.5t-71-78.5q-58 20-161.5 31T1133 865zm-73-78q172-3 282-17t198-33q55 54 122 103t94 84q48 65 48 162 0 89-43 149-77 113-235 113-92 0-192-40-91-36-132-78-85-82-124-216-15-46-16.5-117t-1.5-110zm-72 1q0 40-2 110.5T971 1016q-41 134-124 216-43 42-132 78-102 40-193 40-158 0-234-113-43-60-43-150 0-98 48-161 25-36 96-89t120-98q87 19 196.5 33T988 788zm36 251q7 28 12 39 10 39 23 66 6 17 17.5 39.5t24.5 51.5q8 17 17 41.5t18 48.5q8 20 8 43 0 49-35 83.5t-85 34.5q-119 0-119-119 0-23 8-43 22-65 34-90 13-29 24-51.5t19-39.5q13-33 22-66 2-6 12-38zM912 865q-125-2-228.5-13T523 821q-30 37-69.5 74.5T384 966q-50 51-50 112 0 75 25 110 27 40 83 59.5t113 19.5q72 0 138-32 65-34 86-54 68-69 106-150 13-30 19.5-83.5T912 865zm112 345q-2 10-5 17-6 20-10 29-3 7-8 17.5t-10 22.5q-3 7-7.5 18.5T976 1336q-3 9-3 19 0 53 51 53 53 0 53-52 0-13-4-19-14-38-15-41-15-30-19-39-7-16-9-29-3-6-4-10.5t-2-7.5z\"\n                    fill=\"#f9f9fa\"\n                    transform=\"scale(.15 -.15)\"\n                />\n            </g>\n            <clipPath id=\"prefix__b\">\n                <circle r={240} cy={272} cx={256} />\n            </clipPath>\n            <clipPath id=\"prefix__a\">\n                <path transform=\"rotate(18)\" d=\"M240 16h200v512H240z\" />\n                <path transform=\"rotate(18)\" d=\"M292 78h200v512H292z\" />\n                <path transform=\"rotate(18)\" d=\"M361-37h128V91H361z\" />\n            </clipPath>\n            <path\n                id=\"prefix__c\"\n                clipPath=\"url(#prefix__a)\"\n                d=\"M0 0h512v512H0z\"\n            />\n        </defs>\n        <rect\n            width=\"100%\"\n            height=\"100%\"\n            fill=\"#363959\"\n            clipPath=\"url(#prefix__b)\"\n        />\n        <g fill=\"#0d7758\">\n            <g clipPath=\"url(#prefix__b)\">\n                <use href=\"#prefix__c\" xlinkHref=\"#prefix__c\" x={1.5} y={38} />\n            </g>\n            <path d=\"M355.886 119.84l121.735 39.554-39.554 121.736-121.736-39.555z\" />\n        </g>\n        <use\n            href=\"#prefix__d\"\n            xlinkHref=\"#prefix__d\"\n            x={198}\n            y={306}\n            fill=\"#14b184\"\n        />\n        <g fill=\"#c00043\" clipPath=\"url(#prefix__b)\">\n            <use href=\"#prefix__c\" xlinkHref=\"#prefix__c\" x={-192.5} y={100} />\n        </g>\n        <use\n            href=\"#prefix__d\"\n            xlinkHref=\"#prefix__d\"\n            x={4}\n            y={368}\n            fill=\"#ff0059\"\n        />\n        <g fill=\"#07a2ff\" clipPath=\"url(#prefix__b)\">\n            <use href=\"#prefix__c\" xlinkHref=\"#prefix__c\" x={-96} y={228} />\n        </g>\n        <use\n            href=\"#prefix__d\"\n            xlinkHref=\"#prefix__d\"\n            x={100}\n            y={496}\n            fill=\"#47baff\"\n        />\n    </svg>\n);\n\nexport default SvgComponent;\n\n","import Activity from \"react-feather/dist/icons/activity\";\nimport Alert from \"react-feather/dist/icons/alert-triangle\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport ArrowLeft from \"react-feather/dist/icons/arrow-left\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport Award from \"react-feather/dist/icons/award\";\nimport Check from \"react-feather/dist/icons/check\";\nimport CheckCircle from \"react-feather/dist/icons/check-circle\";\nimport ChevronDown from \"react-feather/dist/icons/chevron-down\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport ChevronUp from \"react-feather/dist/icons/chevron-up\";\nimport Circle from \"react-feather/dist/icons/circle\";\nimport Download from \"react-feather/dist/icons/download\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Help from \"react-feather/dist/icons/help-circle\";\nimport Info from \"react-feather/dist/icons/info\";\nimport Javascript from \"simple-icons/icons/javascript\";\nimport Layers from \"react-feather/dist/icons/layers\";\nimport List from \"react-feather/dist/icons/list\";\nimport Logo from \"./logo\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport React from \"react\";\nimport ReactIcon from \"simple-icons/icons/react\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Settings from \"react-feather/dist/icons/settings\";\nimport Sidebar from \"react-feather/dist/icons/sidebar\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Users from \"react-feather/dist/icons/users\";\nimport X from \"react-feather/dist/icons/x\";\n\n// This converts a specified `simple-icons` icon into a React component.\nconst simpleIcon = (icon) => (props) => (\n    <span\n        dangerouslySetInnerHTML={{__html: icon.svg}}\n        aria-label={icon.title}\n        role=\"img\"\n        style={{fill: \"#\" + icon.hex}}\n        {...props}\n    />\n);\n\nexport default {\n    Activity,\n    Alert,\n    ArrowDown,\n    ArrowLeft,\n    ArrowUp,\n    Award,\n    Check,\n    CheckCircle,\n    ChevronDown,\n    ChevronLeft,\n    ChevronRight,\n    ChevronUp,\n    Circle,\n    Download,\n    Edit,\n    Help,\n    Info,\n    Javascript: simpleIcon(Javascript),\n    Layers,\n    List,\n    Logo,\n    Plus,\n    React: simpleIcon(ReactIcon),\n    Repeat,\n    Settings,\n    Sidebar,\n    Trash,\n    UserMinus,\n    UserPlus,\n    Users,\n    X\n};\n","import {\n    assoc,\n    dissoc,\n    lensProp,\n    mergeLeft,\n    over\n} from \"ramda\";\nimport {createPlayer, createTournament, types} from \"../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function genericDbReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_ITEM\":\n        console.warn(\"Use a more specific action instead, please.\");\n        return assoc(nextId, action.item, state);\n    case \"ADD_TOURNEY\":\n        t.interface({name: t.String})(action);\n        return assoc(\n            nextId,\n            createTournament({id: nextId, name: action.name}),\n            state\n        );\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"DEL_ITEM\":\n        // If using the player DB, be sure to delete avoid-pairs too.\n        t.interface({id: t.String})(action);\n        return dissoc(action.id, state);\n    case \"SET_PLAYER\":\n        // This is copied from players-reducer since the profile editor uses it\n        // TODO: unify those\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","import {append, assoc, filter, lensProp, over} from \"ramda\";\nimport t from \"tcomb\";\nimport {types} from \"../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function optionsReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !(\n                pair.includes(action.pair[0]) && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"DEL_AVOID_SINGLE\":\n        t.interface({id: types.Id})(action);\n        // call this when you delete a player ID\n        // TODO: make the avoidPairs list smartly auto-clean itself\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !pair.includes(action.id)),\n            state\n        );\n    case \"SET_OPTION\":\n        t.interface({\n            option: t.String,\n            value: t.union([\n                t.Number,\n                t.list(types.AvoidPair)\n            ])\n        })(action);\n        return assoc(\n            action.option,\n            action.value,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n","import {\n    assoc,\n    dissoc,\n    lensPath,\n    lensProp,\n    mergeLeft,\n    over,\n    set\n} from \"ramda\";\nimport {createPlayer, types} from \"../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function playersReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"SET_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        // You should delete all avoid-pairs with the id too.\n        t.interface({id: types.Id})(action);\n        return dissoc(\n            lensPath(action.id),\n            state\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        t.interface({\n            id: types.Id,\n            matchCount: t.Number\n        })(action);\n        return set(\n            lensPath([action.id, \"matchCount\"]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        t.interface({id: types.Id, rating: t.Number})(action);\n        return set(\n            lensPath([action.id, \"rating\"]),\n            action.rating,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","// TODO: this file needs to be replaced with something more organized.\nimport {\n    BLACK,\n    DUMMY_ID,\n    WHITE,\n    createMatch,\n    getPlayerMaybe,\n    types\n} from \"../../data-types\";\nimport {assoc, curry} from \"ramda\";\nimport {pairPlayers, setByePlayer} from \"../../pairing-scoring\";\nimport t from \"tcomb\";\n\nexport function scoreByeMatch(byeValue, match) {\n    if (match.playerIds[WHITE] === DUMMY_ID) {\n        return assoc(\"result\", [0, byeValue], match);\n    } else if (match.playerIds[BLACK] === DUMMY_ID) {\n        return assoc(\"result\", [byeValue, 0], match);\n    }\n    return match;\n}\n\nexport function autoPair({\n    pairData,\n    byeValue,\n    players,\n    tourney\n}) {\n    const [\n        pairDataNoByes,\n        byePlayerData\n    ] = setByePlayer(tourney.byeQueue, DUMMY_ID, pairData);\n    const pairs = pairPlayers(pairDataNoByes);\n    const pairsWithBye = (byePlayerData)\n        ? pairs.concat([[byePlayerData.id, DUMMY_ID]])\n        : pairs;\n    const getPlayer = curry(getPlayerMaybe)(players);\n    const newMatchList = pairsWithBye.map(\n        (idsPair) => (\n            createMatch({\n                newRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                origRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                playerIds: [idsPair[WHITE], idsPair[BLACK]]\n            })\n        )\n    );\n    return newMatchList.map(curry(scoreByeMatch)(byeValue));\n}\n\nexport function manualPair(pair, byeValue) {\n    t.tuple([types.Player, types.Player])(pair);\n    const match = createMatch({\n        newRating: [pair[WHITE].rating, pair[BLACK].rating],\n        origRating: [pair[WHITE].rating, pair[BLACK].rating],\n        playerIds: [pair[WHITE].id, pair[BLACK].id]\n    });\n    return scoreByeMatch(byeValue, match);\n}\n","import {\n    __,\n    append,\n    assoc,\n    concat,\n    curry,\n    filter,\n    findIndex,\n    lensPath,\n    lensProp,\n    map,\n    mergeRight,\n    move,\n    over,\n    pipe,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport {autoPair, manualPair, scoreByeMatch} from \"./match-functions\";\nimport scoreTypes from \"../../pairing-scoring/types\";\nimport t from \"tcomb\";\nimport {types} from \"../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function tournamentReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number\n        })(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        t.interface({playerIds: t.list(types.Id)})(action);\n        return assoc(\"playerIds\", action.playerIds, state);\n    case \"SET_BYE_QUEUE\":\n        t.interface({byeQueue: t.list(types.Id)})(action);\n        return assoc(\"byeQueue\", action.byeQueue, state);\n    case \"SET_NAME\":\n        t.interface({name: t.String})(action);\n        return assoc(\"name\", action.name, state);\n    case \"AUTO_PAIR\":\n        t.interface({\n            // avoidList: t.list(types.AvoidPair),\n            byeValue: t.Number,\n            pairData: t.dict(types.Id, scoreTypes.PairingData),\n            players: t.dict(types.Id, types.Player),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            concat(\n                __,\n                autoPair({\n                    // avoidList: action.avoidList,\n                    byeValue: action.byeValue,\n                    pairData: action.pairData,\n                    players: action.players,\n                    // roundId: action.roundId,\n                    tourney: state\n                })\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        t.interface({\n            byeValue: t.Number,\n            pair: t.tuple([types.Player, types.Player]),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            append(manualPair(action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_DATE\":\n        t.interface({date: Date})(action);\n        return assoc(\"date\", action.date, state);\n    case \"SET_MATCH_RESULT\":\n        t.interface({\n            matchId: t.String,\n            newRating: t.tuple([t.Number, t.Number]),\n            result: t.tuple([t.Number, t.Number]),\n            roundId: t.Number\n        })(action);\n        // There's probably a better way to do this but... #worksforme\n        return pipe(\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"result\"\n                ]),\n                action.result\n            ),\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n            ),\n        )(state);\n    case \"DEL_MATCH\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state.roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    newRating: reverse(match.newRating),\n                    origRating: reverse(match.origRating),\n                    playerIds: reverse(match.playerIds),\n                    result: reverse(match.result)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number,\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"UPDATE_BYE_SCORES\":\n        t.interface({value: t.Number})(action);\n        return assoc(\n            \"roundList\",\n            map(\n                map(curry(scoreByeMatch)(action.value)),\n                state.roundList\n            ),\n            state\n        );\n    case \"SET_STATE\":\n        console.log(\"setting state:\", action.state);\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\nimport t from \"tcomb\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default {\n    options,\n    players: t.dict(types.Id, types.Player)(players),\n    tournaments: fromJSON(tournaments, t.dict(types.Id, types.Tournament))\n};\n","import {ascend, descend, prop, sort} from \"ramda\";\nimport {useEffect, useState} from \"react\";\nimport t from \"tcomb\";\n\nexport function useSortedTable(origTable, defaultKey, defaultDescend = true) {\n    const [table, setTable] = useState(origTable);\n    const [key, setKey] = useState(defaultKey);\n    const [isDescending, setIsDescending] = useState(defaultDescend);\n    function toggleDirection() {\n        setIsDescending(!isDescending);\n    }\n    useEffect(\n        function updateSortOrder() {\n            const direction = (isDescending) ? descend : ascend;\n            setTable(sort(direction(prop(key)), origTable));\n        },\n        [origTable, key, isDescending]\n    );\n    return {\n        isDescending,\n        key,\n        setIsDescending,\n        setKey,\n        setTable,\n        table,\n        toggleDirection\n    };\n}\n\nexport function useDocumentTitle(title) {\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = \"Chessahoochee: \" + title;\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [title]\n    );\n}\n\nexport function useLoadingCursor(isLoaded) {\n    useEffect(\n        function () {\n            if (t.Boolean(isLoaded)) {\n                document.body.style.cursor = \"auto\";\n            } else {\n                document.body.style.cursor = \"wait\";\n            }\n            // Just in case the component unmounts before the data loads.\n            return function () {\n                document.body.style.cursor = \"auto\";\n            };\n        },\n        [isLoaded]\n    );\n}\n","import \"localforage-getitems\";\nimport {difference, filter} from \"ramda\";\nimport {genericDbReducer, optionsReducer} from \"./reducers\";\nimport {useEffect, useReducer, useState} from \"react\";\nimport defaultOptions from \"./default-options.json\";\nimport demoData from \"../demo-data\";\nimport localForage from \"localforage\";\nimport {extendPrototype as removeItemsPrototype} from \"localforage-removeitems\";\nimport {extendPrototype as setItemsPrototype} from \"localforage-setitems\";\nimport {types} from \"../data-types\";\nimport {useLoadingCursor} from \"./hooks\";\n\n/*******************************************************************************\n * Initialize the databases\n ******************************************************************************/\nsetItemsPrototype(localForage);\nremoveItemsPrototype(localForage);\nconst DATABASE_NAME = \"Chessahoochee\";\nconst optionsStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Options\"\n});\nconst playerStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Players\"\n});\nconst tourneyStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Tournaments\"\n});\n\nexport {optionsStore, playerStore, tourneyStore};\n\nexport async function loadDemoDB() {\n    document.body.style.cursor = \"wait\";\n    await optionsStore.setItems(demoData.options);\n    await playerStore.setItems(demoData.players);\n    await tourneyStore.setItems(demoData.tournaments);\n    // TODO: for some reason in Electron, this `window.alert()` will disable all\n    // focus after it runs. This affects other `window.alert()`s too.\n    window.alert(\"Demo data loaded!\");\n    document.body.style.cursor = \"auto\";\n}\n\n/*******************************************************************************\n * Generic database hooks\n ******************************************************************************/\nfunction useAllItemsFromDb(store, type) {\n    const [items, dispatch] = useReducer(genericDbReducer, {});\n    const [isLoaded, setIsLoaded] = useState(false);\n    useLoadingCursor(isLoaded);\n    useEffect(\n        function loadItemsFromDb() {\n            let didCancel = false;\n            (async function () {\n                const results = await store.getItems();\n                console.log(\"loaded items from\", store.config().storeName);\n                // TODO: This will silently delete invalid entries from the DB.\n                // Because invalid entries are typically just older data that\n                // was created with a different tcomb interface, this should\n                // ideally update the data to a valid type instead of removing\n                // it completely.\n                const cleanResults =  filter(type.is, results);\n                if (!didCancel) {\n                    dispatch({state: cleanResults, type: \"LOAD_STATE\"});\n                    setIsLoaded(true);\n                }\n            }());\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        [store, type]\n    );\n    useEffect(\n        function saveChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            (async function () {\n                await store.setItems(items);\n                console.log(\"saved items to\", store.config().storeName);\n                const keys = await store.keys();\n                const deleted = difference(keys, Object.keys(items));\n                if (deleted.length > 0 ) {\n                    await store.removeItems(deleted);\n                    console.log(\"Deleted \" + deleted.length + \" items.\");\n                }\n            }());\n        },\n        [store, items, isLoaded]\n    );\n    return [items, dispatch];\n}\n\n/*******************************************************************************\n * Player & tournament wrapper hooks\n ******************************************************************************/\nexport function useAllPlayersDb() {\n    return useAllItemsFromDb(playerStore, types.Player);\n}\n\nexport function useAllTournamentsDb() {\n    return useAllItemsFromDb(tourneyStore, types.Tournament);\n}\n\n/*******************************************************************************\n * Options database hooks\n ******************************************************************************/\nexport function useOptionsDb() {\n    const [options, dispatch] = useReducer(optionsReducer, defaultOptions);\n    const [isLoaded, setIsLoaded] = useState(false);\n    useEffect(\n        function initOptionsFromDb() {\n            let didCancel = false;\n            // This uses `iterate` to easily set key-value pairs.\n            optionsStore.iterate(function (value, key) {\n                if (!didCancel) {\n                    dispatch({option: key, type: \"SET_OPTION\", value: value});\n                }\n            }).then(function () {\n                if (!didCancel) {\n                    setIsLoaded(true);\n                }\n            });\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        []\n    );\n    useEffect(\n        function writeChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            optionsStore.setItems(options);\n        },\n        [options, isLoaded]\n    );\n    return [options, dispatch];\n}\n","import React, {\n    createContext,\n    useContext,\n    useEffect,\n    useReducer,\n    useState\n} from \"react\";\nimport {curry, filter, symmetricDifference} from \"ramda\";\nimport {\n    // getAllPlayerIdsFromMatches,\n    getPlayerMaybe,\n    rounds2Matches,\n    types\n} from \"../data-types\";\nimport {playerStore, tourneyStore} from \"./db\";\nimport {playersReducer, tournamentReducer} from \"./reducers\";\nimport PropTypes from \"prop-types\";\nimport t from \"tcomb\";\nimport {useLoadingCursor} from \"./hooks\";\n\nfunction getAllPlayerIdsFromMatches(matchList) {\n    const allPlayers = t.list(types.Match)(matchList).reduce(\n        (acc, match) => acc.concat(match.playerIds),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\nconst TournamentContext = createContext(null);\n\nexport function useTournament() {\n    const state = useContext(TournamentContext);\n    return state;\n}\n\nexport function TournamentProvider({children, tourneyId}) {\n    const [tourney, tourneyDispatch] = useReducer(tournamentReducer, {});\n    const [players, playersDispatch] = useReducer(playersReducer, {});\n    const [isTourneyLoaded, setIsTourneyLoaded] = useState(false);\n    const [isPlayersLoaded, setIsPlayersLoaded] = useState(false);\n    const [isDbError, setIsDbError] = useState(false);\n    useLoadingCursor(isPlayersLoaded && isTourneyLoaded);\n    useEffect(\n        function initTourneyFromDb() {\n            let didCancel = false;\n            (async function () {\n                const value = await tourneyStore.getItem(tourneyId);\n                console.log(\"loaded:\", tourneyId);\n                if (!value) {\n                    setIsDbError(true);\n                } else if(!didCancel) {\n                    tourneyDispatch({state: value || {}, type: \"SET_STATE\"});\n                    setIsTourneyLoaded(true);\n                }\n            }());\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        [tourneyId]\n    );\n    useEffect(\n        function hydrateTourneyPlayersFromDb() {\n            if (!tourney.roundList || !tourney.playerIds) {\n                return; // the tournament hasn't been loaded yet\n            }\n            // Include players who have played matches but left the tournament,\n            // as well as players who are registered but havne't played yet.\n            const allTheIds = getAllPlayerIdsFromMatches(\n                rounds2Matches(tourney.roundList)\n            ).concat(\n                tourney.playerIds\n            );\n            // If there are no ids, update the player state and exit early.\n            if (allTheIds.length === 0) {\n                // This check prevents an infinite loop & memory leak.\n                if (Object.keys(players).length !== 0) {\n                    playersDispatch({state: {}, type: \"LOAD_STATE\"});\n                }\n                setIsPlayersLoaded(true);\n                return;\n            }\n            let didCancel = false;\n            (async function () {\n                const values = await playerStore.getItems(allTheIds);\n                // This safeguards against trying to fetch dummy IDs or IDs from\n                // deleted players. If we updated without this condition, then\n                // this `useEffect` would trigger an infinite loop and a memory\n                // leak.\n                const unChangedPlayers = symmetricDifference(\n                    Object.keys(values),\n                    Object.keys(players)\n                );\n                console.log(\"unchanged players:\", unChangedPlayers);\n                if (unChangedPlayers.length !== 0 && !didCancel) {\n                    console.log(\"hydrated player data\");\n                    playersDispatch({state: values, type: \"LOAD_STATE\"});\n                }\n                if (!didCancel) {\n                    setIsPlayersLoaded(true);\n                }\n            }());\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        [tourney.roundList, players, tourney.playerIds]\n    );\n    useEffect(\n        function saveTourneyToDb() {\n            if (\n                !isTourneyLoaded\n                // The tourney length is 0 when it wasn't found in the DB\n                || Object.keys(tourney).length === 0\n                // I don't know why, but this happens sometimes with a bad URL\n                || tourneyId !== tourney.id\n            ) {\n                return;\n            }\n            tourneyStore.setItem(tourneyId, tourney).catch(function (error) {\n                console.log(\"error saving tourney:\", tourneyId, error);\n            });\n        },\n        [tourneyId, tourney, isTourneyLoaded]\n    );\n    useEffect(\n        function savePlayersToDb() {\n            if (!isPlayersLoaded) {\n                return;\n            }\n            (async function () {\n                const values = await playerStore.setItems(players);\n                console.log(\"saved player changes to DB:\", values);\n            }());\n        },\n        [players, isPlayersLoaded]\n    );\n    const getPlayer = curry(getPlayerMaybe)(players);\n    // `players` includes players in past matches who may have left\n    // `activePlayers` is only players to be matched in future matches.\n    const activePlayers = filter(\n        (p) => tourney.playerIds.includes(p.id),\n        players\n    );\n    if (isDbError) {\n        return <div>Error: tournament not found.</div>;\n    }\n    if (!isTourneyLoaded || !isPlayersLoaded) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <TournamentContext.Provider\n            value={{\n                activePlayers,\n                getPlayer,\n                players,\n                playersDispatch,\n                tourney,\n                tourneyDispatch\n            }}\n        >\n            {children}\n        </TournamentContext.Provider>\n    );\n}\nTournamentProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n    tourneyId: PropTypes.string.isRequired\n};\n","import {\n    createStandingList,\n    matches2ScoreData\n} from \"../../pairing-scoring\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {last} from \"ramda\";\nimport numeral from \"numeral\";\nimport {rounds2Matches} from \"../../data-types\";\nimport style from \"./index.module.css\";\nimport {useTournament} from \"../../hooks\";\n\nexport default function Crosstable(props) {\n    const {tourney, getPlayer} = useTournament();\n    const {tieBreaks, roundList} = tourney;\n    const scoreData = matches2ScoreData(rounds2Matches(roundList));\n    const standings = createStandingList(tieBreaks, scoreData);\n\n    function getXScore(player1Id, player2Id) {\n        if (player1Id === player2Id) {\n            return <Icons.X className=\"disabled\" />;\n        }\n        const result = scoreData[player1Id].opponentResults[player2Id];\n        if (result === undefined) {\n            return null;\n        }\n        return numeral(result).format(\"1/2\");\n    }\n\n    function getRatingChangeTds(playerId) {\n        const firstRating = scoreData[playerId].ratings[0];\n        const lastRating = last(scoreData[playerId].ratings);\n        const change = numeral(lastRating - firstRating).format(\"+0\");\n        return (\n            <>\n            <td className=\"table__number\">\n                {lastRating}\n            </td>\n            <td className=\"table__number body-10\">\n                ({change})\n            </td>\n            </>\n        );\n    }\n\n    return (\n        <table className={style.table}>\n            <caption>Crosstable</caption>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    {/* Display a rank as a shorthand for each player. */}\n                    {Object.keys(standings).map((rank) =>\n                        <th key={rank}>\n                            {Number(rank) + 1}\n                        </th>\n                    )}\n                    <th>Score</th>\n                    <th colSpan={2}>Rating</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* Output a row for each player */}\n                {standings.map((standing, index)=>\n                    <tr key={index} className={style.row}>\n                        <th className={style.rank} scope=\"col\">\n                            {index + 1}\n                        </th>\n                        <th className={style.playerName} scope=\"row\">\n                            {getPlayer(standing.id).firstName}&nbsp;\n                            {getPlayer(standing.id).lastName}\n                        </th>\n                        {/* Output a cell for each other player */}\n                        {standings.map((opponent, index2) =>\n                            <td\n                                key={index2}\n                                className=\"table__number\"\n                            >\n                                {getXScore(standing.id, opponent.id)}\n                            </td>\n                        )}\n                        {/* Output their score and rating change */}\n                        <td className=\"table__number\">\n                            {numeral(standing.score).format(\"1/2\")}\n                        </td>\n                        {getRatingChangeTds(standing.id)}\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nCrosstable.propTypes = {\n    tourneyId: PropTypes.string\n};\n","import Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {omit} from \"ramda\";\nimport styles from \"./utility.module.css\";\n\nexport function Panel({children, style}) {\n    return (\n        <div className={styles.panel} style={{...style}}>\n            {children}\n        </div>\n    );\n}\nPanel.propTypes = {\n    children: PropTypes.node.isRequired,\n    style: PropTypes.object\n};\n\nexport function PanelContainer(props) {\n    return (\n        <div {...props} className={classNames(styles.panels, props.className)}>\n            {props.children}\n        </div>\n    );\n}\nPanelContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string\n};\n\nexport function DateFormat(props) {\n    const dateFormat = new Intl.DateTimeFormat(\n        \"en-US\",\n        {\n            day: \"2-digit\",\n            month: \"short\",\n            year: \"numeric\"\n        }\n    );\n    const cleanProps = omit([\"date\"], props);\n    return (\n        <time dateTime={props.date.toISOString()} {...cleanProps}>\n            {dateFormat.format(props.date)}\n        </time>\n    );\n}\nDateFormat.propTypes = {\n    date: PropTypes.instanceOf(Date)\n};\n\nexport function Notification(props) {\n    const [icon, className] = (function () {\n        if (props.success) {\n            return [<Icons.Check />, \"notification__success\"];\n        } else if (props.warning) {\n            return [<Icons.Alert />, \"notification__warning\"];\n        } else if (props.error) {\n            return [<Icons.X />, \"notification__error\"];\n        } else {\n            return [<Icons.Info />, \"notification__generic\"];\n        }\n    }());\n    const cleanProps = omit([\"warning\", \"error\", \"success\", \"tooltip\"], props);\n    return (\n        <div\n            {...cleanProps}\n            className={\"notification \" + className + \" \" + props.className}\n        >\n            <div\n                aria-label={props.tooltip}\n                className=\"notification__icon\"\n                title={props.tooltip}\n            >\n                {icon}\n            </div>\n            <div className=\"notification__text\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\nNotification.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    success: PropTypes.bool,\n    tooltip: PropTypes.string,\n    warning: PropTypes.bool\n};\n\n/**\n * This just creates empty space to balance the layout, e.g. if there's a button\n * on one side of a centered element that's offsetting it.\n */\nconst PlaceholderButton = () => (\n    <button\n        className=\"button-ghost placeholder\"\n        aria-hidden\n        disabled\n    />\n);\nexport {PlaceholderButton};\n\nexport function SortLabel({label, sortKey, data}) {\n    function toggleDirAndSetKey() {\n        data.setKey(sortKey);\n        data.toggleDirection();\n    }\n    function setKeyOrToggleDir() {\n        if (data.key === sortKey) {\n            data.toggleDirection();\n        } else {\n            data.setKey(sortKey);\n        }\n    }\n    return (\n        <span className=\"buttons-on-hover\">\n            <PlaceholderButton />\n            <button\n                className=\"button-micro dont-hide button-text-ghost title-20\"\n                onClick={setKeyOrToggleDir}\n            >\n                {label}\n            </button>\n            <button\n                className={classNames(\n                    \"button-ghost\",\n                    {\"dont-hide\": data.key === sortKey}\n                )}\n                onClick={toggleDirAndSetKey}\n            >\n                {(data.isDescending)\n                    ? <Icons.ChevronUp />\n                    : <Icons.ChevronDown />}\n            </button>\n        </span>\n    );\n}\nSortLabel.propTypes = {\n    data: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    sortKey: PropTypes.string.isRequired\n};\n\n/*******************************************************************************\n * Non-JSX functions\n ******************************************************************************/\n// TODO: get rid of this.\nexport function findById(id, list) {\n    return list.filter((x) => x.id === id)[0];\n}\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer({dispatch}) {\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        dispatch({\n            firstName,\n            lastName,\n            rating: Number(rating),\n            type: \"ADD_PLAYER\"\n        });\n    };\n\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        name=\"firstName\"\n                        type=\"text\"\n                        value={newPlayerData.firstName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        name=\"lastName\"\n                        type=\"text\"\n                        value={newPlayerData.lastName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        name=\"rating\"\n                        type=\"number\"\n                        value={newPlayerData.rating}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\nNewPlayer.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n","import {useAllPlayersDb, useTournament} from \"../../../hooks\";\nimport NewPlayer from \"../../../components/new-player\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport default function Selecting(props) {\n    const {tourney, tourneyDispatch} = useTournament();\n    const [players, allPlayersDispatch] = useAllPlayersDb();\n\n    function togglePlayer(event) {\n        const id = event.target.value;\n        if (event.target.checked) {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.concat([id]),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        } else {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.filter((pId) => pId !== id),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: Object.keys(players),\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select all\n                </button>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: [],\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select none\n                </button>\n            </div>\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.values(players).map(({id, firstName, lastName}) =>\n                        <tr key={id}>\n                            <td>{firstName}</td>\n                            <td>{lastName}</td>\n                            <td>\n                                <VisuallyHidden>\n                                    <label htmlFor={\"select-\" + id}>\n                                        Select {firstName} {lastName}\n                                    </label>\n                                </VisuallyHidden>\n                                <input\n                                    checked={tourney.playerIds.includes(id)}\n                                    type=\"checkbox\"\n                                    value={id}\n                                    id={\"select-\" + id}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <NewPlayer dispatch={allPlayersDispatch}/>\n        </div>\n    );\n}\nSelecting.propTypes = {};\n","import {DUMMY_ID, rounds2Matches, types} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport Selecting from \"./selecting\";\nimport t from \"tcomb\";\nimport {useTournament} from \"../../../hooks\";\n\nfunction hasHadBye(matchList, playerId) {\n    return t.list(types.Match)(matchList).filter(\n        (match) => match.playerIds.includes(playerId)\n    ).reduce(\n        (acc, match) => acc.concat(match.playerIds),\n        []\n    ).includes(DUMMY_ID);\n}\n\nfunction PlayerList({players, dispatch, byeQueue}) {\n    return (\n        <>\n        {Object.values(players).map((p) => (\n            <tr key={p.id} className={p.type + \" player\"}>\n                <td>{p.firstName}</td>\n                <td>{p.lastName}</td>\n                <td>\n                    <button\n                        className=\"button-micro\"\n                        disabled={byeQueue.includes(p.id)}\n                        onClick={() =>\n                            dispatch({\n                                byeQueue:\n                                    byeQueue.concat([p.id]),\n                                type: \"SET_BYE_QUEUE\"\n                            })\n                        }\n                    >\n                        Bye signup\n                    </button>\n                </td>\n            </tr>\n        )\n        )}\n        </>\n    );\n}\nPlayerList.propTypes = {\n    byeQueue: PropTypes.arrayOf(PropTypes.string).isRequired,\n    dispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired\n};\n\nexport default function PlayerSelect(props) {\n    const {tourney, tourneyDispatch, activePlayers} = useTournament();\n    const {playerIds, roundList, byeQueue} = tourney;\n    const dispatch = tourneyDispatch;\n    const [isSelecting, setIsSelecting] = useState(playerIds.length === 0);\n    const matches = rounds2Matches(roundList);\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button onClick={() => setIsSelecting(true)}>\n                    <Icons.Edit /> Edit player roster\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel style={{flexShrink: \"0\"}}>\n                    <table>\n                        <caption>Current roster</caption>\n                        <thead>\n                            <tr>\n                                <th colSpan={2}>Name</th>\n                                <th>Options</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"content\">\n                            <PlayerList\n                                byeQueue={byeQueue}\n                                dispatch={dispatch}\n                                players={activePlayers}\n                            />\n                        </tbody>\n                    </table>\n                </Panel>\n                <Panel>\n                    <h3>Bye queue</h3>\n                    {byeQueue.length === 0 &&\n                        <p>No players have signed up for a bye round.</p>\n                    }\n                    <ol>\n                        {byeQueue.map((pId) => (\n                            <li\n                                key={pId}\n                                className={\n                                    (hasHadBye(matches, pId))\n                                    ? \"disabled buttons-on-hover\"\n                                    : \"buttons-on-hover\"\n                                }\n                            >\n                                {activePlayers[pId].firstName}{\" \"}\n                                {activePlayers[pId].lastName}{\" \"}\n                                <button\n                                    className=\"button-micro\"\n                                    onClick={() =>\n                                        dispatch({\n                                            byeQueue: byeQueue.filter(\n                                                (id) => pId !== id\n                                            ),\n                                            type: \"SET_BYE_QUEUE\"\n                                        })\n                                    }\n                                >\n                                    Remove\n                                </button>\n                            </li>\n                        ))}\n                    </ol>\n                </Panel>\n                <Dialog isOpen={isSelecting}>\n                    <button\n                        className=\"button-micro button-primary\"\n                        onClick={() => setIsSelecting(false)}\n                    >\n                        Done\n                    </button>\n                    <Selecting />\n                </Dialog>\n            </PanelContainer>\n        </div>\n    );\n}\nPlayerSelect.propTypes = {};\n","import {\n    avoidPairReducer,\n    createBlankScoreData\n} from \"../../../pairing-scoring\";\n// this component should eventually replace player-match-info.jsx\nimport {useOptionsDb, useTournament} from \"../../../hooks\";\nimport {DUMMY_ID} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {sum} from \"ramda\";\n\nexport default function PlayerInfo({playerId, scoreData}) {\n    const {getPlayer, players} = useTournament();\n    const [options] = useOptionsDb();\n    const avoidDict = options.avoidPairs.reduce(avoidPairReducer, {});\n    const playerData = scoreData[playerId] || createBlankScoreData(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = playerData;\n    const colorBalance = sum(colorScores);\n    const player = getPlayer(playerId);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const avoidList = avoidDict[playerId] || [];\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <p>Score: {sum(results)}</p>\n            <p data-testid={\"rating-\" + player.id}>\n                Rating: {player.rating}\n            </p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {Object.entries(opponentResults).map(([opId, result]) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}{\" \"}\n                        -{\" \"}\n                        {result === 0 && \"Lost\"}\n                        {result === 1 && \"Won\"}\n                        {result === 0.5 && \"Draw\"}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    players[pId] && // don't show players not in this tourney\n                        <li key={pId}>\n                            {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                        </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\nPlayerInfo.propTypes = {\n    playerId: PropTypes.string,\n    scoreData: PropTypes.object\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport {lensIndex, set} from \"ramda\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport default function SelectList({\n    stagedPlayers,\n    setStagedPlayers,\n    unmatched\n}) {\n    // only use unmatched players if this is the last round.\n    function selectPlayer(id) {\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(WHITE), id, prevState)\n            );\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(BLACK), id, prevState)\n            );\n        }\n        // else... nothing happens\n    }\n    if (Object.keys(unmatched).length === 0) {\n        return null;\n    }\n    return (\n        <ul className=\"content plain-list\">\n            {Object.values(unmatched).map(\n                ({id, firstName, lastName}) => (\n                    <li key={id}>\n                        <button\n                            className=\"button-ghost\"\n                            disabled={\n                                !stagedPlayers.includes(null)\n                                || stagedPlayers.includes(id)\n                            }\n                            onClick={() => selectPlayer(id)}\n                        >\n                            <Icons.UserPlus/>\n                            <Hidden>\n                                Add {firstName} {lastName}\n                            </Hidden>\n                        </button>\n                        {\" \"}\n                        {firstName} {lastName}\n                    </li>\n                )\n            )}\n        </ul>\n    );\n}\nSelectList.propTypes = {\n    setStagedPlayers: PropTypes.func,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string),\n    unmatched: PropTypes.object\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport React, {Fragment} from \"react\";\nimport {lensIndex, set} from \"ramda\";\nimport {useOptionsDb, useTournament} from \"../../../hooks\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\n\nexport default function Stage({\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {tourneyDispatch, getPlayer} = useTournament();\n    const dispatch = tourneyDispatch;\n    const [options] = useOptionsDb();\n    const [white, black] = stagedPlayers;\n    const whiteName = (white)\n        ? getPlayer(white).firstName + \" \" + getPlayer(white).lastName\n        : \"\";\n    const blackName = (black)\n        ? getPlayer(black).firstName + \" \" + getPlayer(black).lastName\n        : \"\";\n\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n\n    function match() {\n        dispatch({\n            byeValue: options.byeValue,\n            pair: [getPlayer(white), getPlayer(black)],\n            roundId,\n            type: \"MANUAL_PAIR\"\n        });\n        setStagedPlayers([null, null]);\n    }\n\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <div className=\"content\">\n                <p>\n                    White:{\" \"}\n                    {white !== null &&\n                        <Fragment>\n                            {whiteName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + whiteName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(WHITE)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n                <p>\n                    Black:{\" \"}\n                    {black !== null &&\n                        <Fragment>\n                            {blackName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + blackName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(BLACK)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n            </div>\n            <div className=\"toolbar\">\n                <button\n                    disabled={\n                        stagedPlayers.every((id) => id === null)\n                    }\n                    onClick={() => setStagedPlayers(\n                        (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                    )}\n                >\n                    <Icons.Repeat/> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-primary\"\n                    disabled={stagedPlayers.includes(null)}\n                    onClick={match}\n                >\n                    <Icons.Check/> Match selected\n                </button>\n            </div>\n        </div>\n    );\n}\nStage.propTypes = {\n    roundId: PropTypes.number,\n    setStagedPlayers: PropTypes.func,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string)\n};\n","import {\n    DUMMY_ID,\n    getUnmatched,\n    rounds2Matches\n} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {assoc, curry, pipe} from \"ramda\";\nimport {\n    calcPairIdeal,\n    createPairingData,\n    matches2ScoreData,\n    maxPriority,\n    setUpperHalves\n} from \"../../../pairing-scoring\";\nimport {useOptionsDb, useTournament} from \"../../../hooks\";\nimport {Dialog} from \"@reach/dialog\";\nimport PlayerInfo from \"./player-info\";\nimport PropTypes from \"prop-types\";\nimport SelectList  from \"./select-list\";\nimport Selecting from \"../player-select/selecting\";\nimport Stage from \"./stage\";\nimport numeral from \"numeral\";\n\nexport default function PairPicker({roundId}) {\n    const [stagedPlayers, setStagedPlayers] = useState([null, null]);\n    const [options] = useOptionsDb();\n    const {\n        tourney,\n        activePlayers,\n        getPlayer,\n        tourneyDispatch\n    } = useTournament();\n    const {roundList} = tourney;\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [scoreData, pairData] = useMemo(\n        function memoizedGetStats() {\n            const matches = rounds2Matches(roundList, roundId);\n            const _scoreData = matches2ScoreData(matches);\n            const _pairData = pipe(\n                curry(createPairingData)(activePlayers, options.avoidPairs),\n                // sortDataForPairing,\n                setUpperHalves\n            )(_scoreData);\n            return [_scoreData, _pairData];\n        },\n        [roundList, activePlayers, roundId, options.avoidPairs]\n    );\n    // Only calculate unmatched players for the latest round. Old rounds don't\n    // get to add new players.\n    const unmatched = (roundId === roundList.length - 1)\n        ? getUnmatched(roundList, activePlayers, roundId)\n        : {};\n    const unmatchedCount = Object.keys(unmatched).length;\n    // make a new list so as not to affect auto-pairing\n    const unmatchedWithDummy = (unmatchedCount % 2 !== 0)\n        ? assoc(DUMMY_ID, getPlayer(DUMMY_ID), unmatched)\n        : unmatched;\n    useEffect(\n        function cleanPlayersThatWereRemoved() {\n            const [p1, p2] = stagedPlayers;\n            if (!unmatchedWithDummy[p1] && p1 !== null) {\n                setStagedPlayers((pair) => [null, pair[1]]);\n            }\n            if (!unmatchedWithDummy[p2] && p2 !== null) {\n                setStagedPlayers((pair) => [pair[0], null]);\n            }\n        },\n        [unmatchedWithDummy, stagedPlayers]\n    );\n    const matchIdeal = (function () {\n        if (stagedPlayers.includes(null)) {\n            return null;\n        }\n        const player0stats = pairData[stagedPlayers[0]];\n        const player1stats = pairData[stagedPlayers[1]];\n        if (!player0stats || !player1stats) {\n            return null;\n        }\n        const ideal = calcPairIdeal(player0stats, player1stats);\n        return numeral(ideal / maxPriority).format(\"%\");\n    }());\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-primary\"\n                    disabled={unmatchedCount === 0}\n                    onClick={() => tourneyDispatch({\n                        // avoidList: options.avoidPairs,\n                        byeValue: options.byeValue,\n                        pairData: pairData,\n                        players: unmatched,\n                        roundId,\n                        type: \"AUTO_PAIR\"\n                    })}\n                >\n                    Auto-pair unmatched players\n                </button>{\" \"}\n                <button onClick={() => setIsModalOpen(true)}>\n                    Add or remove players from the roster.\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel>\n                    <SelectList\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                        unmatched={unmatchedWithDummy}\n                    />\n                </Panel>\n                <Panel style={{flexGrow: \"1\"}}>\n                    <Stage\n                        roundId={roundId}\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                    />\n                    <PanelContainer>\n                        {stagedPlayers.map((id) =>\n                            id !== null && (\n                                <Panel key={id}>\n                                    <PlayerInfo\n                                        playerId={id}\n                                        roundId={roundId}\n                                        scoreData={scoreData}\n                                    />\n                                </Panel>\n                            )\n                        )}\n                    </PanelContainer>\n                    {!stagedPlayers.includes(null) &&\n                        <span>Match ideal: {matchIdeal}</span>\n                    }\n                </Panel>\n            </PanelContainer>\n            <Dialog isOpen={isModalOpen}>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsModalOpen(false)}\n                >\n                    Done\n                </button>\n                <Selecting />\n            </Dialog>\n        </div>\n    );\n}\nPairPicker.propTypes = {\n    roundId: PropTypes.number,\n    tourneyId: PropTypes.number\n};\n","import React from \"react\";\n\nconst NotFound = (props) => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","import {\n    DUMMY_ID\n    // rounds2Matches\n} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {findById} from \"../../../components/utility\";\n// import {matches2ScoreData} from \"../../../pairing-scoring\";\nimport numeral from \"numeral\";\nimport {sum} from \"ramda\";\nimport {useTournament} from \"../../../hooks\";\n\nexport default function PlayerMatchInfo({matchId, color, roundId, scoreData}) {\n    const {tourney, getPlayer} = useTournament();\n    const matchList = tourney.roundList[roundId];\n    const match = findById(matchId, matchList);\n    const playerId = match.playerIds[color];\n    const player = getPlayer(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = scoreData[match.playerIds[color]];\n    const colorBalance = sum(colorScores);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{sum(results)}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerId}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{hasBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {Object.entries(\n                        opponentResults\n                    ).map(([opId, result], i, src) => (\n                        // don't show the most recent (current) opponent\n                        i < src.length - 1 && (\n                            <li key={opId}>\n                                {getPlayer(opId).firstName}{\" \"}\n                                {getPlayer(opId).lastName}{\" \"}\n                                -{\" \"}\n                                {result === 0 && \"Lost\"}\n                                {result === 1 && \"Won\"}\n                                {result === 0.5 && \"Draw\"}\n                            </li>\n                        )\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\nPlayerMatchInfo.propTypes = {\n    color: PropTypes.number,\n    matchId: PropTypes.string,\n    roundId: PropTypes.number,\n    scoreData: PropTypes.object\n};\n","import \"@reach/dialog/styles.css\";\nimport {BLACK, DUMMY_ID, WHITE} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PlayerMatchInfo from \"./player-match-info\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {ratings} from \"../../../pairing-scoring\";\nimport styles from \"./round.module.css\";\nimport {sum} from \"ramda\";\nimport {useTournament} from \"../../../hooks\";\n\nexport default function MatchRow({\n    compact,\n    pos,\n    match,\n    roundId,\n    selectedMatch,\n    setSelectedMatch,\n    scoreData\n}) {\n    const {\n        tourney,\n        tourneyDispatch,\n        players,\n        getPlayer,\n        playersDispatch\n    } = useTournament();\n    const dispatch = tourneyDispatch;\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whitePlayer = getPlayer(match.playerIds[WHITE]);\n    const blackPlayer = getPlayer(match.playerIds[BLACK]);\n    const whiteName = whitePlayer.firstName + \" \" + whitePlayer.lastName;\n    const blackName = blackPlayer.firstName + \" \" + blackPlayer.lastName;\n\n    function ResultDisplay(color) {\n        if (resultCode === \"NOTSET\") {\n            return <VisuallyHidden>Not set</VisuallyHidden>;\n        } else if (resultCode === \"DRAW\") {\n            // return <Icons.Minus aria-label=\"Draw\" />;\n            // TODO: find a better icon for draws.\n            return (\n                <span\n                    aria-label=\"Draw\"\n                    role=\"img\"\n                    style={{filter: \"grayscale(100%)\"}}\n                >\n                    🤝\n                </span>\n            );\n        } else if (resultCode === color) {\n            return <Icons.Award  aria-label=\"Won\" />;\n        } else {\n            return <VisuallyHidden>Lost</VisuallyHidden>;\n        }\n    }\n\n    function setMatchResult(event) {\n        const result = (function () {\n            switch (event.target.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        const white = players[match.playerIds[WHITE]];\n        const black = players[match.playerIds[BLACK]];\n        const newRating = (\n            (event.currentTarget.value === \"NOTSET\")\n            ? match.origRating\n            : ratings.calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playersDispatch({\n            id: white.id,\n            rating: newRating[WHITE],\n            type: \"SET_PLAYER_RATING\"\n        });\n        playersDispatch({\n            id: black.id,\n            rating: newRating[BLACK],\n            type: \"SET_PLAYER_RATING\"\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (sum(match.result) === 0) {\n            playersDispatch({\n                id: white.id,\n                matchCount: white.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n            playersDispatch({\n                id: black.id,\n                matchCount: black.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n        }\n        dispatch({\n            matchId: match.id,\n            newRating,\n            result,\n            roundId,\n            type: \"SET_MATCH_RESULT\"\n        });\n    }\n\n    return (\n        <tr\n            className={\n                (match.id === selectedMatch)\n                ? \"selected\"\n                : \"buttons-on-hover\"\n            }\n        >\n            <th className={\"table__number \" + styles.rowId} scope=\"row\">\n                {pos + 1}\n            </th>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"WHITE\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + whitePlayer.type}\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}\n            </td>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"BLACK\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + blackPlayer.type}\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}\n            </td>\n            <td className={styles.matchResult + \" data__input row__controls\"}>\n                <select\n                    className={styles.winnerSelect}\n                    disabled={match.playerIds.includes(DUMMY_ID)}\n                    value={resultCode}\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                >\n                    <option value=\"NOTSET\">\n                        Select winner\n                    </option>\n                    <option value=\"WHITE\">\n                        White won\n                    </option>\n                    <option value=\"BLACK\">\n                        Black won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            {!compact &&\n                <td className={styles.controls + \" data__input\"}>\n                    {(selectedMatch !== match.id)\n                    ? (\n                        <button\n                            className=\"button-ghost\"\n                            title=\"Edit match\"\n                            onClick={() => setSelectedMatch(match.id)}\n                        >\n                            <Icons.Circle />\n                            <VisuallyHidden>\n                                Edit match for {whiteName} versus {blackName}\n                            </VisuallyHidden>\n                        </button>\n                    ) : (\n                        <button\n                            className=\"button-ghost button-pressed\"\n                            title=\"End editing match\"\n                            onClick={() => setSelectedMatch(null)}\n                        >\n                            <Icons.CheckCircle />\n                        </button>\n                    )}\n                    <button\n                        className=\"button-ghost\"\n                        title=\"Open match information.\"\n                        onClick={() => setOpenModal(true)}\n                    >\n                        <Icons.Info />\n                        <Hidden>\n                            View information for match:{\" \"}\n                            {whiteName} versus {blackName}\n                        </Hidden>\n                    </button>\n                    <Dialog isOpen={openModal}>\n                        <button\n                            className=\"button-micro button-primary\"\n                            onClick={() => setOpenModal(false)}\n                        >\n                            close\n                        </button>\n                        <p>{tourney.name}</p>\n                        <p>Round {roundId + 1}, match {pos + 1}</p>\n                        <PanelContainer>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={0}\n                                    matchId={match.id}\n                                    roundId={roundId}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={1}\n                                    matchId={match.id}\n                                    roundId={roundId}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                        </PanelContainer>\n                    </Dialog>\n                </td>\n            }\n        </tr>\n    );\n}\nMatchRow.propTypes = {\n    compact: PropTypes.bool,\n    match: PropTypes.object,\n    pos: PropTypes.number,\n    roundId: PropTypes.number,\n    scoreData: PropTypes.object,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func\n};\n","import MatchRow from \"./match-row\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {matches2ScoreData} from \"../../../pairing-scoring\";\nimport {rounds2Matches} from \"../../../data-types\";\nimport style from \"./round.module.css\";\nimport {useTournament} from \"../../../hooks\";\n\nexport default function RoundTable({\n    compact,\n    roundId,\n    selectedMatch,\n    setSelectedMatch\n}) {\n    const {tourney} = useTournament();\n    const matchList = tourney.roundList[roundId];\n    const scoreData = matches2ScoreData(rounds2Matches(tourney.roundList));\n    return (\n        <table className={style.table}>\n            {matchList.length > 0 &&\n                <>\n                <caption\n                    className={(compact) ? \"title-30\" : \"title-40\"}\n                >\n                    Round {roundId + 1} matches\n                </caption>\n                <thead>\n                    <tr>\n                        <th className={style.rowId} scope=\"col\">\n                            #\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>White result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            White\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>Black result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            Black\n                        </th>\n                        <th className=\"row__result\" scope=\"col\">\n                            Match result\n                        </th>\n                        {!compact &&\n                            <th className=\"row__controls\" scope=\"col\">\n                                <VisuallyHidden>Controls</VisuallyHidden>\n                            </th>\n                        }\n                    </tr>\n                </thead>\n                </>\n            }\n            <tbody className={style.tbody + \" content\"}>\n                {matchList.map((match, pos) => (\n                    <MatchRow\n                        key={match.id}\n                        compact={compact}\n                        match={match}\n                        pos={pos}\n                        roundId={roundId}\n                        selectedMatch={selectedMatch}\n                        setSelectedMatch={setSelectedMatch}\n                        scoreData={scoreData}\n                    />\n                ))}\n            </tbody>\n        </table>\n    );\n}\nRoundTable.propTypes = {\n    compact: PropTypes.bool,\n    roundId: PropTypes.number,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func\n};\n","import React, {useState} from \"react\";\nimport Icons from \"../../../components/icons\";\nimport NotFound from \"../../../components/404\";\nimport PropTypes from \"prop-types\";\nimport RoundTable from \"./round-table\";\nimport {findById} from \"../../../components/utility\";\nimport {sum} from \"ramda\";\nimport {useTournament} from \"../../../hooks\";\n\nexport function findIndexById(id, list) {\n    return list.indexOf(findById(id, list));\n}\n\nexport default function Round({roundId}) {\n    const {\n        tourney,\n        players,\n        tourneyDispatch,\n        playersDispatch\n    } = useTournament();\n    const matchList = tourney.roundList[roundId];\n    const [selectedMatch, setSelectedMatch] = useState(null);\n    if (!matchList) {\n        return <NotFound />;\n    }\n    function unMatch(matchId) {\n        const match = findById(matchId, matchList);\n        if (sum(match.result) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.playerIds.forEach(function (pId, color) {\n                // If there was a dummy player or a deleted player then bail\n                // on the dispatch.\n                if (!players[pId]) {\n                    return;\n                }\n                // Decrement the matchcount for each player\n                playersDispatch({\n                    id: pId,\n                    matchCount: players[pId].matchCount - 1,\n                    type: \"SET_PLAYER_MATCHCOUNT\"\n                });\n                // Set each player's rating to the original rating of the match\n                playersDispatch({\n                    id: pId,\n                    rating: match.origRating[color],\n                    type: \"SET_PLAYER_RATING\"\n                });\n            });\n        }\n        tourneyDispatch({matchId, roundId, type: \"DEL_MATCH\"});\n        setSelectedMatch(null);\n    }\n\n    function swapColors(matchId) {\n        tourneyDispatch({matchId, roundId, type: \"SWAP_COLORS\"});\n    }\n\n    function moveMatch(matchId, direction) {\n        const oldIndex = findIndexById(matchId, matchList);\n        const newIndex = (oldIndex + direction >= 0) ? oldIndex + direction : 0;\n        tourneyDispatch({newIndex, oldIndex, roundId, type: \"MOVE_MATCH\"});\n    }\n\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => unMatch(selectedMatch)}\n                >\n                    <Icons.Trash /> Unmatch\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => swapColors(selectedMatch)}\n                >\n                    <Icons.Repeat /> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, -1)}\n                >\n                    <Icons.ArrowUp /> Move up\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, 1)}\n                >\n                    <Icons.ArrowDown /> Move down\n                </button>\n            </div>\n            {matchList.length === 0 &&\n                <p>No players matched yet.</p>\n            }\n            <RoundTable\n                roundId={roundId}\n                selectedMatch={selectedMatch}\n                setSelectedMatch={setSelectedMatch}\n            />\n        </div>\n    );\n}\nRound.propTypes = {\n    roundId: PropTypes.number,\n    tourneyId: PropTypes.number\n};\n","import RoundPanels from \"./round-panels\";\nexport default RoundPanels;\n","import React, {useEffect, useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport Icons from \"../../../components/icons\";\nimport PairPicker from \"../pair-picker\";\nimport PropTypes from \"prop-types\";\nimport Round from \"./round\";\nimport {getUnmatched} from \"../../../data-types\";\nimport {useTournament} from \"../../../hooks\";\n\nexport default function RoundPanels(props) {\n    const roundId = Number(props.roundId); // Reach Router passes a string.\n    const {tourney, activePlayers} = useTournament();\n    // only use unmatched players if this is the last round.\n    const unmatched = (roundId === tourney.roundList.length - 1)\n        ? getUnmatched(tourney.roundList, activePlayers, roundId)\n        : {};\n    const unmatchedCount = Object.keys(unmatched).length;\n    const activePlayersCount = Object.keys(activePlayers).length;\n    const [openTab, setOpenTab] = useState(0);\n    useEffect(\n        function autoSwitchTab() {\n            if (openTab === 0) {\n                // If all of the players are unmatched then switch to the\n                // pair-picking tab\n                (unmatchedCount === activePlayersCount)\n                    ? setOpenTab(1)\n                    : setOpenTab(0);\n            }\n            if (openTab === 1 && unmatchedCount === 0) {\n                setOpenTab(0);\n            }\n        },\n        [unmatchedCount, activePlayersCount, openTab]\n    );\n    return (\n        <Tabs index={openTab} onChange={setOpenTab}>\n            <TabList>\n                <Tab disabled={unmatchedCount === activePlayersCount}>\n                    <Icons.List/> Matches\n                </Tab>\n                <Tab disabled={unmatchedCount === 0}>\n                    <Icons.Users/> Unmatched players\n                </Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <Round roundId={roundId}/>\n                </TabPanel>\n                <TabPanel>\n                    <PairPicker roundId={roundId} />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nRoundPanels.propTypes = {\n    path: PropTypes.string,\n    roundId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n","import {Panel, PanelContainer} from \"../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport {\n    createStandingList,\n    createStandingTree,\n    getTieBreakNames,\n    matches2ScoreData,\n    tieBreakMethods\n} from \"../../pairing-scoring\";\nimport {defaultTo, filter, pipe} from \"ramda\";\nimport {isDummyObj, rounds2Matches} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport dashify from \"dashify\";\nimport numeral from \"numeral\";\nimport style from \"./index.module.css\";\nimport {useTournament} from \"../../hooks\";\n\nexport function ScoreTable({compact, title}) {\n    const {tourney, getPlayer} = useTournament();\n    const {tieBreaks, roundList} = tourney;\n    const tieBreakNames = getTieBreakNames(tieBreaks);\n    const standingTree = pipe(\n        rounds2Matches,\n        matches2ScoreData,\n        (data) => createStandingList(tieBreaks, data),\n        filter((obj) => !isDummyObj(obj)),\n        createStandingTree\n    )(roundList);\n    return (\n        <table\n            className={\n                (compact)\n                ? style.compact + \" \" + style.table\n                : style.table\n            }\n        >\n            <caption\n                className={(compact) ? \"title-30\" : \"title-40\"}\n            >\n                {title}\n            </caption>\n            <thead>\n                <tr className={style.topHeader}>\n                    <th className=\"title-10\" scope=\"col\">Rank</th>\n                    <th className=\"title-10\" scope=\"col\">Name</th>\n                    <th className=\"title-10\" scope=\"col\">Score</th>\n                    {!compact && tieBreakNames.map((name, i) => (\n                        <th key={i} className=\"title-10\" scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.map((standing, i, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {i === 0 && ( // Only display the rank once\n                                <th\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                    scope=\"row\"\n                                >\n                                    {rank + 1}\n                                </th>\n                            )}\n                            {(compact) // use <td> if it's compact.\n                            ? (\n                                <td className={style.playerName}>\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </td>\n                            ) : ( // Use the name as a header if not compact.\n                                <th\n                                    className={style.playerName}\n                                    data-testid={rank}\n                                    scope=\"row\"\n                                >\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </th>\n                            )}\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {!compact && standing.tieBreaks.map((score, j) => (\n                                <td\n                                    key={j}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tieBreakNames[j]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\nScoreTable.propTypes = {\n    compact: PropTypes.bool,\n    title: PropTypes.string.isRequired\n};\n\nfunction SelectTieBreaks(props) {\n    const {tourney, tourneyDispatch} = useTournament();\n    const dispatch = tourneyDispatch;\n    const {tieBreaks} = tourney;\n    const [selectedTb, setSelectedTb] = useState(null);\n\n    function toggleTb(id = null) {\n        const defaultId = defaultTo(selectedTb);\n        if (tieBreaks.includes(defaultId(id))) {\n            dispatch({id: defaultId(id), type: \"DEL_TIEBREAK\"});\n            setSelectedTb(null);\n        } else {\n            dispatch({id: defaultId(id), type: \"ADD_TIEBREAK\"});\n        }\n    }\n\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        dispatch({\n            newIndex: index + direction,\n            oldIndex: index,\n            type: \"MOVE_TIEBREAK\"\n        });\n    }\n\n    return (\n        <PanelContainer className=\"content-area\">\n            <Panel>\n                <div className=\"toolbar\">\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => toggleTb()}\n                    >\n                        Toggle\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(-1)}\n                    >\n                        <Icons.ArrowUp/> Move up\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(1)}\n                    >\n                        <Icons.ArrowDown/> Move down\n                    </button>\n                    <button\n                        className={\n                            (selectedTb !== null)\n                            ? \"button-micro button-primary\"\n                            : \"button-micro\"\n                        }\n                        disabled={selectedTb === null}\n                        onClick={() => setSelectedTb(null)}\n                    >\n                        Done\n                    </button>\n                </div>\n                <table>\n                    <caption className=\"title-30\">\n                        Selected tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {tieBreaks.map((id) => (\n                            <tr\n                                key={id}\n                                className={selectedTb === id ? \"selected\" : \"\"}\n                            >\n                                <td>\n                                    {tieBreakMethods[id].name}\n                                </td>\n                                <td style={{width: \"48px\"}}>\n                                    <button\n                                        className=\"button-micro\"\n                                        disabled={\n                                            selectedTb !== null\n                                            && selectedTb !== id\n                                        }\n                                        onClick={() =>\n                                            selectedTb === id\n                                                ? setSelectedTb(null)\n                                                : setSelectedTb(id)\n                                        }\n                                    >\n                                        {selectedTb === id ? \"Done\" : \"Edit\"}\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <div className=\"toolbar\">&nbsp;</div>\n                <table style={{marginTop: \"16px\"}}>\n                    <caption className=\"title-30\">\n                        Available tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {Object.values(tieBreakMethods).map(({name, id}) => (\n                            <tr key={id}>\n                                <td>\n                                    <span\n                                        className={\n                                            tieBreaks.includes(id)\n                                                ? \"disabled\"\n                                                : \"enabled\"\n                                        }\n                                    >\n                                        {name}\n                                    </span>\n                                </td>\n                                <td>\n                                    {!tieBreaks.includes(id) && (\n                                        <button\n                                            className=\"button-micro\"\n                                            onClick={() => toggleTb(id)}\n                                        >\n                                            Add\n                                        </button>\n                                    )}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n        </PanelContainer>\n    );\n}\nSelectTieBreaks.propTypes = {};\n\nconst Scores = (props) => (\n    <Tabs>\n        <TabList>\n            <Tab><Icons.List /> Scores</Tab>\n            <Tab><Icons.Settings /> Edit tiebreak rules</Tab>\n        </TabList>\n        <TabPanels>\n            <TabPanel>\n                <ScoreTable title=\"Score detail\" />\n            </TabPanel>\n            <TabPanel>\n                <SelectTieBreaks />\n            </TabPanel>\n        </TabPanels>\n    </Tabs>\n);\nScores.propTypes = {\n    path: PropTypes.string\n};\n\nexport default Scores;\n","import {DateFormat, PlaceholderButton} from \"../../components/utility\";\nimport React, {useState} from \"react\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport {useTournament} from \"../../hooks\";\n\nexport default function Header(props) {\n    const {tourney, tourneyDispatch} = useTournament();\n    const [isEditingName, setIsEditingName] = useState(false);\n    const [isEditingDate, setIsEditingDate] = useState(false);\n    const dateInput = (function () {\n        const year = tourney.date.getFullYear();\n        const month = (tourney.date.getMonth() < 9)\n            ? \"0\" + (tourney.date.getMonth() + 1)\n            : tourney.date.getMonth() + 1;\n        const day = (tourney.date.getDate() < 10)\n            ? \"0\" + tourney.date.getDate()\n            : tourney.date.getDate();\n        return year + \"-\" + month + \"-\" + day;\n    }());\n\n    function updateDate(event) {\n        const [\n            rawYear,\n            rawMonth,\n            rawDay\n        ] = event.currentTarget.value.split(\"-\");\n        const year = Number(rawYear);\n        const month = Number(rawMonth) - 1;\n        const day = Number(rawDay);\n        tourneyDispatch({\n            date: new Date(year, month, day),\n            type: \"SET_DATE\"\n        });\n    }\n    // TODO: Audit accesibility of these edit controls. (Keyboard focus etc.)\n    return (\n        <div className={props.className}>\n            {(isEditingName)\n            ? (\n                <p className=\"display-20\">\n                    <PlaceholderButton />{\" \"}\n                    <input\n                        className=\"display-20\"\n                        type=\"text\"\n                        value={tourney.name}\n                        onChange={(event) => tourneyDispatch({\n                            name: event.currentTarget.value,\n                            type: \"SET_NAME\"\n                        })}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </p>\n            ) : (\n                <h1 className=\"buttons-on-hover\">\n                    <PlaceholderButton />{\" \"}\n                    <span className=\"inputPlaceholder\">\n                        {tourney.name}\n                    </span>{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(true)}\n                    >\n                        <Icons.Edit />\n                    </button>\n                </h1>\n            )}\n            {(isEditingDate)\n            ? (\n                <p className=\"caption-30\">\n                    <PlaceholderButton />{\" \"}\n                    <input\n                        className=\"caption-30\"\n                        type=\"date\"\n                        value={dateInput}\n                        onChange={updateDate}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </p>\n            )\n            : (\n                <p className=\"caption-30 buttons-on-hover\">\n                    <PlaceholderButton />{\" \"}\n                    <DateFormat date={tourney.date} />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(true)}\n                    >\n                        <Icons.Edit />\n                    </button>\n                </p>\n            )}\n\n        </div>\n    );\n}\nHeader.propTypes = {\n    className: PropTypes.string\n};\n","import {useDocumentTitle, useTournament} from \"../../hooks\";\nimport {Link} from \"@reach/router\";\nimport React from \"react\";\n\nexport default function Options() {\n    const {tourneyDispatch} = useTournament();\n    useDocumentTitle(\"tournament options\");\n    function changeToOne() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 1\n        });\n        window.alert(\"Bye value updated to 1.\");\n    }\n    function changeToOneHalf() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 0.5\n        });\n        window.alert(\"Bye value updated to ½.\");\n    }\n    return (\n        <div className=\"content-area\">\n            <h2>Change bye scores</h2>\n            <button onClick={changeToOne}>Change to 1</button>{\" \"}\n            <button onClick={changeToOneHalf}>Change to ½</button>\n            <p className=\"caption-30\">\n                This will update all bye matches which have been previously\n                scored in this tournament. To change the default bye value in\n                future matches, go to the{\" \"}\n                <Link to=\"/options\">app options</Link>.\n            </p>\n        </div>\n    );\n}\n","import {curry, last} from \"ramda\";\nimport {useDocumentTitle, useTournament} from \"../../hooks\";\nimport {DUMMY_ID} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport {Notification} from \"../../components/utility\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {getUnmatched} from \"../../data-types\";\n\nfunction isRoundComplete(tourney, players, roundId) {\n    if (roundId < tourney.roundList.length - 1) {\n        // If it's not the last round, it's complete.\n        return true;\n    }\n    const unmatched = getUnmatched(tourney.roundList, players, roundId);\n    const results = tourney.roundList[roundId].map(\n        (match) => match.result[0] + match.result[1]\n    );\n    return Object.keys(unmatched).length === 0 && !results.includes(0);\n}\n\nfunction calcNumOfRounds(playerCount) {\n    const roundCount = Math.ceil(Math.log2(playerCount));\n    // If there aren't any players then `roundCount` === `-Infinity`.\n    return (Number.isFinite(roundCount)) ? roundCount : 0;\n}\n\nexport default function Sidebar(props) {\n    const {\n        tourney,\n        getPlayer,\n        activePlayers,\n        playersDispatch,\n        tourneyDispatch\n    } = useTournament();\n    useDocumentTitle(tourney.name);\n    const {roundList} = tourney;\n    const isComplete = curry(isRoundComplete)(tourney, activePlayers);\n\n    const isNewRoundReady = (function () {\n        if (roundList.length === 0) {\n            return true;\n        }\n        return isComplete(roundList.length - 1);\n    }());\n    const roundCount = calcNumOfRounds(Object.keys(activePlayers).length);\n    const isItOver = roundList.length >= roundCount;\n    const [tooltipText, tooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"Round in progress.\",\n                true\n            ];\n        } else if (isItOver) {\n            return [\"All rounds have completed.\", true];\n        } else {\n            return [\"Ready to begin a new round.\", false];\n        }\n    }());\n\n    function newRound() {\n        const confirmText = \"All rounds have completed. Are you sure you want \"\n            + \"to begin a new one?\";\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        tourneyDispatch({type: \"ADD_ROUND\"});\n    }\n\n    async function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            await props.navigate(\".\");\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.playerIds.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playersDispatch({\n                        id: pId,\n                        matchCount: matchCount - 1,\n                        type: \"SET_PLAYER_MATCHCOUNT\"\n                    });\n                    playersDispatch({\n                        id: pId,\n                        rating: match.origRating[color],\n                        type: \"SET_PLAYER_RATING\"\n                    });\n                });\n            });\n            tourneyDispatch({type: \"DEL_LAST_ROUND\"});\n            if (tourney.roundList.length === 1) {\n                // Automatically remake round 1.\n                tourneyDispatch({type: \"ADD_ROUND\"});\n            }\n        }\n    }\n\n    return (\n        <div className={props.className}>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"..\">\n                            <Icons.X/>\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Close\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <ul>\n                    <li>\n                        <Link to=\".\">\n                            <Icons.Users />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Players\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"status\">\n                            <Icons.Activity />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Status\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"crosstable\">\n                            <Icons.Layers />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Crosstable\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"scores\">\n                            <Icons.List />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Score detail\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <h5 className=\"sidebar__hide-on-close\">Rounds</h5>\n                <ul>\n                    {Object.keys(roundList).map((id) => (\n                        <li key={id}>\n                            <Link to={`round/${id}`}>\n                                {Number(id) + 1}\n                                {(isComplete(Number(id)))\n                                ? (\n                                    <span\n                                        className={\n                                            \"sidebar__hide-on-close \"\n                                            + \"caption-20\"}\n                                    >\n                                        &nbsp;Complete&nbsp;<Icons.Check />\n                                    </span>\n                                ) : (\n                                    <span\n                                        className={\n                                            \"sidebar__hide-on-close \"\n                                            + \"caption-20\"}\n                                    >\n                                        &nbsp;Not complete&nbsp;<Icons.Alert />\n                                    </span>\n                                )}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n            <hr />\n            <ul>\n                <li className=\"caption-30\">\n                    <label\n                        className=\"sidebar__hide-on-close\"\n                        htmlFor=\"round-progress\"\n                    >\n                        Completion:\n                    </label>\n                    <meter\n                        id=\"round-progress\"\n                        max={roundCount}\n                        // optimum={roundCount}\n                        // low={roundCount - 1}\n                        style={{width: \"100%\"}}\n                        title={roundList.length + \"/\" + roundCount}\n                        value={roundList.length}\n                    >\n                        {roundList.length}/{roundCount}\n                    </meter>\n                </li>\n                <li>\n                    <Notification\n                        className=\"caption-20\"\n                        success={!tooltipWarn}\n                        tooltip={tooltipText}\n                    >\n                        <span className=\"sidebar__hide-on-close\">\n                            {tooltipText}\n                        </span>\n                    </Notification>\n                </li>\n            </ul>\n            <hr />\n            <ul>\n                <li>\n                    <button\n                        className={(tooltipWarn ? \"\" : \"button-primary\")}\n                        disabled={!isNewRoundReady}\n                        onClick={newRound}\n                    >\n                        <Icons.Plus/>\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;New round\n                        </span>\n                    </button>\n                </li>\n                <li>\n                    <button\n                        disabled={roundList.length === 0}\n                        onClick={delLastRound}\n                    >\n                        <Icons.Trash />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Remove last round\n                        </span>\n                    </button>\n                </li>\n            </ul>\n            <hr />\n            <ul>\n                <li>\n                    <Link to=\"options\">\n                        <Icons.Settings />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Options\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    );\n}\nSidebar.propTypes = {\n    className: PropTypes.string,\n    navigate: PropTypes.func.isRequired\n};\n","import {Panel, PanelContainer} from \"../../components/utility\";\nimport React from \"react\";\nimport RoundTable from \"./round/round-table\";\nimport {ScoreTable} from \"./scores\";\nimport {useTournament} from \"../../hooks\";\n\nexport default function Status() {\n    const {tourney} = useTournament();\n    const lastRound = (function () {\n        if (tourney.roundList.length === 0) {\n            return <p>No rounds played yet.</p>;\n        }\n        const lastRoundId = tourney.roundList.length - 1;\n        if (tourney.roundList[lastRoundId].length === 0) {\n            return <p>Matched players will be shown here.</p>;\n        }\n        return (\n            <RoundTable\n                roundId={lastRoundId}\n                compact\n            />\n        );\n    }());\n    return (\n        <>\n            <h2 style={{textAlign: \"center\"}}>Tournament status</h2>\n            <PanelContainer\n                style={{justifyContent: \"center\"}}\n            >\n                <Panel>\n                    {lastRound}\n                </Panel>\n                <Panel>\n                    <ScoreTable title=\"Rankings\" compact />\n                </Panel>\n            </PanelContainer>\n        </>\n    );\n}\n","import Crosstable from \"./crosstable\";\nimport Header from \"./header\";\nimport NotFound from \"../../components/404\";\nimport Options from \"./options\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport {Router} from \"@reach/router\";\nimport Scores from \"./scores\";\nimport Sidebar from \"./sidebar\";\nimport Status from \"./status\";\nimport {TournamentProvider} from \"../../hooks\";\nimport styles from \"./index.module.css\";\n\nexport default function Tournament(props) {\n    return (\n        <TournamentProvider tourneyId={props.tourneyId}>\n            <div className={styles.tournament + \" has-sidebar\"}>\n                <Header className={styles.header} />\n                <Sidebar\n                    className={styles.sidebar + \" has-sidebar__sidebar\"}\n                    navigate={props.navigate}\n                />\n                <div className={styles.contentFrame + \" has-sidebar__content\"}>\n                    <Router>\n                        <PlayerSelect path=\"/\" />\n                        <Status path=\"status\" />\n                        <Crosstable path=\"crosstable\" />\n                        <Scores path=\"scores\" />\n                        <Round path=\"round/:roundId\" />\n                        <Options path=\"options\" />\n                        <NotFound default />\n                    </Router>\n                </div>\n            </div>\n        </TournamentProvider>\n    );\n}\nTournament.propTypes = {\n    children: PropTypes.node,\n    navigate: PropTypes.func,\n    path: PropTypes.string,\n    tourneyId: PropTypes.string\n};\n","import Icons from \"./icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction Sidebar() {\n    return (\n        <nav className=\"has-sidebar__sidebar\">\n            <ul>\n                <li>\n                    <Link to=\"/tourneys\">\n                        <Icons.Award />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Tournaments\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link  to=\"/players\">\n                        <Icons.Users />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Players\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/options\">\n                        <Icons.Settings />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Options\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default function HasSidebar({children}) {\n    return (\n        <div className=\"has-sidebar\">\n            <Sidebar />\n            <div className=\"has-sidebar__content\">\n                {children}\n            </div>\n        </div>\n    );\n}\nHasSidebar.propTypes = {\n    children: PropTypes.node.isRequired\n};\n","import {DateFormat, SortLabel} from \"../../components/utility\";\nimport React, {useState} from \"react\";\nimport {\n    useAllTournamentsDb,\n    useDocumentTitle,\n    useSortedTable\n} from \"../../hooks\";\nimport {Dialog} from \"@reach/dialog\";\nimport HasSidebar from \"../../components/sidebar-default\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport default function TournamentList(props) {\n    const [tourneys, dispatch] = useAllTournamentsDb();\n    const sorted = useSortedTable(Object.values(tourneys), \"date\", true);\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    useDocumentTitle(\"tournament list\");\n\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({\n            name: newTourneyName,\n            type: \"ADD_TOURNEY\"\n        });\n        setNewTourneyName(\"\");\n        setIsFormOpen(false);\n    }\n\n    function deleteTournament(id, name) {\n        const message = \"Are you sure you want to delete “\" + name + \"”?\";\n        if (window.confirm(message)) {\n            dispatch({id, type: \"DEL_ITEM\"});\n        }\n    }\n\n    return (\n        <HasSidebar>\n            <div className=\"content-area\">\n                <div className=\"toolbar toolbar__left\">\n                    <button\n                        onClick={() => setIsFormOpen(true)}\n                    >\n                        <Icons.Plus /> Add tournament\n                    </button>\n                </div>\n                {(Object.keys(tourneys).length > 0)\n                ?\n                <table>\n                    <caption>Tournament list</caption>\n                    <thead>\n                        <tr>\n                            <th>\n                                <SortLabel\n                                    data={sorted}\n                                    label=\"Name\"\n                                    sortKey=\"name\"\n                                />\n                            </th>\n                            <th>\n                                <SortLabel\n                                    data={sorted}\n                                    label=\"Date\"\n                                    sortKey=\"date\"\n                                />\n                            </th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {sorted.table.map(({date, id, name}) =>\n                            <tr key={id} className=\"buttons-on-hover\">\n                                <td>\n                                    <Link to={id}>\n                                        {name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <DateFormat date={date} />\n                                </td>\n                                <td>\n                                    <button\n                                        aria-label={`Delete “${name}”`}\n                                        className=\"danger button-ghost\"\n                                        title={`Delete “${name}”`}\n                                        onClick={\n                                            () => deleteTournament(id, name)\n                                        }\n                                    >\n                                        <Icons.Trash />\n                                    </button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                : <p>No tournaments added yet.</p>\n                }\n                <Dialog isOpen={isFormOpen}>\n                    <button\n                        className=\"button-micro\"\n                        onClick={() => setIsFormOpen(false)}\n                    >\n                        Close\n                    </button>\n                    <form onSubmit={makeTournament}>\n                        <fieldset>\n                            <legend>Make a new tournament</legend>\n                            <label htmlFor=\"tourney-name\">Name:</label>\n                            <input\n                                id=\"tourney-name\"\n                                name=\"tourney-name\"\n                                placeholder=\"tournament name\"\n                                required={true}\n                                type=\"text\"\n                                value={newTourneyName}\n                                onChange={updateNewName}\n                            />{\" \"}\n                            <input\n                                className=\"button-primary\"\n                                type=\"submit\"\n                                value=\"Create\"\n                            />\n                        </fieldset>\n                    </form>\n                </Dialog>\n            </div>\n        </HasSidebar>\n    );\n}\n","import Crosstable from \"./crosstable\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport Scores from \"./scores\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./tournament-list\";\n\nconst TournamentIndex = (props) => (\n    <div className=\"passthrough\">\n        {props.children}\n    </div>\n);\nTournamentIndex.propTypes = {\n    children: PropTypes.node\n};\n\nexport default TournamentIndex;\nexport {Crosstable, PlayerSelect, Round, Scores, Tournament, TournamentList};\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default Object.freeze({\n    options: fromJSON(options, types.OptionsDb),\n    players: fromJSON(players, types.PlayersDb),\n    tournaments: fromJSON(tournaments, types.TourneysDb)\n});\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {\n    useAllPlayersDb,\n    useAllTournamentsDb,\n    useDocumentTitle,\n    useOptionsDb\n} from \"../hooks\";\nimport HasSidebar from \"../components/sidebar-default\";\nimport Icons from \"../components/icons\";\nimport demoData from \"../demo-data\";\nimport fromJSON from \"tcomb/lib/fromJSON\";\nimport styles from \"./options.module.css\";\nimport testData from \"../test-data\";\nimport {types} from \"../data-types\";\n\nfunction invalidAlert() {\n    window.alert(\n        \"That data is invalid! A more helpful error message could not be \"\n        + \"written yet, either.\"\n    );\n}\n\nexport default function Options(props) {\n    const [tournaments, tourneysDispatch] = useAllTournamentsDb();\n    const [players, playersDispatch] = useAllPlayersDb();\n    const [text, setText] = useState(\"\");\n    const [options, optionsDispatch] = useOptionsDb();\n    useDocumentTitle(\"Options\");\n    // memoize this so the `useEffect` hook syncs with the correct states\n    const exportData = useMemo(\n        () => ({options, players, tournaments}),\n        [options, tournaments, players]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    function loadData(data) {\n        tourneysDispatch({\n            state: fromJSON(data.tournaments, types.TourneysDb),\n            type: \"LOAD_STATE\"\n        });\n        optionsDispatch({\n            state: fromJSON(data.options, types.OptionsDb),\n            type: \"LOAD_STATE\"\n        });\n        playersDispatch({\n            state: fromJSON(data.players, types.PlayersDb),\n            type: \"LOAD_STATE\"\n        });\n        window.alert(\"Data loaded!\");\n    }\n    function handleText(event) {\n        event.preventDefault();\n        try {\n            const importData = JSON.parse(text);\n            loadData(importData);\n        } catch {\n            invalidAlert();\n        }\n    }\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        reader.onload = function (ev) {\n            const data = ev.target.result;\n            try {\n                const importData = JSON.parse(data);\n                loadData(importData);\n            } catch {\n                invalidAlert();\n            }\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    function reloadDemoData(event) {\n        event.preventDefault();\n        loadData(demoData);\n    }\n    function loadTestData(event) {\n        event.preventDefault();\n        loadData(testData);\n    }\n    return (\n        <HasSidebar>\n            <div className={styles.options + \" content-area\"}>\n                <h2>Bye settings</h2>\n                <form>\n                    <p className=\"caption-30\">\n                        Select the default score for a bye round.\n                    </p>\n                    <label className=\"monospace body-30\">\n                        1{\" \"}\n                        <input\n                            checked={options.byeValue === 1}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 1\n                            })}\n                        />\n                    </label>\n                    <label className=\"monospace body-30\">\n                        ½{\" \"}\n                        <input\n                            checked={options.byeValue === 0.5}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 0.5\n                            })}\n                        />\n                    </label>\n                </form>\n                <h2>Manage data</h2>\n                <p>\n                    <a\n                        download=\"chessahoochee.json\"\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                    >\n                        <Icons.Download /> Export all data\n                    </a>\n                </p>\n                <label htmlFor=\"file\">Load data file:</label>\n                <input\n                    id=\"file\"\n                    name=\"file\"\n                    type=\"file\"\n                    onChange={handleFile}\n                />\n                <h2>Danger zone</h2>\n                <p className=\"caption-30\">\n                    I hope you know what you're doing...\n                </p>\n                <button onClick={reloadDemoData}>\n                    Reset demo data (this erases everything else)\n                </button>\n                {\" \"}\n                {process.env.NODE_ENV !== \"production\" &&\n                    <button onClick={loadTestData}>Load testing data</button>\n                }\n                <h3>Advanced: manually edit data</h3>\n                <form onSubmit={handleText}>\n                    <textarea\n                        className=\"json\"\n                        cols={50}\n                        name=\"playerdata\"\n                        rows={25}\n                        spellCheck={false}\n                        value={text}\n                        onChange={(event) => setText(event.currentTarget.value)}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </form>\n            </div>\n        </HasSidebar>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport NewPlayer from \"../../components/new-player\";\nimport PropTypes from \"prop-types\";\nimport {SortLabel} from \"../../components/utility\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport styles from \"./index.module.css\";\nimport {useDocumentTitle} from \"../../hooks\";\n\nexport default function PlayerList({\n    sorted,\n    players,\n    playersDispatch,\n    optionsDispatch\n}) {\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    useDocumentTitle(\"Players\");\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        const message = \"Are you sure you want to delete \"\n            + players[id].firstName + \" \" + players[id].lastName + \"?\";\n        if (window.confirm(message)) {\n            playersDispatch({id, type: \"DEL_ITEM\"});\n            optionsDispatch({id, type: \"DEL_AVOID_SINGLE\"});\n        }\n    };\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar toolbar__left\">\n                <button onClick={() => setIsFormOpen(true)}>\n                    <Icons.UserPlus /> Add a new player\n                </button>\n            </div>\n            <table className={styles.table}>\n                <caption>Player roster</caption>\n                <thead>\n                    <tr>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                label=\"Name\"\n                                sortKey=\"firstName\"\n                            />\n                        </th>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                label=\"Rating\"\n                                sortKey=\"rating\"\n                            />\n                        </th>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                label=\"Matches\"\n                                sortKey=\"matchCount\"\n                            />\n                        </th>\n                        <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                    </tr>\n                </thead>\n                <tbody className=\"content\">\n                    {sorted.table.map((player) =>\n                        <tr key={player.id}  className=\"buttons-on-hover\">\n                            <td className=\"table__player\">\n                                <Link to={player.id}>\n                                    {player.firstName} {player.lastName}\n                                </Link>\n                            </td>\n                            <td className=\"table__number\">\n                                {player.rating}\n                            </td>\n                            <td className=\"table__number\">\n                                {player.matchCount}\n                            </td>\n                            <td>\n                                <button\n                                    className=\"danger button-ghost\"\n                                    onClick={\n                                        (event) => delPlayer(event, player.id)\n                                    }\n                                >\n                                    <Icons.Trash />\n                                    <VisuallyHidden>\n                                    Delete {player.firstName} {player.lastName}\n                                    </VisuallyHidden>\n                                </button>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <Dialog isOpen={isFormOpen}>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsFormOpen(false)}\n                >\n                    Close\n                </button>\n                <NewPlayer dispatch={playersDispatch} />\n            </Dialog>\n        </div>\n    );\n}\nPlayerList.propTypes = {\n    optionsDispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired,\n    sorted: PropTypes.object.isRequired\n};\n","import React, {useState} from \"react\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport {avoidPairReducer} from \"../../pairing-scoring\";\nimport numeral from \"numeral\";\nimport {ratings} from \"../../pairing-scoring\";\nimport styles from \"./index.module.css\";\nimport {useDocumentTitle} from \"../../hooks\";\n\nfunction PlayerProfile({\n    playerId,\n    players,\n    playersDispatch,\n    options,\n    optionsDispatch\n}) {\n    const player = players[playerId];\n    const playerName = (player) ? player.firstName + \" \" + player.lastName : \"\";\n    useDocumentTitle(\"profile for \" + playerName);\n    const avoidObj = options.avoidPairs.reduce(avoidPairReducer, {});\n    const singAvoidList = (avoidObj[playerId]) ? avoidObj[playerId] : [];\n    const unAvoided = Object.keys(players).filter(\n        (id) => !singAvoidList.includes(id) && id !== playerId\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    function avoidAdd(event) {\n        event.preventDefault();\n        optionsDispatch({\n            pair: [playerId, selectedAvoider],\n            type: \"ADD_AVOID_PAIR\"\n        });\n        // const newUnavoided = unAvoided.filter((id) => id !== selectedAvoider);\n        // setSelectedAvoider(newUnavoided[0]);\n    }\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playersDispatch({\n            firstName: firstName.value,\n            id: playerId,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value),\n            type: \"SET_PLAYER\"\n        });\n    }\n    function handleAvoidChange(event) {\n        setSelectedAvoider(event.target.value);\n    }\n    if (!player) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <div className={styles.playerInfo + \" content-area\"}>\n            <Link to=\"..\"><Icons.ChevronLeft /> Back</Link>\n            <h2>\n                Profile for {player.firstName} {player.lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        defaultValue={player.firstName}\n                        name=\"firstName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        defaultValue={player.lastName}\n                        name=\"lastName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"matchCount\">Matches played</label>\n                    <input\n                        defaultValue={String(player.matchCount)}\n                        name=\"matchCount\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        defaultValue={String(player.rating)}\n                        name=\"rating\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"Kfactor\">K factor</label>\n                    <input\n                        name=\"kfactor\"\n                        type=\"number\"\n                        disabled\n                        value={\n                            numeral(\n                                ratings.getKFactor(player.matchCount)\n                            ).format(\"00\")\n                        }\n                        readOnly\n                    />\n                </p>\n            </form>\n            <h3>Players to avoid</h3>\n            <ul>\n                {singAvoidList.map((pId) =>\n                    <li key={pId}>\n                        {players[pId].firstName} {players[pId].lastName}\n                        <button\n                            arial-label={`Remove \n${players[pId].firstName} ${players[pId].lastName} from avoid list.`}\n                            className=\"danger button-ghost\"\n                            title={`Remove ${players[pId].firstName} \n${players[pId].lastName}`}\n                            onClick={() =>\n                                optionsDispatch({\n                                    pair: [playerId, pId],\n                                    type: \"DEL_AVOID_PAIR\"\n                                })\n                            }\n                        >\n                            <Icons.Trash />\n                        </button>\n                    </li>\n                )}\n                {singAvoidList.length === 0 &&\n                    <li>None</li>\n                }\n            </ul>\n            <form onSubmit={avoidAdd}>\n                <label htmlFor=\"avoid-select\">\n                    Select a new player to avoid.\n                </label>\n                <select\n                    id=\"avoid-select\"\n                    onBlur={handleAvoidChange}\n                    onChange={handleAvoidChange}\n                    value={selectedAvoider}\n                >\n                    {unAvoided.map((pId) => (\n                        <option key={pId} value={pId}>\n                            {players[pId].firstName} {players[pId].lastName}\n                        </option>\n                    ))}\n                </select>{\" \"}\n                <input className=\"button-micro\" type=\"submit\" value=\"Add\" />\n            </form>\n        </div>\n    );\n}\nPlayerProfile.propTypes = {\n    options: PropTypes.object.isRequired,\n    optionsDispatch: PropTypes.func.isRequired,\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired\n};\n\nexport default function PlayerProfileWrapper(props) {\n    if (!props.players[props.playerId]) {\n        return <div>Error: player profile not found.</div>;\n    } else {\n        return <PlayerProfile {...props} />;\n    }\n}\nPlayerProfileWrapper.propTypes = {\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired\n};\n","import React, {useMemo} from \"react\";\nimport {useAllPlayersDb, useOptionsDb, useSortedTable} from \"../../hooks\";\nimport HasSidebar from \"../../components/sidebar-default\";\nimport PlayerList from \"./player-list\";\nimport PlayerProfile from \"./player-profile\";\nimport {Router} from \"@reach/router\";\n\nexport default function Players(props) {\n    const [players, playersDispatch] = useAllPlayersDb();\n    // Memoize'd because calling `Object.values()` directly inside the\n    // `useSortedTable` hook will trigger an infinite render loop.\n    const memoizedTable = useMemo(() => Object.values(players), [players]);\n    const sorted = useSortedTable(memoizedTable, \"firstName\", false);\n    const [options, optionsDispatch] = useOptionsDb();\n    const childProps = {options, optionsDispatch, players, playersDispatch};\n    return (\n        <HasSidebar>\n            <Router basepath=\"players\">\n                <PlayerList path=\"/\" sorted={sorted} {...childProps} />\n                <PlayerProfile path=\":playerId\" {...childProps} />\n            </Router>\n        </HasSidebar>\n    );\n}\nPlayers.propTypes = {};\n\nexport {PlayerProfile, PlayerList};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./index.module.css\";\n\nconst Caution = (props) => (\n    <aside\n        {...props}\n        className={classNames(styles.caution, \"body-20\", props.className)}\n    >\n        <p className={styles.caution__text}>\n            This is beta software. Want to help make it better? Check out the\n            {\" \"}\n            <span role=\"img\" aria-hidden>👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href=\"https://github.com/johnridesabike/chessahoochee\"\n            >\n                Git repository\n            </a>.\n        </p>\n    </aside>\n);\nCaution.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Caution;\n","import Caution from \"../components/caution\";\nimport HasSidebar from \"../components/sidebar-default\";\nimport Icons from \"../components/icons\";\nimport {Notification} from \"../components/utility\";\nimport React from \"react\";\nimport {loadDemoDB} from \"../hooks/db\";\nimport styles from \"./splash.module.css\";\n\nconst Splash = (props) => (\n    <HasSidebar>\n        <div className={styles.splash}>\n            <aside className={styles.hint}>\n                <ol>\n                    <li>\n                        <button\n                            className=\"button-primary\"\n                            onClick={loadDemoDB}\n                        >\n                            Click here to load the demo data\n                        </button>{\" \"}\n                        (optional)\n                    </li>\n                    <li>\n                        <Icons.ArrowLeft /> Select a menu item.\n                    </li>\n                    <li>\n                        Start creating your tournaments!\n                    </li>\n                </ol>\n                <Notification warning>\n                    If you experience any glitches or crashes,<br />\n                    clear your browser cache and try again.\n                </Notification>\n            </aside>\n            <div className={styles.title}>\n                <div className={styles.titleIcon}>\n                    <Icons.Logo />\n                </div>\n                <div className={styles.titleText}>\n                    <h1 className=\"title\">\n                        Chessahoochee\n                    </h1>\n                    <p className={styles.subtitle + \" caption-30\"}>\n                        a chess tournament app\n                    </p>\n                </div>\n            </div>\n            <footer className={\"body-20 \" + styles.footer}>\n                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                    <div style={{textAlign: \"left\"}}>\n                        <p>\n                            Copyright &copy; 2019 John Jackson.\n                        </p>\n                        <p>\n                            Chessahoochee is free software.<br/>\n                            <a\n                                // eslint-disable-next-line max-len\n                                href=\"https://github.com/johnridesabike/chessahoochee\"\n                            >\n                                Source code is available\n                            </a>\n                            {\" \"}under the{\" \"}\n                            <a\n                                // eslint-disable-next-line max-len\n                                href=\"https://github.com/johnridesabike/chessahoochee/blob/master/LICENSE\"\n                            >\n                                AGPL v3.0 license\n                            </a>.\n                        </p>\n                    </div>\n                    <div style={{textAlign: \"right\"}}>\n                        <p>\n                            <a\n                                // eslint-disable-next-line max-len\n                                href=\"https://github.com/johnridesabike/chessahoochee/issues/new\"\n                            >\n                                Suggetions and bug reports are welcome.\n                            </a>\n                        </p>\n                        <p>\n                            Built with JavaScript and{\" \"}\n                            <a href=\"https://reactjs.org/\">React</a>.{\" \"}\n                            <span style={{fontSize: \"16px\"}}>\n                                <Icons.Javascript /> <Icons.React />\n                            </span>\n                        </p>\n                    </div>\n                </div>\n                <Caution\n                    style={{margin: \"0 -16px\", width: \"calc(100% + 32px\"}}\n                />\n            </footer>\n        </div>\n    </HasSidebar>\n);\nexport default Splash;\n","// This handles the window controls for when the Electron app is running on\n// Windows.\nimport React, {useEffect, useState} from \"react\";\nimport {electron, ifElectron} from \"../electron-utils\";\nimport styles from \"./windows-controls.module.css\";\n\n// https://github.com/microsoft/vscode/tree/master/src/vs/workbench/browser/parts/titlebar/media\nconst Close = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M6.279 5.5L11 10.221l-.779.779L5.5 6.279.779 11 0 10.221 4.721 5.5 0 .779.779 0 5.5 4.721 10.221 0 11 .779 6.279 5.5z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nconst Maximize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 0v11H0V0h11zM9.899 1.101H1.1V9.9H9.9V1.1z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Minimize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 4.399V5.5H0V4.399h11z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Restore = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M11 8.798H8.798V11H0V2.202h2.202V0H11v8.798zm-3.298-5.5h-6.6v6.6h6.6v-6.6zM9.9 1.1H3.298v1.101h5.5v5.5h1.1v-6.6z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nexport default function Controls() {\n    const [isMaximized, setIsMaximized] = useState(false);\n    useEffect(\n        function addEventListeners() {\n            ifElectron(function () {\n                const win = electron.remote.getCurrentWindow();\n                // see comments in ../App.jsx about removing stale listeners.\n                function unregisterListeners() {\n                    win.removeAllListeners(\"maximize\");\n                    win.removeAllListeners(\"unmaximize\");\n                }\n                unregisterListeners();\n                win.on(\"maximize\", () => setIsMaximized(true));\n                win.on(\"unmaximize\", () => setIsMaximized(false));\n                setIsMaximized(win.isMaximized());\n                return unregisterListeners;\n            });\n        },\n        []\n    );\n    const win = electron.remote.getCurrentWindow();\n    return (\n        <div className={styles.container}>\n            <button\n                className={styles.winButton + \" button-ghost\"}\n                onClick={() => win.minimize()}\n            >\n                <Minimize />\n            </button>\n            {(isMaximized)\n            ? (\n                <button\n                    className={styles.winButton + \" button-ghost\"}\n                    onClick={() => win.unmaximize()}\n                >\n                    <Restore />\n                </button>\n            ) : (\n                <button\n                    className={styles.winButton + \" button-ghost\"}\n                    onClick={() => win.maximize()}\n                >\n                    <Maximize />\n                </button>\n            )}\n            <button\n                className={\n                    styles.winButton + \" \" + styles.close + \" button-ghost\"\n                }\n                onClick={() => win.close()}\n            >\n                <Close />\n            </button>\n        </div>\n    );\n}\nControls.propTypes = {\n    // isFullScreen: PropTypes.bool.isRequired\n};\n","import \"./side-effects\";\nimport {\n    IfIsWinApp,\n    electron,\n    ifElectron,\n    macOSDoubleClick\n} from \"./electron-utils\";\nimport {\n    Location,\n    LocationProvider,\n    Router,\n    createHistory\n} from \"@reach/router\";\nimport React, {useEffect, useState} from \"react\";\nimport TournamentIndex, {\n    Tournament,\n    TournamentList\n} from \"./pages/tournament\";\nimport Icons from \"./components/icons\";\nimport NotFound from \"./components/404\";\nimport Options from \"./pages/options\";\nimport Players from \"./pages/players\";\nimport Splash from \"./pages/splash\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport WindowsControls from \"./components/windows-controls\";\nimport classNames from \"classnames\";\nimport createHashSource from \"hash-source\";\nimport {useDocumentTitle} from \"./hooks\";\n// These are just for deploying to GitHub pages.\nlet source = createHashSource();\nlet history = createHistory(source);\n\nfunction App() {\n    useDocumentTitle(\"a chess tournament app\");\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const [isWindowBlur, setIsWindowBlur] = useState(false);\n    useEffect(\n        function addEventListeners() {\n            ifElectron(function () {\n                const win = electron.remote.getCurrentWindow();\n                // This will ensure that stale event listeners aren't persisted.\n                // That typically won't be relevant to production builds, but\n                // in a dev environment, where the page reloads frequently,\n                // stale listeners will accumulate. Note that this can cause\n                // side effects if other listeners are added elsewhere.\n                function unregisterListeners() {\n                    win.removeAllListeners(\"enter-full-screen\");\n                    win.removeAllListeners(\"leave-full-screen\");\n                    win.removeAllListeners(\"blur\");\n                    win.removeAllListeners(\"focus\");\n                }\n                unregisterListeners();\n                // Add the event listeners. These will inform styling.\n                win.on(\"enter-full-screen\", () => setIsFullScreen(true));\n                win.on(\"leave-full-screen\", () => setIsFullScreen(false));\n                win.on(\"blur\", () => setIsWindowBlur(true));\n                win.on(\"focus\", () => setIsWindowBlur(false));\n                setIsFullScreen(win.isFullScreen());\n                setIsWindowBlur(!win.isFocused());\n                // I don't think this ever really fires, but can it hurt?\n                return unregisterListeners;\n            });\n        },\n        []\n    );\n    return (\n        <div\n            className={classNames(\n                \"app\",\n                {\"open-sidebar\": isSidebarOpen},\n                {\"closed-sidebar\": !isSidebarOpen},\n                {\"window-blur\": isWindowBlur},\n                {\"isWindows\": navigator.appVersion.includes(\"Windows\")},\n                {\"isElectron\": electron}\n            )}\n        >\n            <LocationProvider history={history}>\n                <header\n                    className={classNames(\n                        \"header\",\n                        \"double-click-control\",\n                        {\"traffic-light-padding\": (\n                            navigator.appVersion.includes(\"Mac\")\n                            && electron\n                            && !isFullScreen\n                        )}\n                    )}\n                    onDoubleClick={macOSDoubleClick}\n                >\n                    <div>\n                        <IfIsWinApp>\n                            <span\n                                style={{\n                                    alignItems: \"center\",\n                                    display: \"inline-flex\",\n                                    marginRight: \"8px\"}\n                                }\n                            >\n                                <Icons.Logo/>\n                            </span>\n                        </IfIsWinApp>\n                        <button\n                            className=\"button-ghost\"\n                            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n                        >\n                            <Icons.Sidebar/>\n                            <VisuallyHidden>Toggle sidebar</VisuallyHidden>\n                        </button>\n                        <Location>\n                            {({location, navigate}) => (\n                                <button\n                                    className=\"button-ghost\"\n                                    disabled={location.pathname === \"/\"}\n                                    onClick={() => navigate(\"/\")}\n                                >\n                                    <Icons.Help />\n                                    <VisuallyHidden>About</VisuallyHidden>\n                                </button>\n                            )}\n                        </Location>\n                    </div>\n                    <div\n                        className={classNames(\n                            \"body-20\",\n                            \"double-click-control\",\n                            {\"disabled\": isWindowBlur}\n                        )}\n                        style={{\n                            left: \"0\",\n                            marginLeft: \"auto\",\n                            marginRight: \"auto\",\n                            position: \"absolute\",\n                            right: \"0\",\n                            width: \"100px\"\n                        }}\n                    >\n                        Chessahoochee\n                    </div>\n                    <IfIsWinApp><WindowsControls /></IfIsWinApp>\n                </header>\n                <main className=\"main\">\n                    <Router>\n                        <Splash path=\"/\" />\n                        <TournamentIndex path=\"tourneys\">\n                            <TournamentList path=\"/\" />\n                            <Tournament path=\":tourneyId/*\" />\n                        </TournamentIndex>\n                        <Players path=\"players/*\" />\n                        <Options path=\"options\" />\n                        <NotFound default />\n                    </Router>\n                </main>\n            </LocationProvider>\n            {/* <footer className=\"footer\">\n                <Caution />\n            </footer> */}\n        </div>\n    );\n}\n\nexport default App;\n","import \"./styles\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport React, {StrictMode} from \"react\";\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"winnerSelect\":\"round_winnerSelect__SDt38\",\"table\":\"round_table__1x8KG\",\"tbody\":\"round_tbody__1pAwr\",\"rowId\":\"round_rowId__2gYfm\",\"controls\":\"round_controls__1XYFl\",\"matchResult\":\"round_matchResult__1tb7r\",\"playerResult\":\"round_playerResult__3TMo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splash\":\"splash_splash__2ZYEI\",\"hint\":\"splash_hint__22vCa\",\"footer\":\"splash_footer__HxH6K\",\"title\":\"splash_title__2TA4V\",\"titleIcon\":\"splash_titleIcon__3Nzmb\",\"titleText\":\"splash_titleText__3P6sf\",\"subtitle\":\"splash_subtitle__4wRgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"windows-controls_container__1-7Ur\",\"winButton\":\"windows-controls_winButton__2s6YB\",\"close\":\"windows-controls_close__3i226\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"players_table__1xHiA\",\"playerInfo\":\"players_playerInfo__2We7m\",\"controls\":\"players_controls__1d2AM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}