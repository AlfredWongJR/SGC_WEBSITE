{"version":3,"sources":["components/about.jsx","components/404.jsx","data/constants.js","data/factories.js","data/player.js","state/player-state.js","pairing-scoring/scoring.js","pairing-scoring/pairing.js","state/match-functions.js","state/tourneys-state.js","state/options-state.js","data/utility.js","components/tournament/tournament.jsx","components/tournament/list.jsx","components/tournament/index.jsx","components/players/info-box.jsx","components/utility.jsx","components/players/new-player.jsx","components/players/list.jsx","components/players/index.jsx","components/tournament/scores.jsx","components/tournament/player-select/selecting.jsx","components/tournament/player-select/index.jsx","components/tournament/crosstable.jsx","components/tournament/round/player-match-info.jsx","components/tournament/round/match-row.jsx","components/tournament/round/round.jsx","components/tournament/pair-picker/pair-picker.jsx","components/tournament/pair-picker/stage.jsx","components/tournament/pair-picker/player-info.jsx","components/tournament/pair-picker/index.jsx","components/tournament/round/index.jsx","components/options.jsx","components/caution/index.jsx","App.jsx","serviceWorker.js","index.jsx","components/tournament/scores.module.css","components/tournament/tournament.module.css","components/tournament/round/round.module.css","App.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["About","props","react_default","a","createElement","data-testid","href","NotFound","BLACK","WHITE","DUMMY_ID","createMatch","importObj","id","players","result","origRating","newRating","createPlayer","arguments","length","undefined","type","firstName","lastName","rating","matchCount","dummyPlayer","getPlayerById","playerList","player","filter","p","getPlayerAvoidList","playerId","avoidList","pair","includes","reduce","accumulator","concat","kFactor","Object","freeze","defaultPlayers","demoPlayers","map","avoid","playersReducer","state","action","getNextId","pipe","sort","b","head","inc","over","lensPath","append","assoc","lensIndex","findIndex","propEq","mergeLeft","set","Error","PlayerContext","createContext","usePlayers","_useContext","useContext","_useContext2","slicedToArray","playerState","playerDispatch","getPlayer","curry","PlayersProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","value","children","tieBreakMethods","name","func","roundList","roundId","scores","opponentScores","scoresMinusFirstAndLast","remove","sum","scoreList","playerScoreCum","oppScores","getPlayersByOpponent","isNotDummy","playerColorBalance","isNotBye","match","isBye","getMatchesByPlayer","slice","acc","round","pId","opponent","playerScore","hasHadBye","opponentId","indexOf","playerScoreList","playerScoreListNoByes","score","last","colorList","createStandingList","methods","selectedTieBreaks","i","tieBreakNames","m","standings","allPlayers","Array","from","Set","getAllPlayers","tieBreaks","method","sortFunc","ignore","index","thenBy","standing","firstBy","dueColor","prevColor","matchList","playerMatchColor","createPlayerData","profile","colorBalance","opponentHistory","upperHalf","avoidMeetingTwicePriority","sameScoresPriority","differentHalfPriority","differentDueColorPriority","calcPairIdeal","player1","player2","scoreDiff","priority","metBefore","mustAvoid","Math","abs","ceil","autoPair","tourney","unPairedPlayers","byeValue","nextBye","byeQueue","byeMatch","newMatchList","playerData","byePlayerData","forEach","playersWithScore","pd","reverse","splitAt","playerDatum","potentialMatches","src","playerMatches","reducedResults","blossom","p1Id","p2Id","p1","p2","ideal","matched","push","matches","pairPlayers","join","dummy","defaultData","defaultTourneyList","tourneysReducer","tourneyId","move","oldIndex","newIndex","__","unpairedPlayers","manualPair","matchId","mergeRight","TournamentContext","useTournaments","useTournament","tourneys","useRound","_useTournament","_useTournament2","unmatched","difference","TournamentProvider","reducer","OptionsContext","useOptions","OptionsProvider","defaultOptions","data","calcNumOfRounds","playerCount","rounds","log2","Number","isFinite","getById","list","x","Tournament","_ref","navigate","_usePlayers","isNewRoundReady","useMemo","lastRound","matchedPlayers","unMatchedPlayers","results","useEffect","origTitle","document","title","isItOver","_ref2","_ref3","tooltipText","tooltipWarn","_delLastRound","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","window","confirm","color","stop","apply","this","className","styles","tournament","header","es","to","chevron_left_default","sidebar","keys","key","onClick","disabled","plus_default","tooltip_es","label","alert_circle_default","check_circle_default","toolbarItem","trash_2_default","content","TournamentList","_useTournaments","_useTournaments2","_useState","useState","_useState2","newTourneyName","setNewTourneyName","String","aria-label","onSubmit","event","preventDefault","placeholder","onChange","target","required","TournamentIndex","PlayerInfoBox","singAvoidList","setSingAvoidList","unAvoided","_useState3","_useState4","selectedAvoider","setSelectedAvoider","handleChange","_event$currentTarget","currentTarget","defaultValue","readOnly","numeral","format","arial-label","avoidAdd","onBlur","Panel","_ref4","style","objectSpread","panel","PanelContainer","assign","panels","React","Children","child","PlayerLink","_ref5","NewPlayer","newPlayerDefault","newPlayerData","setNewPlayerdata","updateField","prevState","PlayerList","delPlayer","visually_hidden_es","chevron_right_default","Players","register","regexps","unformat","roundingFunction","whole","floor","remainder","ScoreTable","_useTournament2$","_createStandingTree","_createStandingList","_createStandingList2","standingsFlat","orig","standing1","standing2","prevStanding","createStandingTree","_createStandingTree2","standingTree","tbMethods","table","topHeader","scope","rank","j","row","rowSpan","playerName","dashify","SelectTieBreaks","_useTournament3","_useTournament4","selectedTb","setSelectedTb","toggleTb","defaultId","defaultTo","moveTb","direction","Scores","tabs_es","Selecting","togglePlayer","checked","PlayerSelect","isSelecting","setIsSelecting","dialog_es","isOpen","Crosstable","_useMemo","opponentResults","lensProp","add","getResultsByOpponent","_useMemo2","index2","player1Id","player2Id","x_default","getXScore","PlayerMatchInfo","_useRound","prettyBalance","opId","MatchRow","pos","selectedMatch","setSelectedMatch","openModal","setOpenModal","resultCode","every","whiteName","blackName","setMatchResult","white","black","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","calcNewRatings","role","winnerSelect","edit_default","check_default","info_default","Round","moveMatch","toolbar","unMatch","repeat_default","arrow_up_default","arrow_down_default","PairPicker","stagedPlayers","setStagedPlayers","_useOptions","isModalOpen","setIsModalOpen","unmatchedWithDummy","user_plus_default","Stage","_stagedPlayers","unstage","react","user_minus_default","PlayerInfo","_createPlayerData","Index","openTab","setOpenTab","list_default","users_default","pair_picker_PairPicker","Options","tourneysDispatch","_useOptions2","options","optionsDispatch","text","setText","exportData","loadData","alert","JSON","stringify","encodeURIComponent","download","reader","FileReader","onload","ev","parse","readAsText","files","rows","cols","spellCheck","Caution","caution","caution__text","caution__link","source","createHashSource","history","createHistory","App","link","path","tournament_scores","about","_404","default","noThrow","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e0c0ff3b.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * @param {Object} props\n */\nconst About = (props) => (\n    <p data-testid=\"about\">\n        This is an early, proof-of-concept, demo of a\n        chess tournament manager.{\" \"}\n        <a href=\"https://github.com/johnridesabike/chessahoochee\">\n        You can find out more here.</a>\n    </p>\n);\n\nexport default About;\n","import React from \"react\";\n\n/**\n * @param {Object} props\n */\nconst NotFound = (props) => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","const BLACK = 1;\nexport {BLACK};\nconst WHITE = 0;\nexport {WHITE};\nconst DUMMY_ID = -1;\nexport {DUMMY_ID};\n","/**\n * @typedef {import(\"./index\").Match} Match\n * @typedef {import(\"./index\").Tournament} Tournament\n * @typedef {import(\"./index\").Player} Player\n */\n\n/**\n *\n * @param {object} importObj\n * @returns {Match}\n */\nexport function createMatch(importObj) {\n    return {\n        id: importObj.id,\n        players: importObj.players,\n        result: importObj.result || [0, 0],\n        origRating: importObj.origRating,\n        newRating: importObj.newRating\n    };\n}\n\n/**\n * @param {Object} importObj\n * @returns {Player}\n */\nexport function createPlayer(importObj = {}) {\n    return {\n        id: importObj.id || 0,\n        type: importObj.type || \"person\", // used for CSS styling etc.\n        firstName: importObj.firstName || \"\",\n        lastName: importObj.lastName || \"\",\n        rating: importObj.rating || 0,\n        matchCount: importObj.matchCount || 0\n    };\n}\n\n/**\n * @param {Object} importObj\n * @returns {Tournament}\n */\nexport function createTournament(importObj) {\n    return {\n        name: importObj.name || \"\",\n        tieBreaks: importObj.tieBreaks || [0, 1, 2, 3],\n        byeQueue: importObj.byeQueue || [],\n        players: importObj.players || [],\n        roundList: importObj.roundList || []\n    };\n}\n","import EloRank from \"elo-rank\";\nimport {WHITE, BLACK, DUMMY_ID} from \"./constants\";\nimport {createPlayer} from \"./factories\";\n/**\n * @typedef {import(\"./index\").Player} Player\n*/\n\nconst dummyPlayer = createPlayer({\n    id: -1,\n    firstName: \"Bye\",\n    lastName: \"Player\",\n    type: \"dummy\"\n});\nObject.freeze(dummyPlayer);\nexport {dummyPlayer};\n\n\n/**\n * @param {Player[]} playerList\n * @param {number} id\n * @returns {Player}\n */\nexport function getPlayerById(playerList, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = playerList.filter((p) => p.id === id)[0];\n    return (\n        (player)\n        ? player\n        : createPlayer({\n            id: id,\n            firstName: \"Anonymous\",\n            type: \"missing\"\n        })\n    );\n}\n\n/**\n * @param {number} playerId\n * @param {number[][]} avoidList\n * @returns {number[]}\n */\nexport function getPlayerAvoidList(playerId, avoidList) {\n    return avoidList.filter( // get pairings with the player\n        (pair) => pair.includes(playerId)\n    ).reduce( // Flatten the array\n        (accumulator, pair) => pair.concat(accumulator),\n        []\n    ).filter( // filter out the player's id\n        (id) => id !== playerId\n    );\n}\n\n/**\n * @param {number[][]} avoidList\n * @param {Player[]} playerList\n */\nexport function cleanAvoidList(avoidList, playerList) {\n    const ids = playerList.map((p) => p.id);\n    return avoidList.filter(\n        (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\n    );\n}\n\n/**\n * @param {number} matchCount\n */\nexport function kFactor(matchCount) {\n    const ne = matchCount || 1;\n    return (800 / ne);\n}\n\n/**\n * @param {[number, number]} origRatings\n * @param {[number, number]} matchCounts\n * @param {[number, number]} result\n * @returns {[number, number]}\n */\nexport function calcNewRatings(origRatings, matchCounts, result) {\n    const whiteElo = new EloRank(kFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(kFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    /** @type {[number, number]} */\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    // @ts-ignore\n    return newRating.map(\n        (rating) => (\n            rating < FLOOR\n            ? FLOOR\n            : rating\n        )\n    );\n}\n","import {createContext, createElement, useContext, useReducer} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    append,\n    assoc,\n    curry,\n    head,\n    inc,\n    lensPath,\n    lensIndex,\n    filter,\n    findIndex,\n    map,\n    mergeLeft,\n    over,\n    pipe,\n    propEq,\n    set,\n    sort\n} from \"ramda\";\nimport {getPlayerById} from \"../data/player\";\nimport {createPlayer} from \"../data/factories\";\nimport demoPlayers from \"./demo-players.json\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../data/index\").Player} Player\n * @typedef {import(\"./dispatch\").PlayerAction} PlayerAction\n */\n\nconst defaultPlayers = {\n    players: demoPlayers.playerList.map((p) => createPlayer(p)),\n    avoid: demoPlayers.avoidList\n};\n\n/**\n * @param {typeof defaultPlayers} state\n * @param {PlayerAction} action\n */\nfunction playersReducer(state, action ) {\n    // @ts-ignore\n    const getNextId = pipe(map((p) => p.id), sort((a, b) => b - a), head, inc);\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            append(createPlayer({\n                firstName: action.firstName,\n                lastName: action.lastName,\n                rating: action.rating,\n                id: getNextId(state.players)\n            })),\n            state\n        );\n    case \"SET_PLAYER\":\n        return assoc(\n            \"players\",\n            over(\n                lensIndex(findIndex(propEq(\"id\", action.id), state.players)),\n                mergeLeft(\n                    {\n                        firstName: action.firstName,\n                        lastName: action.lastName,\n                        rating: action.rating,\n                        matchCount: action.matchCount\n                    }\n                ),\n                state.players\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            filter((p) => p.id !== action.id),\n            set(\n                lensPath([\"avoid\"]),\n                filter((pair) => !pair.includes(action.id)),\n                state\n            )\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"matchCount\"\n            ]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"rating\"\n            ]),\n            action.rating,\n            state\n        );\n    // Avoid\n    case \"ADD_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            filter((pair) => !(\n                pair.includes(action.pair[0])\n                && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n\n/** @type {[typeof defaultPlayers, React.Dispatch<PlayerAction>]} */\nconst defaultContext = null;\nconst PlayerContext = createContext(defaultContext);\n\nexport function usePlayers() {\n    const [playerState, playerDispatch] = useContext(PlayerContext);\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    return {playerState, playerDispatch, getPlayer};\n}\n\n/**\n * @param {Object} props\n */\nexport function PlayersProvider(props) {\n    const [state, dispatch] = useReducer(playersReducer, defaultPlayers);\n    return (\n        createElement(\n            PlayerContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import {\n    add,\n    append,\n    defaultTo,\n    last,\n    lensIndex,\n    lensProp,\n    over,\n    pipe,\n    remove,\n    sort,\n    sum\n} from \"ramda\";\nimport {firstBy} from \"thenby\";\nimport {getPlayerById, getPlayerAvoidList} from \"../data/player\";\nimport {WHITE, BLACK, DUMMY_ID} from \"../data/constants\";\n\n/**\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\n * @typedef {import(\"./\").PlayerData} PlayerData\n * @typedef {import(\"./\").Standing} Standing\n * @typedef {import(\"../data\").Match} Match\n * @typedef {import(\"../data\").Player} Player\n */\n\nconst tieBreakMethods = [\n    {\n        name: \"Modified median\",\n        func: modifiedMedian\n    },\n    {\n        name: \"Solkoff\",\n        func: solkoff\n    },\n    {\n        name: \"Cumulative score\",\n        func: playerScoreCum\n    },\n    {\n        name: \"Cumulative of opposition\",\n        func: playerOppScoreCum\n    },\n    {\n        name: \"Most black\",\n        func: playerColorBalance\n    }\n];\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper functions\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param {Match} match\n * @returns {boolean}\n */\nfunction isBye(match) {\n    return match.players.includes(DUMMY_ID);\n}\n\n/**\n *\n * @param {Match} match\n * @returns {boolean}\n */\nfunction isNotBye(match) {\n    return !isBye(match);\n}\n\n/**\n * @param {number} playerId\n */\nfunction isNotDummy(playerId) {\n    return playerId !== DUMMY_ID;\n}\n\n/**\n * @param {typeof WHITE | typeof BLACK} color\n */\nfunction switchColor(color) {\n    return ( // return the opposite color\n        (color === WHITE)\n        ? BLACK\n        : WHITE\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {Match[]}\n */\nfunction getMatchesByPlayer(playerId, roundList, roundId = null) {\n    const rounds = (\n        (roundId === null)\n        ? roundList\n        : roundList.slice(0, roundId + 1)\n    );\n    return rounds.reduce( // flatten the rounds to just the matches\n        (acc, round) => acc.concat(round),\n        []\n    ).filter(\n        (match) => match.players.includes(playerId)\n    );\n}\n\n/**\n * Helper function.\n * @param {Standing} standing1\n * @param {Standing} standing2\n * @returns {boolean}\n */\nfunction areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            /** @param {boolean[]} acc */\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n/**\n * @param {Match[][]} roundList\n * @returns {number[]}\n */\nfunction getAllPlayers(roundList) {\n    const allPlayers = roundList.reduce( // flatten the rounds\n        (acc, round) => acc.concat(round),\n        []\n    ).reduce( // flaten the players\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\n/**\n * Get a list of all of a player's scores from each match.\n * @type {ScoreCalculator}\n * @returns {number[]} the list of scores\n */\nfunction playerScoreList(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/**\n * Used for `modifiedMedian` and `solkoff`.\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nfunction opponentScores(pId, roundList, roundId) {\n    const scores = getPlayersByOpponent(\n        pId,\n        roundList,\n        roundId\n    ).filter(\n        isNotDummy\n    ).map(\n        (opponent) => playerScore(opponent, roundList, roundId)\n    );\n    return sort((a, b) => a - b, scores);\n}\n\n/**\n * Create a function to sort the players. This dynamically creates a `thenBy`\n * function based on the desired tiebreak sort methods.\n * @param {typeof tieBreakMethods} tieBreaks\n */\nfunction createTieBreakSorter(tieBreaks) {\n    return tieBreaks.reduce(\n        (acc, ignore, index) => (\n            acc.thenBy(\n                /** @param {Standing} standing */\n                (standing) => standing.tieBreaks[index], -1\n            )\n        ),\n        firstBy(\n            /** @param {Standing} standing */\n            (standing) => standing.score, -1\n        )\n    );\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Scoring functions\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param {number} playerId\n * @param {object[]} matchList\n * @returns {typeof WHITE | typeof BLACK?}\n */\nexport function playerMatchColor(playerId, matchList) {\n    const match = matchList.filter((m) => m.players.includes(playerId))[0];\n    return (\n        (match)\n        ? match.players.indexOf(playerId)\n        : null\n    );\n}\n\n/**\n * TODO: Maybe merge this with the other function?\n */\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nfunction playerScoreListNoByes(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotBye\n    ).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {boolean}\n */\nexport function hasHadBye(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).includes(DUMMY_ID);\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nexport function getPlayersByOpponent(opponentId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        opponentId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).filter(\n        (playerId) => playerId !== opponentId\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerScore(playerId, roundList, roundId = null) {\n    const scoreList = playerScoreList(playerId, roundList, roundId);\n    return sum(scoreList);\n}\n\n/**\n * The player's cumulative score.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerScoreCum(playerId, roundList, roundId = null) {\n    const scoreList = playerScoreListNoByes(\n        playerId,\n        roundList,\n        roundId\n    ).reduce( // turn the regular score list into a \"running\" score list\n        (acc, score) => acc.concat([last(acc) + score]),\n        [0]\n    );\n    return sum(scoreList);\n}\n\n/**\n * Calculate a player's color balance. A negative number means they played as\n * white more. A positive number means they played as black more.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerColorBalance(playerId, roundList, roundId = null) {\n    const colorList = getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotBye\n    ).reduce(\n        (acc, match) => (\n            (match.players[WHITE] === playerId)\n            ? acc.concat(-1) // White = -1\n            : acc.concat(1) // Black = +1\n        ),\n        [0]\n    );\n    return sum(colorList);\n}\n\n/**\n * Gets the modified median factor defined in USCF § 34E1\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction modifiedMedian(playerId, roundList, roundId = null) {\n    const scores = opponentScores(playerId, roundList, roundId);\n    const scoresMinusFirstAndLast = pipe(remove(-1, 1), remove(0, 1))(scores);\n    return sum(scoresMinusFirstAndLast);\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction solkoff(playerId, roundList, roundId = null) {\n    const scoreList = opponentScores(playerId, roundList, roundId);\n    return sum(scoreList);\n}\n\n/**\n * Get the cumulative scores of a player's opponents.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerOppScoreCum(playerId, roundList, roundId = null) {\n    const oppScores = getPlayersByOpponent(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotDummy\n    ).map(\n        (p) => playerScoreCum(p, roundList, roundId)\n    );\n    return sum(oppScores);\n}\n\n\n/**\n * Sort the standings by score, see USCF tie-break rules from § 34.\n * @param {number[]} methods\n * @param {Match[][]} roundList\n * @param {number} [roundId]\n * @returns {[Standing[], string[]]} The standings and the list of method used\n */\nexport function createStandingList(methods, roundList, roundId) {\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\n    const tieBreakNames = selectedTieBreaks.map((m) => m.name);\n    // Get a flat list of all of the players and their scores.\n    const standings = getAllPlayers(\n        roundList\n    ).filter(\n        (id) => id !== DUMMY_ID\n    ).map(\n        (id) => ({\n            id,\n            score: playerScore(id, roundList, roundId),\n            tieBreaks: selectedTieBreaks.map(\n                (method) => method.func(id, roundList, roundId)\n            )\n        })\n    );\n    const sortFunc = createTieBreakSorter(selectedTieBreaks);\n    const standingsSorted = sort(sortFunc, standings);\n    return [standingsSorted, tieBreakNames];\n}\n\n/**\n * Sort the standings by score, see USCF tie-break rules from § 34.\n * example: `[[Dale, Audrey], [Pete], [Bob]]`\n * Dale and Audrey are tied for first, Pete is 2nd, Bob is 3rd.\n * @param {number[]} methods\n * @param {Match[][]} roundList\n * @param {number} [roundId]\n * @returns {[Standing[][], string[]]} The standings and the list of method used\n */\nexport function createStandingTree(methods, roundList, roundId = null) {\n    const [\n        standingsFlat,\n        tieBreakNames\n    ] = createStandingList(methods, roundList, roundId);\n    const standingsTree = standingsFlat.reduce(\n        /** @param {Standing[][]} acc*/\n        function (acc, standing, i, orig) {\n            const prevStanding = orig[i - 1];\n            const isNewRank = (\n                (i === 0)\n                ? true // Always make a new rank for the first player\n                : !areScoresEqual(standing, prevStanding)\n            );\n            if (isNewRank) {\n                return append([standing], acc);\n            }\n            // If this player has the same score as the last, list them together\n            return over(lensIndex(acc.length - 1), append(standing), acc);\n        },\n        []\n    );\n    return [standingsTree, tieBreakNames];\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {typeof WHITE | typeof BLACK?}\n */\nfunction dueColor(playerId, roundList, roundId = null) {\n    if (!roundList[roundId - 1]) {\n        return null;\n    }\n    const prevColor = playerMatchColor(\n        playerId,\n        roundList[roundId - 1]\n    );\n    return switchColor(prevColor);\n}\n\n/**\n * @param {number} playerId\n * @param {Match[][]} roundList\n * @param {number} roundId\n * @param {Player[]} playerList\n * @param {number[][]} avoidList\n * @returns {PlayerData}\n */\nexport function createPlayerData(\n    playerId,\n    playerList,\n    avoidList,\n    roundList,\n    roundId\n) {\n    const player = getPlayerById(playerList, playerId);\n    return {\n        profile: player,\n        rating: player.rating,\n        id: playerId,\n        score: playerScore(playerId, roundList, roundId),\n        dueColor: dueColor(playerId, roundList, roundId),\n        colorBalance: playerColorBalance(playerId, roundList, roundId),\n        opponentHistory: getPlayersByOpponent(playerId, roundList, roundId),\n        upperHalf: false,\n        avoidList: getPlayerAvoidList(playerId, avoidList),\n        hasHadBye: hasHadBye(playerId, roundList, roundId)\n    };\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {Object.<string, number>} {opponentId: result}\n */\nexport function getResultsByOpponent(playerId, roundList, roundId = null) {\n    const matches = getMatchesByPlayer(playerId, roundList, roundId);\n    return matches.reduce(\n        /** @param {Object.<string, number>} acc*/\n        function (acc, match) {\n            const opponent = match.players.filter((id) => id !== playerId)[0];\n            const color = match.players.indexOf(playerId);\n            const result = match.result[color];\n            // This sets a default result of 0 and then adds the existing\n            // result. Most of the time, this would be the same as using `set()`\n            // with the result, but if two players play each other multiple\n            // times then the total results will be displayed.\n            return over(\n                lensProp(String(opponent)),\n                pipe(defaultTo(0), add(result)),\n                acc\n            );\n        },\n        {}\n    );\n}\n","import {firstBy} from \"thenby\";\nimport {splitAt, last} from \"ramda\";\nimport blossom from \"edmonds-blossom\";\nimport {createPlayerData} from \"./scoring\";\nimport {DUMMY_ID} from \"../data/constants\";\n/**\n * @typedef {import(\"./\").PlayerData} PlayerData\n */\n\n/**\n * TODO: These probably need to be tweaked a lot.\n */\n/**\n * @constant avoidMeetingTwicePriority The weight given to avoid players\n * meeting twice. This same weight is given to avoid matching players on each\n * other's \"avoid\" list. This is the highest priority. (USCF § 27A1)\n * @type {number}\n */\nconst avoidMeetingTwicePriority = 20;\n/**\n * @constant sameScoresPriority The weight given to match players with\n * equal scores. This gets muliplied against a ratio taken from the distance\n * between each player's score. For example, if the tournament has players\n * scoring 0, 1, 2, and 3, and if a player scoring 1 gets compared with a\n * player scoring 3, then their `sameScoresPriority` will be reduced by 50%.\n * (`(3 - 1) / 4 = 0.5`) (USCF § 27A2)\n * @type {number}\n */\nconst sameScoresPriority = 16;\n/**\n * @constant differentHalfPriority The weight given to match players in lower\n * versus upper halves. This is only applied to players being matched within\n * the same score group. (USCF § 27A3)\n * @type {number}\n */\nconst differentHalfPriority = 2;\n/**\n * @constant differentDueColorPriority The weight given to match players with\n * opposite due colors. (USCF § 27A4 and § 27A5)\n * @type {number}\n */\nconst differentDueColorPriority = 1;\n// /** @type {number} */\n// const maxPriority = (\n//     avoidMeetingTwicePriority\n//     + sameScoresPriority\n//     + differentHalfPriority\n//     + differentDueColorPriority\n// );\n\n\n/**\n * Create an array of blossom-compatible weighted matchups. This returns\n * an array of each potential match, formatted like so: [idOfPlayer1,\n * idOfPlayer2, priority]. A higher priority means a more likely matchup.\n * @param {PlayerData} player1\n * @param {PlayerData} player2\n * @param {number[]} scoreList\n * @returns {number}\n */\nexport function calcPairIdeal(player1, player2, scoreList) {\n    let priority = 0;\n    let scoreDiff;\n    const metBefore = player1.opponentHistory.includes(player2.id);\n    const mustAvoid = player1.avoidList.includes(player2.id);\n    if (!metBefore && !mustAvoid) {\n        priority += avoidMeetingTwicePriority;\n    }\n    // Calculate the \"distance\" between their scores and multiply that\n    // against the `sameScoresPriority` constant.\n    scoreDiff = Math.abs(\n        scoreList.indexOf(player1.score)\n        - scoreList.indexOf(player2.score)\n    );\n    scoreDiff = (scoreList.length - scoreDiff) / scoreList.length;\n    priority += sameScoresPriority * scoreDiff;\n    // Only include `differentHalfPriority` if they're in the same\n    // score group.\n    if (player1.score === player2.score) {\n        if (player1.upperHalf !== player2.upperHalf) {\n            priority += differentHalfPriority;\n        }\n    }\n    if (player1.dueColor === null) {\n        priority += differentDueColorPriority;\n    } else if (player1.dueColor !== player2.dueColor) {\n        priority += differentDueColorPriority;\n    }\n    return Math.ceil(priority);\n}\n\n/**\n * Creates pairings according to the rules specified in USCF § 27, § 28,\n * and § 29. This is a work in progress and does not account for all of the\n * rules yet.\n * @param {object[][]} roundList\n * @param {number} roundId\n * @param {number[]} players\n * @param {object[]} playerList\n * @param {number[][]} avoidList\n */\nexport default function pairPlayers(\n    players,\n    roundId,\n    roundList,\n    playerList,\n    avoidList\n) {\n    /** @type {[number, number]} */\n    let byeMatch;\n    let playerData = players.map((playerId) => (\n        createPlayerData(playerId, playerList, avoidList, roundList, roundId)\n    ));\n    const scoreList = Array.from(new Set(playerData.map((p) => p.score)));\n    scoreList.sort();\n    // Sort the data so matchups default to order by score and rating.\n    playerData.sort(\n        firstBy((p) => p.score, -1).thenBy((p) => p.rating, -1)\n    );\n    // If there's an odd number of players, time to assign a bye.\n    if (playerData.length % 2 !== 0) {\n        // Assign a bye to the lowest-rated player in the lowest score group.\n        // (USCF § 29L2.)\n        // filter out players who have had a bye already.\n        let byePlayerData = last(playerData.filter((p) => !p.hasHadBye));\n        // In the impossible situation that *everyone* has played a bye round\n        // previously, then just pick the last player.\n        if (!byePlayerData) {\n            byePlayerData = last(playerData);\n        }\n        byeMatch = [byePlayerData.id, DUMMY_ID];\n        // Remove the bye'd player from the list so they won't be matched again.\n        playerData = playerData.filter((p) => p !== byePlayerData);\n    }\n    // Determine which players are in the upper and lower halves of their score\n    // groups.\n    scoreList.forEach(function (score) {\n        let playersWithScore = playerData.filter((pd) => pd.score === score);\n        playersWithScore.sort((pd) => pd.rating).reverse();\n        if (playersWithScore.length > 1) {\n            splitAt(\n                playersWithScore.length / 2,\n                playersWithScore\n            )[0].forEach(function (playerDatum) {\n                playerDatum.upperHalf = true;\n            });\n        }\n    });\n    // Turn the data into blossom-compatible input.\n    const potentialMatches = playerData.reduce(\n        function (acc, player1, ignore, src) {\n            const playerMatches = src.filter(\n                (player) => player !== player1\n            ).map(\n                (player2) => [\n                    player1.id,\n                    player2.id,\n                    calcPairIdeal(player1, player2, scoreList)\n                ]\n            );\n            return acc.concat(playerMatches);\n        },\n        []\n    );\n    // Feed all of the potential matches to Edmonds-blossom and let the\n    // algorithm work its magic. This returns an array where each index is the\n    // ID of one player and each value is the ID of the matched player.\n    const blossomResults = blossom(potentialMatches);\n    // Translate those IDs into actual pairs of players.\n    /** @type {[PlayerData, PlayerData, number][]} */\n    const reducedResults = blossomResults.reduce(\n        function (acc, p1Id, p2Id) {\n            // Filter out unmatched players. Even though we removed the byes\n            // from the list, blossom will automatically include their missing\n            // IDs in its results.\n            if (p1Id !== -1) {\n                const p1 = playerData.filter((p) => p.id === p1Id)[0];\n                const p2 = playerData.filter((p) => p.id === p2Id)[0];\n                const ideal = potentialMatches.filter(\n                    (pair) => pair[0] === p1Id && pair[1] === p2Id\n                )[0][2];\n                const matched = acc.map((pair) => pair[0]);\n                // Blossom returns a lot of redundant matches. Check that this\n                // matchup wasn't already added.\n                if (!matched.includes(p1) && !matched.includes(p2)) {\n                    acc.push([p1, p2, ideal]);\n                }\n            }\n            return acc;\n        },\n        []\n    );\n    // Sort by net score and rating for board placement.\n    reducedResults.sort(\n        firstBy(\n            /** @param {[PlayerData, PlayerData, number]} pair */\n            (pair) => pair[0].score + pair[1].score,\n            -1\n        ).thenBy(\n            /** @param {[PlayerData, PlayerData, number]} pair */\n            (pair) => pair[0].rating + pair[1].rating,\n            -1\n        )\n    );\n    // Turn the results into new match objects.\n    const matches = reducedResults.map(\n        function (pair) {\n            const player1 = pair[0];\n            const player2 = pair[1];\n            // const ideal = pair[2];\n            const match = [player1.id, player2.id];\n            if (player1.colorBalance < player2.colorBalance) {\n                match.reverse();\n            }\n            return match;\n        }\n    );\n    // The bye match always gets added last so the the numbering isn't affected.\n    if (byeMatch) {\n        matches.push(byeMatch);\n    }\n    return matches;\n}\n","import {curry} from \"ramda\";\nimport {BLACK, WHITE} from \"../data/constants\";\nimport {createMatch} from \"../data/factories\";\nimport {dummyPlayer, getPlayerById} from \"../data/player\";\nimport {hasHadBye} from \"../pairing-scoring/scoring\";\nimport pairPlayers from \"../pairing-scoring/pairing\";\n/**\n * @typedef {import(\"../data/index\").Player} Player\n * @typedef {import(\"../data/index\").Tournament} Tournament\n*/\n\n/**\n * @param {Tournament} tourney\n * @param {number} roundId\n * @param {import(\"./dispatch\").PlayerState} playerState\n * @param {number[]} unPairedPlayers\n * @param {number} byeValue\n */\nexport function autoPair(\n    tourney,\n    playerState,\n    roundId,\n    unPairedPlayers,\n    byeValue\n) {\n    const roundList = tourney.roundList;\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    const nextBye = tourney.byeQueue.filter(\n        (pId) => !hasHadBye(pId, roundList)\n    )[0];\n    let byeMatch = null;\n    if (nextBye >= 0) {\n        byeMatch = createMatch({\n            id: nextBye + \"-\" + dummyPlayer.id,\n            players: [nextBye, dummyPlayer.id],\n            origRating: [\n                getPlayer(nextBye).rating,\n                dummyPlayer.rating\n            ],\n            newRating: [\n                getPlayer(nextBye).rating,\n                dummyPlayer.rating\n            ]\n        });\n        unPairedPlayers = unPairedPlayers.filter((pId) => pId !== nextBye);\n    }\n    const pairs = pairPlayers(\n        unPairedPlayers,\n        roundId,\n        roundList,\n        playerState.players,\n        playerState.avoid\n    );\n    const newMatchList = pairs.map(\n        (pair) => createMatch({\n            id: pair.join(\"-\"),\n            players: [pair[WHITE], pair[BLACK]],\n            origRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ],\n            newRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ]\n        })\n    );\n    if (byeMatch) {\n        newMatchList.push(byeMatch);\n    }\n    // this covers manual bye matches and auto-paired bye matches\n    newMatchList.forEach(function (match) {\n        const dummy = match.players.indexOf(dummyPlayer.id);\n        if (dummy === BLACK) {\n            match.result[WHITE] = byeValue;\n        }\n        if (dummy === WHITE) {\n            match.result[BLACK] = byeValue;\n        }\n    });\n    return newMatchList;\n}\n\n/**\n * @param {Player[]} players\n * @param {number[]} pair\n * @param {number} byeValue\n */\nexport function manualPair(players, pair, byeValue) {\n    const getPlayer = curry(getPlayerById)(players);\n    const match = createMatch({\n        id: pair.join(\"-\"),\n        players: [pair[WHITE], pair[BLACK]],\n        origRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ],\n        newRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ]\n    });\n    if (pair[WHITE] === dummyPlayer.id) {\n        match.result = [0, byeValue];\n    }\n    if (pair[BLACK] === dummyPlayer.id) {\n        match.result = [byeValue, 0];\n    }\n    return match;\n}\n","import {createContext, createElement, useContext, useReducer} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    __,\n    append,\n    concat,\n    difference,\n    lensPath,\n    mergeRight,\n    filter,\n    findIndex,\n    move,\n    over,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport defaultTourneyList from \"./demo-tourney.json\";\nimport {autoPair, manualPair} from \"./match-functions\";\nimport {createTournament} from \"../data/factories\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../data/index\").Tournament} Tournament\n */\n\n/** @type {Tournament[]} */\n// @ts-ignore\nconst defaultData = defaultTourneyList;\n\n/**\n * @param {Tournament[]} state\n * @param {Action} action\n * @returns {Tournament[]}\n */\nfunction tourneysReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_TOURNEY\":\n        return append(createTournament({name: action.name}), state);\n    case \"DEL_TOURNEY\":\n        return state.filter((ignore, i) => i !== action.index);\n    case \"ADD_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        return set(\n            lensPath([action.tourneyId, \"players\"]),\n            action.players,\n            state\n        );\n    case \"SET_BYE_QUEUE\":\n        return set(\n            lensPath([action.tourneyId, \"byeQueue\"]),\n            action.byeQueue,\n            state\n        );\n    case \"AUTO_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            concat(\n                // @ts-ignore\n                __,\n                autoPair(\n                    state[action.tourneyId],\n                    action.playerState,\n                    action.roundId,\n                    action.unpairedPlayers,\n                    action.byeValue\n                )\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            append(manualPair(action.players, action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_MATCH_RESULT\":\n        return set(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                ),\n                \"result\"\n            ]),\n            action.result,\n            set(\n                lensPath([\n                    action.tourneyId,\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state[action.tourneyId].roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n                state\n            )\n        );\n    case \"DEL_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        return over(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    result: reverse(match.result),\n                    players: reverse(match.players),\n                    origRating: reverse(match.origRating),\n                    newRating: reverse(match.newRating)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n\n/** @type {[Tournament[], React.Dispatch<Action>]} */\nconst defaultContext = null;\nconst TournamentContext = createContext(defaultContext);\n\nexport function useTournaments() {\n    return useContext(TournamentContext);\n}\n\n/**\n * @param {number} [tourneyId]\n * @returns {[Tournament, React.Dispatch<Action>]}\n */\nexport function useTournament(tourneyId) {\n    const [tourneys, dispatch] = useContext(TournamentContext);\n    return [tourneys[tourneyId], dispatch];\n}\n\n/**\n * @param {number} tourneyId\n * @param {number} roundId\n */\nexport function useRound(tourneyId, roundId) {\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const matchList = tourney.roundList[roundId];\n    const matched = matchList.reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    const unmatched = difference(tourney.players, matched);\n    return {tourney, dispatch, unmatched, matchList};\n}\n\n/**\n * @param {Object} props\n */\nexport function TournamentProvider(props) {\n    const [state, dispatch] = useReducer(tourneysReducer, defaultData);\n    return (\n        createElement(\n            TournamentContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import {createContext, createElement, useContext, useReducer} from \"react\";\nimport {assoc} from \"ramda\";\nimport defaultOptions from \"./demo-options.json\";\n/**\n * @typedef {import(\"./dispatch\").OptionAction} OptionAction\n */\n\n/**\n * @param {typeof defaultOptions} state\n * @param {OptionAction} action\n */\nfunction reducer(state, action) {\n    switch (action.type) {\n    case \"SET_BYE_VALUE\":\n        return assoc(\"byeValue\", action.byeValue, state);\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n/** @type {[typeof defaultOptions, React.Dispatch<OptionAction>]} */\nconst defaultContext = null;\nconst OptionsContext = createContext(defaultContext);\n\nexport function useOptions() {\n    return useContext(OptionsContext);\n}\n\n/**\n * @param {Object} props\n */\nexport function OptionsProvider(props) {\n    const [data, dispatch] = useReducer(reducer, defaultOptions);\n    return (\n        createElement(\n            OptionsContext.Provider,\n            {value: [data, dispatch]},\n            props.children\n        )\n    );\n}\n","/**\n * @param {number} playerCount\n */\nexport function calcNumOfRounds(playerCount) {\n    const rounds = Math.ceil(Math.log2(playerCount));\n    return (\n        (Number.isFinite(rounds))\n        ? rounds\n        : 0\n    );\n}\n\n/**\n * @template {object} T\n * @param {T[]} list\n * @param {number | string} id\n * @returns {T}\n */\nexport function getById(list, id) {\n    return list.filter((x) => x.id === id)[0];\n}\n\n/**\n * @param {Object[]} list\n * @param {number | string} id\n */\nexport function getIndexById(list, id) {\n    return list.indexOf(getById(list, id));\n}\n","import React, {useEffect, useMemo} from \"react\";\nimport Tooltip from \"@reach/tooltip\";\nimport {Link} from \"@reach/router\";\nimport last from \"ramda/src/last\";\nimport Check from \"react-feather/dist/icons/check-circle\";\nimport Alert from \"react-feather/dist/icons/alert-circle\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {calcNumOfRounds} from \"../../data/utility\";\nimport {DUMMY_ID} from \"../../data/constants\";\nimport \"@reach/tabs/styles.css\";\nimport \"@reach/tooltip/styles.css\";\nimport styles from \"./tournament.module.css\";\n\n/**\n * @param {Object} props\n */\nexport default function Tournament({tourneyId, children, navigate}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const {name, players, roundList} = tourney;\n    const {playerState, getPlayer, playerDispatch} = usePlayers();\n    // This isn't expensive, but why not memoize it?\n    const isNewRoundReady = useMemo(\n        function () {\n            const lastRound = last(roundList);\n            if (!lastRound) {\n                return true;\n            }\n            const matchedPlayers = lastRound.reduce(\n                /** @param {number[]} acc */\n                (acc, match) => acc.concat(match.players),\n                []\n            );\n            const unMatchedPlayers = players.filter(\n                (pId) => !matchedPlayers.includes(pId)\n            );\n            const results = lastRound.map(\n                (match) => match.result[0] + match.result[1]\n            );\n            return (unMatchedPlayers.length === 0 && !results.includes(0));\n        },\n        [players, roundList]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = name;\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [name]\n    );\n    const isItOver = roundList.length >= calcNumOfRounds(players.length);\n    /** @type {[string, boolean]} */\n    const [tooltipText, tooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"You must complete the last round before beginning a new one.\",\n                true\n            ];\n        } else if (isItOver) {\n            return [\"All necessary rounds have completed.\", true];\n        } else {\n            return [\"Ready to begin a new round.\", false];\n        }\n    }());\n    function newRound() {\n        const confirmText = (\n            \"All rounds have completed. Are you sure you want to begin a new \"\n            + \"one?\"\n        );\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        dispatch({type: \"ADD_ROUND\", tourneyId});\n        return;\n    }\n    async function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            await navigate(\".\");\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.players.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playerDispatch({\n                        type: \"SET_PLAYER_MATCHCOUNT\",\n                        id: pId,\n                        matchCount: matchCount - 1\n                    });\n                    playerDispatch({\n                        type: \"SET_PLAYER_RATING\",\n                        id: pId,\n                        rating: match.origRating[color]\n                    });\n                });\n            });\n            dispatch({\n                type: \"DEL_LAST_ROUND\",\n                players: playerState.players,\n                tourneyId\n            });\n        }\n    }\n    return (\n        <div className={styles.tournament}>\n            <div className={styles.header}>\n                <nav>\n                    <Link to=\"/\">\n                        <ChevronLeft/> Back\n                    </Link>\n                </nav>\n                <h2>{name}</h2>\n            </div>\n            <div className={styles.sidebar}>\n                <nav>\n                    <ul>\n                        <li><Link to=\".\">Players</Link></li>\n                        <li><Link to=\"crosstable\">Crosstable</Link></li>\n                        <li><Link to=\"scores\">Score detail</Link></li>\n                    </ul>\n                    <hr />\n                    <ul>\n                        {Object.keys(roundList).map((id) => (\n                            <li key={id}>\n                                <Link to={`${id}`}>\n                                    Round {Number(id) + 1}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </nav>\n                <hr />\n                <ul>\n                    <li>\n                        <button\n                            onClick={newRound}\n                            disabled={!isNewRoundReady}\n                        >\n                            <Plus/> New round\n                        </button>{\" \"}\n                        <Tooltip label={tooltipText}>\n                            <span className=\"helpIcon\">\n                                {(tooltipWarn)\n                                    // @ts-ignore\n                                    ? <Alert className=\"status-alert\" />\n                                    // @ts-ignore\n                                    : <Check className=\"status-ok\" />\n                                }\n                            </span>\n                        </Tooltip>\n                    </li>\n                    <li>\n                        <button\n                            className={\"danger \" + styles.toolbarItem}\n                            onClick={delLastRound}\n                            disabled={roundList.length === 0}\n                        >\n                            <Trash /> Remove last round\n                        </button>\n                    </li>\n                    <li>\n                        Round progress: {roundList.length}/\n                        {calcNumOfRounds(players.length)}{\" \"}\n                    </li>\n                </ul>\n            </div>\n            <div className={styles.content}>\n                {children}\n            </div>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {Link} from \"@reach/router\";\nimport {useTournaments} from \"../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function TournamentList(props) {\n    const [tourneys, dispatch] = useTournaments();\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({\n            type: \"ADD_TOURNEY\",\n            name: newTourneyName\n        });\n        setNewTourneyName(\"\");\n    }\n    return (\n        <div>\n            {(tourneys.length > 0) &&\n                <h2>Tournament list</h2>\n            }\n            {(tourneys.length > 0)\n                ?\n                <ol>\n                    {tourneys.map((tourney, i) =>\n                        <li key={i}>\n                            <Link to={String(i)}>\n                                {tourney.name}\n                            </Link>{\" \"}\n                            <button\n                                title={`Delete “${tourney.name}”`}\n                                aria-label={`Delete “${tourney.name}”`}\n                                className=\"danger iconButton\"\n                                onClick={\n                                    () => dispatch({\n                                        type: \"DEL_TOURNEY\",\n                                        index: i\n                                    })\n                                }>\n                                <Trash />\n                            </button>\n                        </li>\n                    )}\n                </ol>\n                : <p>No tournaments added yet.</p>\n            }\n            <form onSubmit={makeTournament}>\n                <fieldset>\n                    <legend>Make a new tournament</legend>\n                    <label>Name:{\" \"}\n                        <input\n                            type=\"text\"\n                            placeholder=\"tournament name\"\n                            value={newTourneyName}\n                            onChange={updateNewName}\n                            required={true}\n                        />\n                    </label>\n                    <input type=\"submit\" value=\"Create\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./list\";\n\n/**\n * @param {Object} props\n */\nconst TournamentIndex = (props) => (\n    <div>\n        {props.children}\n    </div>\n);\n\nexport default TournamentIndex;\nexport {Tournament, TournamentList};\n","import React, {useMemo, useState, useEffect} from \"react\";\nimport numeral from \"numeral\";\n// import {Link} from \"@reach/router\";\n// import ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {getPlayerAvoidList, kFactor} from \"../../data/player\";\nimport {usePlayers} from \"../../state\";\n\n/**\n * @param {Object} props\n * @param {string | number} [props.playerId]\n * @param {string} [props.path]\n */\nexport default function PlayerInfoBox(props) {\n    const playerId = Number(props.playerId);\n    const {playerState, playerDispatch, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const [singAvoidList, setSingAvoidList] = useState(\n        getPlayerAvoidList(playerId, avoid)\n    );\n    const unAvoided = useMemo(\n        () => (\n            players.map(\n                (player) => player.id\n            ).filter(\n                (pId) => !singAvoidList.includes(pId) && pId !== playerId\n            )\n        ),\n        [players, playerId, singAvoidList]\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function avoidAdd(event) {\n        event.preventDefault();\n        playerDispatch({\n            type: \"ADD_AVOID_PAIR\",\n            pair: [playerId, Number(selectedAvoider)]\n        });\n    }\n    useEffect(\n        function () {\n            setSingAvoidList(getPlayerAvoidList(playerId, avoid));\n        },\n        [avoid, playerId]\n    );\n    useEffect(\n        function () {\n            setSelectedAvoider(unAvoided[0]);\n        },\n        [setSelectedAvoider, unAvoided]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = (\n                getPlayer(playerId).firstName\n                + \" \" + getPlayer(playerId).lastName\n            );\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [playerId, getPlayer]\n    );\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playerDispatch({\n            type: \"SET_PLAYER\",\n            id: playerId,\n            firstName: firstName.value,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value)\n        });\n    }\n    return (\n        <div>\n            <h2>\n                Profile for{\" \"}\n                {getPlayer(playerId).firstName} {getPlayer(playerId).lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label>\n                    First name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            defaultValue={getPlayer(playerId).firstName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Last name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            defaultValue={getPlayer(playerId).lastName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Matches played{\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"matchCount\"\n                            defaultValue={\n                                String(getPlayer(playerId).matchCount)\n                            }\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Rating\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            defaultValue={String(getPlayer(playerId).rating)}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    K factor\n                        <input\n                            type=\"number\"\n                            readOnly\n                            value={(\n                                numeral(\n                                    kFactor(getPlayer(playerId).matchCount)\n                                ).format(\"00\")\n                            )}\n                        />\n                    </label>\n                </p>\n            </form>\n            <ul>\n                <h3>Players to avoid</h3>\n                {singAvoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName}{\" \"}\n                        {getPlayer(pId).lastName}{\" \"}\n                        <button\n                            className=\"danger iconButton\"\n                            onClick={() =>\n                                playerDispatch({\n                                    type: \"DEL_AVOID_PAIR\",\n                                    pair: [playerId, pId]\n                                })\n                            }\n                            title={`Remove ${getPlayer(pId).firstName} \n${getPlayer(pId).lastName}`}\n                            arial-label={`Remove \n${getPlayer(pId).firstName} ${getPlayer(pId).lastName} from avoid list.`}\n                        >\n                            <Trash />\n                        </button>\n                    </li>\n                ))}\n                {avoid.length === 0 && <li>None</li>}\n            </ul>\n            <form onSubmit={(event) => avoidAdd(event)}>\n                <fieldset>\n                    <legend>Add player to avoid</legend>\n                    <select\n                        onBlur={(event) =>\n                            setSelectedAvoider(Number(event.target.value))\n                        }\n                    >\n                        {unAvoided.map((pId) => (\n                            <option key={pId} value={pId}>\n                                {getPlayer(pId).firstName}{\" \"}\n                                {getPlayer(pId).lastName}\n                            </option>\n                        ))}\n                    </select>{\" \"}\n                    <input type=\"submit\" value=\"Add\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport numeral from \"numeral\";\nimport {usePlayers} from \"../state\";\nimport styles from \"./utility.module.css\";\nimport {DUMMY_ID} from \"../data/constants\";\n\n/**\n * @typedef {(event: React.MouseEvent | React.KeyboardEvent) => void} Action\n */\n\n/** @param {{children: JSX.Element | string, action: Action}} props */\nexport const Button = ({children, action}) => (\n    <button onClick={action}>\n        {children}\n    </button>\n);\n\n/** @param {{action: Action}} action */\nexport const BackButton = ({action}) => (\n    <Button action={action}>&lt; Back</Button>\n);\n\n/** @param {{action: Action}} action */\nexport const OpenButton = ({action}) => (\n    <Button action={action}>Open &gt;</Button>\n);\n\n/**\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.CSSProperties} [props.style]\n */\nexport function Panel({children, style}) {\n    return (\n        <div style={{...style}} className={styles.panel}>\n            {children}\n        </div>\n    );\n}\n\n/**\n *\n * @param {object} props\n */\nexport function PanelContainer(props) {\n    return (\n        <div {...props} className={styles.panels}>\n            {React.Children.map(props.children, (child) => child)}\n        </div>\n    );\n}\n\n/**\n * @param {Object} props\n */\nexport function PlayerLink({id, firstName, lastName}) {\n    const {getPlayer} = usePlayers();\n    if (id === DUMMY_ID) {\n        return ( // there's no bye player profile\n            <span>\n                {firstName && getPlayer(id).firstName}{\" \"}\n                {lastName && getPlayer(id).lastName}\n            </span>\n        );\n    }\n    return (\n        <Link to={\"/players/\" + id}>\n            {firstName && getPlayer(id).firstName}{\" \"}\n            {lastName && getPlayer(id).lastName}\n        </Link>\n    );\n}\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"half\", {\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    // @ts-ignore\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        /** @type {number | string} */\n        let whole = Math.floor(value);\n        /** @type {number | string} */\n        let remainder = value - whole;\n        if (remainder === 0.5) {\n            remainder = \"½\";\n        } else if (remainder === 0) {\n            remainder = \"\";\n        }\n        if (whole === 0 && remainder) {\n            whole = \"\";\n        }\n        // let output = numeral._.numberToFormat(value, format, roundingFunction);\n        // return output;\n        return String(whole) + remainder;\n    },\n    /** @param {string} value */\n    unformat: function (value) {\n        return Number(value); // doesn't work... todo?\n    }\n});\n","import React, {useState} from \"react\";\nimport {usePlayers} from \"../../state\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer() {\n    const {playerDispatch} = usePlayers();\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        playerDispatch({type: \"ADD_PLAYER\", firstName, lastName, rating});\n    };\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label>\n                        First name{\" \"}\n                        <input type=\"text\" name=\"firstName\"\n                            onChange={updateField}\n                            value={newPlayerData.firstName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Last name{\" \"}\n                        <input type=\"text\" name=\"lastName\"\n                            onChange={updateField}\n                            value={newPlayerData.lastName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Rating {\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            onChange={updateField}\n                            value={newPlayerData.rating}\n                            required />\n                    </label>\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {usePlayers} from \"../../state\";\nimport {PlayerLink} from \"../utility\";\nimport NewPlayer from \"./new-player\";\n\n/**\n * @param {Object} props\n */\nexport default function PlayerList(props) {\n    const {playerState, playerDispatch} = usePlayers();\n    /**\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\n     * @param {number} id\n     */\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        playerDispatch({type: \"DEL_PLAYER\", id});\n    };\n    return (\n        <div>\n            <table>\n                <caption>Demo Roster</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Rating</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>{playerState.players.map((player) =>\n                    <tr key={player.id}>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} firstName />\n                        </td>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} lastName />\n                        </td>\n                        <td className=\"table__number\">{player.rating}</td>\n                        <td>\n                            <button\n                                className=\"danger iconButton\"\n                                onClick={(event) =>\n                                    delPlayer(event, player.id)\n                                }\n                                // eslint-disable-next-line max-len\n                                title={`Delete ${player.firstName} ${player.lastName}`}\n                                // eslint-disable-next-line max-len\n                                aria-label={`Delete ${player.firstName} ${player.lastName}`}\n                            >\n                                <Trash />\n                            </button>\n                        </td>\n                        <td>\n                            <Link to={String(player.id)}>\n                            Open\n                                <VisuallyHidden>\n                                    {\" \"}{player.firstName} {player.lastName}\n                                </VisuallyHidden>\n                                {\" \"}<ChevronRight />\n                            </Link>\n                        </td>\n                    </tr>\n                )}</tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\n","import React from \"react\";\nimport PlayerInfo from \"./info-box\";\nimport PlayerList from \"./list\";\n\n/**\n * @param {Object} props\n */\nexport default function Players(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\n\nexport {PlayerInfo, PlayerList};\n","import React, {useState} from \"react\";\nimport numeral from \"numeral\";\nimport dashify from \"dashify\";\nimport {defaultTo} from \"ramda\";\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {\n    createStandingTree,\n    tieBreakMethods\n} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n */\nfunction ScoreTable({tourneyId}) {\n    const [{tieBreaks, roundList}] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [standingTree, tbMethods] = createStandingTree(tieBreaks, roundList);\n    return (\n        <table className={style.table}>\n            <caption>Score detail</caption>\n            <tbody>\n                <tr className={style.topHeader}>\n                    <th scope=\"col\">Rank</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Score</th>\n                    {tbMethods.map((name, i) => (\n                        <th key={i} scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.map((standing, j, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {j === 0 && ( // Only display the rank once\n                                <th\n                                    scope=\"row\"\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                >\n                                    {numeral(rank + 1).format(\"0o\")}\n                                </th>\n                            )}\n                            <th\n                                scope=\"row\"\n                                className={style.playerName}\n                                data-testid={rank}\n                            >\n                                {getPlayer(standing.id).firstName}&nbsp;\n                                {getPlayer(standing.id).lastName}\n                            </th>\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {standing.tieBreaks.map((score, i) => (\n                                <td\n                                    key={i}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tbMethods[i]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n */\nfunction SelectTieBreaks({tourneyId}) {\n    const [{tieBreaks}, dispatch] = useTournament(tourneyId);\n    const [selectedTb, setSelectedTb] = useState(null);\n    /** @param {number} [id] */\n    function toggleTb(id = null) {\n        /** @type {(id: number) => number} */\n        const defaultId = defaultTo(selectedTb);\n        if (tieBreaks.includes(defaultId(id))) {\n            dispatch({type: \"DEL_TIEBREAK\", id: defaultId(id), tourneyId});\n            setSelectedTb(null);\n        } else {\n            dispatch({type: \"ADD_TIEBREAK\", id: defaultId(id), tourneyId});\n        }\n    }\n    /** @param {number} direction */\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        dispatch({\n            type: \"MOVE_TIEBREAK\",\n            oldIndex: index,\n            newIndex: index + direction,\n            tourneyId\n        });\n    }\n    return (\n        <div>\n            <h3>Selected tiebreak methods</h3>\n            <div className=\"toolbar\">\n                <button\n                    onClick={() => toggleTb()}\n                    disabled={selectedTb === null}\n                >\n                    Toggle\n                </button>\n                <button\n                    onClick={() => moveTb(-1)}\n                    disabled={selectedTb === null}\n                >\n                    Move up\n                </button>\n                <button\n                    onClick={() => moveTb(1)}\n                    disabled={selectedTb === null}\n                >\n                    Move down\n                </button>\n                <button\n                    onClick={() => setSelectedTb(null)}\n                    disabled={selectedTb === null}\n                >\n                    Done\n                </button>\n            </div>\n            <ol>\n                {tieBreaks.map((id) => (\n                    <li\n                        key={id}\n                        className={selectedTb === id ? \"selected\" : \"\"}\n                    >\n                        {tieBreakMethods[id].name}\n                        <button\n                            onClick={() =>\n                                selectedTb === id\n                                    ? setSelectedTb(null)\n                                    : setSelectedTb(id)\n                            }\n                            disabled={\n                                selectedTb !== null && selectedTb !== id\n                            }\n                        >\n                            {selectedTb === id ? \"Done\" : \"Edit\"}\n                        </button>\n                    </li>\n                ))}\n            </ol>\n            <h3>Available tiebreak methods</h3>\n            <ol>\n                {tieBreakMethods.map((method, id) => (\n                    <li key={id}>\n                        <span\n                            className={\n                                tieBreaks.includes(id)\n                                    ? \"enabled\"\n                                    : \"disabled\"\n                            }\n                        >\n                            {method.name}\n                        </span>\n                        {!tieBreaks.includes(id) && (\n                            <button onClick={() => toggleTb(id)}>\n                                Add\n                            </button>\n                        )}\n                    </li>\n                ))}\n            </ol>\n        </div>\n    );\n}\n\n/**\n * @param {Object} props\n */\nconst Scores = ({tourneyId}) => (\n    <Tabs>\n        <TabList>\n            <Tab>Scores</Tab>\n            <Tab>Edit tiebreak rules</Tab>\n        </TabList>\n        <TabPanels>\n            <TabPanel>\n                <ScoreTable tourneyId={Number(tourneyId)}/>\n            </TabPanel>\n            <TabPanel>\n                <SelectTieBreaks tourneyId={Number(tourneyId)} />\n            </TabPanel>\n        </TabPanels>\n    </Tabs>\n);\n\nexport default Scores;\n","import React from \"react\";\nimport NewPlayer from \"../../players/new-player\";\nimport {useTournament, usePlayers} from \"../../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function Selecting({tourneyId}) {\n    const [{players}, dispatch] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function togglePlayer(event) {\n        const id = Number(event.target.value);\n        if (event.target.checked) {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.concat([id]),\n                tourneyId\n            });\n        } else {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.filter((pId) => pId !== id),\n                tourneyId\n            });\n        }\n    }\n    return (\n        <div>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: playerState.players.map(\n                            (p) => p.id\n                        ),\n                        tourneyId\n                    })\n                }\n            >\n                Select all\n            </button>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: [],\n                        tourneyId\n                    })\n                }\n            >\n                Select none\n            </button>\n            {/* <button onClick={() => setIsSelecting(false)}>\n                Done\n            </button> */}\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {playerState.players.map(({id}) => (\n                        <tr key={id}>\n                            <td>{getPlayer(id).firstName}</td>\n                            <td>{getPlayer(id).lastName}</td>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    value={id}\n                                    checked={players.includes(id)}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Selecting from \"./selecting\";\nimport {useTournament, usePlayers} from \"../../../state\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {hasHadBye} from \"../../../pairing-scoring/scoring\";\n\n/**\n * @param {Object} props\n */\nexport default function PlayerSelect({tourneyId}) {\n    const [{players, byeQueue, roundList}, dispatch] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [isSelecting, setIsSelecting] = useState(players.length === 0);\n    return (\n        <PanelContainer>\n            <Panel>\n                <button onClick={() => setIsSelecting(true)}>\n                    Edit player roster\n                </button>\n                <table>\n                    <caption>Current roster</caption>\n                    <thead>\n                        <tr>\n                            <th>First name</th>\n                            <th>Last name</th>\n                            <th>Options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {players.map((pId) => (\n                            <tr\n                                key={pId}\n                                className={getPlayer(pId).type + \" player\"}\n                            >\n                                <td>{getPlayer(pId).firstName}</td>\n                                <td>{getPlayer(pId).lastName}</td>\n                                <td>\n                                    <button\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"SET_BYE_QUEUE\",\n                                                byeQueue: byeQueue.concat(\n                                                    [pId]\n                                                ),\n                                                tourneyId\n                                            })\n                                        }\n                                        disabled={byeQueue.includes(\n                                            pId\n                                        )}\n                                    >\n                                        Bye signup\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <h3>Bye queue</h3>\n                {(byeQueue.length === 0) &&\n                    <p>No players have signed up for a bye round.</p>\n                }\n                <ol>\n                    {byeQueue.map((pId) => (\n                        <li\n                            key={pId}\n                            className={\n                                hasHadBye(pId, roundList)\n                                    ? \"disabled\"\n                                    : \"\"\n                            }\n                        >\n                            {getPlayer(pId).firstName}{\" \"}\n                            {getPlayer(pId).lastName}\n                            <button\n                                onClick={() =>\n                                    dispatch({\n                                        type: \"SET_BYE_QUEUE\",\n                                        byeQueue: byeQueue.filter(\n                                            (id) => pId !== id\n                                        ),\n                                        tourneyId\n                                    })\n                                }\n                            >\n                                Remove\n                            </button>\n                        </li>\n                    ))}\n                </ol>\n            </Panel>\n            <Dialog isOpen={isSelecting}>\n                <button onClick={() => setIsSelecting(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </PanelContainer>\n    );\n}\n","// TODO: This component is in need of a major cleanup. I made this way too\n// complex and fragile.\nimport React, {useMemo} from \"react\";\nimport numeral from \"numeral\";\nimport {assoc} from \"ramda\";\nimport X from \"react-feather/dist/icons/x\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {\n    createStandingList,\n    getResultsByOpponent\n} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n/**\n * @typedef {import(\"../../pairing-scoring\").Standing} Standing\n */\n\n/**\n * @param {Object} props\n */\nexport default function Crosstable({tourneyId}) {\n    const [{tieBreaks, roundList}] = useTournament(Number(tourneyId));\n    const {getPlayer} = usePlayers();\n    const [standings, opponentScores] = useMemo(\n        function () {\n            const [standingsFlat] = createStandingList(tieBreaks, roundList);\n            /** @type {Object.<string, Object.<string, number>>} */\n            const opponentResults = standingsFlat.reduce(\n                /** @param {Object.<string, Object.<string, number>>} acc */\n                (acc, standing) => (\n                    assoc(\n                        String(standing.id),\n                        getResultsByOpponent(standing.id, roundList),\n                        acc\n                    )\n                ),\n                {}\n            );\n            return [standingsFlat, opponentResults];\n        },\n        [roundList, tieBreaks]\n    );\n    /**\n     * @param {number} player1Id\n     * @param {number} player2Id\n     */\n    function getXScore(player1Id, player2Id) {\n        if (player1Id === player2Id) {\n            return <X/>;\n        }\n        const result = opponentScores[String(player1Id)][player2Id];\n        if (result === undefined) {\n            return null;\n        }\n        return numeral(result).format(\"1/2\");\n    }\n    return (\n        <table className={style.table}>\n            <caption>Crosstable</caption>\n            <tbody>\n                <tr>\n                    <th>Rank</th>\n                    <th>Name</th>\n                    {standings.map((ignore, index) =>\n                        <th key={index}>\n                            {index + 1}\n                        </th>\n                    )}\n                    <th>Score</th>\n                    <th>Rating</th>\n                </tr>\n                {standings.map((standing, index)=>\n                    <tr key={index} className={style.row}>\n                        <th scope=\"col\">\n                            {index + 1}\n                        </th>\n                        <th\n                            scope=\"row\"\n                            className={style.playerName}\n                        >\n                            {getPlayer(standing.id).firstName}&nbsp;\n                            {getPlayer(standing.id).lastName}\n                        </th>\n                        {standings.map((opponent, index2) =>\n                            <td\n                                key={index2}\n                                className=\"table__number\"\n                            >\n                                {getXScore(standing.id, opponent.id)}\n                            </td>\n                        )}\n                        <td\n                            className=\"table__number\"\n                        >\n                            {numeral(standing.score).format(\"1/2\")}\n                        </td>\n                        <td className=\"table__number\">\n                            {getPlayer(standing.id).rating}\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport {createPlayerData} from \"../../../pairing-scoring/scoring\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport {getById} from \"../../../data/utility\";\n\n/**\n * @typedef {import(\"../../../data\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {string} props.matchId\n * @param {number} props.color\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PlayerMatchInfo({matchId, color, tourneyId, roundId}) {\n    const {tourney, matchList} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const match = getById(matchList, matchId);\n    const playerData = createPlayerData(\n        match.players[color],\n        playerState.players,\n        playerState.avoid,\n        tourney.roundList,\n        roundId\n    );\n    const colorBalance = playerData.colorBalance;\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {playerData.profile.firstName} {playerData.profile.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{playerData.score}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerData.id}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{playerData.hasHadBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {playerData.opponentHistory.map((opId) => (\n                        <li key={opId}>\n                            {getPlayer(opId).firstName}{\" \"}\n                            {getPlayer(opId).lastName}\n                        </li>\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Info from \"react-feather/dist/icons/info\";\nimport Check from \"react-feather/dist/icons/check\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {calcNewRatings} from \"../../../data/player\";\nimport {BLACK, WHITE, DUMMY_ID} from \"../../../data/constants\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport PlayerMatchInfo from \"./player-match-info\";\n// @ts-ignore\nimport {winnerSelect} from \"./round.module.css\";\nimport \"@reach/dialog/styles.css\";\n\n/**\n * @typedef {import(\"../../../data\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {number} props.pos\n * @param {Match} props.match\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {string} props.selectedMatch\n * @param {React.Dispatch<React.SetStateAction<string>>} props.setSelectedMatch\n */\nexport default function MatchRow({\n    pos,\n    match,\n    tourneyId,\n    roundId,\n    selectedMatch,\n    setSelectedMatch\n}) {\n    const {tourney, dispatch} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whiteName = (\n        getPlayer(match.players[0]).firstName\n        + \" \"\n        + getPlayer(match.players[0]).lastName\n    );\n    const blackName = (\n        getPlayer(match.players[1]).firstName\n        + \" \"\n        + getPlayer(match.players[1]).lastName\n    );\n    /**\n     * @param {React.FocusEvent<HTMLSelectElement>} event\n     */\n    function setMatchResult(event) {\n        /** @type {[number, number]} */\n        const result = (function () {\n            switch (event.currentTarget.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        const white = getPlayer(match.players[WHITE]);\n        const black = getPlayer(match.players[BLACK]);\n        const newRating = (\n            (event.currentTarget.value === \"NOTSET\")\n            ? match.origRating\n            : calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: white.id,\n            rating: newRating[WHITE]\n        });\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: black.id,\n            rating: newRating[BLACK]\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (match.result.reduce((a, b) => a + b) === 0) {\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: white.id,\n                matchCount: white.matchCount + 1\n            });\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: black.id,\n                matchCount: black.matchCount + 1\n            });\n        }\n        dispatch({\n            type: \"SET_MATCH_RESULT\",\n            tourneyId,\n            roundId,\n            matchId: match.id,\n            result,\n            newRating\n        });\n    }\n    return (\n        <tr className={match.id === selectedMatch ? \"selected\" : \"\"}>\n            <th className=\"table__number row__id\" scope=\"row\">{pos + 1}</th>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}{\" \"}\n                {resultCode === \"WHITE\" && (\n                    <span role=\"img\" aria-label=\"Winner\">\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}{\" \"}\n                {resultCode === \"BLACK\" && (\n                    <span role=\"img\" aria-label=\"Winner\">\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td className=\"data__input row__controls\">\n                <select\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                    disabled={match.players.includes(DUMMY_ID)}\n                    value={resultCode}\n                    className={winnerSelect}\n                >\n                    <option value=\"NOTSET\">\n                        Select a winner\n                    </option>\n                    <option value=\"WHITE\">\n                        {whiteName} won\n                    </option>\n                    <option value=\"BLACK\">\n                        {blackName} won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            <td className=\"data__input row__controls\">\n                {(selectedMatch !== match.id)\n                ? (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(match.id)}\n                        title=\"Edit match\"\n                    >\n                        <Edit />\n                    </button>\n                ) : (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(null)}\n                        title=\"End editing match\"\n                    >\n                        <Check />\n                    </button>\n                )}\n                <button\n                    className=\"iconButton\"\n                    onClick={() => setOpenModal(true)}\n                    title=\"Open match information.\"\n                >\n                    <Info />\n                    <Hidden>\n                        View information for match:{\" \"}\n                        {whiteName} versus {blackName}\n                    </Hidden>\n                </button>\n                <Dialog isOpen={openModal}>\n                    <button onClick={() => setOpenModal(false)}>\n                        close\n                    </button>\n                    <p>{tourney.name}</p>\n                    <p>Round {roundId + 1}, match {pos + 1}</p>\n                    <PanelContainer>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={0}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={1}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                    </PanelContainer>\n                </Dialog>\n            </td>\n        </tr>\n    );\n}\n","import React, {useState} from \"react\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport MatchRow from \"./match-row\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {getById, getIndexById} from \"../../../data/utility\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport style from \"./round.module.css\";\n\n/**\n * @param {Object} props\n * @param {number} props.roundId\n * @param {number} props.tourneyId\n */\nexport default function Round({roundId, tourneyId}) {\n    const {matchList, dispatch} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    /** @type {string} */\n    const defaultMatch = null;\n    const [selectedMatch, setSelectedMatch] = useState(defaultMatch);\n    if (!matchList) {\n        throw new Error(\"Round \" + roundId + \" does not exist.\");\n    }\n    /** @param {string} matchId */\n    function unMatch(matchId) {\n        const match = getById(matchList, matchId);\n        if (match.result.reduce((a, b) => a + b) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.players.forEach(function (pId, color) {\n                playerDispatch({\n                    type: \"SET_PLAYER_MATCHCOUNT\",\n                    id: pId,\n                    matchCount: getPlayer(pId).matchCount - 1\n                });\n                playerDispatch({\n                    type: \"SET_PLAYER_RATING\",\n                    id: pId,\n                    rating: match.origRating[color]\n                });\n            });\n        }\n        dispatch({type: \"DEL_MATCH\", tourneyId, roundId, matchId});\n        setSelectedMatch(null);\n    }\n    /** @param {string} matchId */\n    function swapColors(matchId) {\n        dispatch({type: \"SWAP_COLORS\", tourneyId, roundId, matchId});\n    }\n    /**\n     * @param {string} matchId\n     * @param {number} direction\n     */\n    function moveMatch(matchId, direction) {\n        const oldIndex = getIndexById(matchList, matchId);\n        const newIndex = (\n            (oldIndex + direction >= 0)\n            ? oldIndex + direction\n            : 0\n        );\n        dispatch({type: \"MOVE_MATCH\", tourneyId, roundId, oldIndex, newIndex});\n    }\n    return (\n        <PanelContainer data-testid={\"round-\" + roundId}>\n            <Panel>\n                <div className={style.toolbar}>\n                    <button\n                        className=\"danger iconButton\"\n                        onClick={() => unMatch(selectedMatch)}\n                        disabled={selectedMatch === null}\n                    >\n                        <Trash /> Unmatch\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => swapColors(selectedMatch)}\n                        disabled={selectedMatch === null}\n                    >\n                        <Repeat /> Swap colors\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => moveMatch(selectedMatch, -1)}\n                        disabled={selectedMatch === null}\n                    >\n                        <ArrowUp /> Move up\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => moveMatch(selectedMatch, 1)}\n                        disabled={selectedMatch === null}\n                    >\n                        <ArrowDown/> Move down\n                    </button>\n                </div>\n                {(matchList.length === 0) &&\n                    <p>No players matched yet.</p>\n                }\n                <table className={style.table}>\n                    {(matchList.length > 0) &&\n                        <caption>Round {roundId + 1} results</caption>\n                    }\n                    <tbody>\n                        {(matchList.length > 0) &&\n                            <tr>\n                                <th className=\"row__id\" scope=\"col\">\n                                    #\n                                </th>\n                                <th className=\"row__player\" scope=\"col\">\n                                    White\n                                </th>\n                                <th className=\"row__player\" scope=\"col\">\n                                    Black\n                                </th>\n                                <th className=\"row__result\" scope=\"col\">\n                                    Result\n                                </th>\n                                <th className=\"row__controls\" scope=\"col\">\n                                    Controls\n                                </th>\n                            </tr>\n                        }\n                        {matchList.map((match, pos) => (\n                            <MatchRow\n                                key={match.id}\n                                pos={pos}\n                                match={match}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                                selectedMatch={selectedMatch}\n                                setSelectedMatch={setSelectedMatch}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n            </Panel>\n        </PanelContainer>\n    );\n}\n","import React, {useState} from \"react\";\nimport {set, lensIndex, append} from \"ramda\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Selecting from \"../player-select/selecting\";\nimport {useRound, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK, DUMMY_ID} from \"../../../data/constants\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {[number, number]} props.stagedPlayers\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\n */\nexport default function PairPicker({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {dispatch, unmatched} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const [{byeValue}] = useOptions();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    /** @param {number} id */\n    function selectPlayer(id) {\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(WHITE), id, prevState)\n            );\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(BLACK), id, prevState)\n            );\n        }\n        // else... nothing happens\n    }\n    // make a new list so as not to affect auto-pairing\n    const unmatchedWithDummy = (\n        (unmatched.length % 2 !== 0)\n        ? append(DUMMY_ID, unmatched)\n        : unmatched\n    );\n    if (unmatched.length === 0) {\n        return null;\n    }\n    return (\n        <div>\n            <h3>Unmatched players</h3>\n            <button\n                onClick={() => dispatch({\n                    type: \"AUTO_PAIR\",\n                    unpairedPlayers: unmatched,\n                    tourneyId,\n                    roundId,\n                    playerState,\n                    byeValue\n                })}\n                disabled={unmatched.length === 0}\n            >\n                Auto-pair unmatched players\n            </button><br/>\n            <button onClick={() => setIsModalOpen(true)}>\n                Add or remove players from the roster.\n            </button>\n            <ul>\n                {unmatchedWithDummy.map((pId) => (\n                    <li key={pId}>\n                        {stagedPlayers.includes(pId)\n                        ? <button disabled>Selected</button>\n                        : (\n                            <button\n                                disabled={!stagedPlayers.includes(null)}\n                                onClick={() => selectPlayer(pId)}\n                            >\n                                <UserPlus/>\n                                <Hidden>\n                                    Select {getPlayer(pId).firstName}{\" \"}\n                                    {getPlayer(pId).lastName}\n                                </Hidden>\n                            </button>\n                        )}{\" \"}\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ul>\n            <Dialog isOpen={isModalOpen}>\n                <button onClick={() => setIsModalOpen(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </div>\n    );\n}\n","import React, {Fragment} from \"react\";\nimport {set, lensIndex} from \"ramda\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Check from \"react-feather/dist/icons/check\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport {useTournament, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK} from \"../../../data/constants\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {[number, number]} props.stagedPlayers\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\n */\nexport default function Stage({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {playerState, getPlayer} = usePlayers();\n    const {players} = playerState;\n    const dispatch = useTournament(tourneyId)[1];\n    const [{byeValue}] = useOptions();\n    const [white, black] = stagedPlayers;\n    /** @param {typeof WHITE | typeof BLACK} color */\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n    function match() {\n        dispatch({\n            type: \"MANUAL_PAIR\",\n            pair: [white, black],\n            tourneyId,\n            roundId,\n            byeValue,\n            players\n        });\n        setStagedPlayers([null, null]);\n    }\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <p>\n                White:{\" \"}\n                {white !== null &&\n                    <Fragment>\n                        {getPlayer(white).firstName}{\" \"}\n                        {getPlayer(white).lastName}{\" \"}\n                        <button onClick={() => unstage(WHITE)}>\n                            <UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <p>\n                Black:{\" \"}\n                {black !== null &&\n                    <Fragment>\n                        {getPlayer(black).firstName}{\" \"}\n                        {getPlayer(black).lastName}{\" \"}\n                        <button onClick={() => unstage(BLACK)}>\n                            <UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <button\n                onClick={() => setStagedPlayers(\n                    (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                )}\n                disabled={\n                    stagedPlayers.every((id) => id === null)\n                }\n            >\n                <Repeat/> Swap colors\n            </button>{\" \"}\n            <button\n                onClick={match}\n                disabled={stagedPlayers.includes(null)}\n            >\n                <Check/> Match selected\n            </button>{\" \"}\n        </div>\n    );\n}\n","// this component should eventually replace player-match-info.jsx\nimport React from \"react\";\nimport {createPlayerData} from \"../../../pairing-scoring/scoring\";\nimport {useTournament, usePlayers} from \"../../../state\";\n\n/**\n * @typedef {import(\"../../../data\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {number} props.playerId\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PlayerInfo({playerId, tourneyId, roundId}) {\n    const [{roundList}] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const {\n        profile,\n        rating,\n        score,\n        colorBalance,\n        hasHadBye,\n        opponentHistory,\n        avoidList\n    } = createPlayerData(playerId, players, avoid, roundList, roundId);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {profile.firstName} {profile.lastName}\n            </h3>\n            <p>Score: {score}</p>\n            <p>Rating: {rating}</p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasHadBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {opponentHistory.map((opId) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\n","import React, {useState} from \"react\";\nimport SelectList  from \"./pair-picker\";\nimport Stage from \"./stage\";\nimport PlayerInfo from \"./player-info\";\nimport {PanelContainer, Panel} from \"../../utility\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PairPicker({tourneyId, roundId}) {\n    /** @type {[number, number]} */\n    const defaultPlayers = [null, null];\n    const [stagedPlayers, setStagedPlayers] = useState(defaultPlayers);\n    return (\n        <PanelContainer>\n            <Panel>\n                <SelectList\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n            </Panel>\n            <Panel>\n                <Stage\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n                <PanelContainer>\n                    {stagedPlayers.map((id) =>\n                        id !== null && (\n                            <Panel key={id}>\n                                <PlayerInfo\n                                    playerId={id}\n                                    tourneyId={tourneyId}\n                                    roundId={roundId}\n                                />\n                            </Panel>\n                        )\n                    )}\n                </PanelContainer>\n            </Panel>\n        </PanelContainer>\n    );\n}\n","import React, {useState, useEffect} from \"react\";\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\nimport List from \"react-feather/dist/icons/list\";\nimport Users from \"react-feather/dist/icons/users\";\nimport Round from \"./round\";\nimport PairPicker from \"../pair-picker\";\nimport {useRound} from \"../../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function Index({tourneyId, roundId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead\n    // eslint-disable-next-line fp/no-mutation\n    roundId = Number(roundId); // reach router passes a string instead\n    const {unmatched} = useRound(tourneyId, roundId);\n    const [openTab, setOpenTab] = useState(0);\n    useEffect(\n        function () {\n            if (unmatched.length > 0) {\n                setOpenTab(1);\n            } else {\n                setOpenTab(0);\n            }\n        },\n        [unmatched.length]\n    );\n    return (\n        <Tabs index={openTab} onChange={(index) => setOpenTab(index)}>\n            <TabList>\n                <Tab><List/> Matches</Tab>\n                <Tab disabled={unmatched.length === 0}>\n                    <Users/> Unmatched players\n                </Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <Round\n                        tourneyId={tourneyId}\n                        roundId={roundId}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <PairPicker\n                        tourneyId={tourneyId}\n                        roundId={roundId}\n                    />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\n","import React, {useState, useEffect, useMemo} from \"react\";\nimport {useTournaments, useOptions, usePlayers} from \"../state\";\n\n/**\n * @param {Object} props\n */\nexport function Options(props) {\n    const [tourneys, tourneysDispatch] = useTournaments();\n    const [options, optionsDispatch] = useOptions();\n    const {playerState, playerDispatch} = usePlayers();\n    const [text, setText] = useState(\"\");\n    // memoize this so the `useEffect` hook syncs with the correct state\n    const exportData = useMemo(\n        () => ({options, tourneys, playerState}),\n        [options, tourneys, playerState]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    /** @param {typeof exportData} data */\n    function loadData(data) {\n        tourneysDispatch({type: \"LOAD_STATE\", state: data.tourneys});\n        optionsDispatch({type: \"LOAD_STATE\", state: data.options});\n        playerDispatch({type: \"LOAD_STATE\", state: data.playerState});\n        window.alert(\"Data loaded!\");\n    }\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function handleText(event) {\n        event.preventDefault();\n        /** @type {typeof exportData} */\n        const importData = JSON.parse(text);\n        loadData(importData);\n    }\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        // eslint-disable-next-line fp/no-mutation\n        reader.onload = function (ev) {\n            /** @type {string} */\n            // @ts-ignore\n            const data = ev.target.result;\n            /** @type {typeof exportData} */\n            const importData = JSON.parse(data);\n            loadData(importData);\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    return (\n        <div>\n            <form>\n                <fieldset>\n                    <legend>Bye options</legend>\n                    Select how many points a bye is worth:{\" \"}\n                    <label>\n                        1\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 1}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 1\n                            })}\n                        />\n                    </label>{\" \"}\n                    <label>\n                        ½\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 0.5}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 0.5\n                            })}\n                        />\n                    </label>\n                </fieldset>\n            </form>\n            <fieldset>\n                <legend>Manage data</legend>\n                <p>\n                    <a\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                        download=\"chessahoochee.json\"\n                    >\n                        Download all data\n                    </a>\n                </p>\n                <label>\n                    Load data file:{\" \"}\n                    <input type=\"file\" id=\"file\" onChange={handleFile}/>\n                </label>\n            </fieldset>\n            <form onSubmit={handleText}>\n                <fieldset>\n                    <legend>\n                        Advanced: manually edit data\n                    </legend>\n                    <textarea\n                        className=\"json\"\n                        rows={25}\n                        cols={50}\n                        value={text}\n                        name=\"playerdata\"\n                        onChange={(event) => setText(event.currentTarget.value)}\n                        spellCheck={false}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport styles from \"./index.module.css\";\n\nconst Caution = () => (\n    <div className={styles.caution}>\n        <p className={styles.caution__text}>\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            &nbsp;\n            This is an unstable demo build.\n            &nbsp;\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            {\" \"}\n            Want to help make it better? Head to the\n            {\" \"}\n            <span role=\"img\" aria-label=\"finger pointing right\">👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href=\"https://github.com/johnridesabike/chessahoochee\">\n                Git repository\n            </a>.\n        </p>\n    </div>\n);\n\nexport default Caution;\n","import React from \"react\";\nimport {\n    Router,\n    Link,\n    LocationProvider,\n    createHistory,\n    Redirect\n} from \"@reach/router\";\nimport createHashSource from \"hash-source\";\nimport About from \"./components/about\";\nimport NotFound from \"./components/404\";\nimport TournamentIndex from \"./components/tournament\";\nimport {TournamentList, Tournament} from \"./components/tournament\";\nimport Players, {PlayerList, PlayerInfo} from \"./components/players\";\nimport Scores from \"./components/tournament/scores\";\nimport PlayerSelect from \"./components/tournament/player-select\";\nimport Crosstable from \"./components/tournament/crosstable\";\nimport Round from \"./components/tournament/round\";\nimport {Options} from \"./components/options\";\nimport Caution from \"./components/caution\";\nimport {OptionsProvider, TournamentProvider, PlayersProvider} from \"./state\";\nimport \"./global.css\";\n// @ts-ignore\nimport {link} from \"./App.module.css\";\n// These are just for deploying to GitHub pages.\nlet source = createHashSource();\n// @ts-ignore\nlet history = createHistory(source);\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Caution />\n            <LocationProvider history={history}>\n                <nav className=\"header\">\n                    <Link to=\"tourneys\" className={link}>\n                        Tournaments\n                    </Link>\n                    <Link to=\"players\" className={link}>\n                        Players\n                    </Link>\n                    <Link to=\"options\" className={link}>\n                        Options\n                    </Link>\n                    <Link to=\"about\" className={link}>\n                        About\n                    </Link>\n                </nav>\n                <main className=\"content\">\n                    {/* Lots of nested contexts. Is there a better way? */}\n                    <OptionsProvider>\n                        <PlayersProvider>\n                            <TournamentProvider>\n                                <Router>\n                                    <TournamentIndex path=\"tourneys\">\n                                        <TournamentList path=\"/\" />\n                                        <Tournament path=\":tourneyId\">\n                                            <PlayerSelect path=\"/\" />\n                                            <Crosstable path=\"crosstable\" />\n                                            <Scores path=\"scores\" />\n                                            <Round path=\":roundId\" />\n                                        </Tournament>\n                                    </TournamentIndex>\n                                    <Players path=\"players\">\n                                        <PlayerList path=\"/\"/>\n                                        <PlayerInfo path=\":playerId\" />\n                                    </Players>\n                                    <Options path=\"options\" />\n                                    <About path=\"about\" />\n                                    <NotFound default />\n                                    <Redirect from=\"/\" to=\"tourneys\" noThrow />\n                                </Router>\n                            </TournamentProvider>\n                        </PlayersProvider>\n                    </OptionsProvider>\n                </main>\n            </LocationProvider>\n        </div>\n    );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {StrictMode} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"scores_table__22BFZ\",\"topHeader\":\"scores_topHeader__2RVRR\",\"row\":\"scores_row__bmBzX\",\"playerName\":\"scores_playerName__3ghv9\",\"rank\":\"scores_rank__3AxBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__2nSxH\",\"header\":\"tournament_header__9nZzI\",\"sidebar\":\"tournament_sidebar__21G-s\",\"content\":\"tournament_content__1mdG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"round_table__2JmnE\",\"winnerSelect\":\"round_winnerSelect__317oT\",\"toolbar\":\"round_toolbar__3CWVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__TB6Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}