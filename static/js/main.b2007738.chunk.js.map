{"version":3,"sources":["pages/options.module.css","serviceWorker.js","side-effects.js","data-types/constants.js","data-types/types.js","data-types/factories.js","data-types/helpers.js","pairing-scoring/types.js","pairing-scoring/scoring.js","pairing-scoring/factories.js","pairing-scoring/converters.js","pairing-scoring/pairing.js","pairing-scoring/ratings.js","components/icons.jsx","pages/tournament/crosstable.jsx","components/utility.jsx","components/new-player.jsx","hooks/reducers/generic-db-reducer.js","hooks/reducers/options-reducer.js","hooks/default-options.js","demo-data/index.js","hooks/hooks.js","hooks/db.js","pages/tournament/player-select/selecting.jsx","pages/tournament/player-select/index.jsx","pages/tournament/pair-picker/player-info.jsx","pages/tournament/pair-picker/select-list.jsx","pages/tournament/pair-picker/stage.jsx","pages/tournament/pair-picker/index.jsx","components/404.jsx","pages/tournament/round/player-match-info.jsx","pages/tournament/round/match-row.jsx","pages/tournament/round/round-table.jsx","pages/tournament/round/round.jsx","pages/tournament/round/index.jsx","pages/tournament/round/round-panels.jsx","pages/tournament/scores.jsx","pages/tournament/setup.jsx","pages/tournament/sidebar.jsx","pages/tournament/tournament-data/players-reducer.js","pages/tournament/tournament-data/match-functions.js","pages/tournament/tournament-data/tournament-reducer.js","electron-utils.js","components/about-dialog.jsx","components/sidebar-default.jsx","components/windows-controls.jsx","components/window.jsx","pages/tournament/tournament-data/index.jsx","pages/tournament/status.jsx","pages/tournament/tournament.jsx","pages/tournament/tournament-list.jsx","pages/tournament/index.jsx","test-data/index.js","pages/options.jsx","pages/players/player-list.jsx","pages/players/player-profile.jsx","pages/players/index.jsx","components/caution/index.jsx","pages/splash.jsx","App.jsx","index.jsx","pages/tournament/index.module.css","pages/tournament/round/round.module.css","components/windows-controls.module.css","pages/splash.module.css","icon-min.svg","pages/players/index.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["module","exports","options","Boolean","window","location","hostname","match","numeral","register","format","value","roundingFunction","whole","Math","floor","remainder","fraction","String","regexps","unformat","Number","WHITE","BLACK","DUMMY_ID","Id","t","refinement","id","test","Color","num","AvoidPair","tuple","Player","interface","firstName","lastName","matchCount","rating","type","Match","newRating","origRating","playerIds","result","RoundList","list","Tournament","byeQueue","date","Date","name","roundList","tieBreaks","db","Object","freeze","Options","avoidPairs","byeValue","lastBackup","Tourneys","dict","Players","createMatch","importObj","types","assign","nanoid","createPlayer","isDummyId","playerId","isDummyObj","playerObj","dummyPlayer","createMissingPlayer","getPlayerMaybe","playerDict","player","rounds2Matches","lastRound","arguments","length","undefined","slice","reduce","acc","round","concat","getUnmatched","players","roundId","matchedIds","_ref","values","includes","assoc","isRoundComplete","unmatched","results","map","_ref2","keys","ColorScore","ScoreData","colorScores","colors","isDummy","opponentResults","ratings","resultsNoByes","PairingData","avoidIds","halfPos","isUpperHalf","opponents","score","ScoreCalculator","func","Standing","BLACKVALUE","WHITEVALUE","isNotDummy","scoreData","oppId","getPlayerScore","sum","getOpponentScores","filter","runningReducer","last","getCumulativeScore","scoreList","tieBreakMethods","0","of","scores","pipe","sort","ascend","init","tail","1","2","3","4","getNameFromIndex","index","getTieBreakNames","idList","createBlankScoreData","createStandingList","methods","selectedTieBreaks","i","standings","sortFuncList","key","descend","path","prop","sortWith","createStandingTree","standingList","standing","orig","standing1","standing2","prevStanding","append","over","lensIndex","match2ScoreDataReducer","_map","color","origData","lensProp","defaultTo","scoreTypes","color2Score","lensPath","add","_map2","slicedToArray","p1Data","p2Data","matches2ScoreData","matchList","avoidPairReducer","pair","createPairingData","playerData","avoidDict","data","playerStats","pairData","priority","condition","divisiblePriority","dividend","divisor","avoidMeetingTwice","sameScores","halfPosition","sameHalfPriority","differentHalf","isDiffHalf","differentDueColor","maxPriority","calcPairIdeal","player1","player2","metBefore","mustAvoid","p1LastColor","p2LastColor","scoreDiff","abs","halfDiff","splitInHalf","splitAt","upperHalfReducer","ignore","src","_pipe","p2","p","_pipe2","upperHalfIds","lowerHalfIds","indexOf","objectSpread","setUpperHalves","sortByScoreThenRating","assignColorsForPair","_pair","sortByNetScoreThenRating","pair1","pair2","pluck","getKFactor","calcNewRatings","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","simpleIcon","icon","props","react_default","a","createElement","dangerouslySetInnerHTML","__html","svg","aria-label","title","role","style","fill","hex","icons","Activity","Alert","ArrowDown","ArrowLeft","ArrowUp","Award","Check","CheckCircle","ChevronDown","ChevronLeft","ChevronRight","ChevronUp","Circle","Download","Edit","Help","Info","Javascript","Layers","List","Plus","React","ReactIcon","Repeat","Settings","Sidebar","Trash","Unfullscreen","UserMinus","UserPlus","Users","X","Crosstable","tournament","tourney","getPlayer","className","table","rank","colSpan","row","scope","playerName","opponent","index2","player1Id","player2Id","getXScore","firstRating","lastRating","change","Fragment","getRatingChangeTds","Panel","children","rest","objectWithoutProperties","styles","panel","PanelContainer","classNames","panels","dateFormat","Intl","DateTimeFormat","day","month","year","timeFormat","hour","minute","withDateFormatFunc","formatFunc","_ref5","dateTime","toISOString","DateFormat","Notification","_ref6","success","warning","error","tooltip","_ref7","_ref8","notifClassName","SortButton","_ref9","sortKey","dispatch","chevronStyle","opacity","width","onClick","isDescending","aria-hidden","visually_hidden_es","NewPlayer","newPlayerDefault","_useState","useState","_useState2","newPlayerData","setNewPlayerdata","updateField","event","preventDefault","_event$currentTarget","currentTarget","prevState","onSubmit","htmlFor","required","onChange","genericDbReducer","state","action","nextId","console","warn","item","dissoc","mergeLeft","Error","optionsReducer","option","union","demo_data","fromJSON","tournaments","toLowerCaseIfPossible","x","toLowerCase","sortedTableReducer","oldState","newState","_oldState$newState","direction","caseInsensitiveProp","sortFunc","useSortedTable","initialState","_useReducer","useReducer","_useReducer2","useEffect","useLoadingCursor","isLoaded","document","body","cursor","setItemsPrototype","localForage","removeItemsPrototype","optionsStore","createInstance","storeName","playerStore","tourneyStore","loadDemoDB","_loadDemoDB","apply","this","_callee3","regenerator_default","wrap","_context3","prev","next","setItems","demoData","alert","stop","useAllItemsFromDb","store","items","setIsLoaded","didCancel","asyncToGenerator","mark","_callee","cleanResults","_context","getItems","sent","is","_callee2","deleted","_context2","difference","removeItems","useAllPlayersDb","useAllTournamentsDb","useOptionsDb","_useReducer3","defaultOptions","_useReducer4","_useState3","_useState4","iterate","then","Selecting","tourneyDispatch","_useAllPlayersDb","_useAllPlayersDb2","allPlayersDispatch","togglePlayer","target","checked","pId","PlayerList","disabled","PlayerSelect","activePlayers","isSelecting","setIsSelecting","matches","flexShrink","dialog_es","isOpen","onDismiss","PlayerInfo","_useOptionsDb","colorBalance","hasBye","avoidList","prettyBalance","data-testid","entries","_ref3","opId","SelectList","stagedPlayers","setStagedPlayers","_useSortedTable","_useSortedTable2","sorted","sortedDispatch","isOnePlayerSelected","Set","size","selectedIds","selectedPlayer","calcIdealOrNot","ideal","setWhite","set","setBlack","selectPlayer","Stage","_stagedPlayers","white","black","whiteName","blackName","unstage","matchIdeal","player0stats","player1stats","react","every","PairPicker","unmatchedCount","unmatchedWithDummy","isModalOpen","setIsModalOpen","useMemo","curry","p1","flexGrow","NotFound","PlayerMatchInfo","_scoreData$playerId","MatchRow","compact","pos","selectedMatch","setSelectedMatch","playersDispatch","openModal","setOpenModal","resultCode","whitePlayer","blackPlayer","ResultDisplay","setMatchResult","matchId","rowId","playerResult","matchResult","winnerSelect","onBlur","controls","RoundTable","tbody","findById","Round","_404","moveMatch","oldIndex","newIndex","forEach","unMatch","WrappedComponent","RoundWithData","activePlayersCount","initialTab","openTab","setOpenTab","tabs_es","_props$tournament","ScoreTable","tieBreakNames","standingTree","obj","defineProperty","topHeader","standingsFlat","rowSpan","dashify","j","SelectTieBreaks","selectedTb","setSelectedTb","toggleTb","defaultId","moveTb","button-primary","selected","marginTop","Scores","_ref4","makeDateInput","getFullYear","rawMonth","getMonth","rawDate","getDate","Setup","isEditingName","setIsEditingName","isEditingDate","setIsEditingDate","nameInput","useRef","dateInput","current","focus","textAlign","ref","_event$currentTarget$","split","_event$currentTarget$2","rawYear","rawDay","aria-describedby","es","to","noDraggy","onDragStart","e","navigate","isItOver","isNewRoundReady","isComplete","_delLastRound","confirm","playersReducer","scoreByeMatch","autoPair","filteredData","_setByePlayer","dummyId","dataList","playersWithoutByes","nextByeSignup","dataForNextBye","byeData","setByePlayer","_setByePlayer2","pairDataNoByes","byePlayerData","pairs","pairingData","playerIdArray","reduceWithIndices","addIndex","accArr","srcArr","playerMatches","blossom","p1Index","p2Index","matched","pairPlayers","pairsWithBye","idsPair","tournamentReducer","remove","move","__","findIndex","propEq","mergeRight","reverse","electron","require","ifElectron","fn","IfElectron","_ref$onlyWin","onlyWin","_ref$onlyMac","onlyMac","win","navigator","appVersion","mac","ifElectronOpen","url","shell","openExternal","macOSDoubleClick","doubleClickAction","getUserDefault","remote","systemPreferences","getCurrentWindow","minimize","isMaximized","unmaximize","maximize","toggleMaximize","propTypes","PropTypes","node","isRequired","bool","onlyWindows","GITHUB_URL","LICENSE_URL","About","display","justifyContent","flex","logo","height","alt","href","margin","Close","viewBox","xmlns","d","Maximize","Minimize","Restore","Controls","middleButton","isFullScreen","winButton","setFullScreen","windows_controls_Restore","windows_controls_Maximize","container","windows_controls_Minimize","close","windows_controls_Close","WindowContext","createContext","useWindowContext","useContext","GLOBAL_TITLE","formatTitle","initialWinState","isBlur","isDialogOpen","isSidebarOpen","windowReducer","isMac","isWin","toolbarClasses","macos-button-toolbar","button-ghost","WindowTitleBar","traffic-light-padding","onDoubleClick","alignItems","marginLeft","marginRight","left","position","right","Window","unregisterListeners","removeAllListeners","on","isFocused","open-sidebar","closed-sidebar","window-blur","isWindows","isMacOS","isElectron","window_WindowTitleBar","Provider","winDispatch","winState","backgroundColor","about_dialog","WindowBody","footer","sidebar","_ref3$footerProps","footerProps","winBody-hasFooter","sidebar_default_Sidebar","emptyTourney","loadReducer","initLoading","noDbError","TournamentData","tourneyId","tourneyReducer","_useReducer5","_useReducer6","loadedDispatch","getItem","allTheIds","allPlayers","Array","from","getAllPlayerIdsFromMatches","symmetricDifference","setItem","catch","roundCount","playerCount","ceil","log2","isFinite","calcNumOfRounds","shape","object","number","Status","lastRoundId","Footer","tooltipText","isTooltipWarn","minHeight","default","TournamentList","_useAllTournamentsDb","_useAllTournamentsDb2","tourneys","sortDispatch","newTourneyName","setNewTourneyName","isFormOpen","setIsFormOpen","message","deleteTournament","placeholder","TournamentIndex","getDateForFile","getDay","join","invalidAlert","LastBackupDate","getTime","tourneysDispatch","text","setText","_useOptionsDb2","optionsDispatch","exportData","loadData","JSON","stringify","download","encodeURIComponent","reader","FileReader","onload","ev","parse","_unused2","readAsText","files","process","_unused","cols","rows","spellCheck","delPlayer","PlayerProfile","avoidObj","singAvoidList","unAvoided","selectedAvoider","setSelectedAvoider","handleChange","handleAvoidChange","playerInfo","defaultValue","readOnly","arial-label","newSelected","PlayerProfileWrapper","childProps","basepath","player_list_PlayerList","Caution","caution","caution__text","caution__link","ISSUES_URL","Splash","border","splash","hint","titleIcon","titleText","fontSize","subtitle","source","createHashSource","history","createHistory","App","pages_tournament","tournament_Tournament","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister","header","contentFrame","__webpack_require__"],"mappings":"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","file":"static/js/main.b2007738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__2hUUH\"};","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import numeral from \"numeral\";\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"fraction\", {\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        const whole = Math.floor(value);\n        const remainder = value - whole;\n        const fraction = (function () {\n            switch (remainder) {\n            case 0.25:\n                return \"¼\";\n            case 0.5:\n                return \"½\";\n            case 0.75:\n                return \"¾\";\n            default:\n                return \"\";\n            }\n        }());\n        const stringedWhole = whole === 0 && remainder ? \"\" : String(whole);\n        return stringedWhole + fraction;\n    },\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    unformat: function (value) {\n        // TODO: This doesn't do anything currently\n        return Number(value);\n    }\n});\n","// These define the array indices used in `Match` objects.\n// @example: `[WhitePlayer, BlackPlayer1]`, `[WhiteScore, BlackScore]`\nconst WHITE = 0;\nconst BLACK = 1;\n// This is used in by matches to indicate a dummy player. The\n// `getPlayerMaybe()` method returns a special dummy player profile when\n// fetching this ID.\n// This ID conforms to the NanoID regex.\nconst DUMMY_ID = \"________DUMMY________\";\n\nexport {BLACK, DUMMY_ID, WHITE};\n","import {BLACK, WHITE} from \"./constants\";\nimport t from \"tcomb\";\n\nconst Id = t.refinement(\n    t.String,\n    (id) => /^[A-Za-z0-9_-]{21}$/.test(id),\n    \"NanoId\"\n);\n\nconst Color = t.refinement(\n    t.Number,\n    (num) => num === BLACK || num === WHITE,\n    \"Color\"\n);\n\nconst AvoidPair = t.tuple([Id, Id], \"AvoidPair\");\n\nconst Player = t.interface(\n    {\n        firstName: t.String,\n        id: Id,\n        lastName: t.String,\n        matchCount: t.Number,\n        rating: t.Number,\n        type: t.String // used for CSS styling etc\n    },\n    \"Player\"\n);\n\nconst Match = t.interface(\n    {\n        id: Id,\n        newRating: t.tuple([t.Number, t.Number]),\n        origRating: t.tuple([t.Number, t.Number]),\n        playerIds: t.tuple([Id, Id]),\n        result: t.tuple([t.Number, t.Number])\n    },\n    \"Match\"\n);\n\nconst RoundList = t.list(t.list(Match), \"RoundList\");\n\nconst Tournament = t.interface(\n    {\n        byeQueue: t.list(t.String),\n        date: Date,\n        id: Id,\n        name: t.String,\n        playerIds: t.list(t.String),\n        roundList: RoundList,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Tournament\"\n);\n\nconst db = Object.freeze({\n    Options: t.interface(\n        {\n            avoidPairs: t.list(AvoidPair),\n            byeValue: t.refinement(t.Number, (num) => num === 1 || num === 0.5),\n            lastBackup: Date\n        },\n        \"Options\"\n    ),\n    Tourneys: t.dict(Id, Tournament, \"TournamentsDB\"),\n    Players: t.dict(Id, Player, \"PlayersDB\")\n});\n\nexport default Object.freeze({\n    AvoidPair,\n    Color,\n    Id,\n    Match,\n    Player,\n    RoundList,\n    Tournament,\n    db\n});\n","// These factories are mainly useful as a shortcut for default values.\nimport nanoid from \"nanoid\";\nimport types from \"./types\";\n\nexport function createMatch(importObj) {\n    return types.Match(\n        Object.assign(\n            {\n                id: nanoid(),\n                result: [0, 0]\n            },\n            importObj\n        )\n    );\n}\n\nexport function createPlayer(importObj) {\n    return types.Player(\n        Object.assign(\n            {\n                id: nanoid(),\n                matchCount: 0,\n                rating: 0,\n                type: \"person\" // used for CSS styling etc.\n            },\n            importObj\n        )\n    );\n}\n\nexport function createTournament(importObj) {\n    return types.Tournament(\n        Object.assign(\n            {\n                byeQueue: [],\n                date: new Date(),\n                id: nanoid(),\n                playerIds: [],\n                roundList: [],\n                tieBreaks: [0, 1, 2, 3]\n            },\n            importObj\n        )\n    );\n}\n","import {DUMMY_ID} from \"./constants\";\nimport {assoc} from \"ramda\";\nimport {createPlayer} from \"./factories\";\n// import t from \"tcomb\";\nimport types from \"./types\";\n\n/*******************************************************************************\n * Player functions\n ******************************************************************************/\n// These are useful for passing to `filter()` methods.\nconst isDummyId = (playerId) => types.Id(playerId) === DUMMY_ID;\nexport {isDummyId};\n// This can take any object with a compliant `id` property.\nconst isDummyObj = (playerObj) => types.Id(playerObj.id) === DUMMY_ID;\nexport {isDummyObj};\n\n// This is the dummy profile that `getPlayerMaybe()` returns for bye rounds.\nconst dummyPlayer = createPlayer({\n    firstName: \"Bye\",\n    id: DUMMY_ID,\n    lastName: \"Player\",\n    type: \"dummy\"\n});\n\n// If `getPlayerMaybe()` can't find a profile (e.g. if it was deleted) then it\n// outputs this instead. The ID will be the same as missing player's ID.\nconst createMissingPlayer = (id) => createPlayer({\n    firstName: \"Anonymous\",\n    id: id,\n    lastName: \"Player\",\n    type: \"missing\"\n});\n\n// This function should always be used in components that *might* not be able to\n// display current player information. This includes bye rounds with \"dummy\"\n// players, or scoreboards where a player may have been deleted.\nexport function getPlayerMaybe(playerDict, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = playerDict[id];\n    return player ? player : createMissingPlayer(id);\n}\n\n/*******************************************************************************\n * Round functions\n ******************************************************************************/\n\n// This flattens a list of rounds to a list of matches.\n// The optional `lastRound` parameter will slice the rounds to only the last\n// index specified. For example: if you just want to see the scores through\n// round 2 and not include round 3.\nexport function rounds2Matches(roundList, lastRound = null) {\n    const rounds = (\n        lastRound === null\n        ? roundList\n        : roundList.slice(0, lastRound + 1)\n    );\n    return rounds.reduce((acc, round) => acc.concat(round), []);\n}\n\n// This creates a filtered version of `players` with only the players that are\n// not matched for the specified round.\nexport function getUnmatched(roundList, players, roundId) {\n    const matchList = roundList[roundId] || [];\n    const matchedIds = matchList.reduce(\n        (acc, {playerIds}) => acc.concat(playerIds),\n        []\n    );\n    const playerList = Object.values(players);\n    const unmatched = playerList.reduce(\n        (acc, player) => (\n            matchedIds.includes(player.id)\n            ? acc\n            : assoc(player.id, player, acc)\n        ),\n        {}\n    );\n    return unmatched;\n}\n\nexport function isRoundComplete(roundList, players, roundId) {\n    if (roundId < roundList.length - 1) {\n        // If it's not the last round, it's complete.\n        return true;\n    }\n    const unmatched = getUnmatched(roundList, players, roundId);\n    const results = roundList[roundId].map(({result}) => result[0] + result[1]);\n    return Object.keys(unmatched).length === 0 && !results.includes(0);\n}\n","// This file is a complement to `../data-types/`, except its types are specific\n// to the scoring and pairing functions.\nimport t from \"tcomb\";\nimport {types} from \"../data-types\";\n\nconst BLACKVALUE = 1;\nconst WHITEVALUE = -1;\nconst ColorScore = t.refinement(\n    t.Number,\n    (num) => num === BLACKVALUE || num === WHITEVALUE,\n    \"ColorScore\"\n);\nconst ScoreData = t.interface(\n    {\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        id: types.Id,\n        isDummy: t.Boolean,\n        opponentResults: t.dict(types.Id, t.Number),\n        ratings: t.list(t.Number),\n        results: t.list(t.Number),\n        resultsNoByes: t.list(t.Number)\n    },\n    \"ScoreData\"\n);\nconst PairingData = t.interface(\n    {\n        avoidIds: t.list(types.Id),\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        // `halfPos` is the index of the player within their scoregroup that's\n        // split into upper and lower halves. Example: in a group of 8, the\n        // first and the fifth players would both be `halfPos: 0`.\n        halfPos: t.Number,\n        id: types.Id,\n        // isDueBye: t.Boolean,\n        isUpperHalf: t.Boolean,\n        opponents: t.list(types.Id),\n        rating: t.Number,\n        score: t.Number\n    },\n    \"PairingData\"\n);\nconst ScoreCalculator = t.func(\n    [t.dict(t.String, ScoreData), types.Id],\n    t.Number,\n    \"ScoreCalulator\"\n);\nconst Standing = t.interface(\n    {\n        id: types.Id,\n        score: t.Number,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Standing\"\n);\n\nexport default Object.freeze({\n    BLACKVALUE,\n    PairingData,\n    ScoreCalculator,\n    ScoreData,\n    Standing,\n    WHITEVALUE\n});\n","// This implements the tiebreak methods specified in USCF § 34E.\n// This is incomplete; many more tiebreak methods need to be added. These are\n// the most commonly used.\nimport {\n    ascend,\n    init,\n    last,\n    pipe,\n    sort,\n    sum,\n    tail\n} from \"ramda\";\n// import t from \"tcomb\";\nimport types from \"./types\";\n\nconst isNotDummy = (scoreData) => (oppId) => !scoreData[oppId].isDummy;\n\nfunction getPlayerScore(scoreData, id) {\n    return sum(scoreData[id].results);\n}\nexport {getPlayerScore};\n\n// Don't mind me, just a helper function\nfunction getOpponentScores(scoreData, id) {\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\n    const getScore = (oppId) => getPlayerScore(scoreData, oppId);\n    return opponentIds.filter(isNotDummy(scoreData)).map(getScore);\n}\n\n// USCF § 34E1.\nfunction getMedianScore(scoreData, id) {\n    const scores = getOpponentScores(scoreData, id);\n    return pipe(sort(ascend), init, tail, sum)(scores);\n}\n\n// USCF § 34E2.\nfunction getSolkoffScore(scoreData, id) {\n    return sum(getOpponentScores(scoreData, id));\n}\n\n// turn the regular score list into a \"running\" score list\nconst runningReducer = (acc, score) => acc.concat([last(acc) + score]);\n\n// USCF § 34E3.\nfunction getCumulativeScore(scoreData, id) {\n    const scoreList = scoreData[id].resultsNoByes.reduce(runningReducer, [0]);\n    return sum(scoreList);\n}\n\n// USCF § 34E4.\nfunction getCumulativeOfOpponentScore(scoreData, id) {\n    const oppIds = Object.keys(scoreData[id].opponentResults);\n    const getCumScore = (oppId) => getCumulativeScore(scoreData, oppId);\n    const scoreList = oppIds.filter(isNotDummy(scoreData)).map(getCumScore);\n    return sum(scoreList);\n}\n\n// USCF § 34E6\nfunction getColorBalanceScore(scoreData, id) {\n    return sum(scoreData[id].colorScores);\n};\n\nconst tieBreakMethods = {\n    0: {\n        func: types.ScoreCalculator.of(getMedianScore),\n        id: 0,\n        name: \"Median\"\n    },\n    1: {\n        func: types.ScoreCalculator.of(getSolkoffScore),\n        id: 1,\n        name: \"Solkoff\"\n    },\n    2: {\n        func: types.ScoreCalculator.of(getCumulativeScore),\n        id: 2,\n        name: \"Cumulative score\"\n    },\n    3: {\n        func: types.ScoreCalculator.of(getCumulativeOfOpponentScore),\n        id: 3,\n        name: \"Cumulative of opposition\"\n    },\n    4: {\n        func: types.ScoreCalculator.of(getColorBalanceScore),\n        id: 4,\n        name: \"Most black\"\n    }\n};\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\nconst getNameFromIndex = (index) => tieBreakMethods[index].name;\n// Returns the names of the tiebreak methods selected for your tournament.\nconst getTieBreakNames = (idList) => idList.map(getNameFromIndex);\nexport {getTieBreakNames};\n","import {\n    append,\n    descend,\n    lensIndex,\n    over,\n    path,\n    prop,\n    sortWith\n} from \"ramda\";\nimport {\n    getPlayerScore,\n    tieBreakMethods\n} from \"./scoring\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\n// This is useful for cases where the regular factory functions return empty\n// results because a player hasn't been added yet.\nconst createBlankScoreData = (id) => types.ScoreData({\n    colorScores: [],\n    colors: [],\n    halfPos: 0,\n    id,\n    isDummy: false,\n    opponentResults: {},\n    ratings: [],\n    results: [],\n    resultsNoByes: []\n});\nexport {createBlankScoreData};\n\n// Sort the standings by score, see USCF tie-break rules from § 34.\n// Returns the list of the standings. Each standing has a `tieBreaks` property\n// which lists the score associated with each method. The order of these\n// coresponds to the order of the method names in the second list.\nexport function createStandingList(methods, scoreData) {\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\n    // Get a flat list of all of the players and their scores.\n    const standings = Object.keys(scoreData).map(\n        (id) => types.Standing({\n            id,\n            score: getPlayerScore(scoreData, id),\n            tieBreaks: selectedTieBreaks.map(({func}) => func(scoreData, id))\n        })\n    );\n    // create a list of functions to pass to `sortWith`. This will sort by\n    // scores and then by each tiebreak value.\n    const sortFuncList = Object.keys(selectedTieBreaks).reduce(\n        (acc, key) => acc.concat([descend(path([\"tieBreaks\", key]))]),\n        [descend(prop(\"score\"))]\n    );\n    const standingsSorted = sortWith(sortFuncList, standings);\n    return standingsSorted;\n}\n\nfunction areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any tie-break values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n// Groups the standings by score, see USCF tie-break rules from § 34.\n// example: `[[Dale, Audrey], [Pete], [Bob]]` Dale and Audrey are tied for\n// first, Pete is 2nd, Bob is 3rd.\nexport function createStandingTree(standingList) {\n    const standingsTree = t.list(types.Standing)(standingList).reduce(\n        function assignStandingsToTree(acc, standing, i, orig) {\n            const prevStanding = orig[i - 1];\n            // Always make a new rank for the first player\n            const isNewRank = (\n                i === 0\n                ? true\n                // Make a new rank if the scores aren't equal\n                : !areScoresEqual(standing, prevStanding)\n            );\n            return (\n                isNewRank\n                // If this player doesn't have the same score, create a new\n                // branch of the tree\n                ? append([standing], acc)\n                // If this player has the same score as the last, append it\n                // to the last branch\n                : over(lensIndex(acc.length - 1), append(standing), acc)\n            );\n        },\n        []\n    );\n    return standingsTree;\n}\n","// These functions are for converting data types defined in `../data-types` to\n// data that can be used by the scoring functions in rest of this module.\nimport {\n    BLACK,\n    WHITE,\n    isDummyId,\n    types\n} from \"../data-types\";\nimport {\n    add,\n    append,\n    assoc,\n    defaultTo,\n    lensPath,\n    lensProp,\n    over,\n    pipe,\n    sum\n} from \"ramda\";\nimport {createBlankScoreData} from \"./factories\";\nimport scoreTypes from \"./types\";\n// import t from \"tcomb\";\n\nfunction color2Score(color) {\n    return (\n        types.Color(color) === BLACK\n        ? scoreTypes.BLACKVALUE\n        : scoreTypes.WHITEVALUE\n    );\n}\n\nfunction match2ScoreDataReducer(acc, match) {\n    const {playerIds, result, newRating, origRating} = match;\n    const [p1Data, p2Data] = [WHITE, BLACK].map(function dataForColor(color) {\n        const id = playerIds[color];\n        const oppColor = color === WHITE ? BLACK : WHITE;\n        const oppId = playerIds[oppColor];\n        // Get existing score data to update, or create it fresh\n        // The ratings will always begin with the `origRating` of the\n        // first match they were in.\n        const origData = acc[id] || {id, ratings: [origRating[color]]};\n        return pipe(\n            over(lensProp(\"results\"), append(result[color])),\n            over(\n                lensProp(\"resultsNoByes\"),\n                isDummyId(oppId) ? defaultTo([]) : append(result[color])\n            ),\n            over(lensProp(\"colors\"), append(color)),\n            over(lensProp(\"colorScores\"), append(color2Score(color))),\n            over(\n                lensPath([\"opponentResults\", oppId]),\n                pipe(defaultTo(0), add(result[color]))\n            ),\n            over(lensProp(\"ratings\"), append(newRating[color])),\n            assoc(\"isDummy\", isDummyId(id))\n        )(origData);\n    });\n    return pipe(\n        assoc(p1Data.id, p1Data),\n        assoc(p2Data.id, p2Data)\n    )(acc);\n}\n\nexport function matches2ScoreData(matchList) {\n    return matchList.reduce(match2ScoreDataReducer, {});\n}\n\n// Flatten the `[[id1, id2], [id1, id3]]` structure into an easy-to-read\n// `{id1: [id2, id3], id2: [id1], id3: [id1]}` structure.\nexport function avoidPairReducer(acc, pair) {\n    return pipe(\n        over(lensProp(pair[0]), append(pair[1])),\n        over(lensProp(pair[1]), append(pair[0]))\n    )(acc);\n}\n\nexport function createPairingData(playerData, avoidPairs, scoreData) {\n    const avoidDict = avoidPairs.reduce(avoidPairReducer, {});\n    const pairingData = Object.values(playerData).reduce(\n        function pairingDataReducer(acc, data) {\n            // If there's no scoreData for a player, use empty values\n            const playerStats = (\n                scoreData[data.id]\n                ? scoreData[data.id]\n                : createBlankScoreData(data.id)\n            );\n            // `isUpperHalf` and `halfPos` will have to be set by another\n            // function later.\n            const pairData = {\n                avoidIds: avoidDict[data.id] || [],\n                colorScores: playerStats.colorScores,\n                colors: playerStats.colors,\n                halfPos: 0,\n                id: data.id,\n                // isDueBye: false,\n                isUpperHalf: false,\n                opponents: Object.keys(playerStats.opponentResults),\n                rating: data.rating,\n                // `score` is calculated and cached here because the blossom\n                // pairing will reuse it many times.\n                score: sum(playerStats.results)\n            };\n            return assoc(data.id, pairData, acc);\n        },\n        {}\n    );\n    return pairingData;\n}\n","import {\n    addIndex,\n    assoc,\n    descend,\n    dissoc,\n    filter,\n    last,\n    map,\n    pipe,\n    pluck,\n    prop,\n    reduce,\n    sort,\n    sortWith,\n    splitAt,\n    sum\n} from \"ramda\";\nimport blossom from \"edmonds-blossom\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\nconst priority = (value) => (condition) => condition ? value : 0;\nconst divisiblePriority = (dividend) => (divisor) => dividend / divisor;\n\n// These following consts probably need to be tweaked a lot.\n\n// The weight given to avoid players meeting twice. This same weight is given to\n// avoid matching players on each other's \"avoid\" list.\n// This is the highest priority. (USCF § 27A1)\nconst avoidMeetingTwice = priority(32);\n\n// The weight given to match players with equal scores. This gets divided\n// against the difference between each players' scores, plus one. For example,\n// players with scores `1` and `3` would have this priority divided by `3`.\n// Players with scores `0` and `3` would have this priority divided by `4`.\n// Players with equal scores would divide it by `1`, leaving it unchanged.\n// (USCF § 27A2)\nconst sameScores = divisiblePriority(16);\n\n// The weight given to match players in lower versus upper halves. This is only\n// applied to players being matched within the same score group. (USCF § 27A3)\nconst halfPosition = divisiblePriority(8);\nconst sameHalfPriority = () => 0;\nconst differentHalf = (isDiffHalf) => (\n    isDiffHalf\n    ? halfPosition\n    : sameHalfPriority\n);\n\n// The weight given to match players with opposite due colors.\n// (USCF § 27A4 and § 27A5)\nconst differentDueColor = priority(4);\n\n// This is useful for dividing against a calculated priority, to inspect how\n// \"compatible\" two players may be.\nconst maxPriority = sum([\n    differentHalf(true)(1),\n    differentDueColor(true),\n    sameScores(1),\n    avoidMeetingTwice(true)\n]);\nexport {maxPriority};\n\n// The pairing code is broken up into several functions which take each other's\n// input to build the data necessary to pair players appropriately.\n// Using a function like Ramda's `pipe` to put them together, the final product\n// will look something like this:\n// ```js\n// const pairs = pipe(\n//     rounds2Matches,\n//     matches2ScoreData,\n//     createPairingData,\n//     setUpperHalves,\n//     setByePlayer,\n//     pairPlayers // <-- the function that actually pairs them!\n// )(roundList);\n// ```\n// (This may be outdated as the actual functions aren't stable yet.)\n\n// Given two `PairingData` objects, this assigns a number for how much they\n// should be matched. The number gets fed to the `blossom` algorithm.\nexport function calcPairIdeal(player1, player2) {\n    if (player1.id === player2.id) {\n        return 0;\n    }\n    const metBefore = player1.opponents.includes(player2.id);\n    const mustAvoid = player1.avoidIds.includes(player2.id);\n    const p1LastColor = last(player1.colors);\n    const p2LastColor = last(player2.colors);\n    const scoreDiff = Math.abs(player1.score - player2.score) + 1;\n    const halfDiff = Math.abs(player1.halfPos - player2.halfPos) + 1;\n    const isDiffHalf = (\n        player1.isUpperHalf !== player2.isUpperHalf\n        && player1.score === player2.score\n    );\n    return sum([\n        differentDueColor(\n            p1LastColor === undefined || p1LastColor !== p2LastColor\n        ),\n        sameScores(scoreDiff),\n        differentHalf(isDiffHalf)(halfDiff),\n        avoidMeetingTwice(!metBefore && !mustAvoid)\n    ]);\n}\n\nconst splitInHalf = (list) => splitAt(list.length / 2, list);\n\n// for each object sent to this, it determines whether or not it's in the\n// \"upper half\" of it's score group.\n// (USCF § 29C1.)\nfunction upperHalfReducer(acc, playerData, ignore, src) {\n    types.PairingData(playerData);\n    const [upperHalfIds, lowerHalfIds] = pipe(\n        filter((p2) => p2.score === playerData.score),\n        // this may be redundant if the list was already sorted.\n        sort(descend(prop(\"rating\"))),\n        map((p) => p.id),\n        splitInHalf\n    )(src);\n    const isUpperHalf = upperHalfIds.includes(playerData.id);\n    const halfPos = (\n        isUpperHalf\n        ? upperHalfIds.indexOf(playerData.id)\n        : lowerHalfIds.indexOf(playerData.id)\n    );\n    return assoc(\n        playerData.id,\n        {...playerData, ...{halfPos, isUpperHalf}},\n        acc\n    );\n}\nexport function setUpperHalves(data) {\n    // using reduce instead of map because we're not creating an array.\n    return Object.values(data).reduce(upperHalfReducer, {});\n}\n\n// Sort the data so matchups default to order by score and rating.\nconst sortByScoreThenRating = sortWith([\n    descend(prop(\"score\")),\n    descend(prop(\"rating\"))\n]);\n// This this returns a tuple of two objects: The modified array of player data\n// without the player assigned a bye, and the player assigned a bye.\n// If no player is assigned a bye, the second object is `null`.\n// After calling this, be sure to add the bye round after the non-bye'd\n// players are paired.\nexport function setByePlayer(byeQueue, dummyId, data) {\n    const hasNotHadBye = (p) => !p.opponents.includes(t.String(dummyId));\n    // if the list is even, just return it.\n    if (Object.keys(data).length % 2 === 0) {\n        return [data, null];\n    }\n    const dataList = pipe(\n        Object.values,\n        filter(hasNotHadBye),\n        sortByScoreThenRating\n    )(data);\n    const playersWithoutByes = dataList.map((p) => p.id);\n    const hasntHadBye = (id) => playersWithoutByes.includes(id);\n    const nextByeSignup = t.list(t.String)(byeQueue).filter(hasntHadBye)[0];\n    const dataForNextBye = (\n        nextByeSignup\n        // Assign the bye to the next person who signed up.\n        ? data[nextByeSignup]\n        // Assign a bye to the lowest-rated player in the lowest score group.\n        // Because the list is sorted, the last player is the lowest.\n        // (USCF § 29L2.)\n        : last(dataList)\n    );\n    // In the impossible situation that *everyone* has played a bye round\n    // previously, then just pick the last player.\n    const id = (\n        dataForNextBye\n        ? dataForNextBye.id\n        : pipe(Object.values, sortByScoreThenRating, last)(data).id\n    );\n    const byeData = data[id];\n    const dataWithoutBye = dissoc(id, data);\n    return [dataWithoutBye, byeData];\n}\n\nfunction assignColorsForPair(pair) {\n    const [player1, player2] = pair;\n    // This is a quick-and-dirty heuristic to keep color balances\n    // mostly equal. Ideally, it would also examine due colors and how\n    // many times a player played each color last.\n    return (\n        sum(player1.colorScores) < sum(player2.colorScores)\n        // player 1 has played as white more than player 2\n        ? [player2.id, player1.id]\n        // player 1 has played as black more than player 2\n        // (or they're equal).\n        : [player1.id, player2.id]\n    );\n}\n\nconst netScoreDescend = (pair1, pair2) => (\n    sum(pluck(\"score\", pair2)) - sum(pluck(\"score\", pair1))\n);\nconst netRatingDescend = (pair1, pair2) => (\n    sum(pluck(\"rating\", pair2)) - sum(pluck(\"rating\", pair1))\n);\nconst sortByNetScoreThenRating = sortWith([netScoreDescend, netRatingDescend]);\n\n// Create pairings according to the rules specified in USCF § 27, § 28,\n//  and § 29. This is a work in progress and does not account for all of the\n// rules yet.\nexport function pairPlayers(pairingData) {\n    // Because `blossom()` has to use numbers that correspond to array indices,\n    // we'll use `playerIdArray` as our source for that.\n    const playerIdArray = Object.keys(pairingData);\n    // Turn the data into blossom-compatible input.\n    function pairIdealReducer(accArr, player1, index, srcArr) {\n        // slice out players who have already computed, plus the current one\n        const playerMatches = srcArr.slice(index + 1).map(\n            (player2) => [\n                playerIdArray.indexOf(player1.id),\n                playerIdArray.indexOf(player2.id),\n                calcPairIdeal(player1, player2)\n            ]\n        );\n        return accArr.concat(playerMatches);\n    }\n    function blossom2Pairs(acc, p1Index, p2Index) {\n        // Filter out unmatched players. Blossom will automatically include\n        // their missing IDs in its results.\n        if (p1Index === -1) {\n            return acc;\n        }\n        // Translate the indices into ID strings\n        const p1 = pairingData[playerIdArray[p1Index]];\n        const p2 = pairingData[playerIdArray[p2Index]];\n        // TODO: in the future, we may store the ideal for debugging. Because it\n        // rarely serves a purpose, we're not including it now.\n        // const ideal = potentialMatches.filter(\n        //     (pair) => pair[0] === p1Id && pair[1] === p2Id\n        // )[0][2];\n        // Blossom returns a lot of redundant matches. Check that this matchup\n        // wasn't already added.\n        const matched = acc.map((pair) => pair[0]);\n        if (!matched.includes(p1) && !matched.includes(p2)) {\n            return acc.concat([[p1, p2]]);\n        }\n        return acc;\n    }\n    // This makes Ramda's `reduce` work more like `Array.prototype.reduce`.\n    const reduceWithIndices = addIndex(reduce);\n    return pipe(\n        Object.values,\n        reduceWithIndices(pairIdealReducer, []),\n        // Feed all of the potential matches to Edmonds-blossom and let the\n        // algorithm work its magic. This returns an array where each index is the\n        // ID of one player and each value is the ID of the matched player.\n        blossom,\n        // Translate those IDs into actual pairs of player Ids.\n        reduceWithIndices(blossom2Pairs, []),\n        sortByNetScoreThenRating,\n        map(assignColorsForPair)\n    )(pairingData);\n}\n","import {BLACK, WHITE} from \"../data-types\";\nimport EloRank from \"elo-rank\";\nimport t from \"tcomb\";\n\nfunction getKFactor(matchCount) {\n    const ne = t.Number(matchCount) || 1;\n    return (800 / ne);\n}\n\nfunction calcNewRatings(origRatings, matchCounts, result) {\n    t.tuple([t.Number, t.Number])(origRatings);\n    t.tuple([t.Number, t.Number])(matchCounts);\n    t.tuple([t.Number, t.Number])(result);\n    const whiteElo = new EloRank(getKFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(getKFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    return newRating.map((rating) => rating < FLOOR ? FLOOR : rating);\n}\n\nexport default Object.freeze({\n    calcNewRatings,\n    getKFactor\n});\n","import Activity from \"react-feather/dist/icons/activity\";\nimport Alert from \"react-feather/dist/icons/alert-triangle\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport ArrowLeft from \"react-feather/dist/icons/arrow-left\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport Award from \"react-feather/dist/icons/award\";\nimport Check from \"react-feather/dist/icons/check\";\nimport CheckCircle from \"react-feather/dist/icons/check-circle\";\nimport ChevronDown from \"react-feather/dist/icons/chevron-down\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport ChevronUp from \"react-feather/dist/icons/chevron-up\";\nimport Circle from \"react-feather/dist/icons/circle\";\nimport Download from \"react-feather/dist/icons/download\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Help from \"react-feather/dist/icons/help-circle\";\nimport Info from \"react-feather/dist/icons/info\";\nimport Javascript from \"simple-icons/icons/javascript\";\nimport Layers from \"react-feather/dist/icons/layers\";\nimport List from \"react-feather/dist/icons/list\";\n// import Logo from \"./logo\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport React from \"react\";\nimport ReactIcon from \"simple-icons/icons/react\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Settings from \"react-feather/dist/icons/settings\";\nimport Sidebar from \"react-feather/dist/icons/sidebar\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport Unfullscreen from \"react-feather/dist/icons/minimize-2\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Users from \"react-feather/dist/icons/users\";\nimport X from \"react-feather/dist/icons/x\";\n\n// This converts a specified `simple-icons` icon into a React component.\nconst simpleIcon = (icon) => (props) => (\n    <span\n        dangerouslySetInnerHTML={{__html: icon.svg}}\n        aria-label={icon.title}\n        role=\"img\"\n        style={{fill: \"#\" + icon.hex}}\n        {...props}\n    />\n);\n\nexport default {\n    Activity,\n    Alert,\n    ArrowDown,\n    ArrowLeft,\n    ArrowUp,\n    Award,\n    Check,\n    CheckCircle,\n    ChevronDown,\n    ChevronLeft,\n    ChevronRight,\n    ChevronUp,\n    Circle,\n    Download,\n    Edit,\n    Help,\n    Info,\n    Javascript: simpleIcon(Javascript),\n    Layers,\n    List,\n    // Logo,\n    Plus,\n    React: simpleIcon(ReactIcon),\n    Repeat,\n    Settings,\n    Sidebar,\n    Trash,\n    Unfullscreen,\n    UserMinus,\n    UserPlus,\n    Users,\n    X\n};\n","import {\n    createStandingList,\n    matches2ScoreData\n} from \"../../pairing-scoring\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {last} from \"ramda\";\nimport numeral from \"numeral\";\nimport {rounds2Matches} from \"../../data-types\";\nimport style from \"./index.module.css\";\n\nexport default function Crosstable({tournament}) {\n    const {tourney, getPlayer} = tournament;\n    const {tieBreaks, roundList} = tourney;\n    const scoreData = matches2ScoreData(rounds2Matches(roundList));\n    const standings = createStandingList(tieBreaks, scoreData);\n\n    function getXScore(player1Id, player2Id) {\n        if (player1Id === player2Id) {\n            return <Icons.X className=\"disabled\" />;\n        }\n        const result = scoreData[player1Id].opponentResults[player2Id];\n        if (result === undefined) {\n            return null;\n        }\n        return numeral(result).format(\"1/2\");\n    }\n\n    function getRatingChangeTds(playerId) {\n        const firstRating = scoreData[playerId].ratings[0];\n        const lastRating = last(scoreData[playerId].ratings);\n        const change = numeral(lastRating - firstRating).format(\"+0\");\n        return (\n            <>\n            <td className=\"table__number\">\n                {lastRating}\n            </td>\n            <td className=\"table__number body-10\">\n                ({change})\n            </td>\n            </>\n        );\n    }\n\n    return (\n        <table className={style.table}>\n            <caption>Crosstable</caption>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    {/* Display a rank as a shorthand for each player. */}\n                    {Object.keys(standings).map((rank) =>\n                        <th key={rank}>\n                            {Number(rank) + 1}\n                        </th>\n                    )}\n                    <th>Score</th>\n                    <th colSpan={2}>Rating</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* Output a row for each player */}\n                {standings.map((standing, index)=>\n                    <tr key={index} className={style.row}>\n                        <th className={style.rank} scope=\"col\">\n                            {index + 1}\n                        </th>\n                        <th className={style.playerName} scope=\"row\">\n                            {getPlayer(standing.id).firstName}&nbsp;\n                            {getPlayer(standing.id).lastName}\n                        </th>\n                        {/* Output a cell for each other player */}\n                        {standings.map((opponent, index2) =>\n                            <td\n                                key={index2}\n                                className=\"table__number\"\n                            >\n                                {getXScore(standing.id, opponent.id)}\n                            </td>\n                        )}\n                        {/* Output their score and rating change */}\n                        <td className=\"table__number\">\n                            {numeral(standing.score).format(\"1/2\")}\n                        </td>\n                        {getRatingChangeTds(standing.id)}\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nCrosstable.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport classNames from \"classnames\";\nimport styles from \"./utility.module.css\";\n\nexport function Panel({children, ...rest}) {\n    return (\n        <div className={styles.panel} {...rest}>\n            {children}\n        </div>\n    );\n}\nPanel.propTypes = {\n    children: PropTypes.node.isRequired,\n    style: PropTypes.object,\n    blarg: PropTypes.bool\n};\n\nexport function PanelContainer({children, className, ...rest}) {\n    return (\n        <div {...rest} className={classNames(styles.panels, className)}>\n            {children}\n        </div>\n    );\n}\nPanelContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string\n};\n\nconst {format: dateFormat} = new Intl.DateTimeFormat(\n    \"en-US\",\n    {\n        day: \"2-digit\",\n        month: \"short\",\n        year: \"numeric\"\n    }\n);\nconst {format: timeFormat} = new Intl.DateTimeFormat(\n    \"en-US\",\n    {\n        day: \"2-digit\",\n        month: \"short\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    }\n);\n\nfunction withDateFormatFunc(formatFunc) {\n    const _DateFormat = ({date, ...rest}) => (\n        <time dateTime={date.toISOString()} {...rest}>\n            {formatFunc(date)}\n        </time>\n    );\n    _DateFormat.propTypes = {\n        date: PropTypes.instanceOf(Date).isRequired\n    };\n    return _DateFormat;\n}\n\nconst DateFormat = withDateFormatFunc(dateFormat);\nexport {DateFormat};\nconst DateTimeFormat = withDateFormatFunc(timeFormat);\nexport {DateTimeFormat};\n\nexport function Notification({\n    children,\n    success,\n    warning,\n    error,\n    className,\n    tooltip,\n    ...rest\n}) {\n    const [icon, notifClassName] = (function () {\n        if (success) {\n            return [<Icons.Check />, \"notification__success\"];\n        } else if (warning) {\n            return [<Icons.Alert />, \"notification__warning\"];\n        } else if (error) {\n            return [<Icons.X />, \"notification__error\"];\n        } else {\n            return [<Icons.Info />, \"notification__generic\"];\n        }\n    }());\n    return (\n        <div\n            {...rest}\n            className={classNames(\"notification\", notifClassName, className)}\n        >\n            <div\n                aria-label={tooltip}\n                className=\"notification__icon\"\n                title={tooltip}\n            >\n                {icon}\n            </div>\n            <div className=\"notification__text\">\n                {children}\n            </div>\n        </div>\n    );\n}\nNotification.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    success: PropTypes.bool,\n    tooltip: PropTypes.string,\n    warning: PropTypes.bool\n};\n\n// This just creates empty space to balance the layout, e.g. if there's a button\n// on one side of a centered element that's offsetting it.\nconst PlaceholderButton = () => (\n    <button\n        className=\"button-ghost placeholder\"\n        aria-hidden\n        disabled\n    />\n);\nexport {PlaceholderButton};\n\nexport function SortButton({children, sortKey, data, dispatch}) {\n    function setKeyOrToggleDir() {\n        if (data.key === sortKey) {\n            dispatch({isDescending: !data.isDescending});\n        } else {\n            dispatch({key: sortKey});\n        }\n    }\n    const chevronStyle = data.key === sortKey ? {opacity: 1} : {opacity: 0};\n    return (\n        <button\n            className=\"button-micro dont-hide button-text-ghost title-20\"\n            style={{width: \"100%\"}}\n            onClick={setKeyOrToggleDir}\n        >\n            <Icons.ChevronUp style={{opacity: 0}} aria-hidden/>\n            {children}{\" \"}\n            {data.isDescending\n            ? (\n                <span style={chevronStyle}>\n                    <Icons.ChevronUp />\n                    <VisuallyHidden>Sort ascending.</VisuallyHidden>\n                </span>\n            ) : (\n                <span style={chevronStyle}>\n                    <Icons.ChevronDown />\n                    <VisuallyHidden>Sort descending.</VisuallyHidden>\n                </span>\n            )}\n        </button>\n    );\n}\nSortButton.propTypes = {\n    children: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    sortKey: PropTypes.string.isRequired\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer({dispatch}) {\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        dispatch({\n            firstName,\n            lastName,\n            rating: Number(rating),\n            type: \"ADD_PLAYER\"\n        });\n    };\n\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        name=\"firstName\"\n                        type=\"text\"\n                        value={newPlayerData.firstName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        name=\"lastName\"\n                        type=\"text\"\n                        value={newPlayerData.lastName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        name=\"rating\"\n                        type=\"number\"\n                        value={newPlayerData.rating}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\nNewPlayer.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n","import {\n    assoc,\n    dissoc,\n    lensProp,\n    mergeLeft,\n    over\n} from \"ramda\";\nimport {createPlayer, createTournament, types} from \"../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function genericDbReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_ITEM\":\n        console.warn(\"Use a more specific action instead, please.\");\n        return assoc(nextId, action.item, state);\n    case \"ADD_TOURNEY\":\n        t.interface({name: t.String})(action);\n        return assoc(\n            nextId,\n            createTournament({id: nextId, name: action.name}),\n            state\n        );\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"DEL_ITEM\":\n        // If using the player DB, be sure to delete avoid-pairs too.\n        t.interface({id: t.String})(action);\n        return dissoc(action.id, state);\n    case \"SET_PLAYER\":\n        // This is copied from players-reducer since the profile editor uses it\n        // TODO: unify those\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","import {append, assoc, filter, lensProp, over} from \"ramda\";\nimport t from \"tcomb\";\nimport {types} from \"../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function optionsReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !(\n                pair.includes(action.pair[0]) && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"DEL_AVOID_SINGLE\":\n        t.interface({id: types.Id})(action);\n        // call this when you delete a player ID\n        // TODO: make the avoidPairs list smartly auto-clean itself\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !pair.includes(action.id)),\n            state\n        );\n    case \"SET_OPTION\":\n        t.interface({\n            option: t.String,\n            value: t.union([\n                t.Number,\n                t.list(types.AvoidPair),\n                Date\n            ])\n        })(action);\n        return assoc(\n            action.option,\n            action.value,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n","export default Object.freeze({\n    \"byeValue\" : 1,\n    \"avoidPairs\": [],\n    \"lastBackup\": new Date(0)\n});\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\n// import t from \"tcomb\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default {\n    options: fromJSON(options, types.db.Options),\n    players: fromJSON(players, types.db.Players),\n    tournaments: fromJSON(tournaments, types.db.Tourneys)\n};\n","import {ascend, descend, pipe, prop, sort} from \"ramda\";\nimport {useEffect, useReducer} from \"react\";\n// import t from \"tcomb\";\n\nconst toLowerCaseIfPossible = (x) => x.toLowerCase ? x.toLowerCase() : x;\n\nfunction sortedTableReducer(oldState, newState) {\n    const {isDescending, key, table} = {...oldState, ...newState};\n    const direction = isDescending ? descend : ascend;\n    const caseInsensitiveProp = pipe(prop(key), toLowerCaseIfPossible);\n    const sortFunc = sort(direction(caseInsensitiveProp));\n    return {isDescending, key, table: sortFunc(table)};\n}\n\nexport function useSortedTable(table, key, isDescending = true) {\n    const initialState = {isDescending, key, table};\n    const [state, dispatch] = useReducer(sortedTableReducer, initialState);\n    useEffect(\n        function callDispatchOnceToTriggerInitialSort() {\n            dispatch({});\n        },\n        []\n    );\n    return [state, dispatch];\n}\n\nexport function useLoadingCursor(isLoaded) {\n    useEffect(\n        function () {\n            if (isLoaded) {\n                document.body.style.cursor = \"auto\";\n            } else {\n                document.body.style.cursor = \"wait\";\n            }\n            // Just in case the component unmounts before the data loads.\n            return function () {\n                document.body.style.cursor = \"auto\";\n            };\n        },\n        [isLoaded]\n    );\n}\n","import \"localforage-getitems\";\nimport {difference, filter} from \"ramda\";\nimport {genericDbReducer, optionsReducer} from \"./reducers\";\nimport {useEffect, useReducer, useState} from \"react\";\nimport defaultOptions from \"./default-options\";\nimport demoData from \"../demo-data\";\nimport localForage from \"localforage\";\nimport {extendPrototype as removeItemsPrototype} from \"localforage-removeitems\";\nimport {extendPrototype as setItemsPrototype} from \"localforage-setitems\";\nimport {types} from \"../data-types\";\nimport {useLoadingCursor} from \"./hooks\";\n\n/*******************************************************************************\n * Initialize the databases\n ******************************************************************************/\nsetItemsPrototype(localForage);\nremoveItemsPrototype(localForage);\nconst DATABASE_NAME = \"Coronate\";\nconst optionsStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Options\"\n});\nconst playerStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Players\"\n});\nconst tourneyStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Tournaments\"\n});\n\nexport {optionsStore, playerStore, tourneyStore};\n\nexport async function loadDemoDB() {\n    document.body.style.cursor = \"wait\";\n    await optionsStore.setItems(demoData.options);\n    await playerStore.setItems(demoData.players);\n    await tourneyStore.setItems(demoData.tournaments);\n    // TODO: for some reason in Electron, this `window.alert()` will disable all\n    // focus after it runs. This affects other `window.alert()`s too.\n    window.alert(\"Demo data loaded!\");\n    document.body.style.cursor = \"auto\";\n}\n\n/*******************************************************************************\n * Generic database hooks\n ******************************************************************************/\nfunction useAllItemsFromDb(store, type) {\n    const [items, dispatch] = useReducer(genericDbReducer, {});\n    const [isLoaded, setIsLoaded] = useState(false);\n    useLoadingCursor(isLoaded);\n    useEffect(\n        function loadItemsFromDb() {\n            let didCancel = false;\n            (async function () {\n                const results = await store.getItems();\n                // console.log(\"loaded items from\", store.config().storeName);\n                // TODO: This will silently delete invalid entries from the DB.\n                // Because invalid entries are typically just older data that\n                // was created with a different tcomb interface, this should\n                // ideally update the data to a valid type instead of removing\n                // it completely.\n                const cleanResults =  filter(type.is, results);\n                if (!didCancel) {\n                    dispatch({state: cleanResults, type: \"LOAD_STATE\"});\n                    setIsLoaded(true);\n                }\n            }());\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        [store, type]\n    );\n    useEffect(\n        function saveChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            (async function () {\n                await store.setItems(items);\n                // console.log(\"saved items to\", store.config().storeName);\n                const keys = await store.keys();\n                const deleted = difference(keys, Object.keys(items));\n                if (deleted.length > 0 ) {\n                    await store.removeItems(deleted);\n                    // console.log(\"Deleted \" + deleted.length + \" items.\");\n                }\n            }());\n        },\n        [store, items, isLoaded]\n    );\n    return [items, dispatch];\n}\n\n/*******************************************************************************\n * Player & tournament wrapper hooks\n ******************************************************************************/\nexport function useAllPlayersDb() {\n    return useAllItemsFromDb(playerStore, types.Player);\n}\n\nexport function useAllTournamentsDb() {\n    return useAllItemsFromDb(tourneyStore, types.Tournament);\n}\n\n/*******************************************************************************\n * Options database hooks\n ******************************************************************************/\nexport function useOptionsDb() {\n    const [options, dispatch] = useReducer(optionsReducer, defaultOptions);\n    const [isLoaded, setIsLoaded] = useState(false);\n    useEffect(\n        function initOptionsFromDb() {\n            let didCancel = false;\n            // This uses `iterate` to easily set key-value pairs.\n            optionsStore.iterate(function (value, key) {\n                if (!didCancel) {\n                    dispatch({option: key, type: \"SET_OPTION\", value: value});\n                }\n            }).then(function () {\n                if (!didCancel) {\n                    setIsLoaded(true);\n                }\n            });\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        []\n    );\n    useEffect(\n        function writeChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            optionsStore.setItems(options);\n        },\n        [options, isLoaded]\n    );\n    return [options, dispatch];\n}\n","import NewPlayer from \"../../../components/new-player\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {useAllPlayersDb} from \"../../../hooks\";\n\nexport default function Selecting({tourney, tourneyDispatch}) {\n    const [players, allPlayersDispatch] = useAllPlayersDb();\n\n    function togglePlayer(event) {\n        const id = event.target.value;\n        if (event.target.checked) {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.concat([id]),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        } else {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.filter((pId) => pId !== id),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: Object.keys(players),\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select all\n                </button>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: [],\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select none\n                </button>\n            </div>\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.values(players).map(({id, firstName, lastName}) =>\n                        <tr key={id}>\n                            <td>{firstName}</td>\n                            <td>{lastName}</td>\n                            <td>\n                                <VisuallyHidden>\n                                    <label htmlFor={\"select-\" + id}>\n                                        Select {firstName} {lastName}\n                                    </label>\n                                </VisuallyHidden>\n                                <input\n                                    checked={tourney.playerIds.includes(id)}\n                                    type=\"checkbox\"\n                                    value={id}\n                                    id={\"select-\" + id}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <NewPlayer dispatch={allPlayersDispatch}/>\n        </div>\n    );\n}\nSelecting.propTypes = {\n    tourney: PropTypes.object.isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n","import {DUMMY_ID, rounds2Matches, types} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport Selecting from \"./selecting\";\nimport classNames from \"classnames\";\nimport t from \"tcomb\";\n// import {useTournament} from \"../../../hooks\";\n\nfunction hasHadBye(matchList, playerId) {\n    return t.list(types.Match)(matchList).filter(\n        (match) => match.playerIds.includes(playerId)\n    ).reduce(\n        (acc, match) => acc.concat(match.playerIds),\n        []\n    ).includes(DUMMY_ID);\n}\n\nfunction PlayerList({players, dispatch, byeQueue}) {\n    return (\n        <>\n        {Object.values(players).map((p) => (\n            <tr key={p.id} className={p.type + \" player\"}>\n                <td>{p.firstName}</td>\n                <td>{p.lastName}</td>\n                <td>\n                    <button\n                        className=\"button-micro\"\n                        disabled={byeQueue.includes(p.id)}\n                        onClick={() =>\n                            dispatch({\n                                byeQueue:\n                                    byeQueue.concat([p.id]),\n                                type: \"SET_BYE_QUEUE\"\n                            })\n                        }\n                    >\n                        Bye signup\n                    </button>\n                </td>\n            </tr>\n        )\n        )}\n        </>\n    );\n}\nPlayerList.propTypes = {\n    byeQueue: PropTypes.arrayOf(PropTypes.string).isRequired,\n    dispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired\n};\n\nexport default function PlayerSelect({tournament}) {\n    const {tourney, tourneyDispatch, activePlayers} = tournament;\n    const {playerIds, roundList, byeQueue} = tourney;\n    const dispatch = tourneyDispatch;\n    const [isSelecting, setIsSelecting] = useState(playerIds.length === 0);\n    const matches = rounds2Matches(roundList);\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button onClick={() => setIsSelecting(true)}>\n                    <Icons.Edit /> Edit player roster\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel style={{flexShrink: \"0\"}}>\n                    <table>\n                        <caption>Current roster</caption>\n                        <thead>\n                            <tr>\n                                <th colSpan={2}>Name</th>\n                                <th>Options</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"content\">\n                            <PlayerList\n                                byeQueue={byeQueue}\n                                dispatch={dispatch}\n                                players={activePlayers}\n                            />\n                        </tbody>\n                    </table>\n                </Panel>\n                <Panel>\n                    <h3>Bye queue</h3>\n                    {byeQueue.length === 0 &&\n                        <p>No players have signed up for a bye round.</p>\n                    }\n                    <ol>\n                        {byeQueue.map((pId) => (\n                            <li\n                                key={pId}\n                                className={classNames(\n                                    \"buttons-on-hover\",\n                                    {\"disabled\": hasHadBye(matches, pId)}\n                                )}\n                            >\n                                {activePlayers[pId].firstName}{\" \"}\n                                {activePlayers[pId].lastName}{\" \"}\n                                <button\n                                    className=\"button-micro\"\n                                    onClick={() =>\n                                        dispatch({\n                                            byeQueue: byeQueue.filter(\n                                                (id) => pId !== id\n                                            ),\n                                            type: \"SET_BYE_QUEUE\"\n                                        })\n                                    }\n                                >\n                                    Remove\n                                </button>\n                            </li>\n                        ))}\n                    </ol>\n                </Panel>\n                <Dialog\n                    isOpen={isSelecting}\n                    onDismiss={() => setIsSelecting(false)}\n                >\n                    <button\n                        className=\"button-micro button-primary\"\n                        onClick={() => setIsSelecting(false)}\n                    >\n                        Done\n                    </button>\n                    <Selecting\n                        tourney={tourney}\n                        tourneyDispatch={tourneyDispatch}\n                    />\n                </Dialog>\n            </PanelContainer>\n        </div>\n    );\n}\nPlayerSelect.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import {\n    avoidPairReducer,\n    createBlankScoreData\n} from \"../../../pairing-scoring\";\n// this component should eventually replace player-match-info.jsx\nimport {DUMMY_ID} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {sum} from \"ramda\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function PlayerInfo({playerId, players, getPlayer, scoreData}) {\n    const [options] = useOptionsDb();\n    const avoidDict = options.avoidPairs.reduce(avoidPairReducer, {});\n    const playerData = scoreData[playerId] || createBlankScoreData(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = playerData;\n    const colorBalance = sum(colorScores);\n    const player = getPlayer(playerId);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const avoidList = avoidDict[playerId] || [];\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <p>Score: {sum(results)}</p>\n            <p data-testid={\"rating-\" + player.id}>\n                Rating: {player.rating}\n            </p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {Object.entries(opponentResults).map(([opId, result]) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}{\" \"}\n                        -{\" \"}\n                        {result === 0 && \"Lost\"}\n                        {result === 1 && \"Won\"}\n                        {result === 0.5 && \"Draw\"}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    players[pId] && // don't show players not in this tourney\n                        <li key={pId}>\n                            {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                        </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\nPlayerInfo.propTypes = {\n    getPlayer: PropTypes.func.isRequired,\n    playerId: PropTypes.string.isRequired,\n    players: PropTypes.object.isRequired,\n    scoreData: PropTypes.object.isRequired\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport React, {useEffect} from \"react\";\nimport {assoc, lensIndex, set} from \"ramda\";\nimport {\n    calcPairIdeal,\n    maxPriority\n} from \"../../../pairing-scoring\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport {SortButton} from \"../../../components/utility\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport numeral from \"numeral\";\nimport {useSortedTable} from \"../../../hooks\";\n\nexport default function SelectList({\n    pairData,\n    stagedPlayers,\n    setStagedPlayers,\n    unmatched\n}) {\n    const initialTable = Object.values(unmatched);\n    const [sorted, sortedDispatch] = useSortedTable(initialTable, \"firstName\");\n    const isOnePlayerSelected = (\n        new Set(stagedPlayers).size === 2\n        && stagedPlayers.includes(null)\n    );\n    useEffect(\n        function hydrateIdealToTable() {\n            function calcIdealOrNot(player) {\n                const selectedIds = stagedPlayers.filter((p) => p !== null);\n                if (selectedIds.length !== 1) {\n                    return 0;\n                }\n                const selectedPlayer = pairData[selectedIds[0]];\n                if (!player || !selectedPlayer) {\n                    return 0; // if it's a bye player\n                }\n                return calcPairIdeal(selectedPlayer, player) / maxPriority;\n            }\n            const table = Object.values(unmatched).map(\n                (data) => assoc(\n                    \"ideal\",\n                    calcIdealOrNot(pairData[data.id]),\n                    data\n                ),\n                []\n            );\n            sortedDispatch({table});\n        },\n        [unmatched, pairData, sortedDispatch, stagedPlayers]\n    );\n    // only use unmatched players if this is the last round.\n    function selectPlayer(id) {\n        const setWhite = set(lensIndex(WHITE), id);\n        const setBlack = set(lensIndex(BLACK), id);\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers((prevState) => setWhite(prevState));\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers((prevState) => setBlack(prevState));\n        }\n        // else... nothing happens\n    }\n    if (Object.keys(unmatched).length === 0) {\n        return null;\n    }\n    return (\n        <table className=\"content\">\n            <thead>\n                <tr>\n                    <th>\n                        <VisuallyHidden>Controls</VisuallyHidden>\n                    </th>\n                    <th>\n                        <SortButton\n                            sortKey=\"firstName\"\n                            data={sorted}\n                            dispatch={sortedDispatch}\n                        >\n                            Name\n                        </SortButton>\n                    </th>\n                    <th>\n                        <SortButton\n                            sortKey=\"ideal\"\n                            data={sorted}\n                            dispatch={sortedDispatch}\n                        >\n                            Ideal\n                        </SortButton>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {sorted.table.map(({id, firstName, lastName, ideal}) =>\n                    <tr key={id}>\n                        <td>\n                            <button\n                                className=\"button-ghost\"\n                                disabled={\n                                    !stagedPlayers.includes(null)\n                                    || stagedPlayers.includes(id)\n                                }\n                                onClick={() => selectPlayer(id)}\n                            >\n                                <Icons.UserPlus/>\n                                <Hidden>\n                                    Add {firstName} {lastName}\n                                </Hidden>\n                            </button>\n                        </td>\n                        <td>\n                            {firstName} {lastName}\n                        </td>\n                        <td>\n                            {isOnePlayerSelected\n                            ? numeral(ideal).format(\"%\")\n                            : \"-\"}\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nSelectList.propTypes = {\n    pairData: PropTypes.object,\n    setStagedPlayers: PropTypes.func,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string),\n    unmatched: PropTypes.object\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport React, {Fragment} from \"react\";\nimport {\n    calcPairIdeal,\n    maxPriority\n} from \"../../../pairing-scoring\";\nimport {lensIndex, set} from \"ramda\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function Stage({\n    getPlayer,\n    pairData,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers,\n    tourneyDispatch\n}) {\n    const [options] = useOptionsDb();\n    const [white, black] = stagedPlayers;\n    const whiteName = (\n        white\n        ? getPlayer(white).firstName + \" \" + getPlayer(white).lastName\n        : \"\"\n    );\n    const blackName = (\n        black\n        ? getPlayer(black).firstName + \" \" + getPlayer(black).lastName\n        : \"\"\n    );\n\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n\n    function match() {\n        tourneyDispatch({\n            byeValue: options.byeValue,\n            pair: [getPlayer(white), getPlayer(black)],\n            roundId,\n            type: \"MANUAL_PAIR\"\n        });\n        setStagedPlayers([null, null]);\n    }\n\n    const matchIdeal = (function () {\n        if (stagedPlayers.includes(null)) {\n            return null;\n        }\n        const player0stats = pairData[stagedPlayers[0]];\n        const player1stats = pairData[stagedPlayers[1]];\n        if (!player0stats || !player1stats) {\n            return null;\n        }\n        const ideal = calcPairIdeal(player0stats, player1stats);\n        return numeral(ideal / maxPriority).format(\"%\");\n    }());\n\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <div className=\"content\">\n                <p>\n                    White:{\" \"}\n                    {white !== null &&\n                        <Fragment>\n                            {whiteName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + whiteName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(WHITE)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n                <p>\n                    Black:{\" \"}\n                    {black !== null &&\n                        <Fragment>\n                            {blackName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + blackName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(BLACK)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n                <p>Match ideal: {matchIdeal}</p>\n            </div>\n            <div className=\"toolbar\">\n                <button\n                    disabled={\n                        stagedPlayers.every((id) => id === null)\n                    }\n                    onClick={() => setStagedPlayers(\n                        (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                    )}\n                >\n                    <Icons.Repeat/> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-primary\"\n                    disabled={stagedPlayers.includes(null)}\n                    onClick={match}\n                >\n                    <Icons.Check/> Match selected\n                </button>\n            </div>\n        </div>\n    );\n}\nStage.propTypes = {\n    getPlayer: PropTypes.func.isRequired,\n    pairData: PropTypes.object.isRequired,\n    roundId: PropTypes.number.isRequired,\n    setStagedPlayers: PropTypes.func.isRequired,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string).isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n","import {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {\n    createPairingData,\n    // matches2ScoreData,\n    setUpperHalves\n} from \"../../../pairing-scoring\";\nimport {curry, pipe} from \"ramda\";\nimport {Dialog} from \"@reach/dialog\";\nimport PlayerInfo from \"./player-info\";\nimport PropTypes from \"prop-types\";\nimport SelectList  from \"./select-list\";\nimport Selecting from \"../player-select/selecting\";\nimport Stage from \"./stage\";\n// import {rounds2Matches} from \"../../../data-types\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function PairPicker({\n    roundId,\n    tournament,\n    scoreData,\n    unmatched,\n    unmatchedCount,\n    unmatchedWithDummy\n}) {\n    const [stagedPlayers, setStagedPlayers] = useState([null, null]);\n    const [options] = useOptionsDb();\n    const {\n        tourney,\n        activePlayers,\n        players,\n        getPlayer,\n        tourneyDispatch\n    } = tournament;\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    // `createPairingData` is relatively expensive\n    const pairData = useMemo(\n        function memoizedGetStats() {\n            return pipe(\n                curry(createPairingData)(activePlayers, options.avoidPairs),\n                // sortDataForPairing,\n                setUpperHalves\n            )(scoreData);\n        },\n        [activePlayers, options.avoidPairs, scoreData]\n    );\n    useEffect(\n        function cleanPlayersThatWereRemoved() {\n            const [p1, p2] = stagedPlayers;\n            if (!unmatchedWithDummy[p1] && p1 !== null) {\n                setStagedPlayers((pair) => [null, pair[1]]);\n            }\n            if (!unmatchedWithDummy[p2] && p2 !== null) {\n                setStagedPlayers((pair) => [pair[0], null]);\n            }\n        },\n        [unmatchedWithDummy, stagedPlayers]\n    );\n    return (\n        <div className=\"content-area\" style={{width: \"720px\"}}>\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-primary\"\n                    disabled={unmatchedCount === 0}\n                    onClick={() => tourneyDispatch({\n                        byeValue: options.byeValue,\n                        pairData: pairData,\n                        players: unmatched,\n                        roundId,\n                        type: \"AUTO_PAIR\"\n                    })}\n                >\n                    Auto-pair unmatched players\n                </button>{\" \"}\n                <button onClick={() => setIsModalOpen(true)}>\n                    Add or remove players from the roster.\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel>\n                    <SelectList\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                        unmatched={unmatchedWithDummy}\n                        pairData={pairData}\n                    />\n                </Panel>\n                <Panel style={{flexGrow: \"1\"}}>\n                    <Stage\n                        roundId={roundId}\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                        pairData={pairData}\n                        tourneyDispatch={tourneyDispatch}\n                        getPlayer={getPlayer}\n                    />\n                    <PanelContainer>\n                        {stagedPlayers.map((id) =>\n                            id !== null && (\n                                <Panel key={id}>\n                                    <PlayerInfo\n                                        playerId={id}\n                                        scoreData={scoreData}\n                                        players={players}\n                                        getPlayer={getPlayer}\n                                    />\n                                </Panel>\n                            )\n                        )}\n                    </PanelContainer>\n                </Panel>\n            </PanelContainer>\n            <Dialog\n                isOpen={isModalOpen}\n                onDismiss={() => setIsModalOpen(false)}\n            >\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsModalOpen(false)}\n                >\n                    Done\n                </button>\n                <Selecting\n                    tourney={tourney}\n                    tourneyDispatch={tourneyDispatch}\n                />\n            </Dialog>\n        </div>\n    );\n}\nPairPicker.propTypes = {\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    tournament: PropTypes.object.isRequired,\n    unmatched: PropTypes.object.isRequired,\n    unmatchedCount: PropTypes.number.isRequired,\n    unmatchedWithDummy: PropTypes.object.isRequired\n};\n","import React from \"react\";\n\nconst NotFound = () => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","import {\n    DUMMY_ID\n    // rounds2Matches\n} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport {sum} from \"ramda\";\n\nexport default function PlayerMatchInfo({color, scoreData, match, getPlayer}) {\n    const playerId = match.playerIds[color];\n    const player = getPlayer(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = scoreData[playerId];\n    const colorBalance = sum(colorScores);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{sum(results)}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerId}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{hasBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {Object.entries(\n                        opponentResults\n                    ).map(([opId, result], i, src) => (\n                        // don't show the most recent (current) opponent\n                        i < src.length - 1 && (\n                            <li key={opId}>\n                                {getPlayer(opId).firstName}{\" \"}\n                                {getPlayer(opId).lastName}{\" \"}\n                                -{\" \"}\n                                {result === 0 && \"Lost\"}\n                                {result === 1 && \"Won\"}\n                                {result === 0.5 && \"Draw\"}\n                            </li>\n                        )\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\nPlayerMatchInfo.propTypes = {\n    color: PropTypes.number.isRequired,\n    getPlayer: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired,\n    scoreData: PropTypes.object.isRequired\n};\n","import \"@reach/dialog/styles.css\";\nimport {BLACK, DUMMY_ID, WHITE} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PlayerMatchInfo from \"./player-match-info\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {ratings} from \"../../../pairing-scoring\";\nimport styles from \"./round.module.css\";\nimport {sum} from \"ramda\";\n\nexport default function MatchRow({\n    compact,\n    pos,\n    match,\n    roundId,\n    selectedMatch,\n    setSelectedMatch,\n    scoreData,\n    tournament\n}) {\n    const {\n        tourney,\n        tourneyDispatch,\n        players,\n        getPlayer,\n        playersDispatch\n    } = tournament;\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whitePlayer = getPlayer(match.playerIds[WHITE]);\n    const blackPlayer = getPlayer(match.playerIds[BLACK]);\n    const whiteName = whitePlayer.firstName + \" \" + whitePlayer.lastName;\n    const blackName = blackPlayer.firstName + \" \" + blackPlayer.lastName;\n\n    function ResultDisplay(color) {\n        if (resultCode === \"NOTSET\") {\n            return <VisuallyHidden>Not set</VisuallyHidden>;\n        } else if (resultCode === \"DRAW\") {\n            // return <Icons.Minus aria-label=\"Draw\" />;\n            // TODO: find a better icon for draws.\n            return (\n                <span\n                    aria-label=\"Draw\"\n                    role=\"img\"\n                    style={{filter: \"grayscale(100%)\"}}\n                >\n                    🤝\n                </span>\n            );\n        } else if (resultCode === color) {\n            return <Icons.Award  aria-label=\"Won\" />;\n        } else {\n            return <VisuallyHidden>Lost</VisuallyHidden>;\n        }\n    }\n\n    function setMatchResult(event) {\n        const result = (function () {\n            switch (event.target.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        if (result === resultCode) {\n            // if it hasn't changed, then do nothing\n            return;\n        }\n        const white = players[match.playerIds[WHITE]];\n        const black = players[match.playerIds[BLACK]];\n        const newRating = (\n            event.currentTarget.value === \"NOTSET\"\n            ? match.origRating\n            : ratings.calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playersDispatch({\n            id: white.id,\n            rating: newRating[WHITE],\n            type: \"SET_PLAYER_RATING\"\n        });\n        playersDispatch({\n            id: black.id,\n            rating: newRating[BLACK],\n            type: \"SET_PLAYER_RATING\"\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (sum(match.result) === 0) {\n            playersDispatch({\n                id: white.id,\n                matchCount: white.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n            playersDispatch({\n                id: black.id,\n                matchCount: black.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n        }\n        tourneyDispatch({\n            matchId: match.id,\n            newRating,\n            result,\n            roundId,\n            type: \"SET_MATCH_RESULT\"\n        });\n    }\n\n    return (\n        <tr\n            className={\n                match.id === selectedMatch\n                ? \"selected\"\n                : \"buttons-on-hover\"\n            }\n        >\n            <th className={\"table__number \" + styles.rowId} scope=\"row\">\n                {pos + 1}\n            </th>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"WHITE\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + whitePlayer.type}\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}\n            </td>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"BLACK\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + blackPlayer.type}\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}\n            </td>\n            <td className={styles.matchResult + \" data__input row__controls\"}>\n                <select\n                    className={styles.winnerSelect}\n                    disabled={match.playerIds.includes(DUMMY_ID)}\n                    value={resultCode}\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                >\n                    <option value=\"NOTSET\">\n                        Select winner\n                    </option>\n                    <option value=\"WHITE\">\n                        White won\n                    </option>\n                    <option value=\"BLACK\">\n                        Black won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            {!compact &&\n                <td className={styles.controls + \" data__input\"}>\n                    {selectedMatch !== match.id\n                    ? (\n                        <button\n                            className=\"button-ghost\"\n                            title=\"Edit match\"\n                            onClick={() => setSelectedMatch(match.id)}\n                        >\n                            <Icons.Circle />\n                            <VisuallyHidden>\n                                Edit match for {whiteName} versus {blackName}\n                            </VisuallyHidden>\n                        </button>\n                    ) : (\n                        <button\n                            className=\"button-ghost button-pressed\"\n                            title=\"End editing match\"\n                            onClick={() => setSelectedMatch(null)}\n                        >\n                            <Icons.CheckCircle />\n                        </button>\n                    )}\n                    <button\n                        className=\"button-ghost\"\n                        title=\"Open match information.\"\n                        onClick={() => setOpenModal(true)}\n                    >\n                        <Icons.Info />\n                        <Hidden>\n                            View information for match:{\" \"}\n                            {whiteName} versus {blackName}\n                        </Hidden>\n                    </button>\n                    <Dialog\n                        isOpen={openModal}\n                        onDismiss={() => setOpenModal(false)}\n                    >\n                        <button\n                            className=\"button-micro button-primary\"\n                            onClick={() => setOpenModal(false)}\n                        >\n                            close\n                        </button>\n                        <p>{tourney.name}</p>\n                        <p>Round {roundId + 1}, match {pos + 1}</p>\n                        <PanelContainer>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={WHITE}\n                                    match={match}\n                                    getPlayer={getPlayer}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={BLACK}\n                                    match={match}\n                                    getPlayer={getPlayer}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                        </PanelContainer>\n                    </Dialog>\n                </td>\n            }\n        </tr>\n    );\n}\nMatchRow.propTypes = {\n    compact: PropTypes.bool,\n    match: PropTypes.object.isRequired,\n    pos: PropTypes.number.isRequired,\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func,\n    tournament: PropTypes.object.isRequired\n};\n","import MatchRow from \"./match-row\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n// import {matches2ScoreData} from \"../../../pairing-scoring\";\n// import {rounds2Matches} from \"../../../data-types\";\nimport style from \"./round.module.css\";\n\nexport default function RoundTable({\n    compact,\n    roundId,\n    selectedMatch,\n    setSelectedMatch,\n    tournament,\n    scoreData\n}) {\n    const {tourney} = tournament;\n    const matchList = tourney.roundList[roundId];\n    // matches2ScoreData is relatively expensive\n    // const scoreData = useMemo(\n    //     () => matches2ScoreData(rounds2Matches(tourney.roundList)),\n    //     [tourney.roundList]\n    // );\n    return (\n        <table className={style.table}>\n            {matchList.length > 0 &&\n                <>\n                <caption\n                    className={compact ? \"title-30\" : \"title-40\"}\n                >\n                    Round {roundId + 1} matches\n                </caption>\n                <thead>\n                    <tr>\n                        <th className={style.rowId} scope=\"col\">\n                            #\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>White result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            White\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>Black result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            Black\n                        </th>\n                        <th className=\"row__result\" scope=\"col\">\n                            Match result\n                        </th>\n                        {!compact &&\n                            <th className=\"row__controls\" scope=\"col\">\n                                <VisuallyHidden>Controls</VisuallyHidden>\n                            </th>\n                        }\n                    </tr>\n                </thead>\n                </>\n            }\n            <tbody className={style.tbody + \" content\"}>\n                {matchList.map((match, pos) => (\n                    <MatchRow\n                        key={match.id}\n                        compact={compact}\n                        match={match}\n                        pos={pos}\n                        roundId={roundId}\n                        selectedMatch={selectedMatch}\n                        setSelectedMatch={setSelectedMatch}\n                        scoreData={scoreData}\n                        tournament={tournament}\n                    />\n                ))}\n            </tbody>\n        </table>\n    );\n}\nRoundTable.propTypes = {\n    compact: PropTypes.bool,\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func,\n    tournament: PropTypes.object.isRequired\n};\n","import React, {useState} from \"react\";\nimport Icons from \"../../../components/icons\";\nimport NotFound from \"../../../components/404\";\nimport PropTypes from \"prop-types\";\nimport RoundTable from \"./round-table\";\nimport {sum} from \"ramda\";\n\nconst findById = (id, list) => list.filter((x) => x.id === id)[0];\n\nexport default function Round({roundId, tournament, scoreData}) {\n    const {\n        tourney,\n        players,\n        tourneyDispatch,\n        playersDispatch\n    } = tournament;\n    const matchList = tourney.roundList[roundId];\n    const [selectedMatch, setSelectedMatch] = useState(null);\n    if (!matchList) {\n        return <NotFound />;\n    }\n    function unMatch(matchId) {\n        const match = findById(matchId, matchList);\n        if (sum(match.result) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.playerIds.forEach(function (pId, color) {\n                // If there was a dummy player or a deleted player then bail\n                // on the dispatch.\n                if (!players[pId]) {\n                    return;\n                }\n                // Decrement the matchcount for each player\n                playersDispatch({\n                    id: pId,\n                    matchCount: players[pId].matchCount - 1,\n                    type: \"SET_PLAYER_MATCHCOUNT\"\n                });\n                // Set each player's rating to the original rating of the match\n                playersDispatch({\n                    id: pId,\n                    rating: match.origRating[color],\n                    type: \"SET_PLAYER_RATING\"\n                });\n            });\n        }\n        tourneyDispatch({matchId, roundId, type: \"DEL_MATCH\"});\n        setSelectedMatch(null);\n    }\n\n    function swapColors(matchId) {\n        tourneyDispatch({matchId, roundId, type: \"SWAP_COLORS\"});\n    }\n\n    function moveMatch(matchId, direction) {\n        const oldIndex = matchList.indexOf(findById(matchId, matchList));\n        const newIndex = (oldIndex + direction >= 0) ? oldIndex + direction : 0;\n        tourneyDispatch({newIndex, oldIndex, roundId, type: \"MOVE_MATCH\"});\n    }\n\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => unMatch(selectedMatch)}\n                >\n                    <Icons.Trash /> Unmatch\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => swapColors(selectedMatch)}\n                >\n                    <Icons.Repeat /> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, -1)}\n                >\n                    <Icons.ArrowUp /> Move up\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, 1)}\n                >\n                    <Icons.ArrowDown /> Move down\n                </button>\n            </div>\n            {matchList.length === 0 &&\n                <p>No players matched yet.</p>\n            }\n            <RoundTable\n                roundId={roundId}\n                selectedMatch={selectedMatch}\n                setSelectedMatch={setSelectedMatch}\n                tournament={tournament}\n                scoreData={scoreData}\n            />\n        </div>\n    );\n}\nRound.propTypes = {\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    tournament: PropTypes.object.isRequired\n};\n","import {DUMMY_ID, getUnmatched} from \"../../../data-types\";\nimport React, {useMemo} from \"react\";\nimport PropTypes from \"prop-types\";\nimport RoundPanels from \"./round-panels\";\nimport {assoc} from \"ramda\";\nimport {matches2ScoreData} from \"../../../pairing-scoring\";\nimport {rounds2Matches} from \"../../../data-types\";\n\n// This is a higher-order component that generates round data and passes it to\n// children. I extracted this logic to its own component so it could be easily\n// reused (e.g. in testing). It may have also made the whole component tree more\n// complicated, though.\nexport function withRoundData(WrappedComponent) {\n    function NewComponent(props) {\n        const roundId = Number(props.roundId); // Reach Router passes a string.\n        const {tourney, activePlayers, getPlayer} = props.tournament;\n        const {roundList} = tourney;\n        // matches2ScoreData is relatively expensive\n        const scoreData = useMemo(\n            () => matches2ScoreData(rounds2Matches(roundList)),\n            [roundList]\n        );\n        // Only calculate unmatched players for the latest round. Old rounds\n        // don't get to add new players.\n        // Should this be memoized?\n        // only use unmatched players if this is the last round.\n        const unmatched = (\n            roundId === roundList.length - 1\n            ? getUnmatched(roundList, activePlayers, roundId)\n            : {}\n        );\n        const unmatchedCount = Object.keys(unmatched).length;\n        // make a new list so as not to affect auto-pairing\n        const unmatchedWithDummy = (\n            unmatchedCount % 2 !== 0\n            ? assoc(DUMMY_ID, getPlayer(DUMMY_ID), unmatched)\n            : unmatched\n        );\n        const activePlayersCount = Object.keys(activePlayers).length;\n        const data = {\n            activePlayersCount,\n            roundId, // this is intentionally reused from props to override it\n            scoreData,\n            unmatched,\n            unmatchedCount,\n            unmatchedWithDummy\n        };\n        return <WrappedComponent {...props} {...data} />;\n    };\n    NewComponent.propTypes = {\n        roundId: PropTypes.string,\n        tournament: PropTypes.object.isRequired\n    };\n    return NewComponent;\n}\n\nconst RoundWithData = withRoundData(RoundPanels);\nexport default RoundWithData;\n","import React, {useEffect, useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport Icons from \"../../../components/icons\";\nimport PairPicker from \"../pair-picker\";\nimport PropTypes from \"prop-types\";\nimport Round from \"./round\";\n\nexport default function RoundPanels({\n    activePlayersCount,\n    unmatched,\n    unmatchedCount,\n    unmatchedWithDummy,\n    roundId,\n    tournament,\n    scoreData\n}) {\n    const initialTab = unmatchedCount === activePlayersCount ? 1 : 0;\n    const [openTab, setOpenTab] = useState(initialTab);\n    useEffect(\n        function autoSwitchTab() {\n            if (unmatchedCount === activePlayersCount) {\n                setOpenTab(1);\n            }\n            if (unmatchedCount === 0) {\n                setOpenTab(0);\n            }\n        },\n        [unmatchedCount, activePlayersCount]\n    );\n    return (\n        <Tabs index={openTab} onChange={setOpenTab}>\n            <TabList>\n                <Tab disabled={unmatchedCount === activePlayersCount}>\n                    <Icons.List/> Matches\n                </Tab>\n                <Tab disabled={unmatchedCount === 0}>\n                    <Icons.Users/> Unmatched players ({unmatchedCount})\n                </Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <Round\n                        roundId={roundId}\n                        tournament={tournament}\n                        scoreData={scoreData}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    {unmatchedCount !== 0 &&\n                        <PairPicker\n                            roundId={roundId}\n                            tournament={tournament}\n                            unmatched={unmatched}\n                            unmatchedWithDummy={unmatchedWithDummy}\n                            unmatchedCount={unmatchedCount}\n                            scoreData={scoreData}\n                        />\n                    }\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nRoundPanels.propTypes = {\n    activePlayersCount: PropTypes.number.isRequired,\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object.isRequired,\n    tournament: PropTypes.object.isRequired,\n    unmatched: PropTypes.object.isRequired,\n    unmatchedCount: PropTypes.number.isRequired,\n    unmatchedWithDummy: PropTypes.object.isRequired\n};\n","import {Panel, PanelContainer} from \"../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport {\n    createStandingList,\n    createStandingTree,\n    getTieBreakNames,\n    matches2ScoreData,\n    tieBreakMethods\n} from \"../../pairing-scoring\";\nimport {defaultTo, filter, pipe} from \"ramda\";\nimport {isDummyObj, rounds2Matches} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport classNames from \"classnames\";\nimport dashify from \"dashify\";\nimport numeral from \"numeral\";\nimport style from \"./index.module.css\";\n// import {useTournament} from \"../../hooks\";\n\nexport function ScoreTable({compact, title, tourney, getPlayer}) {\n    const {tieBreaks, roundList} = tourney;\n    const tieBreakNames = getTieBreakNames(tieBreaks);\n    const standingTree = pipe(\n        rounds2Matches,\n        matches2ScoreData,\n        (data) => createStandingList(tieBreaks, data),\n        filter((obj) => !isDummyObj(obj)),\n        createStandingTree\n    )(roundList);\n    return (\n        <table\n            className={classNames(style.table, {[`${style.compact}`]: compact})\n            }\n        >\n            <caption\n                className={(compact) ? \"title-30\" : \"title-40\"}\n            >\n                {title}\n            </caption>\n            <thead>\n                <tr className={style.topHeader}>\n                    <th className=\"title-10\" scope=\"col\">Rank</th>\n                    <th className=\"title-10\" scope=\"col\">Name</th>\n                    <th className=\"title-10\" scope=\"col\">Score</th>\n                    {!compact && tieBreakNames.map((name, i) => (\n                        <th key={i} className=\"title-10\" scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.map((standing, i, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {i === 0 && ( // Only display the rank once\n                                <th\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                    scope=\"row\"\n                                >\n                                    {rank + 1}\n                                </th>\n                            )}\n                            {compact // use <td> if it's compact.\n                            ? (\n                                <td className={style.playerName}>\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </td>\n                            ) : ( // Use the name as a header if not compact.\n                                <th\n                                    className={style.playerName}\n                                    data-testid={rank}\n                                    scope=\"row\"\n                                >\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </th>\n                            )}\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {!compact && standing.tieBreaks.map((score, j) => (\n                                <td\n                                    key={j}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tieBreakNames[j]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\nScoreTable.propTypes = {\n    compact: PropTypes.bool,\n    getPlayer: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    tourney: PropTypes.object.isRequired\n};\n\nfunction SelectTieBreaks({tourney, tourneyDispatch}) {\n    const {tieBreaks} = tourney;\n    const [selectedTb, setSelectedTb] = useState(null);\n\n    function toggleTb(id = null) {\n        const defaultId = defaultTo(selectedTb);\n        if (tieBreaks.includes(defaultId(id))) {\n            tourneyDispatch({id: defaultId(id), type: \"DEL_TIEBREAK\"});\n            setSelectedTb(null);\n        } else {\n            tourneyDispatch({id: defaultId(id), type: \"ADD_TIEBREAK\"});\n        }\n    }\n\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        tourneyDispatch({\n            newIndex: index + direction,\n            oldIndex: index,\n            type: \"MOVE_TIEBREAK\"\n        });\n    }\n\n    return (\n        <PanelContainer className=\"content-area\">\n            <Panel>\n                <div className=\"toolbar\">\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => toggleTb()}\n                    >\n                        Toggle\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(-1)}\n                    >\n                        <Icons.ArrowUp/> Move up\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(1)}\n                    >\n                        <Icons.ArrowDown/> Move down\n                    </button>\n                    <button\n                        className={classNames(\n                            \"button-micro\",\n                            {\"button-primary\": selectedTb !== null}\n                        )}\n                        disabled={selectedTb === null}\n                        onClick={() => setSelectedTb(null)}\n                    >\n                        Done\n                    </button>\n                </div>\n                <table>\n                    <caption className=\"title-30\">\n                        Selected tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {tieBreaks.map((id) => (\n                            <tr\n                                key={id}\n                                className={classNames(\n                                    {\"selected\": selectedTb === id}\n                                )}\n                            >\n                                <td>\n                                    {tieBreakMethods[id].name}\n                                </td>\n                                <td style={{width: \"48px\"}}>\n                                    <button\n                                        className=\"button-micro\"\n                                        disabled={\n                                            selectedTb !== null\n                                            && selectedTb !== id\n                                        }\n                                        onClick={() =>\n                                            selectedTb === id\n                                            ? setSelectedTb(null)\n                                            : setSelectedTb(id)\n                                        }\n                                    >\n                                        {selectedTb === id ? \"Done\" : \"Edit\"}\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <div className=\"toolbar\">&nbsp;</div>\n                <table style={{marginTop: \"16px\"}}>\n                    <caption className=\"title-30\">\n                        Available tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {Object.values(tieBreakMethods).map(({name, id}) => (\n                            <tr key={id}>\n                                <td>\n                                    <span\n                                        className={\n                                            tieBreaks.includes(id)\n                                            ? \"disabled\"\n                                            : \"enabled\"\n                                        }\n                                    >\n                                        {name}\n                                    </span>\n                                </td>\n                                <td>\n                                    {!tieBreaks.includes(id) && (\n                                        <button\n                                            className=\"button-micro\"\n                                            onClick={() => toggleTb(id)}\n                                        >\n                                            Add\n                                        </button>\n                                    )}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n        </PanelContainer>\n    );\n}\nSelectTieBreaks.propTypes = {\n    tourney: PropTypes.object.isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n\nexport default function Scores({tournament}) {\n    const {getPlayer, tourney, tourneyDispatch} = tournament;\n    return (\n        <Tabs>\n            <TabList>\n                <Tab><Icons.List /> Scores</Tab>\n                <Tab><Icons.Settings /> Edit tiebreak rules</Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <ScoreTable\n                        title=\"Score detail\"\n                        tourney={tourney}\n                        getPlayer={getPlayer}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <SelectTieBreaks\n                        tourney={tourney}\n                        tourneyDispatch={tourneyDispatch}\n                    />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nScores.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport PropTypes from \"prop-types\";\nimport {DateFormat} from \"../../components/utility\";\nimport Icons from \"../../components/icons\";\n\n// Why are dates so complicated?!?\n// Note to future self & other maintainers: getDate() begins at 1, and\n// getMonth() begins at 0. An HTML date input requires that the month begins at\n// 1 and the JS Date() object requires that the month begins at 0.\nfunction makeDateInput(date) {\n    const year = date.getFullYear();\n    const rawMonth = date.getMonth();\n    const rawDate = date.getDate();\n    // The date input requires a 2-digit month and day.\n    const month = (\n        rawMonth < 9\n        ? \"0\" + String(rawMonth + 1)\n        : rawMonth + 1\n    );\n    const day = (\n        rawDate < 10\n        ? \"0\" + rawDate\n        : rawDate\n    );\n    return year + \"-\" + month + \"-\" + day;\n}\n\nexport default function Setup({tournament}) {\n    const {tourney, tourneyDispatch} = tournament;\n    const [isEditingName, setIsEditingName] = useState(false);\n    const [isEditingDate, setIsEditingDate] = useState(false);\n    const nameInput = useRef(null);\n    const dateInput = useRef(null);\n\n    useEffect(\n        function handleFocus() {\n            if (isEditingName) {\n                nameInput.current.focus();\n            }\n            if (isEditingDate) {\n                dateInput.current.focus();\n            }\n        },\n        [isEditingName, isEditingDate]\n    );\n\n    function changeToOne() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 1\n        });\n        window.alert(\"Bye scores updated to 1.\");\n    }\n\n    function changeToOneHalf() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 0.5\n        });\n        window.alert(\"Bye scores updated to ½.\");\n    }\n\n    function updateDate(event) {\n        const [\n            rawYear,\n            rawMonth,\n            rawDay\n        ] = event.currentTarget.value.split(\"-\");\n        const year = Number(rawYear);\n        const month = Number(rawMonth) - 1;\n        const day = Number(rawDay);\n        tourneyDispatch({\n            date: new Date(year, month, day),\n            type: \"SET_DATE\"\n        });\n    }\n\n    return (\n        <div className=\"content-area\">\n            {isEditingName\n            ? (\n                <form\n                    className=\"display-20\"\n                    style={{textAlign: \"left\"}}\n                    onSubmit={() => setIsEditingName(false)}\n                >\n                    <input\n                        className=\"display-20\"\n                        style={{textAlign: \"left\"}}\n                        ref={nameInput}\n                        type=\"text\"\n                        value={tourney.name}\n                        onChange={(event) => tourneyDispatch({\n                            name: event.currentTarget.value,\n                            type: \"SET_NAME\"\n                        })}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </form>\n            ) : (\n                <h1 style={{textAlign: \"left\"}}>\n                    <span className=\"inputPlaceholder\">\n                        {tourney.name}\n                    </span>{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(true)}\n                    >\n                        <Icons.Edit />\n                        <VisuallyHidden>\n                            Edit name\n                        </VisuallyHidden>\n                    </button>\n                </h1>\n            )}\n            {isEditingDate\n            ? (\n                <form\n                    className=\"caption-30\"\n                    onSubmit={() => setIsEditingDate(false)}\n                >\n                    <input\n                        className=\"caption-30\"\n                        type=\"date\"\n                        ref={dateInput}\n                        value={makeDateInput(tourney.date)}\n                        onChange={updateDate}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </form>\n            )\n            : (\n                <p className=\"caption-30\">\n                    <DateFormat date={tourney.date} />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(true)}\n                    >\n                        <Icons.Edit />\n                        <VisuallyHidden>\n                            Edit date\n                        </VisuallyHidden>\n                    </button>\n                </p>\n            )}\n            <h2>Change bye scores</h2>\n            <button aria-describedby=\"score-desc\" onClick={changeToOne}>\n                Change byes to 1\n            </button>{\" \"}\n            <button aria-describedby=\"score-desc\" onClick={changeToOneHalf}>\n                Change byes to ½\n            </button>\n            <p className=\"caption-30\" id=\"score-desc\">\n                This will update all bye matches which have been previously\n                scored in this tournament. To change the default bye value in\n                future matches, go to the{\" \"}\n                <Link to=\"/options\">app options</Link>.\n            </p>\n        </div>\n    );\n}\nSetup.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import {curry, last} from \"ramda\";\nimport {DUMMY_ID} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {isRoundComplete} from \"../../data-types\";\n\nconst noDraggy = {onDragStart: (e) => e.preventDefault()};\n\nexport default function Sidebar({className, navigate, tournament}) {\n    const {\n        tourney,\n        isItOver,\n        isNewRoundReady,\n        getPlayer,\n        activePlayers,\n        playersDispatch,\n        tourneyDispatch\n    } = tournament;\n    const {roundList} = tourney;\n    const isComplete = curry(isRoundComplete)(roundList, activePlayers);\n\n    function newRound() {\n        const confirmText = (\n            \"All rounds have completed. Are you sure you want to begin a new \"\n            + \"one?\"\n        );\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        tourneyDispatch({type: \"ADD_ROUND\"});\n    }\n\n    async function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            await navigate(\".\");\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.playerIds.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playersDispatch({\n                        id: pId,\n                        matchCount: matchCount - 1,\n                        type: \"SET_PLAYER_MATCHCOUNT\"\n                    });\n                    playersDispatch({\n                        id: pId,\n                        rating: match.origRating[color],\n                        type: \"SET_PLAYER_RATING\"\n                    });\n                });\n            });\n            tourneyDispatch({type: \"DEL_LAST_ROUND\"});\n            if (tourney.roundList.length === 1) {\n                // Automatically remake round 1.\n                tourneyDispatch({type: \"ADD_ROUND\"});\n            }\n        }\n    }\n\n    return (\n        <div className={classNames(className)}>\n            <nav>\n                <ul style={{marginTop: \"0\"}}>\n                    <li>\n                        <Link to=\"..\" {...noDraggy}>\n                            <Icons.ChevronLeft/>\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Back\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <ul>\n                    <li>\n                        <Link to=\"setup\" {...noDraggy}>\n                            <Icons.Settings />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Setup\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\".\" {...noDraggy}>\n                            <Icons.Users />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Players\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"status\" {...noDraggy}>\n                            <Icons.Activity />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Status\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"crosstable\" {...noDraggy}>\n                            <Icons.Layers />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Crosstable\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"scores\" {...noDraggy}>\n                            <Icons.List />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Score detail\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <h5 className=\"sidebar__hide-on-close sidebar__header\">\n                    Rounds\n                </h5>\n                <ul className=\"center-on-close\">\n                    {Object.keys(roundList).map((id) =>\n                        <li key={id}>\n                            <Link to={`round/${id}`} {...noDraggy}>\n                                {Number(id) + 1}\n                                {isComplete(Number(id))\n                                ? (\n                                    <span\n                                        className={classNames(\n                                            \"sidebar__hide-on-close\",\n                                            \"caption-20\"\n                                        )}\n                                    >\n                                        &nbsp;Complete&nbsp;<Icons.Check />\n                                    </span>\n                                ) : (\n                                    <span\n                                        className={classNames(\n                                            \"sidebar__hide-on-close\",\n                                            \"caption-20\"\n                                        )}\n                                    >\n                                        &nbsp;Not complete&nbsp;<Icons.Alert />\n                                    </span>\n                                )}\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n            </nav>\n            <hr />\n            <ul>\n                <li>\n                    <button\n                        className={\"sidebar-button\"}\n                        disabled={!isNewRoundReady}\n                        onClick={newRound}\n                        style={{width: \"100%\"}}\n                    >\n                        <Icons.Plus/>\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;New round\n                        </span>\n                    </button>\n                </li>\n                <li style={{textAlign: \"center\"}}>\n                    <button\n                        disabled={roundList.length === 0}\n                        onClick={delLastRound}\n                        className=\"button-micro sidebar-button\"\n                        style={{marginTop: \"8px\"}}\n                    >\n                        <Icons.Trash />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Remove last round\n                        </span>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    );\n}\nSidebar.propTypes = {\n    className: PropTypes.string,\n    navigate: PropTypes.func.isRequired,\n    tournament: PropTypes.object.isRequired\n};\n","import {\n    assoc,\n    dissoc,\n    lensPath,\n    lensProp,\n    mergeLeft,\n    over,\n    set\n} from \"ramda\";\nimport {createPlayer, types} from \"../../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function playersReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"SET_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        // You should delete all avoid-pairs with the id too.\n        t.interface({id: types.Id})(action);\n        return dissoc(\n            lensPath(action.id),\n            state\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        t.interface({\n            id: types.Id,\n            matchCount: t.Number\n        })(action);\n        return set(\n            lensPath([action.id, \"matchCount\"]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        t.interface({id: types.Id, rating: t.Number})(action);\n        return set(\n            lensPath([action.id, \"rating\"]),\n            action.rating,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","// TODO: this file needs to be replaced with something more organized.\nimport {\n    BLACK,\n    DUMMY_ID,\n    WHITE,\n    createMatch,\n    getPlayerMaybe,\n    types\n} from \"../../../data-types\";\nimport {assoc, curry, filter} from \"ramda\";\nimport {pairPlayers, setByePlayer} from \"../../../pairing-scoring\";\nimport t from \"tcomb\";\n\nexport function scoreByeMatch(byeValue, match) {\n    if (match.playerIds[WHITE] === DUMMY_ID) {\n        return assoc(\"result\", [0, byeValue], match);\n    } else if (match.playerIds[BLACK] === DUMMY_ID) {\n        return assoc(\"result\", [byeValue, 0], match);\n    }\n    return match;\n}\n\nexport function autoPair({\n    pairData,\n    byeValue,\n    players,\n    tourney\n}) {\n    // the pairData includes any players who were already matched. We need to\n    // only include the specified players. Ramda's `filter` can filter objects.\n    const playerIds = Object.keys(players);\n    const filteredData = filter(({id}) => playerIds.includes(id), pairData);\n    const [\n        pairDataNoByes,\n        byePlayerData\n    ] = setByePlayer(tourney.byeQueue, DUMMY_ID, filteredData);\n    const pairs = pairPlayers(pairDataNoByes);\n    const pairsWithBye = (\n        byePlayerData\n        ? pairs.concat([[byePlayerData.id, DUMMY_ID]])\n        : pairs\n    );\n    const getPlayer = curry(getPlayerMaybe)(players);\n    const newMatchList = pairsWithBye.map(\n        (idsPair) => (\n            createMatch({\n                newRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                origRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                playerIds: [idsPair[WHITE], idsPair[BLACK]]\n            })\n        )\n    );\n    return newMatchList.map(curry(scoreByeMatch)(byeValue));\n}\n\nexport function manualPair(pair, byeValue) {\n    t.tuple([types.Player, types.Player])(pair);\n    const match = createMatch({\n        newRating: [pair[WHITE].rating, pair[BLACK].rating],\n        origRating: [pair[WHITE].rating, pair[BLACK].rating],\n        playerIds: [pair[WHITE].id, pair[BLACK].id]\n    });\n    return scoreByeMatch(byeValue, match);\n}\n","import {\n    __,\n    append,\n    assoc,\n    concat,\n    curry,\n    filter,\n    findIndex,\n    lensPath,\n    lensProp,\n    map,\n    mergeRight,\n    move,\n    over,\n    pipe,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport {autoPair, manualPair, scoreByeMatch} from \"./match-functions\";\nimport scoreTypes from \"../../../pairing-scoring/types\";\nimport t from \"tcomb\";\nimport {types} from \"../../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function tournamentReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number\n        })(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        t.interface({playerIds: t.list(types.Id)})(action);\n        return assoc(\"playerIds\", action.playerIds, state);\n    case \"SET_BYE_QUEUE\":\n        t.interface({byeQueue: t.list(types.Id)})(action);\n        return assoc(\"byeQueue\", action.byeQueue, state);\n    case \"SET_NAME\":\n        t.interface({name: t.String})(action);\n        return assoc(\"name\", action.name, state);\n    case \"AUTO_PAIR\":\n        t.interface({\n            // avoidList: t.list(types.AvoidPair),\n            byeValue: t.Number,\n            pairData: t.dict(types.Id, scoreTypes.PairingData),\n            players: t.dict(types.Id, types.Player),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            concat(\n                __,\n                autoPair({\n                    // avoidList: action.avoidList,\n                    byeValue: action.byeValue,\n                    pairData: action.pairData,\n                    players: action.players,\n                    // roundId: action.roundId,\n                    tourney: state\n                })\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        t.interface({\n            byeValue: t.Number,\n            pair: t.tuple([types.Player, types.Player]),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            append(manualPair(action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_DATE\":\n        t.interface({date: Date})(action);\n        return assoc(\"date\", action.date, state);\n    case \"SET_MATCH_RESULT\":\n        t.interface({\n            matchId: t.String,\n            newRating: t.tuple([t.Number, t.Number]),\n            result: t.tuple([t.Number, t.Number]),\n            roundId: t.Number\n        })(action);\n        // There's probably a better way to do this but... #worksforme\n        return pipe(\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"result\"\n                ]),\n                action.result\n            ),\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n            ),\n        )(state);\n    case \"DEL_MATCH\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state.roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    newRating: reverse(match.newRating),\n                    origRating: reverse(match.origRating),\n                    playerIds: reverse(match.playerIds),\n                    result: reverse(match.result)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number,\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"UPDATE_BYE_SCORES\":\n        t.interface({value: t.Number})(action);\n        return assoc(\n            \"roundList\",\n            map(\n                map(curry(scoreByeMatch)(action.value)),\n                state.roundList\n            ),\n            state\n        );\n    case \"SET_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n","import PropTypes from \"prop-types\";\nconst electron = window.require ? window.require(\"electron\") : false;\nexport {electron};\n\n// Returns the result of a function if Electron is enabled.\nexport function ifElectron(fn) {\n    return electron ? fn() : null;\n}\n\n// This is the JSX version of the previous function\nexport function IfElectron({children, onlyWin = false, onlyMac = false}) {\n    const win = onlyWin ? navigator.appVersion.includes(\"Windows\") : true;\n    const mac = onlyMac ? navigator.appVersion.includes(\"Mac\") : true;\n    if ([electron, win, mac].includes(false)) {\n        return null;\n    } else {\n        return children;\n    }\n}\nIfElectron.propTypes = {\n    children: PropTypes.node.isRequired,\n    onlyMac: PropTypes.bool,\n    onlyWindows: PropTypes.bool\n};\n\nexport function ifElectronOpen(event, url) {\n    return ifElectron(function () {\n        event.preventDefault();\n        electron.shell.openExternal(url);\n    });\n}\n\nfunction toggleMaximize(win) {\n    if (!win.isMaximized()) {\n        win.maximize();\n    } else {\n        win.unmaximize();\n    }\n}\n\n// https://github.com/electron/electron/issues/16385#issuecomment-453955377\nexport function macOSDoubleClick(event) {\n    ifElectron(function () {\n        if (!event.target.className.includes) {\n            return; // sometimes `className` isn't a string.\n        }\n        // We don't want double-clicking buttons to (un)maximize.\n        if (!event.target.className.includes(\"double-click-control\")) {\n            return;\n        }\n        const {getUserDefault} = electron.remote.systemPreferences;\n        const doubleClickAction = getUserDefault(\n            \"AppleActionOnDoubleClick\",\n            \"string\"\n        );\n        const win = electron.remote.getCurrentWindow();\n        if (doubleClickAction === \"Minimize\") {\n            win.minimize();\n        } else if (doubleClickAction === \"Maximize\") {\n            toggleMaximize(win);\n        }\n    });\n};\n","import React from \"react\";\nimport {ifElectronOpen} from \"../electron-utils\";\nimport logo from \"../icon-min.svg\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/coronate\";\nconst LICENSE_URL = (\n    \"https://github.com/johnridesabike/coronate/blob/master/LICENSE\"\n);\n\nconst About = () => (\n    <article\n        style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"100%\"\n        }}\n    >\n        <div style={{flex: \"0 0 48%\", textAlign: \"center\"}}>\n            <img src={logo} height=\"196\" width=\"196\" alt=\"\"/>\n        </div>\n        <div style={{flex: \"0 0 48%\"}}>\n            <h1 className=\"title\" style={{textAlign: \"left\"}}>Coronate</h1>\n            <p>Copyright &copy; 2019 John&nbsp;Jackson</p>\n            <p>Coronate is free software.</p>\n            <p>\n                <a\n                    href={GITHUB_URL}\n                    onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n                >\n                    Source code is available\n                </a><br />\n                {\" \"}under the{\" \"}\n                <a\n                    href={LICENSE_URL}\n                    onClick={(e) => ifElectronOpen(e, LICENSE_URL)}\n                >\n                    AGPL v3.0 license\n                </a>.\n            </p>\n        </div>\n    </article>\n);\nexport default About;\n","import Icons from \"./icons\";\nimport {Link} from \"@reach/router\";\n// import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst noDraggy = {onDragStart: (e) => e.preventDefault()};\n\nexport default function Sidebar() {\n    return (\n        <nav>\n            <ul style={{margin: \"0\"}}>\n                <li>\n                    <Link to=\"/tourneys\" {...noDraggy}>\n                        <Icons.Award />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Tournaments\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/players\" {...noDraggy}>\n                        <Icons.Users />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Players\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/options\" {...noDraggy}>\n                        <Icons.Settings />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Options\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/\" {...noDraggy}>\n                        <Icons.Help />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Info\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n","// This handles the window controls for when the Electron app is running on\n// Windows.\nimport {electron, ifElectron} from \"../electron-utils\";\nimport Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./windows-controls.module.css\";\n\n// https://github.com/microsoft/vscode/tree/master/src/vs/workbench/browser/parts/titlebar/media\nconst Close = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M6.279 5.5L11 10.221l-.779.779L5.5 6.279.779 11 0 10.221 4.721 5.5 0 .779.779 0 5.5 4.721 10.221 0 11 .779 6.279 5.5z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nconst Maximize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 0v11H0V0h11zM9.899 1.101H1.1V9.9H9.9V1.1z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Minimize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 4.399V5.5H0V4.399h11z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Restore = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M11 8.798H8.798V11H0V2.202h2.202V0H11v8.798zm-3.298-5.5h-6.6v6.6h6.6v-6.6zM9.9 1.1H3.298v1.101h5.5v5.5h1.1v-6.6z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nconst win = ifElectron(() => electron.remote.getCurrentWindow());\n\nexport default function Controls({state}) {\n    const middleButton = (function (){\n        if (state.isFullScreen) {\n            return (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.setFullScreen(false)}\n                >\n                    <Icons.Unfullscreen />\n                </button>\n            );\n        } else if (state.isMaximized) {\n            return (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.unmaximize()}\n                >\n                    <Restore />\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.maximize()}\n                >\n                    <Maximize />\n                </button>\n            );\n        }\n    }());\n    return (\n        <div className={styles.container}>\n            <button\n                className={classNames(styles.winButton, \"button-ghost\")}\n                onClick={() => win.minimize()}\n            >\n                <Minimize />\n            </button>\n            {middleButton}\n            <button\n                className={classNames(\n                    styles.winButton,\n                    styles.close,\n                    \"button-ghost\"\n                )}\n                onClick={() => win.close()}\n            >\n                <Close />\n            </button>\n        </div>\n    );\n}\nControls.propTypes = {\n    state: PropTypes.object.isRequired\n};\n","import {\n    IfElectron,\n    electron,\n    ifElectron,\n    macOSDoubleClick\n} from \"../electron-utils\";\nimport React, {createContext, useContext, useEffect, useReducer} from \"react\";\nimport About from \"./about-dialog\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"./sidebar-default\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport WindowsControls from \"./windows-controls\";\nimport classNames from \"classnames\";\nimport logo from \"../icon-min.svg\";\n\nconst WindowContext = createContext(null);\n\nexport function useWindowContext() {\n    return useContext(WindowContext);\n}\n\nconst GLOBAL_TITLE = \"Coronate\";\n\nfunction formatTitle(title) {\n    if (!title) {\n        return GLOBAL_TITLE;\n    }\n    return title + \" - \" + GLOBAL_TITLE;\n}\n\nconst initialWinState = {\n    action: \"\",\n    isBlur: false,\n    isDialogOpen: false,\n    isFullScreen: false,\n    isMaximized: false,\n    isSidebarOpen: true,\n    title: \"\"\n};\n\nfunction windowReducer(oldState, newState) {\n    return {...oldState, ...newState};\n}\n\nconst isMac = navigator.appVersion.includes(\"Mac\");\nconst isWin = navigator.appVersion.includes(\"Windows\");\nconst toolbarClasses = classNames(\n    {\"macos-button-toolbar\": isMac && electron},\n    {\"button-ghost\": !(isMac && electron)}\n);\n\nconst WindowTitleBar = ({state, dispatch}) => (\n    <header\n        className={classNames(\n            \"app__header\",\n            \"double-click-control\",\n            {\"traffic-light-padding\": electron && isMac && !state.isFullScreen}\n        )}\n        onDoubleClick={macOSDoubleClick}\n    >\n        <div>\n            <IfElectron onlyWin>\n                <span\n                    style={{\n                        alignItems: \"center\",\n                        display: \"inline-flex\",\n                        marginLeft: \"4px\",\n                        marginRight: \"8px\"}\n                    }\n                >\n                    <img src={logo} alt=\"\" height=\"16\" width=\"16\" />\n                </span>\n            </IfElectron>\n            <button\n                className={toolbarClasses}\n                onClick={() => dispatch({isSidebarOpen: !state.isSidebarOpen})}\n            >\n                <Icons.Sidebar/>\n                <VisuallyHidden>Toggle sidebar</VisuallyHidden>\n            </button>\n            <button\n                className={toolbarClasses}\n                onClick={() => dispatch({isDialogOpen: true})}\n            >\n                <Icons.Help />\n                <VisuallyHidden>About Coronate</VisuallyHidden>\n            </button>\n        </div>\n        <div\n            className={classNames(\n                \"body-20\",\n                \"double-click-control\",\n                {\"disabled\": state.isBlur}\n            )}\n            style={{\n                left: \"0\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                position: \"absolute\",\n                right: \"0\",\n                textAlign: \"center\",\n                width: \"50%\"\n            }}\n        >\n            {formatTitle(state.title)}\n        </div>\n        <IfElectron onlyWin><WindowsControls state={state}/></IfElectron>\n    </header>\n);\nWindowTitleBar.propTypes = {\n    dispatch: PropTypes.func,\n    state: PropTypes.object\n};\n\nexport function Window({children, className, ...rest}) {\n    const [state, dispatch] = useReducer(windowReducer, initialWinState);\n    useEffect(\n        function setDocumentTitle() {\n            document.title = formatTitle(state.title);\n        },\n        [state.title]\n    );\n    useEffect(\n        function addEventListeners() {\n            ifElectron(function () {\n                const win = electron.remote.getCurrentWindow();\n                // This will ensure that stale event listeners aren't persisted.\n                // That typically won't be relevant to production builds, but\n                // in a dev environment, where the page reloads frequently,\n                // stale listeners will accumulate. Note that this can cause\n                // side effects if other listeners are added elsewhere.\n                function unregisterListeners() {\n                    win.removeAllListeners(\"enter-full-screen\");\n                    win.removeAllListeners(\"leave-full-screen\");\n                    win.removeAllListeners(\"blur\");\n                    win.removeAllListeners(\"focus\");\n                    win.removeAllListeners(\"maximize\");\n                    win.removeAllListeners(\"unmaximize\");\n                }\n                unregisterListeners();\n                win.on(\n                    \"enter-full-screen\",\n                    () => dispatch({isFullScreen: true}));\n                win.on(\n                    \"leave-full-screen\",\n                    () => dispatch({isFullScreen: false})\n                );\n                win.on(\"maximize\", () => dispatch({isMaximized: true}));\n                win.on(\"unmaximize\", () => dispatch({isMaximized: false}));\n                win.on(\"blur\", () => dispatch({isBlur: true}));\n                win.on(\"focus\", () => dispatch({isBlur: false}));\n                dispatch({\n                    isBlur: !win.isFocused(),\n                    isFullScreen: win.isFullScreen(),\n                    isMaximized: win.isMaximized()\n                });\n                // I don't think this ever really fires, but can it hurt?\n                return unregisterListeners;\n            });\n        },\n        []\n    );\n    return (\n        <div\n            {...rest}\n            className={classNames(\n                className,\n                {\"open-sidebar\": state.isSidebarOpen},\n                {\"closed-sidebar\": !state.isSidebarOpen},\n                {\"window-blur\": state.isBlur},\n                {\"isWindows\": isWin},\n                {\"isMacOS\": isMac},\n                {\"isElectron\": electron}\n            )}\n        >\n            <WindowTitleBar state={state} dispatch={dispatch} />\n            <WindowContext.Provider\n                value={{winDispatch: dispatch, winState: state}}\n            >\n                {children}\n            </WindowContext.Provider>\n            <Dialog\n                isOpen={state.isDialogOpen}\n                onDismiss={() => dispatch({isDialogOpen: false})}\n                style={{backgroundColor: \"var(--grey-20)\"}}\n            >\n                <button\n                    className=\"button-micro\"\n                    onClick={() => dispatch({isDialogOpen: false})}\n                >\n                    Close\n                </button>\n                <About/>\n            </Dialog>\n        </div>\n    );\n}\nWindow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string\n};\n\nexport function WindowBody({children, footer, sidebar, footerProps = {}}) {\n    return (\n        <div className={classNames(\"winBody\", {\"winBody-hasFooter\": footer})}>\n            <div className=\"win__sidebar\">\n                {sidebar || <Sidebar />}\n            </div>\n            <div className=\"win__content\">\n                {children}\n            </div>\n            {footer && (\n                <footer\n                    {...footerProps}\n                    className={classNames(\"win__footer\", footerProps.className)}\n                >\n                    {footer}\n                </footer>\n            )}\n        </div>\n    );\n}\nWindowBody.propTypes = {\n    children: PropTypes.node.isRequired,\n    footer: PropTypes.node,\n    footerProps: PropTypes.object,\n    sidebar: PropTypes.node\n};\n","import React, {useEffect, useReducer} from \"react\";\nimport {curry, filter, symmetricDifference} from \"ramda\";\nimport {\n    getPlayerMaybe,\n    isRoundComplete,\n    rounds2Matches\n    // types\n} from \"../../../data-types\";\nimport {playerStore, tourneyStore} from \"../../../hooks/db\";\nimport PropTypes from \"prop-types\";\nimport playersReducer from \"./players-reducer\";\n// import t from \"tcomb\";\nimport tourneyReducer from \"./tournament-reducer\";\nimport {useLoadingCursor} from \"../../../hooks\";\nimport {useWindowContext} from \"../../../components/window\";\n\nfunction getAllPlayerIdsFromMatches(matchList) {\n    const allPlayers = matchList.reduce(\n        (acc, {playerIds}) => acc.concat(playerIds),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\nfunction calcNumOfRounds(playerCount) {\n    const roundCount = Math.ceil(Math.log2(playerCount));\n    // If there aren't any players then `roundCount` === `-Infinity`.\n    return Number.isFinite(roundCount) ? roundCount : 0;\n}\n\nconst emptyTourney = {\n    name: \"\",\n    playerIds: [],\n    roundList: []\n};\nconst loadReducer = (oldState, newState) => ({...oldState, ...newState});\n// Usually I would be more comfortable with `dbError: false` instead of the\n// opposite, `noDbError: true`, since the latter leads to awkward logical\n// statements like \"if there is not no db error.\" However, `noDbError` is\n// consistent with the rest of this state's properties in that `true` means\n// something is good, and `false` means something isn't. It allows shortcuts\n// like calling `.includes(false)` on the values.\nconst initLoading = {noDbError: true, players: false, tourney: false};\n\nexport default function TournamentData({children, tourneyId}) {\n    const [tourney, tourneyDispatch] = useReducer(tourneyReducer, emptyTourney);\n    const {name, playerIds, roundList} = tourney;\n    const [players, playersDispatch] = useReducer(playersReducer, {});\n    const [isLoaded, loadedDispatch] = useReducer(loadReducer, initLoading);\n    useLoadingCursor(isLoaded.players && isLoaded.tourney);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            if (!name) {\n                return;\n            }\n            winDispatch({title: name});\n            return () => winDispatch({title: \"\"});\n        },\n        [name, winDispatch]\n    );\n    useEffect(\n        function initTourneyFromDb() {\n            let didCancel = false;\n            (async function () {\n                const value = await tourneyStore.getItem(tourneyId);\n                // console.log(\"loaded:\", tourneyId);\n                if (!value) {\n                    loadedDispatch({noDbError: false});\n                } else if(!didCancel) {\n                    tourneyDispatch({state: value || {}, type: \"SET_STATE\"});\n                    loadedDispatch({tourney: true});\n                }\n            }());\n            return () => didCancel = true;\n        },\n        [tourneyId]\n    );\n    useEffect(\n        function hydrateTourneyPlayersFromDb() {\n            // Don't run this without loading the tourney first. Otherwise, it\n            // will interpret the placeholder `roundList` data as meaning there\n            // are no active players and load an empty object.\n            if (!isLoaded.tourney) {\n                return;\n            }\n            // Include players who have played matches but left the tournament,\n            // as well as players who are registered but havne't played yet.\n            const allTheIds = getAllPlayerIdsFromMatches(\n                rounds2Matches(roundList)\n            ).concat(\n                playerIds\n            );\n            // If there are no ids, update the player state and exit early.\n            if (allTheIds.length === 0) {\n                // This check prevents an infinite loop & memory leak.\n                if (Object.keys(players).length !== 0) {\n                    playersDispatch({state: {}, type: \"LOAD_STATE\"});\n                }\n                loadedDispatch({players: true});\n                return;\n            }\n            let didCancel = false;\n            (async function () {\n                const values = await playerStore.getItems(allTheIds);\n                // This safeguards against trying to fetch dummy IDs or IDs from\n                // deleted players. If we updated without this condition, then\n                // this `useEffect` would trigger an infinite loop and a memory\n                // leak.\n                const unChangedPlayers = symmetricDifference(\n                    Object.keys(values),\n                    Object.keys(players)\n                );\n                // console.log(\n                //     \"unchanged players:\",\n                //     Object.keys(unChangedPlayers).length\n                // );\n                if (unChangedPlayers.length !== 0 && !didCancel) {\n                    // console.log(\"hydrated player data\");\n                    playersDispatch({state: values, type: \"LOAD_STATE\"});\n                    loadedDispatch({players: true});\n                }\n            }());\n            return () => didCancel = true;\n        },\n        [roundList, players, playerIds, isLoaded.tourney]\n    );\n    useEffect(\n        function saveTourneyToDb() {\n            if (\n                !isLoaded.tourney\n                // The tourney length is 0 when it wasn't found in the DB\n                || Object.keys(tourney).length === 0\n                // I don't know why, but this happens sometimes with a bad URL\n                || tourneyId !== tourney.id\n            ) {\n                return;\n            }\n            tourneyStore.setItem(tourneyId, tourney).catch(function (error) {\n                console.error(\"error saving tourney:\", tourneyId, error);\n            });\n        },\n        [tourneyId, tourney, isLoaded.tourney]\n    );\n    useEffect(\n        function savePlayersToDb() {\n            if (!isLoaded.players) {\n                return;\n            }\n            playerStore.setItems(players);\n            // (async function () {\n            //     const values = await playerStore.setItems(players);\n            //     console.log(\n            //         \"saved player changes to DB:\",\n            //         Object.keys(values).length\n            //     );\n            // }());\n        },\n        [players, isLoaded.players]\n    );\n    const getPlayer = curry(getPlayerMaybe)(players);\n    // `players` includes players in past matches who may have left\n    // `activePlayers` is only players to be matched in future matches.\n    // Use Ramda's `filter` because it can filter objects.\n    const activePlayers = filter(({id}) => playerIds.includes(id), players);\n    const roundCount = calcNumOfRounds(Object.keys(activePlayers).length);\n    const isItOver = roundList.length >= roundCount;\n    const isNewRoundReady = (\n        roundList.length === 0\n        ? true\n        : isRoundComplete(roundList, activePlayers, roundList.length - 1)\n    );\n    if (!isLoaded.noDbError) {\n        return <div>Error: tournament not found.</div>;\n    }\n    if (Object.values(isLoaded).includes(false)) {\n        return <div>Loading...</div>;\n    }\n    return children({\n        activePlayers,\n        getPlayer,\n        isItOver,\n        isNewRoundReady,\n        players,\n        playersDispatch,\n        roundCount,\n        tourney,\n        tourneyDispatch\n    });\n}\nTournamentData.propTypes = {\n    children: PropTypes.func.isRequired,\n    tourneyId: PropTypes.string.isRequired\n};\n\nconst TournamentType = PropTypes.shape({\n    activePlayers: PropTypes.object,\n    getPlayer: PropTypes.func,\n    isItOver: PropTypes.bool,\n    isNewRoundReady: PropTypes.bool,\n    players: PropTypes.object,\n    playersDispatch: PropTypes.func,\n    roundCount: PropTypes.number,\n    tourney: PropTypes.object,\n    tourneyDispatch: PropTypes.func\n});\nexport {TournamentType};\n","import React from \"react\";\nimport {Panel, PanelContainer} from \"../../components/utility\";\n// import PropTypes from \"prop-types\";\nimport RoundTable from \"./round/round-table\";\nimport {ScoreTable} from \"./scores\";\nimport {TournamentType} from \"./tournament-data\";\n\nexport default function Status({tournament}) {\n    const {tourney, getPlayer} = tournament;\n    const lastRound = (function () {\n        if (tourney.roundList.length === 0) {\n            return <p>No rounds played yet.</p>;\n        }\n        const lastRoundId = tourney.roundList.length - 1;\n        if (tourney.roundList[lastRoundId].length === 0) {\n            return (\n                <p>Matched players in the current round will be shown here.</p>\n            );\n        }\n        return (\n            <RoundTable\n                roundId={lastRoundId}\n                tournament={tournament}\n                compact\n            />\n        );\n    }());\n    return (\n        <>\n            <h2 style={{textAlign: \"center\"}}>Tournament status</h2>\n            <PanelContainer\n                style={{justifyContent: \"center\"}}\n            >\n                <Panel>\n                    {lastRound}\n                </Panel>\n                <Panel>\n                    <ScoreTable\n                        getPlayer={getPlayer}\n                        title=\"Rankings\"\n                        tourney={tourney}\n                        compact\n                    />\n                </Panel>\n            </PanelContainer>\n        </>\n    );\n}\nStatus.propTypes = {\n    tournament: TournamentType\n};\n","import Crosstable from \"./crosstable\";\nimport NotFound from \"../../components/404\";\nimport {Notification} from \"../../components/utility\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport {Router} from \"@reach/router\";\nimport Scores from \"./scores\";\nimport Setup from \"./setup\";\nimport Sidebar from \"./sidebar\";\nimport Status from \"./status\";\nimport TournamentData from \"./tournament-data\";\nimport {WindowBody} from \"../../components/window\";\n\nfunction Footer({tournament}) {\n    const {roundCount, tourney, isItOver, isNewRoundReady} = tournament;\n    const {roundList} = tourney;\n    const [tooltipText, isTooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"Round in progress.\",\n                false\n            ];\n        } else if (isItOver) {\n            return [\"All rounds have completed.\", false];\n        } else {\n            return [\"Ready to begin a new round.\", true];\n        }\n    }());\n    return (\n        <>\n            <label\n                className=\"win__footer-block\"\n                style={{display: \"inline-block\"}}\n            >\n                Rounds:{\" \"}\n                {roundList.length} <small>out of</small> {roundCount}\n            </label>\n            {/* <meter\n                id=\"round-progress\"\n                max={roundCount}\n                // optimum={roundCount}\n                // low={roundCount - 1}\n                style={{width: \"200px\"}}\n                title={roundList.length + \"/\" + roundCount}\n                value={roundList.length}\n            >\n                {roundList.length}/{roundCount}\n            </meter> */}\n            <hr className=\"win__footer-divider\" />\n            <Notification\n                success={isTooltipWarn}\n                tooltip={tooltipText}\n                style={{\n                    backgroundColor: \"transparent\",\n                    color: \"initial\",\n                    display: \"inline-flex\",\n                    margin: \"0\",\n                    minHeight: \"initial\"\n                }}\n                className=\"win__footer-block\"\n            >\n                {tooltipText}\n            </Notification>\n        </>\n    );\n}\nFooter.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n\nexport default function Tournament({tourneyId, navigate}) {\n    return (\n        <TournamentData tourneyId={tourneyId}>\n            {(tournament) =>\n                <WindowBody\n                    sidebar={\n                        <Sidebar navigate={navigate} tournament={tournament}/>\n                    }\n                    footer={<Footer tournament={tournament} />}\n                >\n                    <Router>\n                        <PlayerSelect path=\"/\" tournament={tournament} />\n                        <Status path=\"status\" tournament={tournament} />\n                        <Crosstable path=\"crosstable\" tournament={tournament} />\n                        <Scores path=\"scores\" tournament={tournament}/>\n                        <Round path=\"round/:roundId\" tournament={tournament}/>\n                        <Setup path=\"setup\" tournament={tournament}/>\n                        <NotFound default />\n                    </Router>\n                </WindowBody>\n            }\n        </TournamentData>\n    );\n}\nTournament.propTypes = {\n    navigate: PropTypes.func,\n    tourneyId: PropTypes.string\n};\n","import {DateFormat, SortButton} from \"../../components/utility\";\nimport React, {useEffect, useState} from \"react\";\nimport {WindowBody, useWindowContext} from \"../../components/window\";\nimport {useAllTournamentsDb, useSortedTable} from \"../../hooks\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport default function TournamentList() {\n    const [tourneys, dispatch] = useAllTournamentsDb();\n    const [sorted, sortDispatch] = useSortedTable(\n        Object.values(tourneys),\n        \"date\",\n        true\n    );\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Tournament list\"});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch]\n    );\n    useEffect(\n        function () {\n            sortDispatch({table: Object.values(tourneys)});\n        },\n        [tourneys, sortDispatch]\n    );\n\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({name: newTourneyName, type: \"ADD_TOURNEY\"});\n        setNewTourneyName(\"\");\n        setIsFormOpen(false);\n    }\n\n    function deleteTournament(id, name) {\n        const message = \"Are you sure you want to delete “\" + name + \"”?\";\n        if (window.confirm(message)) {\n            dispatch({id, type: \"DEL_ITEM\"});\n        }\n    }\n\n    return (\n        <WindowBody>\n            <div className=\"content-area\">\n                <div className=\"toolbar toolbar__left\">\n                    <button\n                        onClick={() => setIsFormOpen(true)}\n                    >\n                        <Icons.Plus /> Add tournament\n                    </button>\n                </div>\n                {(Object.keys(tourneys).length > 0)\n                ?\n                <table>\n                    <caption>Tournament list</caption>\n                    <thead>\n                        <tr>\n                            <th>\n                                <SortButton\n                                    data={sorted}\n                                    dispatch={sortDispatch}\n                                    sortKey=\"name\"\n                                >\n                                    Name\n                                </SortButton>\n                            </th>\n                            <th>\n                                <SortButton\n                                    data={sorted}\n                                    dispatch={sortDispatch}\n                                    sortKey=\"date\"\n                                >\n                                    Date\n                                </SortButton>\n                            </th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {sorted.table.map(({date, id, name}) =>\n                            <tr key={id} className=\"buttons-on-hover\">\n                                <td>\n                                    <Link to={id}>\n                                        {name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <DateFormat date={date} />\n                                </td>\n                                <td>\n                                    <button\n                                        aria-label={`Delete “${name}”`}\n                                        className=\"danger button-ghost\"\n                                        title={`Delete “${name}”`}\n                                        onClick={\n                                            () => deleteTournament(id, name)\n                                        }\n                                    >\n                                        <Icons.Trash />\n                                    </button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                : <p>No tournaments added yet.</p>\n                }\n                <Dialog\n                    isOpen={isFormOpen}\n                    onDismiss={() => setIsFormOpen(false)}\n                >\n                    <button\n                        className=\"button-micro\"\n                        onClick={() => setIsFormOpen(false)}\n                    >\n                        Close\n                    </button>\n                    <form onSubmit={makeTournament}>\n                        <fieldset>\n                            <legend>Make a new tournament</legend>\n                            <label htmlFor=\"tourney-name\">Name:</label>\n                            <input\n                                id=\"tourney-name\"\n                                name=\"tourney-name\"\n                                placeholder=\"tournament name\"\n                                required={true}\n                                type=\"text\"\n                                value={newTourneyName}\n                                onChange={updateNewName}\n                            />{\" \"}\n                            <input\n                                className=\"button-primary\"\n                                type=\"submit\"\n                                value=\"Create\"\n                            />\n                        </fieldset>\n                    </form>\n                </Dialog>\n            </div>\n        </WindowBody>\n    );\n}\n","import Crosstable from \"./crosstable\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport Scores from \"./scores\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./tournament-list\";\n\nconst TournamentIndex = ({children}) => (\n    <div className=\"passthrough\">\n        {children}\n    </div>\n);\nTournamentIndex.propTypes = {\n    children: PropTypes.node\n};\n\nexport default TournamentIndex;\nexport {Crosstable, PlayerSelect, Round, Scores, Tournament, TournamentList};\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default Object.freeze({\n    options: fromJSON(options, types.db.Options),\n    players: fromJSON(players, types.db.Players),\n    tournaments: fromJSON(tournaments, types.db.Tourneys)\n});\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport fromJSON from \"tcomb/lib/fromJSON\";\nimport classNames from \"classnames\";\nimport numeral from \"numeral\";\nimport {WindowBody, useWindowContext} from \"../components/window\";\nimport Icons from \"../components/icons\";\nimport {DateTimeFormat} from \"../components/utility\";\nimport demoData from \"../demo-data\";\nimport testData from \"../test-data\";\nimport {types} from \"../data-types\";\nimport styles from \"./options.module.css\";\nimport {\n    useAllPlayersDb,\n    useAllTournamentsDb,\n    useOptionsDb\n} from \"../hooks\";\n\nfunction getDateForFile() {\n    const date = new Date();\n    return [\n        date.getFullYear(),\n        numeral(date.getMonth() + 1).format(\"00\"),\n        numeral(date.getDay() + 1).format(\"00\")\n    ].join(\"-\");\n}\n\nfunction invalidAlert() {\n    window.alert(\n        \"That data is invalid! A more helpful error message could not be \"\n        + \"written yet.\"\n    );\n}\n\nfunction LastBackupDate({date}) {\n    if (date.getTime() === 0) {\n        return \"never\";\n    }\n    return <DateTimeFormat date={date}/>;\n}\nLastBackupDate.propTypes = {\n    date: PropTypes.instanceOf(Date).isRequired\n};\n\nexport default function Options() {\n    const [tournaments, tourneysDispatch] = useAllTournamentsDb();\n    const [players, playersDispatch] = useAllPlayersDb();\n    const [text, setText] = useState(\"\");\n    const [options, optionsDispatch] = useOptionsDb();\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Options\"});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch]\n    );\n    // memoize this so the `useEffect` hook syncs with the correct states\n    const exportData = useMemo(\n        () => ({options, players, tournaments}),\n        [options, tournaments, players]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    function loadData(data) {\n        tourneysDispatch({\n            state: fromJSON(data.tournaments, types.db.Tourneys),\n            type: \"LOAD_STATE\"\n        });\n        optionsDispatch({\n            state: fromJSON(data.options, types.db.Options),\n            type: \"LOAD_STATE\"\n        });\n        playersDispatch({\n            state: fromJSON(data.players, types.db.Players),\n            type: \"LOAD_STATE\"\n        });\n        window.alert(\"Data loaded!\");\n    }\n    function handleText(event) {\n        event.preventDefault();\n        try {\n            const importData = JSON.parse(text);\n            loadData(importData);\n        } catch {\n            invalidAlert();\n        }\n    }\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        reader.onload = function (ev) {\n            const data = ev.target.result;\n            try {\n                const importData = JSON.parse(data);\n                loadData(importData);\n            } catch {\n                invalidAlert();\n            }\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    function reloadDemoData(event) {\n        event.preventDefault();\n        loadData(demoData);\n    }\n    function loadTestData(event) {\n        event.preventDefault();\n        loadData(testData);\n    }\n    return (\n        <WindowBody>\n            <div className={classNames(styles.options, \"content-area\")}>\n                <h2>Bye settings</h2>\n                <form>\n                    <p className=\"caption-30\">\n                        Select the default score for a bye round.\n                    </p>\n                    <label className=\"monospace body-30\">\n                        1{\" \"}\n                        <input\n                            checked={options.byeValue === 1}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 1\n                            })}\n                        />\n                    </label>\n                    <label className=\"monospace body-30\">\n                        ½{\" \"}\n                        <input\n                            checked={options.byeValue === 0.5}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 0.5\n                            })}\n                        />\n                    </label>\n                </form>\n                <h2>Manage data</h2>\n                <p className=\"caption-20\">\n                    Last export: <LastBackupDate date={options.lastBackup}/>\n                </p>\n                <p>\n                    <a\n                        download={\"coronate-\" + getDateForFile() + \".json\"}\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                        onClick={() => optionsDispatch({\n                            type: \"SET_OPTION\",\n                            option: \"lastBackup\",\n                            value: new Date()\n                        })}\n                    >\n                        <Icons.Download /> Export all data\n                    </a>\n                </p>\n                <label htmlFor=\"file\">Load data file:</label>\n                <input\n                    id=\"file\"\n                    name=\"file\"\n                    type=\"file\"\n                    onChange={handleFile}\n                />\n                <h2>Danger zone</h2>\n                <p className=\"caption-30\">\n                    I hope you know what you're doing...\n                </p>\n                <button onClick={reloadDemoData}>\n                    Reset demo data (this erases everything else)\n                </button>\n                {\" \"}\n                {process.env.NODE_ENV !== \"production\" &&\n                    <button onClick={loadTestData}>Load testing data</button>\n                }\n                <h3>Advanced: manually edit data</h3>\n                <form onSubmit={handleText}>\n                    <textarea\n                        className=\"json\"\n                        cols={50}\n                        name=\"playerdata\"\n                        rows={25}\n                        spellCheck={false}\n                        value={text}\n                        onChange={(event) => setText(event.currentTarget.value)}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </form>\n            </div>\n        </WindowBody>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport NewPlayer from \"../../components/new-player\";\nimport PropTypes from \"prop-types\";\nimport {SortButton} from \"../../components/utility\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport styles from \"./index.module.css\";\nimport {useWindowContext} from \"../../components/window\";\n\nexport default function PlayerList({\n    sorted,\n    sortDispatch,\n    players,\n    playersDispatch,\n    optionsDispatch\n}) {\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Players\"});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch]\n    );\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        const message = \"Are you sure you want to delete \"\n            + players[id].firstName + \" \" + players[id].lastName + \"?\";\n        if (window.confirm(message)) {\n            playersDispatch({id, type: \"DEL_ITEM\"});\n            optionsDispatch({id, type: \"DEL_AVOID_SINGLE\"});\n        }\n    };\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar toolbar__left\">\n                <button onClick={() => setIsFormOpen(true)}>\n                    <Icons.UserPlus /> Add a new player\n                </button>\n            </div>\n            <table className={styles.table}>\n                <caption>Player roster</caption>\n                <thead>\n                    <tr>\n                        <th>\n                            <SortButton\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"firstName\"\n                            >\n                                Name\n                            </SortButton>\n                        </th>\n                        <th>\n                            <SortButton\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"rating\"\n                            >\n                                Rating\n                            </SortButton>\n                        </th>\n                        <th>\n                            <SortButton\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"matchCount\"\n                            >\n                                Matches\n                            </SortButton>\n                        </th>\n                        <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                    </tr>\n                </thead>\n                <tbody className=\"content\">\n                    {sorted.table.map((p) =>\n                        <tr key={p.id}  className=\"buttons-on-hover\">\n                            <td className=\"table__player\">\n                                <Link to={p.id}>\n                                    {p.firstName} {p.lastName}\n                                </Link>\n                            </td>\n                            <td className=\"table__number\">\n                                {p.rating}\n                            </td>\n                            <td className=\"table__number\">\n                                {p.matchCount}\n                            </td>\n                            <td>\n                                <button\n                                    className=\"danger button-ghost\"\n                                    onClick={\n                                        (event) => delPlayer(event, p.id)\n                                    }\n                                >\n                                    <Icons.Trash />\n                                    <VisuallyHidden>\n                                        Delete {p.firstName} {p.lastName}\n                                    </VisuallyHidden>\n                                </button>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <Dialog isOpen={isFormOpen} onDismiss={() => setIsFormOpen(false)}>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsFormOpen(false)}\n                >\n                    Close\n                </button>\n                <NewPlayer dispatch={playersDispatch} />\n            </Dialog>\n        </div>\n    );\n}\nPlayerList.propTypes = {\n    optionsDispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired,\n    sortDispatch: PropTypes.func.isRequired,\n    sorted: PropTypes.object.isRequired\n};\n","import React, {useEffect, useState} from \"react\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport {avoidPairReducer} from \"../../pairing-scoring\";\nimport numeral from \"numeral\";\nimport {ratings} from \"../../pairing-scoring\";\nimport styles from \"./index.module.css\";\nimport {useWindowContext} from \"../../components/window\";\n\nfunction PlayerProfile({\n    playerId,\n    players,\n    playersDispatch,\n    options,\n    optionsDispatch\n}) {\n    const player = players[playerId];\n    const playerName = (player) ? player.firstName + \" \" + player.lastName : \"\";\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Profile for \" + playerName});\n            return () => winDispatch({title: \"\"});\n        },\n        [winDispatch, playerName]\n    );\n    const avoidObj = options.avoidPairs.reduce(avoidPairReducer, {});\n    const singAvoidList = (avoidObj[playerId]) ? avoidObj[playerId] : [];\n    const unAvoided = Object.keys(players).filter(\n        (id) => !singAvoidList.includes(id) && id !== playerId\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    function avoidAdd(event) {\n        event.preventDefault();\n        optionsDispatch({\n            pair: [playerId, selectedAvoider],\n            type: \"ADD_AVOID_PAIR\"\n        });\n        // Reset the selected avoider to the first on the list, but check to\n        // make sure they weren't they weren't the first.\n        const newSelected = (\n            unAvoided[0] !== selectedAvoider\n            ? unAvoided[0]\n            : unAvoided[1]\n        );\n        setSelectedAvoider(newSelected);\n    }\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playersDispatch({\n            firstName: firstName.value,\n            id: playerId,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value),\n            type: \"SET_PLAYER\"\n        });\n    }\n    function handleAvoidChange(event) {\n        setSelectedAvoider(event.target.value);\n    }\n    if (!player) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <div className={styles.playerInfo + \" content-area\"}>\n            <Link to=\"..\"><Icons.ChevronLeft /> Back</Link>\n            <h2>\n                Profile for {player.firstName} {player.lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        defaultValue={player.firstName}\n                        name=\"firstName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        defaultValue={player.lastName}\n                        name=\"lastName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"matchCount\">Matches played</label>\n                    <input\n                        defaultValue={String(player.matchCount)}\n                        name=\"matchCount\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        defaultValue={String(player.rating)}\n                        name=\"rating\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"Kfactor\">K factor</label>\n                    <input\n                        name=\"kfactor\"\n                        type=\"number\"\n                        disabled\n                        value={\n                            numeral(\n                                ratings.getKFactor(player.matchCount)\n                            ).format(\"00\")\n                        }\n                        readOnly\n                    />\n                </p>\n            </form>\n            <h3>Players to avoid</h3>\n            <ul>\n                {singAvoidList.map((pId) =>\n                    <li key={pId}>\n                        {players[pId].firstName} {players[pId].lastName}\n                        <button\n                            arial-label={`Remove \n${players[pId].firstName} ${players[pId].lastName} from avoid list.`}\n                            className=\"danger button-ghost\"\n                            title={`Remove ${players[pId].firstName} \n${players[pId].lastName}`}\n                            onClick={() =>\n                                optionsDispatch({\n                                    pair: [playerId, pId],\n                                    type: \"DEL_AVOID_PAIR\"\n                                })\n                            }\n                        >\n                            <Icons.Trash />\n                        </button>\n                    </li>\n                )}\n                {singAvoidList.length === 0 &&\n                    <li>None</li>\n                }\n            </ul>\n            <form onSubmit={avoidAdd}>\n                <label htmlFor=\"avoid-select\">\n                    Select a new player to avoid.\n                </label>\n                <select\n                    id=\"avoid-select\"\n                    onBlur={handleAvoidChange}\n                    onChange={handleAvoidChange}\n                    value={selectedAvoider}\n                >\n                    {unAvoided.map((pId) => (\n                        <option key={pId} value={pId}>\n                            {players[pId].firstName} {players[pId].lastName}\n                        </option>\n                    ))}\n                </select>{\" \"}\n                <input className=\"button-micro\" type=\"submit\" value=\"Add\" />\n            </form>\n        </div>\n    );\n}\nPlayerProfile.propTypes = {\n    options: PropTypes.object.isRequired,\n    optionsDispatch: PropTypes.func.isRequired,\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired\n};\n\nexport default function PlayerProfileWrapper(props) {\n    if (!props.players[props.playerId]) {\n        return <div>Error: player profile not found.</div>;\n    } else {\n        return <PlayerProfile {...props} />;\n    }\n}\nPlayerProfileWrapper.propTypes = {\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired\n};\n","import React, {useEffect} from \"react\";\nimport {useAllPlayersDb, useOptionsDb, useSortedTable} from \"../../hooks\";\nimport PlayerList from \"./player-list\";\nimport PlayerProfile from \"./player-profile\";\nimport {Router} from \"@reach/router\";\nimport {WindowBody} from \"../../components/window\";\n\nexport default function Players() {\n    const [players, playersDispatch] = useAllPlayersDb();\n    const [sorted, sortDispatch] = useSortedTable(\n        Object.values(players),\n        \"firstName\",\n        false\n    );\n    useEffect(\n        function () {\n            sortDispatch({table: Object.values(players)});\n        },\n        [players, sortDispatch]\n    );\n    const [options, optionsDispatch] = useOptionsDb();\n    const childProps = {options, optionsDispatch, players, playersDispatch};\n    return (\n        <WindowBody>\n            <Router basepath=\"players\">\n                <PlayerList\n                    path=\"/\"\n                    sorted={sorted}\n                    sortDispatch={sortDispatch}\n                    {...childProps}\n                />\n                <PlayerProfile path=\":playerId\" {...childProps} />\n            </Router>\n        </WindowBody>\n    );\n}\nPlayers.propTypes = {};\n\nexport {PlayerProfile, PlayerList};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {ifElectronOpen} from \"../../electron-utils\";\nimport styles from \"./index.module.css\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/coronate\";\n\nconst Caution = ({className, ...rest}) => (\n    <aside\n        {...rest}\n        className={classNames(styles.caution, \"body-20\", className)}\n    >\n        <p className={styles.caution__text}>\n            This is beta software. Want to help make it better? Check out the\n            {\" \"}\n            <span role=\"img\" aria-hidden>👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href={GITHUB_URL}\n                onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n\n            >\n                Git repository\n            </a>.\n        </p>\n    </aside>\n);\nCaution.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Caution;\n","import Caution from \"../components/caution\";\nimport Icons from \"../components/icons\";\nimport {Notification} from \"../components/utility\";\nimport React from \"react\";\nimport {WindowBody} from \"../components/window\";\nimport {ifElectronOpen} from \"../electron-utils\";\nimport {loadDemoDB} from \"../hooks/db\";\nimport logo from \"../icon-min.svg\";\nimport styles from \"./splash.module.css\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/coronate\";\nconst LICENSE_URL = (\n    \"https://github.com/johnridesabike/coronate/blob/master/LICENSE\"\n);\nconst ISSUES_URL = \"https://github.com/johnridesabike/coronate/issues/new\";\n\nconst Splash = () => (\n    <WindowBody footer={<Caution />} footerProps={{style: {border: \"none\"}}}>\n        <div className={styles.splash}>\n            <aside className={styles.hint}>\n                <ol>\n                    <li>\n                        <button\n                            className=\"button-primary\"\n                            onClick={loadDemoDB}\n                        >\n                            Click here to load the demo data\n                        </button>{\" \"}\n                        (optional)\n                    </li>\n                    <li>\n                        <Icons.ArrowLeft /> Select a menu item.\n                    </li>\n                    <li>\n                        Start creating your tournaments!\n                    </li>\n                </ol>\n                <Notification warning>\n                    If you experience glitches or crashes,<br />\n                    clear your browser cache and try again.\n                </Notification>\n            </aside>\n            <div className={styles.title}>\n                <div className={styles.titleIcon}>\n                    <img src={logo} alt=\"\" height=\"96\" width=\"96\" />\n                </div>\n                <div className={styles.titleText}>\n                    <h1 className=\"title\" style={{fontSize: \"40px\"}}>\n                        Coronate\n                    </h1>\n                    <p className={styles.subtitle + \" caption-30\"}>\n                        Tournament manager\n                    </p>\n                </div>\n            </div>\n            <footer className={\"body-20 \" + styles.footer}>\n                <div style={{textAlign: \"left\"}}>\n                    <p>\n                        Copyright &copy; 2019 John Jackson.\n                    </p>\n                    <p>\n                        Coronate is free software.<br/>\n                        <a\n                            href={GITHUB_URL}\n                            onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n                        >\n                            Source code is available\n                        </a>\n                        {\" \"}under the{\" \"}\n                        <a\n                            href={LICENSE_URL}\n                            onClick={(e) => ifElectronOpen(e, LICENSE_URL)}\n                        >\n                            AGPL v3.0 license\n                        </a>.\n                    </p>\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                    <p>\n                        <a\n                            href={ISSUES_URL}\n                            onClick={(e) => ifElectronOpen(e, ISSUES_URL)}\n                        >\n                            Suggestions and bug reports are welcome.\n                        </a>\n                    </p>\n                    <p>\n                        Built with JavaScript and{\" \"}\n                        <a\n                            href=\"https://reactjs.org/\"\n                            onClick={(e) => ifElectronOpen(\n                                e,\n                                \"https://reactjs.org/\"\n                            )}\n                        >\n                            React\n                        </a>.{\" \"}\n                        <span style={{fontSize: \"16px\"}}>\n                            <Icons.Javascript /> <Icons.React />\n                        </span>\n                    </p>\n                </div>\n            </footer>\n        </div>\n    </WindowBody>\n);\nexport default Splash;\n","import \"./side-effects\";\nimport {\n    LocationProvider,\n    Router,\n    createHistory\n} from \"@reach/router\";\nimport TournamentIndex, {\n    Tournament,\n    TournamentList\n} from \"./pages/tournament\";\nimport NotFound from \"./components/404\";\nimport Options from \"./pages/options\";\nimport Players from \"./pages/players\";\nimport React from \"react\";\nimport Splash from \"./pages/splash\";\nimport {Window} from \"./components/window\";\nimport createHashSource from \"hash-source\";\n\n// These are needed for deploying to GitHub pages.\nconst source = createHashSource();\nconst history = createHistory(source);\n\nfunction App() {\n    return (\n        <LocationProvider history={history}>\n            <Window className=\"app\">\n                <main className=\"app__main\">\n                    <Router>\n                        <Splash path=\"/\" />\n                        <TournamentIndex path=\"tourneys\">\n                            <TournamentList path=\"/\" />\n                            <Tournament path=\":tourneyId/*\" />\n                        </TournamentIndex>\n                        <Players path=\"players/*\" />\n                        <Options path=\"options\" />\n                        <NotFound default />\n                    </Router>\n                </main>\n            </Window>\n        </LocationProvider>\n    );\n}\n\nexport default App;\n","import \"./styles\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport React, {StrictMode} from \"react\";\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"tournament_header__3XvP5\",\"contentFrame\":\"tournament_contentFrame__3ct63\",\"table\":\"tournament_table__1H60d\",\"topHeader\":\"tournament_topHeader__t_tB_\",\"row\":\"tournament_row__2LSFL\",\"compact\":\"tournament_compact__2uTHd\",\"playerName\":\"tournament_playerName__2dXZ_\",\"rank\":\"tournament_rank__2_u9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"winnerSelect\":\"round_winnerSelect__SDt38\",\"table\":\"round_table__1x8KG\",\"tbody\":\"round_tbody__1pAwr\",\"rowId\":\"round_rowId__2gYfm\",\"controls\":\"round_controls__1XYFl\",\"matchResult\":\"round_matchResult__1tb7r\",\"playerResult\":\"round_playerResult__3TMo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"windows-controls_container__1-7Ur\",\"winButton\":\"windows-controls_winButton__2s6YB\",\"close\":\"windows-controls_close__3i226\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splash\":\"splash_splash__2ZYEI\",\"hint\":\"splash_hint__22vCa\",\"footer\":\"splash_footer__HxH6K\",\"title\":\"splash_title__2TA4V\",\"titleIcon\":\"splash_titleIcon__3Nzmb\",\"titleText\":\"splash_titleText__3P6sf\",\"subtitle\":\"splash_subtitle__4wRgt\"};","module.exports = __webpack_public_path__ + \"static/media/icon-min.53b3e3eb.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"players_table__1xHiA\",\"playerInfo\":\"players_playerInfo__2We7m\",\"controls\":\"players_controls__1d2AM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}