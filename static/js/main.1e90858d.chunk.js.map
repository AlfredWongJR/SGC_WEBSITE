{"version":3,"sources":["components/about.jsx","components/404.jsx","data/constants.js","data/player.js","state/player-state.js","data/match.js","pairing-scoring/scoring.js","pairing-scoring/pairing.js","state/match-functions.js","state/tourneys-state.js","state/options-state.js","components/utility.jsx","data/utility.js","components/tournament/round/player-match-info.jsx","components/tournament/round/match-row.jsx","components/tournament/round/round.jsx","components/tournament/round/pair-picker/pair-picker.jsx","components/tournament/round/pair-picker/stage.jsx","components/tournament/round/pair-picker/player-info.jsx","components/tournament/round/pair-picker/index.jsx","components/tournament/round/index.jsx","components/tournament/scores.jsx","components/tournament/player-select/selecting.jsx","components/tournament/player-select/index.jsx","components/tournament/tournament.jsx","components/tournament/list.jsx","data/tournament.js","components/tournament/index.jsx","components/players/info-box.jsx","components/players/list.jsx","components/players/index.jsx","components/options.jsx","components/caution/index.jsx","App.jsx","serviceWorker.js","index.jsx","components/tournament/round/round.module.css","components/tournament/scores.module.css","App.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["About","props","react_default","a","createElement","data-testid","href","NotFound","BLACK","WHITE","createPlayer","importObj","arguments","length","undefined","id","type","firstName","lastName","rating","matchCount","dummyPlayer","getPlayerById","playerList","player","filter","p","getPlayerAvoidList","playerId","avoidList","pair","includes","reduce","accumulator","concat","kFactor","Object","freeze","defaultPlayers","players","demoPlayers","map","avoid","playersReducer","state","action","over","lensPath","append","newPlayer","set","findIndex","propEq","Error","PlayerContext","createContext","usePlayers","_useContext","useContext","_useContext2","slicedToArray","playerState","playerDispatch","getPlayer","curry","PlayersProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","value","children","createMatch","result","origRating","newRating","isBye","match","getMatchesByPlayer","roundList","roundId","slice","acc","round","hasHadBye","getPlayersByOpponent","opponentId","playerScore","score","scoreList","indexOf","playerScoreList","b","playerScoreCum","runningScore","cumScores","playerScoreListNoByes","forEach","push","totalScore","playerColorBalance","color","modifiedMedian","pId","isSolkoff","scores","opponent","sort","pop","shift","finalScore","tieBreakMethods","name","func","oppScores","calcStandings","methods","tieBreaks","m","standingsFlat","allPlayers","Array","from","Set","getAllPlayers","method","sortFunc","firstBy","standing","ignore","index","thenBy","standingsTree","runningRank","i","orig","standing1","standing2","areEqual","keys","Number","areScoresEqual","dueColor","matchList","playerMatchColor","genPlayerData","profile","colorBalance","opponentHistory","upperHalf","avoidMeetingTwicePriority","sameScoresPriority","differentHalfPriority","differentDueColorPriority","calcPairIdeal","player1","player2","scoreDiff","priority","metBefore","mustAvoid","Math","abs","ceil","autoPair","tourney","unPairedPlayers","byeValue","nextBye","byeQueue","byeMatch","newMatchList","potentialMatches","matches","reducedResults","playerData","byePlayerData","last","playersWithScore","pd","reverse","splitAt","playerDatum","src","playerMatches","blossom","p1Id","p2Id","p1","p2","ideal","matched","pairPlayers","join","dummy","defaultData","defaultTourneyList","tourneysReducer","tourneyId","remove","move","oldIndex","newIndex","__","unpairedPlayers","manualPair","matchId","mergeRight","TournamentContext","useTournaments","useTournament","tourneys","useRound","_useTournament","_useTournament2","unmatched","difference","TournamentProvider","reducer","OptionsContext","useOptions","OptionsProvider","defaultOptions","data","Panel","_ref4","style","objectSpread","className","styles","panel","PanelContainer","assign","panels","React","Children","child","PlayerLink","_ref5","es","to","calcNumOfRounds","playerCount","log2","isFinite","getById","list","x","PlayerMatchInfo","_ref","_useRound","_usePlayers","prettyBalance","numeral","format","opId","key","MatchRow","resultCode","pos","selectedMatch","setSelectedMatch","_useState","useState","_useState2","openModal","setOpenModal","every","whiteName","blackName","setMatchResult","event","currentTarget","white","black","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","calcNewRatings","selected","scope","role","aria-label","onBlur","onChange","disabled","winnerSelect","onClick","title","edit_default","check_default","info_default","dialog_es","isOpen","Round","setIsPickView","moveMatch","direction","toolbar","users_default","unMatch","trash_2_default","repeat_default","arrow_up_default","arrow_down_default","table","PairPicker","stagedPlayers","setStagedPlayers","_useOptions","prevState","lensIndex","htmlFor","Stage","_stagedPlayers","unstage","react","PlayerInfo","_genPlayerData","Index","isPickView","useEffect","pair_picker_PairPicker","ScoreList","_useTournament2$","_calcStandings","_calcStandings2","standingTree","tbMethods","topHeader","rank","j","row","rowSpan","playerName","dashify","SelectTieBreaks","_ref2","_useTournament3","_useTournament4","selectedTb","setSelectedTb","toggleTb","moveTb","register","regexps","unformat","roundingFunction","whole","floor","remainder","String","Scores","_ref3","Selecting","togglePlayer","target","checked","PlayerSelect","isSelecting","setIsSelecting","Tournament","openTab","setOpenTab","isNewRoundReady","useMemo","lastRound","matchedPlayers","unMatchedPlayers","results","origTitle","document","isItOver","tooltipText","tooltipWarn","tabs_es","chevron_left_default","window","confirm","tooltip_es","label","alert_circle_default","check_circle_default","tournament_scores","TournamentList","_useTournaments","_useTournaments2","newTourneyName","setNewTourneyName","onSubmit","preventDefault","placeholder","required","TournamentIndex","PlayerInfoBox","singAvoidList","setSingAvoidList","unAvoided","_useState3","_useState4","selectedAvoider","setSelectedAvoider","aria-labelledby","arial-label","avoidAdd","PlayerList","newPlayerDefault","newPlayerData","setNewPlayerdata","ids","nextId","setNextId","updateField","update","rosterTable","delPlayer","visually_hidden_es","chevron_right_default","prevId","Players","Options","_useOptions2","options","exportData","rows","cols","JSON","stringify","readOnly","Caution","caution","caution__text","caution__link","source","createHashSource","history","createHistory","App","link","tournament","path","about","_404","default","noThrow","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1e90858d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst About = (props) => (\r\n    <p data-testid=\"about\">\r\n        This is an early, proof-of-concept, demo of a\r\n        chess tournament manager.{\" \"}\r\n        <a href=\"https://github.com/johnridesabike/chessahoochee\">\r\n        You can find out more here.</a>\r\n    </p>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst NotFound = (props) => (\r\n    <div data-testid=\"404\">\r\n        <p>Page not found.</p>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","const BLACK = 1;\r\nexport {BLACK};\r\nconst WHITE = 0;\r\nexport {WHITE};\r\n","import EloRank from \"elo-rank\";\r\nimport {WHITE, BLACK} from \"./constants\";\r\n/**\r\n * @typedef {import(\"./index\").Player} Player\r\n */\r\n\r\n/**\r\n * @param {Object} importObj\r\n */\r\nexport function createPlayer(importObj = {}) {\r\n    /** @type {Player} */\r\n    const player = {\r\n        id: importObj.id || 0,\r\n        type: importObj.type || \"person\", // used for CSS styling etc.\r\n        firstName: importObj.firstName || \"\",\r\n        lastName: importObj.lastName || \"\",\r\n        rating: importObj.rating || 0,\r\n        matchCount: importObj.matchCount || 0\r\n    };\r\n    return player;\r\n}\r\n\r\nconst dummyPlayer = createPlayer({\r\n    id: -1,\r\n    firstName: \"Bye\",\r\n    lastName: \"Player\",\r\n    type: \"dummy\"\r\n});\r\nObject.freeze(dummyPlayer);\r\nexport {dummyPlayer};\r\n\r\n\r\n/**\r\n * @param {Player[]} playerList\r\n * @param {number} id\r\n * @returns {Player}\r\n */\r\nexport function getPlayerById(playerList, id) {\r\n    if (id === -1) {\r\n        return dummyPlayer;\r\n    }\r\n    let player = playerList.filter((p) => p.id === id)[0];\r\n    if (!player) {\r\n        player = createPlayer({\r\n            id: id,\r\n            firstName: \"Anonymous\",\r\n            type: \"missing\"\r\n        });\r\n    }\r\n    return player;\r\n}\r\n\r\n/**\r\n * @param {number} playerId\r\n * @param {number[][]} avoidList\r\n * @returns {number[]}\r\n */\r\nexport function getPlayerAvoidList(playerId, avoidList) {\r\n    return avoidList.filter( // get pairings with the player\r\n        (pair) => pair.includes(playerId)\r\n    ).reduce( // Flatten the array\r\n        (accumulator, pair) => pair.concat(accumulator),\r\n        []\r\n    ).filter( // filter out the player's id\r\n        (id) => id !== playerId\r\n    );\r\n}\r\n\r\n/**\r\n * @param {number[][]} avoidList\r\n * @param {Player[]} playerList\r\n */\r\nexport function cleanAvoidList(avoidList, playerList) {\r\n    const ids = playerList.map((p) => p.id);\r\n    return avoidList.filter(\r\n        (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\r\n    );\r\n}\r\n\r\n/**\r\n * @param {number} matchCount\r\n */\r\nexport function kFactor(matchCount) {\r\n    const ne = matchCount || 1;\r\n    return (800 / ne);\r\n}\r\n\r\n/**\r\n * @param {[number, number]} origRatings\r\n * @param {[number, number]} matchCounts\r\n * @param {[number, number]} result\r\n * @returns {[number, number]}\r\n */\r\nexport function calcNewRatings(origRatings, matchCounts, result) {\r\n    const whiteElo = new EloRank(kFactor(matchCounts[WHITE]));\r\n    const blackElo = new EloRank(kFactor(matchCounts[BLACK]));\r\n    const FLOOR = 100;\r\n    const scoreExpected = [\r\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\r\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\r\n    ];\r\n    /** @type {[number, number]} */\r\n    const newRating = [\r\n        whiteElo.updateRating(\r\n            scoreExpected[WHITE],\r\n            result[WHITE],\r\n            origRatings[WHITE]\r\n        ),\r\n        blackElo.updateRating(\r\n            scoreExpected[BLACK],\r\n            result[BLACK],\r\n            origRatings[BLACK]\r\n        )\r\n    ];\r\n    // @ts-ignore\r\n    return newRating.map(\r\n        (rating) => (\r\n            rating < FLOOR\r\n            ? FLOOR\r\n            : rating\r\n        )\r\n    );\r\n}\r\n","import {createContext, createElement, useContext, useReducer} from \"react\";\r\n// This will cause Webpack to import the entire Ramda library, but we're using\r\n// so much of it that cherry-picking individual files has virtually no benefit.\r\nimport {\r\n    append,\r\n    curry,\r\n    lensPath,\r\n    filter,\r\n    findIndex,\r\n    over,\r\n    propEq,\r\n    set\r\n} from \"ramda\";\r\nimport {createPlayer, getPlayerById} from \"../data/player\";\r\nimport demoPlayers from \"./demo-players.json\";\r\n/**\r\n * @typedef {import(\"./dispatch\").Action} Action\r\n * @typedef {import(\"../data/index\").Player} Player\r\n * @typedef {import(\"./dispatch\").PlayerAction} PlayerAction\r\n */\r\n\r\nconst defaultPlayers = {\r\n    players: demoPlayers.playerList.map((p) => createPlayer(p)),\r\n    avoid: demoPlayers.avoidList\r\n};\r\n\r\n/**\r\n * @param {typeof defaultPlayers} state\r\n * @param {PlayerAction} action\r\n */\r\nfunction playersReducer(state, action ) {\r\n    switch (action.type) {\r\n    // Players\r\n    case \"ADD_PLAYER\":\r\n        return over(\r\n            lensPath([\"players\"]),\r\n            append(action.newPlayer),\r\n            state\r\n        );\r\n    case \"DEL_PLAYER\":\r\n        return over(\r\n            lensPath([\"players\"]),\r\n            filter((p) => p.id !== action.id),\r\n            set(\r\n                lensPath([\"avoid\"]),\r\n                filter((pair) => !pair.includes(action.id)),\r\n                state\r\n            )\r\n        );\r\n    case \"SET_PLAYER_MATCHCOUNT\":\r\n        return set(\r\n            lensPath([\r\n                \"players\",\r\n                findIndex(propEq(\"id\", action.id), state.players),\r\n                \"matchCount\"\r\n            ]),\r\n            action.matchCount,\r\n            state\r\n        );\r\n    case \"SET_PLAYER_RATING\":\r\n        return set(\r\n            lensPath([\r\n                \"players\",\r\n                findIndex(propEq(\"id\", action.id), state.players),\r\n                \"rating\"\r\n            ]),\r\n            action.rating,\r\n            state\r\n        );\r\n    // Avoid\r\n    case \"ADD_AVOID_PAIR\":\r\n        return over(\r\n            lensPath([\"avoid\"]),\r\n            append(action.pair),\r\n            state\r\n        );\r\n    case \"DEL_AVOID_PAIR\":\r\n        return over(\r\n            lensPath([\"avoid\"]),\r\n            filter((pair) => !(\r\n                pair.includes(action.pair[0])\r\n                && pair.includes(action.pair[1])\r\n            )),\r\n            state\r\n        );\r\n    default:\r\n        throw new Error(\"Unexpected action type\");\r\n    }\r\n}\r\n\r\n/** @type {[typeof defaultPlayers, React.Dispatch<PlayerAction>]} */\r\nconst defaultContext = null;\r\nconst PlayerContext = createContext(defaultContext);\r\n\r\nexport function usePlayers() {\r\n    const [playerState, playerDispatch] = useContext(PlayerContext);\r\n    const getPlayer = curry(getPlayerById)(playerState.players);\r\n    return {playerState, playerDispatch, getPlayer};\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function PlayersProvider(props) {\r\n    const [state, dispatch] = useReducer(playersReducer, defaultPlayers);\r\n    return (\r\n        createElement(\r\n            PlayerContext.Provider,\r\n            {value: [state, dispatch]},\r\n            props.children\r\n        )\r\n    );\r\n}\r\n","/**\r\n * @typedef {import(\"./index\").Match} Match\r\n */\r\n/**\r\n *\r\n * @param {object} importObj\r\n */\r\nexport default function createMatch(importObj) {\r\n    /** @type {Match} */\r\n    const match = {\r\n        id: importObj.id,\r\n        players: importObj.players,\r\n        result: importObj.result || [0, 0],\r\n        origRating: importObj.origRating,\r\n        newRating: importObj.newRating\r\n    };\r\n    return match;\r\n}\r\n","import {firstBy} from \"thenby\";\r\nimport {\r\n    dummyPlayer,\r\n    getPlayerById,\r\n    getPlayerAvoidList\r\n} from \"../data/player\";\r\n\r\n/**\r\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\r\n * @typedef {import(\"./\").PlayerData} PlayerData\r\n * @typedef {import(\"./\").Standing} Standing\r\n * @typedef {import(\"../data/\").Match} Match\r\n * @typedef {import(\"../data/\").Player} Player\r\n */\r\n\r\n/**\r\n *\r\n * @param {Match} match\r\n * @returns {boolean}\r\n */\r\nfunction isBye(match) {\r\n    return match.players.includes(dummyPlayer.id);\r\n}\r\n\r\n/**\r\n * @param {number} playerId\r\n * @param {object[]} matchList\r\n * @returns {number?}\r\n */\r\nexport function playerMatchColor(playerId, matchList) {\r\n    /**@type {number} */\r\n    let color = null;\r\n    const match = matchList.filter((m) => m.players.includes(playerId))[0];\r\n    if (match) {\r\n        color = match.players.indexOf(playerId);\r\n    }\r\n    return color;\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {Match[]}\r\n */\r\nfunction getMatchesByPlayer(playerId, roundList, roundId = null) {\r\n    /** @type {Match[]} */\r\n    let rounds;\r\n    if (roundId === null) {\r\n        rounds = roundList;\r\n    } else {\r\n        rounds = roundList.slice(0, roundId + 1);\r\n    }\r\n    return rounds.reduce( // flatten the rounds to just the matches\r\n        (acc, round) => acc.concat(round),\r\n        []\r\n    ).filter(\r\n        (match) => match.players.includes(playerId)\r\n    );\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {boolean}\r\n */\r\nexport function hasHadBye(playerId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(\r\n        playerId,\r\n        roundList,\r\n        roundId\r\n    ).reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    ).includes(dummyPlayer.id);\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number[]}\r\n */\r\nexport function getPlayersByOpponent(opponentId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(\r\n        opponentId,\r\n        roundList,\r\n        roundId\r\n    ).reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    ).filter(\r\n        (playerId) => playerId !== opponentId\r\n    );\r\n}\r\n\r\n/**\r\n * Get a list of all of a player's scores from each match.\r\n * @type {ScoreCalculator}\r\n * @returns {number[]} the list of scores\r\n */\r\nfunction playerScoreList(playerId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(playerId, roundList, roundId).map(\r\n        (match) => match.result[match.players.indexOf(playerId)]\r\n    );\r\n}\r\n\r\n/**\r\n * TODO: Maybe merge this with the other function?\r\n */\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number[]}\r\n */\r\nfunction playerScoreListNoByes(playerId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(\r\n        playerId,\r\n        roundList,\r\n        roundId\r\n    ).filter(\r\n        (match) => !isBye(match)\r\n    ).map(\r\n        (match) => match.result[match.players.indexOf(playerId)]\r\n    );\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nexport function playerScore(playerId, roundList, roundId = null) {\r\n    let score = 0;\r\n    const scoreList = playerScoreList(playerId, roundList, roundId);\r\n    if (scoreList.length > 0) {\r\n        score = scoreList.reduce((a, b) => a + b);\r\n    }\r\n    return score;\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction playerScoreCum(playerId, roundList, roundId = null) {\r\n    let runningScore = 0;\r\n    /** @type {number[]} */\r\n    let cumScores = [];\r\n    let scores = playerScoreListNoByes(playerId, roundList, roundId);\r\n    scores.forEach(function (score) {\r\n        runningScore += score;\r\n        cumScores.push(runningScore);\r\n    });\r\n    let totalScore = 0;\r\n    if (cumScores.length !== 0) {\r\n        totalScore = cumScores.reduce((a, b) => a + b);\r\n    }\r\n    return totalScore;\r\n}\r\n\r\n/**\r\n * Calculate a player's color balance. A negative number means they played as\r\n * white more. A positive number means they played as black more.\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nexport function playerColorBalance(playerId, roundList, roundId = null) {\r\n    let color = 0;\r\n    getMatchesByPlayer(playerId, roundList, roundId).filter(\r\n        (match) => !isBye(match)\r\n    ).forEach(\r\n        function (match) {\r\n            if (match.players[0] === playerId) {\r\n                color += -1;\r\n            } else if (match.players[1] === playerId) {\r\n                color += 1;\r\n            }\r\n        }\r\n    );\r\n    return color;\r\n}\r\n\r\n/**\r\n * Gets the modified median factor defined in USCF § 34E1\r\n * @type {ScoreCalculator}\r\n * @param {boolean} [isSolkoff]\r\n * @returns {number}\r\n */\r\nfunction modifiedMedian(pId, roundList, roundId = null, isSolkoff = false) {\r\n    // get all of the opponent's scores\r\n    let scores = getPlayersByOpponent(\r\n        pId,\r\n        roundList,\r\n        roundId\r\n    ).filter(\r\n        (opponent) => opponent !== dummyPlayer.id\r\n    ).map(\r\n        (opponent) => playerScore(opponent, roundList, roundId)\r\n    );\r\n    //sort them, then remove the first and last items\r\n    scores.sort();\r\n    if (!isSolkoff) {\r\n        scores.pop();\r\n        scores.shift();\r\n    }\r\n    let finalScore = 0;\r\n    if (scores.length > 0) {\r\n        finalScore = scores.reduce((a, b) => a + b);\r\n    }\r\n    return finalScore;\r\n}\r\n\r\n/**\r\n * A shortcut for passing the `isSolkoff` variable to `modifiedMedian`.\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction solkoff(playerId, roundList, roundId = null) {\r\n    return modifiedMedian(playerId, roundList, roundId, true);\r\n}\r\n\r\n/**\r\n * Get the cumulative scores of a player's opponents.\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction playerOppScoreCum(playerId, roundList, roundId = null) {\r\n    const opponents = getPlayersByOpponent(\r\n        playerId,\r\n        roundList,\r\n        roundId\r\n    ).filter(\r\n        (opponent) => opponent !== dummyPlayer.id\r\n    );\r\n    let oppScores = opponents.map((p) => playerScoreCum(p, roundList, roundId));\r\n    let score = 0;\r\n    if (oppScores.length !== 0) {\r\n        score = oppScores.reduce((a, b) => a + b);\r\n    }\r\n    return score;\r\n}\r\n\r\nconst tieBreakMethods = [\r\n    {\r\n        name: \"Modified median\",\r\n        func: modifiedMedian\r\n    },\r\n    {\r\n        name: \"Solkoff\",\r\n        func: solkoff\r\n    },\r\n    {\r\n        name: \"Cumulative score\",\r\n        func: playerScoreCum\r\n    },\r\n    {\r\n        name: \"Cumulative of opposition\",\r\n        func: playerOppScoreCum\r\n    },\r\n    {\r\n        name: \"Most black\",\r\n        func: playerColorBalance\r\n    }\r\n];\r\n\r\nObject.freeze(tieBreakMethods);\r\nexport {tieBreakMethods};\r\n\r\n/**\r\n * @param {Standing} standing1\r\n * @param {Standing} standing2\r\n * @returns {boolean}\r\n */\r\nfunction areScoresEqual(standing1, standing2) {\r\n    let areEqual = true;\r\n    // Check if any of them aren't equal\r\n    if (standing1.score !== standing2.score) {\r\n        areEqual = false;\r\n    }\r\n    Object.keys(standing1.tieBreaks).forEach(function (index) {\r\n        const i = Number(index);\r\n        if (standing1.tieBreaks[i] !== standing2.tieBreaks[i]) {\r\n            areEqual = false;\r\n        }\r\n    });\r\n    return areEqual;\r\n}\r\n\r\n/**\r\n * @typedef {import(\"../data/index\").Round} Round\r\n */\r\n\r\n/**\r\n * @param {Round[]} roundList\r\n * @returns {number[]}\r\n */\r\nfunction getAllPlayers(roundList) {\r\n    const allPlayers = roundList.reduce( // flatten the rounds\r\n        (acc, round) => acc.concat(round),\r\n        []\r\n    ).reduce( // flaten the players\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    );\r\n    return Array.from(new Set(allPlayers));\r\n}\r\n\r\n/**\r\n * Sort the standings by score, see USCF tie-break rules from § 34.\r\n * @param {number[]} methods\r\n * @param {Round[]} roundList\r\n * @param {number} [roundId]\r\n * @returns {[Standing[][], string[]]} The standings and the list of method used\r\n */\r\nexport function calcStandings(methods, roundList, roundId = null) {\r\n    const tieBreaks = methods.map((m) => tieBreakMethods[m]);\r\n    // Get a flat list of all of the players and their scores.\r\n    const standingsFlat = getAllPlayers(roundList).map(function (pId) {\r\n        /** @type {Standing} */\r\n        const standing = {\r\n            id: pId,\r\n            score: playerScore(pId, roundList, roundId),\r\n            tieBreaks: tieBreaks.map((method) => (\r\n                method.func(pId, roundList, roundId)\r\n            ))\r\n        };\r\n        return standing;\r\n    });\r\n    // Create a function to sort the players\r\n    let sortFunc = firstBy((standing) => standing.score, -1);\r\n    // For each tiebreak method, chain another `thenBy` to the function.\r\n    tieBreaks.forEach(function (ignore, index) {\r\n        sortFunc = sortFunc.thenBy((standing) => standing.tieBreaks[index], -1);\r\n    });\r\n    // Finally, sort the players.\r\n    standingsFlat.sort(sortFunc);\r\n    /** @type {Standing[][]} */\r\n    const standingsTree = [];\r\n    let runningRank = 0;\r\n    standingsFlat.forEach(function (standing, i, orig) {\r\n        if (i !== 0) { // we can't compare the first player with a previous one\r\n            const prevPlayer = orig[i - 1];\r\n            if (!areScoresEqual(standing, prevPlayer)) {\r\n                runningRank += 1;\r\n            }\r\n        }\r\n        if (!standingsTree[runningRank]) {\r\n            standingsTree[runningRank] = [];\r\n        }\r\n        standingsTree[runningRank].push(standing);\r\n    });\r\n    return [standingsTree, tieBreaks.map((m) => m.name)];\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number?} 0 for white, 1 for black, null if no color history\r\n */\r\nfunction dueColor(playerId, roundList, roundId = null) {\r\n    if (!roundList[roundId - 1]) {\r\n        return null;\r\n    }\r\n    let color = 0;\r\n    let prevColor = playerMatchColor(\r\n        playerId,\r\n        roundList[roundId - 1]\r\n    );\r\n    if (prevColor === 0) {\r\n        color = 1;\r\n    }\r\n    return color;\r\n}\r\n\r\n/**\r\n * @param {number} playerId\r\n * @param {Round[]} roundList\r\n * @param {number} roundId\r\n * @param {Player[]} playerList\r\n * @param {number[][]} avoidList\r\n * @returns {PlayerData}\r\n */\r\nexport function genPlayerData(\r\n    playerId,\r\n    playerList,\r\n    avoidList,\r\n    roundList,\r\n    roundId\r\n) {\r\n    const player = getPlayerById(playerList, playerId);\r\n    return {\r\n        profile: player,\r\n        rating: player.rating,\r\n        id: playerId,\r\n        score: playerScore(playerId, roundList, roundId),\r\n        dueColor: dueColor(playerId, roundList, roundId),\r\n        colorBalance: playerColorBalance(playerId, roundList, roundId),\r\n        opponentHistory: getPlayersByOpponent(playerId, roundList, null),\r\n        upperHalf: false,\r\n        avoidList: getPlayerAvoidList(playerId, avoidList),\r\n        hasHadBye: hasHadBye(playerId, roundList, roundId)\r\n    };\r\n}\r\n","import {firstBy} from \"thenby\";\r\nimport splitAt from \"ramda/src/splitAt\";\r\nimport last from \"ramda/src/last\";\r\nimport blossom from \"edmonds-blossom\";\r\nimport {dummyPlayer} from \"../data/player\";\r\nimport {genPlayerData} from \"./scoring\";\r\n/**\r\n * @typedef {import(\"./\").PlayerData} PlayerData\r\n */\r\n\r\n/**\r\n * TODO: These probably need to be tweaked a lot.\r\n */\r\n/**\r\n * @constant avoidMeetingTwicePriority The weight given to avoid players\r\n * meeting twice. This same weight is given to avoid matching players on each\r\n * other's \"avoid\" list. This is the highest priority. (USCF § 27A1)\r\n * @type {number}\r\n */\r\nconst avoidMeetingTwicePriority = 20;\r\n/**\r\n * @constant sameScoresPriority The weight given to match players with\r\n * equal scores. This gets muliplied against a ratio taken from the distance\r\n * between each player's score. For example, if the tournament has players\r\n * scoring 0, 1, 2, and 3, and if a player scoring 1 gets compared with a\r\n * player scoring 3, then their `sameScoresPriority` will be reduced by 50%.\r\n * (`(3 - 1) / 4 = 0.5`) (USCF § 27A2)\r\n * @type {number}\r\n */\r\nconst sameScoresPriority = 16;\r\n/**\r\n * @constant differentHalfPriority The weight given to match players in lower\r\n * versus upper halves. This is only applied to players being matched within\r\n * the same score group. (USCF § 27A3)\r\n * @type {number}\r\n */\r\nconst differentHalfPriority = 2;\r\n/**\r\n * @constant differentDueColorPriority The weight given to match players with\r\n * opposite due colors. (USCF § 27A4 and § 27A5)\r\n * @type {number}\r\n */\r\nconst differentDueColorPriority = 1;\r\n// /** @type {number} */\r\n// const maxPriority = (\r\n//     avoidMeetingTwicePriority\r\n//     + sameScoresPriority\r\n//     + differentHalfPriority\r\n//     + differentDueColorPriority\r\n// );\r\n\r\n\r\n/**\r\n * Create an array of blossom-compatible weighted matchups. This returns\r\n * an array of each potential match, formatted like so: [idOfPlayer1,\r\n * idOfPlayer2, priority]. A higher priority means a more likely matchup.\r\n * @param {PlayerData} player1\r\n * @param {PlayerData} player2\r\n * @param {number[]} scoreList\r\n * @returns {number}\r\n */\r\nexport function calcPairIdeal(player1, player2, scoreList) {\r\n    let priority = 0;\r\n    let scoreDiff;\r\n    const metBefore = player1.opponentHistory.includes(player2.id);\r\n    const mustAvoid = player1.avoidList.includes(player2.id);\r\n    if (!metBefore && !mustAvoid) {\r\n        priority += avoidMeetingTwicePriority;\r\n    }\r\n    // Calculate the \"distance\" between their scores and multiply that\r\n    // against the `sameScoresPriority` constant.\r\n    scoreDiff = Math.abs(\r\n        scoreList.indexOf(player1.score)\r\n        - scoreList.indexOf(player2.score)\r\n    );\r\n    scoreDiff = (scoreList.length - scoreDiff) / scoreList.length;\r\n    priority += sameScoresPriority * scoreDiff;\r\n    // Only include `differentHalfPriority` if they're in the same\r\n    // score group.\r\n    if (player1.score === player2.score) {\r\n        if (player1.upperHalf !== player2.upperHalf) {\r\n            priority += differentHalfPriority;\r\n        }\r\n    }\r\n    if (player1.dueColor === null) {\r\n        priority += differentDueColorPriority;\r\n    } else if (player1.dueColor !== player2.dueColor) {\r\n        priority += differentDueColorPriority;\r\n    }\r\n    return Math.ceil(priority);\r\n}\r\n\r\n/**\r\n * Creates pairings according to the rules specified in USCF § 27, § 28,\r\n * and § 29. This is a work in progress and does not account for all of the\r\n * rules yet.\r\n * @param {object[][]} roundList\r\n * @param {number} roundId\r\n * @param {number[]} players\r\n * @param {object[]} playerList\r\n * @param {number[][]} avoidList\r\n */\r\nexport default function pairPlayers(\r\n    players,\r\n    roundId,\r\n    roundList,\r\n    playerList,\r\n    avoidList\r\n) {\r\n    /** @type {number[]} */\r\n    let byeMatch;\r\n    /** @type {number[][]} */\r\n    let potentialMatches;\r\n    /** @type {Number[][]} */\r\n    let matches;\r\n    /** @type {number[]} */\r\n    let blossomResults;\r\n    /** @type {[PlayerData, PlayerData, number][]} */\r\n    let reducedResults;\r\n    /** @type {number[]} */\r\n    let scoreList;\r\n    /** @type {PlayerData[]} */\r\n    let playerData = players.map((playerId) => (\r\n        genPlayerData(playerId, playerList, avoidList, roundList, roundId)\r\n    ));\r\n    scoreList = Array.from(new Set(playerData.map((p) => p.score)));\r\n    scoreList.sort();\r\n    // Sort the data so matchups default to order by score and rating.\r\n    playerData.sort(\r\n        firstBy((p) => p.score, -1).thenBy((p) => p.rating, -1)\r\n    );\r\n    // If there's an odd number of players, time to assign a bye.\r\n    if (playerData.length % 2 !== 0) {\r\n        // Assign a bye to the lowest-rated player in the lowest score group.\r\n        // (USCF § 29L2.)\r\n        // filter out players who have had a bye already.\r\n        let byePlayerData = last(playerData.filter((p) => !p.hasHadBye));\r\n        // In the impossible situation that *everyone* has played a bye round\r\n        // previously, then just pick the last player.\r\n        if (!byePlayerData) {\r\n            byePlayerData = last(playerData);\r\n        }\r\n        byeMatch = [byePlayerData.id, dummyPlayer.id];\r\n        // Remove the bye'd player from the list so they won't be matched again.\r\n        playerData = playerData.filter((p) => p !== byePlayerData);\r\n    }\r\n    // Determine which players are in the upper and lower halves of their score\r\n    // groups.\r\n    scoreList.forEach(function (score) {\r\n        let playersWithScore = playerData.filter((pd) => pd.score === score);\r\n        playersWithScore.sort((pd) => pd.rating).reverse();\r\n        if (playersWithScore.length > 1) {\r\n            splitAt(\r\n                playersWithScore.length / 2,\r\n                playersWithScore\r\n            )[0].forEach(function (playerDatum) {\r\n                playerDatum.upperHalf = true;\r\n            });\r\n        }\r\n    });\r\n    // Turn the data into blossom-compatible input.\r\n    potentialMatches = playerData.reduce(\r\n        function (acc, player1, ignore, src) {\r\n            const playerMatches = src.filter(\r\n                (player) => player !== player1\r\n            ).map(\r\n                (player2) => [\r\n                    player1.id,\r\n                    player2.id,\r\n                    calcPairIdeal(player1, player2, scoreList)\r\n                ]\r\n            );\r\n            return acc.concat(playerMatches);\r\n        },\r\n        []\r\n    );\r\n    // Feed all of the potential matches to Edmonds-blossom and let the\r\n    // algorithm work its magic. This returns an array where each index is the\r\n    // ID of one player and each value is the ID of the matched player.\r\n    blossomResults = blossom(potentialMatches);\r\n    // Translate those IDs into actual pairs of players.\r\n    reducedResults = blossomResults.reduce(\r\n        function (acc, p1Id, p2Id) {\r\n            // Filter out unmatched players. Even though we removed the byes\r\n            // from the list, blossom will automatically include their missing\r\n            // IDs in its results.\r\n            if (p1Id !== -1) {\r\n                const p1 = playerData.filter((p) => p.id === p1Id)[0];\r\n                const p2 = playerData.filter((p) => p.id === p2Id)[0];\r\n                const ideal = potentialMatches.filter(\r\n                    (pair) => pair[0] === p1Id && pair[1] === p2Id\r\n                )[0][2];\r\n                const matched = acc.map((pair) => pair[0]);\r\n                // Blossom returns a lot of redundant matches. Check that this\r\n                // matchup wasn't already added.\r\n                if (!matched.includes(p1) && !matched.includes(p2)) {\r\n                    acc.push([p1, p2, ideal]);\r\n                }\r\n            }\r\n            return acc;\r\n        },\r\n        []\r\n    );\r\n    // Sort by net score and rating for board placement.\r\n    reducedResults.sort(\r\n        firstBy(\r\n            /** @param {[PlayerData, PlayerData, number]} pair */\r\n            (pair) => pair[0].score + pair[1].score,\r\n            -1\r\n        ).thenBy(\r\n            /** @param {[PlayerData, PlayerData, number]} pair */\r\n            (pair) => pair[0].rating + pair[1].rating,\r\n            -1\r\n        )\r\n    );\r\n    // Turn the results into new match objects.\r\n    matches = reducedResults.map(\r\n        function (pair) {\r\n            const player1 = pair[0];\r\n            const player2 = pair[1];\r\n            // const ideal = pair[2];\r\n            const match = [player1.id, player2.id];\r\n            if (player1.colorBalance < player2.colorBalance) {\r\n                match.reverse();\r\n            }\r\n            return match;\r\n        }\r\n    );\r\n    // The bye match always gets added last so as not to affect the numbering.\r\n    if (byeMatch) {\r\n        matches.push(byeMatch);\r\n    }\r\n    return matches;\r\n}\r\n","import {curry} from \"ramda\";\r\nimport {BLACK, WHITE} from \"../data/constants\";\r\nimport createMatch from \"../data/match\";\r\nimport {dummyPlayer, getPlayerById} from \"../data/player\";\r\nimport {hasHadBye} from \"../pairing-scoring/scoring\";\r\nimport pairPlayers from \"../pairing-scoring/pairing\";\r\n/**\r\n * @typedef {import(\"../data/index\").Player} Player\r\n * @typedef {import(\"../data/index\").Tournament} Tournament\r\n*/\r\n\r\n/**\r\n * @param {Tournament} tourney\r\n * @param {number} roundId\r\n * @param {import(\".\").PlayerState} playerState\r\n * @param {number[]} unPairedPlayers\r\n * @param {number} byeValue\r\n */\r\nexport function autoPair(\r\n    tourney,\r\n    playerState,\r\n    roundId,\r\n    unPairedPlayers,\r\n    byeValue\r\n) {\r\n    const roundList = tourney.roundList;\r\n    const getPlayer = curry(getPlayerById)(playerState.players);\r\n    const nextBye = tourney.byeQueue.filter(\r\n        (pId) => !hasHadBye(pId, roundList)\r\n    )[0];\r\n    let byeMatch = null;\r\n    if (nextBye >= 0) {\r\n        byeMatch = createMatch({\r\n            id: nextBye + \"-\" + dummyPlayer.id,\r\n            players: [nextBye, dummyPlayer.id],\r\n            origRating: [\r\n                getPlayer(nextBye).rating,\r\n                dummyPlayer.rating\r\n            ],\r\n            newRating: [\r\n                getPlayer(nextBye).rating,\r\n                dummyPlayer.rating\r\n            ]\r\n        });\r\n        unPairedPlayers = unPairedPlayers.filter((pId) => pId !== nextBye);\r\n    }\r\n    const pairs = pairPlayers(\r\n        unPairedPlayers,\r\n        roundId,\r\n        roundList,\r\n        playerState.players,\r\n        playerState.avoid\r\n    );\r\n    const newMatchList = pairs.map(\r\n        (pair) => createMatch({\r\n            id: pair.join(\"-\"),\r\n            players: [pair[WHITE], pair[BLACK]],\r\n            origRating: [\r\n                getPlayer(pair[WHITE]).rating,\r\n                getPlayer(pair[BLACK]).rating\r\n            ],\r\n            newRating: [\r\n                getPlayer(pair[WHITE]).rating,\r\n                getPlayer(pair[BLACK]).rating\r\n            ]\r\n        })\r\n    );\r\n    if (byeMatch) {\r\n        newMatchList.push(byeMatch);\r\n    }\r\n    // this covers manual bye matches and auto-paired bye matches\r\n    newMatchList.forEach(function (match) {\r\n        const dummy = match.players.indexOf(dummyPlayer.id);\r\n        if (dummy === BLACK) {\r\n            match.result[WHITE] = byeValue;\r\n        }\r\n        if (dummy === WHITE) {\r\n            match.result[BLACK] = byeValue;\r\n        }\r\n    });\r\n    return newMatchList;\r\n}\r\n\r\n/**\r\n * @param {Player[]} players\r\n * @param {number[]} pair\r\n * @param {number} byeValue\r\n */\r\nexport function manualPair(players, pair, byeValue) {\r\n    const getPlayer = curry(getPlayerById)(players);\r\n    const match = createMatch({\r\n        id: pair.join(\"-\"),\r\n        players: [pair[WHITE], pair[BLACK]],\r\n        origRating: [\r\n            getPlayer(pair[WHITE]).rating,\r\n            getPlayer(pair[BLACK]).rating\r\n        ],\r\n        newRating: [\r\n            getPlayer(pair[WHITE]).rating,\r\n            getPlayer(pair[BLACK]).rating\r\n        ]\r\n    });\r\n    if (pair[WHITE] === dummyPlayer.id) {\r\n        match.result = [0, byeValue];\r\n    }\r\n    if (pair[BLACK] === dummyPlayer.id) {\r\n        match.result = [byeValue, 0];\r\n    }\r\n    return match;\r\n}\r\n","import {createContext, createElement, useContext, useReducer} from \"react\";\r\n// This will cause Webpack to import the entire Ramda library, but we're using\r\n// so much of it that cherry-picking individual files has virtually no benefit.\r\nimport {\r\n    __,\r\n    append,\r\n    concat,\r\n    difference,\r\n    last,\r\n    lensPath,\r\n    mergeRight,\r\n    filter,\r\n    findIndex,\r\n    move,\r\n    over,\r\n    propEq,\r\n    remove,\r\n    reverse,\r\n    set\r\n} from \"ramda\";\r\nimport {getPlayerById} from \"../data/player\";\r\nimport defaultTourneyList from \"./demo-tourney.json\";\r\nimport {autoPair, manualPair} from \"./match-functions\";\r\n/**\r\n * @typedef {import(\"./dispatch\").Action} Action\r\n * @typedef {import(\"../data/index\").Tournament} Tournament\r\n */\r\n\r\n/** @type {Tournament[]} */\r\n// @ts-ignore\r\nconst defaultData = defaultTourneyList;\r\n\r\n/**\r\n * @param {Tournament[]} state\r\n * @param {Action} action\r\n * @returns {Tournament[]}\r\n */\r\nfunction tourneysReducer(state, action) {\r\n    switch (action.type) {\r\n    case \"ADD_TOURNEY\":\r\n        return append(action.tourney, state);\r\n    case \"DEL_TOURNEY\":\r\n        return state.filter((ignore, i) => i !== action.index);\r\n    case \"ADD_ROUND\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\"]),\r\n            append([]),\r\n            state\r\n        );\r\n    case \"DEL_LAST_ROUND\":\r\n        // If a match has been scored, then reset it.\r\n        // TODO: This logic should probably be somewhere else?\r\n        last(\r\n            state[action.tourneyId].roundList\r\n        ).forEach(\r\n            function (match) {\r\n                if (match.result[0] + match.result[1] !== 0) {\r\n                    match.players.forEach(\r\n                        function (pId, color) {\r\n                            getPlayerById(action.players, pId).matchCount -= 1;\r\n                            getPlayerById(action.players, pId).rating = (\r\n                                match.origRating[color]\r\n                            );\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        );\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\"]),\r\n            remove(-1, 1),\r\n            state\r\n        );\r\n    case \"ADD_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            append(action.id),\r\n            state\r\n        );\r\n    case \"DEL_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            filter((id) => id !== action.id),\r\n            state\r\n        );\r\n    case \"MOVE_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    case \"SET_TOURNEY_PLAYERS\":\r\n        return set(\r\n            lensPath([action.tourneyId, \"players\"]),\r\n            action.players,\r\n            state\r\n        );\r\n    case \"SET_BYE_QUEUE\":\r\n        return set(\r\n            lensPath([action.tourneyId, \"byeQueue\"]),\r\n            action.byeQueue,\r\n            state\r\n        );\r\n    case \"AUTO_PAIR\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            concat(\r\n                // @ts-ignore\r\n                __,\r\n                autoPair(\r\n                    state[action.tourneyId],\r\n                    action.playerState,\r\n                    action.roundId,\r\n                    action.unpairedPlayers,\r\n                    action.byeValue\r\n                )\r\n            ),\r\n            state\r\n        );\r\n    case \"MANUAL_PAIR\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            append(manualPair(action.players, action.pair, action.byeValue)),\r\n            state\r\n        );\r\n    case \"SET_MATCH_RESULT\":\r\n        return set(\r\n            lensPath([\r\n                action.tourneyId,\r\n                \"roundList\",\r\n                action.roundId,\r\n                findIndex(\r\n                    propEq(\"id\", action.matchId),\r\n                    state[action.tourneyId].roundList[action.roundId]\r\n                ),\r\n                \"result\"\r\n            ]),\r\n            action.result,\r\n            set(\r\n                lensPath([\r\n                    action.tourneyId,\r\n                    \"roundList\",\r\n                    action.roundId,\r\n                    findIndex(\r\n                        propEq(\"id\", action.matchId),\r\n                        state[action.tourneyId].roundList[action.roundId]\r\n                    ),\r\n                    \"newRating\"\r\n                ]),\r\n                action.newRating,\r\n                state\r\n            )\r\n        );\r\n    case \"DEL_MATCH\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            filter((match) => match.id !== action.matchId),\r\n            state\r\n        );\r\n    case \"SWAP_COLORS\":\r\n        return over(\r\n            lensPath([\r\n                action.tourneyId,\r\n                \"roundList\",\r\n                action.roundId,\r\n                findIndex(\r\n                    propEq(\"id\", action.matchId),\r\n                    state[action.tourneyId].roundList[action.roundId]\r\n                )\r\n            ]),\r\n            (match) => mergeRight(\r\n                match,\r\n                {\r\n                    result: reverse(match.result),\r\n                    players: reverse(match.players),\r\n                    origRating: reverse(match.origRating),\r\n                    newRating: reverse(match.newRating)\r\n                }\r\n            ),\r\n            state\r\n        );\r\n    case \"MOVE_MATCH\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    default:\r\n        throw new Error(\"Unexpected action type \" + action.type);\r\n    }\r\n}\r\n\r\n/** @type {[Tournament[], React.Dispatch<Action>]} */\r\nconst defaultContext = null;\r\nconst TournamentContext = createContext(defaultContext);\r\n\r\nexport function useTournaments() {\r\n    return useContext(TournamentContext);\r\n}\r\n\r\n/**\r\n * @param {number} [tourneyId]\r\n * @returns {[Tournament, React.Dispatch<Action>]}\r\n */\r\nexport function useTournament(tourneyId) {\r\n    const [tourneys, dispatch] = useContext(TournamentContext);\r\n    return [tourneys[tourneyId], dispatch];\r\n}\r\n\r\n/**\r\n * @param {number} tourneyId\r\n * @param {number} roundId\r\n */\r\nexport function useRound(tourneyId, roundId) {\r\n    const [tourney, dispatch] = useTournament(tourneyId);\r\n    const matchList = tourney.roundList[roundId];\r\n    const matched = matchList.reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    );\r\n    const unmatched = difference(tourney.players, matched);\r\n    return {tourney, dispatch, unmatched, matchList};\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function TournamentProvider(props) {\r\n    const [state, dispatch] = useReducer(tourneysReducer, defaultData);\r\n    return (\r\n        createElement(\r\n            TournamentContext.Provider,\r\n            {value: [state, dispatch]},\r\n            props.children\r\n        )\r\n    );\r\n}\r\n","import {createContext, createElement, useContext, useReducer} from \"react\";\r\nimport {lensPath, set} from \"ramda\";\r\nimport defaultOptions from \"./demo-options.json\";\r\n/**\r\n * @typedef {import(\"./dispatch\").OptionAction} OptionAction\r\n */\r\n\r\n/**\r\n * @param {typeof defaultOptions} state\r\n * @param {OptionAction} action\r\n */\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n    case \"SET_BYE_VALUE\":\r\n        return set(\r\n            lensPath([\"byeValue\"]),\r\n            action.byeValue,\r\n            state\r\n        );\r\n    default:\r\n        throw new Error(\"Unexpected action type \" + action.type);\r\n    }\r\n}\r\n\r\n/** @type {[typeof defaultOptions, React.Dispatch<OptionAction>]} */\r\nconst defaultContext = null;\r\nconst OptionsContext = createContext(defaultContext);\r\n\r\nexport function useOptions() {\r\n    return useContext(OptionsContext);\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function OptionsProvider(props) {\r\n    const [data, dispatch] = useReducer(reducer, defaultOptions);\r\n    return (\r\n        createElement(\r\n            OptionsContext.Provider,\r\n            {value: [data, dispatch]},\r\n            props.children\r\n        )\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"@reach/router\";\r\nimport {usePlayers} from \"../state\";\r\nimport {dummyPlayer} from \"../data/player\";\r\nimport styles from \"./utility.module.css\";\r\n\r\n/**\r\n * @typedef {(event: React.MouseEvent | React.KeyboardEvent) => void} Action\r\n */\r\n\r\n/** @param {{children: JSX.Element | string, action: Action}} props */\r\nexport const Button = ({children, action}) => (\r\n    <button onClick={action}>\r\n        {children}\r\n    </button>\r\n);\r\n\r\n/** @param {{action: Action}} action */\r\nexport const BackButton = ({action}) => (\r\n    <Button action={action}>&lt; Back</Button>\r\n);\r\n\r\n/** @param {{action: Action}} action */\r\nexport const OpenButton = ({action}) => (\r\n    <Button action={action}>Open &gt;</Button>\r\n);\r\n\r\n/**\r\n * @param {object} props\r\n * @param {React.ReactNode} props.children\r\n * @param {React.CSSProperties} [props.style]\r\n */\r\nexport function Panel({children, style}) {\r\n    return (\r\n        <div style={{...style}} className={styles.panel}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} props\r\n */\r\nexport function PanelContainer(props) {\r\n    return (\r\n        <div {...props} className={styles.panels}>\r\n            {React.Children.map(props.children, (child) => child)}\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function PlayerLink({id, firstName, lastName}) {\r\n    const {getPlayer} = usePlayers();\r\n    let name = \"\";\r\n    if (firstName) {\r\n        name += getPlayer(id).firstName + \" \";\r\n    }\r\n    if (lastName) {\r\n        name += getPlayer(id).lastName;\r\n    }\r\n    if (id === dummyPlayer.id) {\r\n        return <span>{name}</span>; // there's no bye player profile\r\n    }\r\n    return (\r\n        <Link to={\"/players/\" + id}>\r\n            {name}\r\n        </Link>\r\n    );\r\n}\r\n","/**\r\n * @param {number} playerCount\r\n */\r\nexport function calcNumOfRounds(playerCount) {\r\n    let roundId = Math.ceil(Math.log2(playerCount));\r\n    if (!Number.isFinite(roundId)) {\r\n        roundId = 0;\r\n    }\r\n    return roundId;\r\n}\r\n\r\n/**\r\n * @template {object} T\r\n * @param {T[]} list\r\n * @param {number | string} id\r\n * @returns {T}\r\n */\r\nexport function getById(list, id) {\r\n    return list.filter((x) => x.id === id)[0];\r\n}\r\n\r\n/**\r\n * @param {Object[]} list\r\n * @param {number | string} id\r\n */\r\nexport function getIndexById(list, id) {\r\n    return list.indexOf(getById(list, id));\r\n}\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport {genPlayerData} from \"../../../pairing-scoring/scoring\";\r\nimport {useRound, usePlayers} from \"../../../state\";\r\nimport {getById} from \"../../../data/utility\";\r\n\r\n/**\r\n * @typedef {import(\"../../../data\").Match} Match\r\n */\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {string} props.matchId\r\n * @param {number} props.color\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n */\r\nexport default function PlayerMatchInfo({matchId, color, tourneyId, roundId}) {\r\n    const {tourney, matchList} = useRound(tourneyId, roundId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const match = getById(matchList, matchId);\r\n    const playerData = genPlayerData(\r\n        match.players[color],\r\n        playerState.players,\r\n        playerState.avoid,\r\n        tourney.roundList,\r\n        roundId\r\n    );\r\n    const colorBalance = playerData.colorBalance;\r\n    let prettyBalance = \"Even\";\r\n    if (colorBalance < 0) {\r\n        prettyBalance = \"White +\" + Math.abs(colorBalance);\r\n    } else if (colorBalance > 0) {\r\n        prettyBalance = \"Black +\" + colorBalance;\r\n    }\r\n    return (\r\n        <dl className=\"player-card\">\r\n            <h3>\r\n                {playerData.profile.firstName} {playerData.profile.lastName}\r\n            </h3>\r\n            <dt>Score</dt>\r\n            <dd>{playerData.score}</dd>\r\n            <dt>Rating</dt>\r\n            <dd>\r\n                {match.origRating[color]} (\r\n                {numeral(\r\n                    match.newRating[color] - match.origRating[color]\r\n                ).format(\"+0\")}\r\n                )\r\n            </dd>\r\n            <dt>Color balance</dt>\r\n            <dd>{prettyBalance}</dd>\r\n            <dt>Has had a bye round</dt>\r\n            <dd>{playerData.hasHadBye ? \"Yes\" : \"No\"}</dd>\r\n            <dt>Opponent history</dt>\r\n            <dd>\r\n                <ol>\r\n                    {playerData.opponentHistory.map((opId) => (\r\n                        <li key={opId}>\r\n                            {getPlayer(opId).firstName}{\" \"}\r\n                            {getPlayer(opId).lastName}\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </dd>\r\n        </dl>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Edit from \"react-feather/dist/icons/edit\";\r\nimport Info from \"react-feather/dist/icons/info\";\r\nimport Check from \"react-feather/dist/icons/check\";\r\nimport {PanelContainer, Panel} from \"../../utility\";\r\nimport {calcNewRatings, dummyPlayer} from \"../../../data/player\";\r\nimport {BLACK, WHITE} from \"../../../data/constants\";\r\nimport {useRound, usePlayers} from \"../../../state\";\r\nimport PlayerMatchInfo from \"./player-match-info\";\r\n// @ts-ignore\r\nimport {winnerSelect, selected} from \"./round.module.css\";\r\nimport \"@reach/dialog/styles.css\";\r\n\r\n/**\r\n * @typedef {import(\"../../../data\").Match} Match\r\n */\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.pos\r\n * @param {Match} props.match\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n * @param {string} props.selectedMatch\r\n * @param {React.Dispatch<React.SetStateAction<string>>} props.setSelectedMatch\r\n */\r\nexport default function MatchRow({\r\n    pos,\r\n    match,\r\n    tourneyId,\r\n    roundId,\r\n    selectedMatch,\r\n    setSelectedMatch\r\n}) {\r\n    const {tourney, dispatch} = useRound(tourneyId, roundId);\r\n    const {playerDispatch, getPlayer} = usePlayers();\r\n    const [openModal, setOpenModal] = useState(false);\r\n    /** @type {string} */\r\n    let resultCode;\r\n    if (match.result[0] > match.result[1]) {\r\n        resultCode = \"WHITE\";\r\n    } else if (match.result[1] > match.result[0]) {\r\n        resultCode = \"BLACK\";\r\n    } else if (match.result.every((x) => x === 0.5)) {\r\n        resultCode = \"DRAW\";\r\n    } else {\r\n        resultCode = \"NOTSET\";\r\n    }\r\n    const whiteName = (\r\n        getPlayer(match.players[0]).firstName\r\n        + \" \"\r\n        + getPlayer(match.players[0]).lastName\r\n    );\r\n    const blackName = (\r\n        getPlayer(match.players[1]).firstName\r\n        + \" \"\r\n        + getPlayer(match.players[1]).lastName\r\n    );\r\n    /**\r\n     * @param {React.FocusEvent<HTMLSelectElement>} event\r\n     */\r\n    function setMatchResult(event) {\r\n        /** @type {[number, number]} */\r\n        let result;\r\n        switch (event.currentTarget.value) {\r\n        case \"WHITE\":\r\n            result = [1, 0];\r\n            break;\r\n        case \"BLACK\":\r\n            result = [0, 1];\r\n            break;\r\n        case \"DRAW\":\r\n            result = [0.5, 0.5];\r\n            break;\r\n        case \"NOTSET\":\r\n            result = [0, 0];\r\n            break;\r\n        default:\r\n            throw new Error();\r\n        }\r\n        const white = getPlayer(match.players[WHITE]);\r\n        const black = getPlayer(match.players[BLACK]);\r\n        const newRating = (\r\n            (event.currentTarget.value === \"NOTSET\")\r\n            ? match.origRating\r\n            : calcNewRatings(\r\n                match.origRating,\r\n                [white.matchCount, black.matchCount],\r\n                result\r\n            )\r\n        );\r\n        playerDispatch({\r\n            type: \"SET_PLAYER_RATING\",\r\n            id: white.id,\r\n            rating: newRating[WHITE]\r\n        });\r\n        playerDispatch({\r\n            type: \"SET_PLAYER_RATING\",\r\n            id: black.id,\r\n            rating: newRating[BLACK]\r\n        });\r\n        // if the result hasn't been scored yet, increment the matchCount\r\n        if (match.result.reduce((a, b) => a + b) === 0) {\r\n            playerDispatch({\r\n                type: \"SET_PLAYER_MATCHCOUNT\",\r\n                id: white.id,\r\n                matchCount: white.matchCount + 1\r\n            });\r\n            playerDispatch({\r\n                type: \"SET_PLAYER_MATCHCOUNT\",\r\n                id: black.id,\r\n                matchCount: black.matchCount + 1\r\n            });\r\n        }\r\n        dispatch({\r\n            type: \"SET_MATCH_RESULT\",\r\n            tourneyId,\r\n            roundId,\r\n            matchId: match.id,\r\n            result,\r\n            newRating\r\n        });\r\n    }\r\n    return (\r\n        <tr className={match.id === selectedMatch ? selected : \"\"}>\r\n            <th className=\"table__number row__id\" scope=\"row\">{pos + 1}</th>\r\n            <td\r\n                className=\"table__player row__player\"\r\n                data-testid={`match-${pos}-white`}\r\n            >\r\n                {whiteName}{\" \"}\r\n                {resultCode === \"WHITE\" && (\r\n                    <span role=\"img\" aria-label=\"Winner\">\r\n                        🏆\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td\r\n                className=\"table__player row__player\"\r\n                data-testid={`match-${pos}-black`}\r\n            >\r\n                {blackName}{\" \"}\r\n                {resultCode === \"BLACK\" && (\r\n                    <span role=\"img\" aria-label=\"Winner\">\r\n                        🏆\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td className=\"data__input row__controls\">\r\n                <select\r\n                    onBlur={setMatchResult}\r\n                    onChange={setMatchResult}\r\n                    disabled={match.players.includes(dummyPlayer.id)}\r\n                    value={resultCode}\r\n                    className={winnerSelect}\r\n                >\r\n                    <option value=\"NOTSET\">\r\n                        Select a winner\r\n                    </option>\r\n                    <option value=\"WHITE\">\r\n                        {whiteName} won\r\n                    </option>\r\n                    <option value=\"BLACK\">\r\n                        {blackName} won\r\n                    </option>\r\n                    <option value=\"DRAW\">\r\n                        Draw\r\n                    </option>\r\n                </select>\r\n            </td>\r\n            <td className=\"data__input row__controls\">\r\n                {(selectedMatch !== match.id)\r\n                ? (\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => setSelectedMatch(match.id)}\r\n                        title=\"Edit match\"\r\n                    >\r\n                        <Edit />\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => setSelectedMatch(null)}\r\n                        title=\"End editing match\"\r\n                    >\r\n                        <Check />\r\n                    </button>\r\n                )}\r\n                <button\r\n                    className=\"iconButton\"\r\n                    onClick={() => setOpenModal(true)}\r\n                    title=\"Open match information.\"\r\n                >\r\n                    <Info />\r\n                </button>\r\n                <Dialog isOpen={openModal}>\r\n                    <button onClick={() => setOpenModal(false)}>\r\n                        close\r\n                    </button>\r\n                    <p>{tourney.name}</p>\r\n                    <p>Round {roundId + 1}, match {pos + 1}</p>\r\n                    <PanelContainer>\r\n                        <Panel>\r\n                            <PlayerMatchInfo\r\n                                matchId={match.id}\r\n                                color={0}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                            />\r\n                        </Panel>\r\n                        <Panel>\r\n                            <PlayerMatchInfo\r\n                                matchId={match.id}\r\n                                color={1}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                            />\r\n                        </Panel>\r\n                    </PanelContainer>\r\n                </Dialog>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Repeat from \"react-feather/dist/icons/repeat\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\r\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\r\nimport Users from \"react-feather/dist/icons/users\";\r\nimport MatchRow from \"./match-row\";\r\nimport {PanelContainer, Panel} from \"../../utility\";\r\nimport {getById, getIndexById} from \"../../../data/utility\";\r\nimport {useRound, usePlayers} from \"../../../state\";\r\nimport style from \"./round.module.css\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.roundId\r\n * @param {number} props.tourneyId\r\n * @param {React.Dispatch<React.SetStateAction<boolean>>} props.setIsPickView\r\n */\r\nexport default function Round({roundId, tourneyId, setIsPickView}) {\r\n    const {matchList, dispatch, unmatched} = useRound(tourneyId, roundId);\r\n    const {playerDispatch, getPlayer} = usePlayers();\r\n    /** @type {string} */\r\n    const defaultMatch = null;\r\n    const [selectedMatch, setSelectedMatch] = useState(defaultMatch);\r\n    if (!matchList) {\r\n        throw new Error(\"Round \" + roundId + \" does not exist.\");\r\n    }\r\n    /** @param {string} matchId */\r\n    function unMatch(matchId) {\r\n        const match = getById(matchList, matchId);\r\n        if (match.result.reduce((a, b) => a + b) !== 0) {\r\n            // checks if the match has been scored yet & resets the players'\r\n            // records\r\n            match.players.forEach(function (pId, color) {\r\n                playerDispatch({\r\n                    type: \"SET_PLAYER_MATCHCOUNT\",\r\n                    id: pId,\r\n                    matchCount: getPlayer(pId).matchCount - 1\r\n                });\r\n                playerDispatch({\r\n                    type: \"SET_PLAYER_RATING\",\r\n                    id: pId,\r\n                    rating: match.origRating[color]\r\n                });\r\n            });\r\n        }\r\n        dispatch({type: \"DEL_MATCH\", tourneyId, roundId, matchId});\r\n        setSelectedMatch(null);\r\n    }\r\n    /** @param {string} matchId */\r\n    function swapColors(matchId) {\r\n        dispatch({type: \"SWAP_COLORS\", tourneyId, roundId, matchId});\r\n    }\r\n    /**\r\n     * @param {string} matchId\r\n     * @param {number} direction\r\n     */\r\n    function moveMatch(matchId, direction) {\r\n        const oldIndex = getIndexById(matchList, matchId);\r\n        const newIndex = (\r\n            (oldIndex + direction >= 0)\r\n            ? oldIndex + direction\r\n            : 0\r\n        );\r\n        dispatch({type: \"MOVE_MATCH\", tourneyId, roundId, oldIndex, newIndex});\r\n    }\r\n    return (\r\n        <PanelContainer data-testid={\"round-\" + roundId}>\r\n            <Panel>\r\n                <div className={style.toolbar}>\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => setIsPickView(true)}\r\n                        disabled={unmatched.length === 0}\r\n                        title=\"View unmatched players.\"\r\n                    >\r\n                        <Users /> View unmatched players{\" \"}\r\n                        {unmatched.length > 0 && `(${unmatched.length})`}\r\n                    </button>\r\n                    <button\r\n                        className=\"danger iconButton\"\r\n                        onClick={() => unMatch(selectedMatch)}\r\n                        disabled={selectedMatch === null}\r\n                    >\r\n                        <Trash /> Unmatch\r\n                    </button>\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => swapColors(selectedMatch)}\r\n                        disabled={selectedMatch === null}\r\n                    >\r\n                        <Repeat /> Swap colors\r\n                    </button>\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => moveMatch(selectedMatch, -1)}\r\n                        disabled={selectedMatch === null}\r\n                    >\r\n                        <ArrowUp /> Move up\r\n                    </button>\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => moveMatch(selectedMatch, 1)}\r\n                        disabled={selectedMatch === null}\r\n                    >\r\n                        <ArrowDown/> Move down\r\n                    </button>\r\n                </div>\r\n                {(matchList.length === 0) &&\r\n                    <p>No players matched yet.</p>\r\n                }\r\n                <table className={style.table}>\r\n                    {(matchList.length > 0) &&\r\n                        <caption>Round {roundId + 1} results</caption>\r\n                    }\r\n                    <tbody>\r\n                        {(matchList.length > 0) &&\r\n                            <tr>\r\n                                <th className=\"row__id\" scope=\"col\">\r\n                                    #\r\n                                </th>\r\n                                <th className=\"row__player\" scope=\"col\">\r\n                                    White\r\n                                </th>\r\n                                <th className=\"row__player\" scope=\"col\">\r\n                                    Black\r\n                                </th>\r\n                                <th className=\"row__result\" scope=\"col\">\r\n                                    Result\r\n                                </th>\r\n                                <th className=\"row__controls\" scope=\"col\">\r\n                                    Controls\r\n                                </th>\r\n                            </tr>\r\n                        }\r\n                        {matchList.map((match, pos) => (\r\n                            <MatchRow\r\n                                key={match.id}\r\n                                pos={pos}\r\n                                match={match}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                                selectedMatch={selectedMatch}\r\n                                setSelectedMatch={setSelectedMatch}\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Panel>\r\n            <Panel>\r\n            </Panel>\r\n        </PanelContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {set, lensIndex} from \"ramda\";\r\nimport {dummyPlayer} from \"../../../../data/player\";\r\nimport {useRound, usePlayers, useOptions} from \"../../../../state\";\r\nimport {WHITE, BLACK} from \"../../../../data/constants\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n * @param {[number, number]} props.stagedPlayers\r\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\r\n */\r\nexport default function PairPicker({\r\n    tourneyId,\r\n    roundId,\r\n    stagedPlayers,\r\n    setStagedPlayers\r\n}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const {dispatch, unmatched} = useRound(tourneyId, roundId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const [{byeValue}] = useOptions();\r\n    /** @param {number} id */\r\n    function selectPlayer(id) {\r\n        if (stagedPlayers[WHITE] === null) {\r\n            setStagedPlayers(\r\n                (prevState) => set(lensIndex(WHITE), id, prevState)\r\n            );\r\n        } else if (stagedPlayers[BLACK] === null) {\r\n            setStagedPlayers(\r\n                (prevState) => set(lensIndex(BLACK), id, prevState)\r\n            );\r\n        }\r\n        // else... nothing happens\r\n    }\r\n    if (unmatched.length % 2 !== 0) {\r\n        unmatched.push(dummyPlayer.id);\r\n    }\r\n    if (unmatched.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Unmatched players</h3>\r\n            <button\r\n                onClick={() => dispatch({\r\n                    type: \"AUTO_PAIR\",\r\n                    unpairedPlayers: unmatched,\r\n                    tourneyId,\r\n                    roundId,\r\n                    playerState,\r\n                    byeValue\r\n                })}\r\n                disabled={unmatched.length === 0}\r\n            >\r\n                Auto-pair unmatched players\r\n            </button>\r\n            <ul>\r\n                {unmatched.map((pId) => (\r\n                    <li key={pId}>\r\n                        {stagedPlayers.includes(pId)\r\n                        ? <button disabled>Added</button>\r\n                        : (\r\n                            <button\r\n                                disabled={!stagedPlayers.includes(null)}\r\n                                onClick={() => selectPlayer(pId)}\r\n                            >\r\n                                Add\r\n                            </button>\r\n                        )\r\n                        }\r\n                        {\" \"}\r\n                        <label htmlFor={`${pId}`}>\r\n                            {getPlayer(pId).firstName} {getPlayer(pId).lastName}\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport {set, lensIndex} from \"ramda\";\r\nimport {useTournament, usePlayers, useOptions} from \"../../../../state\";\r\nimport {WHITE, BLACK} from \"../../../../data/constants\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n * @param {[number, number]} props.stagedPlayers\r\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\r\n */\r\nexport default function Stage({\r\n    tourneyId,\r\n    roundId,\r\n    stagedPlayers,\r\n    setStagedPlayers\r\n}) {\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const {players} = playerState;\r\n    const dispatch = useTournament(tourneyId)[1];\r\n    const [{byeValue}] = useOptions();\r\n    const [white, black] = stagedPlayers;\r\n    /** @param {typeof WHITE | typeof BLACK} color */\r\n    function unstage(color) {\r\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\r\n    }\r\n    function match() {\r\n        dispatch({\r\n            type: \"MANUAL_PAIR\",\r\n            pair: [white, black],\r\n            tourneyId,\r\n            roundId,\r\n            byeValue,\r\n            players\r\n        });\r\n        setStagedPlayers([null, null]);\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Selected for matching:</h2>\r\n            <p>\r\n                White:{\" \"}\r\n                {white !== null &&\r\n                    <Fragment>\r\n                        {getPlayer(white).firstName}{\" \"}\r\n                        {getPlayer(white).lastName}\r\n                        <button onClick={() => unstage(WHITE)}>\r\n                            Remove\r\n                        </button>\r\n                    </Fragment>\r\n                }\r\n            </p>\r\n            <p>\r\n                Black:{\" \"}\r\n                {black !== null &&\r\n                    <Fragment>\r\n                        {getPlayer(black).firstName}{\" \"}\r\n                        {getPlayer(black).lastName}\r\n                        <button onClick={() => unstage(BLACK)}>\r\n                            Remove\r\n                        </button>\r\n                    </Fragment>\r\n                }\r\n            </p>\r\n            <button\r\n                onClick={() => setStagedPlayers(\r\n                    (prevState) => ([prevState[BLACK], prevState[WHITE]])\r\n                )}\r\n                disabled={\r\n                    stagedPlayers.every((id) => id === null)\r\n                }\r\n            >\r\n                Swap colors\r\n            </button>{\" \"}\r\n            <button\r\n                onClick={match}\r\n                disabled={stagedPlayers.includes(null)}\r\n            >\r\n                Match selected\r\n            </button>{\" \"}\r\n        </div>\r\n    );\r\n}\r\n","// this component should eventually replace player-match-info.jsx\r\nimport React from \"react\";\r\nimport {genPlayerData} from \"../../../../pairing-scoring/scoring\";\r\nimport {useTournament, usePlayers} from \"../../../../state\";\r\n\r\n/**\r\n * @typedef {import(\"../../../../data\").Match} Match\r\n */\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.playerId\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n */\r\nexport default function PlayerInfo({playerId, tourneyId, roundId}) {\r\n    const [{roundList}] = useTournament(tourneyId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n    const {players, avoid} = playerState;\r\n    const {\r\n        profile,\r\n        rating,\r\n        score,\r\n        colorBalance,\r\n        hasHadBye,\r\n        opponentHistory,\r\n        avoidList\r\n    } = genPlayerData(playerId, players, avoid, roundList, roundId);\r\n    let prettyBalance = \"Even\";\r\n    if (colorBalance < 0) {\r\n        prettyBalance = \"White +\" + Math.abs(colorBalance);\r\n    } else if (colorBalance > 0) {\r\n        prettyBalance = \"Black +\" + colorBalance;\r\n    }\r\n    return (\r\n        <dl className=\"player-card\">\r\n            <h3>\r\n                {profile.firstName} {profile.lastName}\r\n            </h3>\r\n            <p>Score: {score}</p>\r\n            <p>Rating: {rating}</p>\r\n            <p>Color balance: {prettyBalance}</p>\r\n            <p>Has had a bye round: {hasHadBye ? \"Yes\" : \"No\"}</p>\r\n            <p>Opponent history:</p>\r\n            <ol>\r\n                {opponentHistory.map((opId) => (\r\n                    <li key={opId}>\r\n                        {getPlayer(opId).firstName}{\" \"}\r\n                        {getPlayer(opId).lastName}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <p>\r\n                Players to avoid:\r\n            </p>\r\n            <ol>\r\n                {avoidList.map((pId) => (\r\n                    <li key={pId}>\r\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </dl>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport SelectList  from \"./pair-picker\";\r\nimport Stage from \"./stage\";\r\nimport PlayerInfo from \"./player-info\";\r\nimport {useRound} from \"../../../../state\";\r\nimport {PanelContainer, Panel} from \"../../../utility\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n * @param {React.Dispatch<React.SetStateAction<boolean>>} props.setIsPickView\r\n */\r\nexport default function PairPicker({tourneyId, roundId, setIsPickView}) {\r\n    /** @type {[number, number]} */\r\n    const defaultPlayers = [null, null];\r\n    const [stagedPlayers, setStagedPlayers] = useState(defaultPlayers);\r\n    const {matchList} = useRound(tourneyId, roundId);\r\n    return (\r\n        <PanelContainer>\r\n            <Panel>\r\n                <button onClick={() => setIsPickView(false)}>\r\n                    View matches ({matchList.length})\r\n                </button>\r\n                <SelectList\r\n                    tourneyId={tourneyId}\r\n                    roundId={roundId}\r\n                    stagedPlayers={stagedPlayers}\r\n                    setStagedPlayers={setStagedPlayers}\r\n                />\r\n            </Panel>\r\n            <Panel>\r\n                <Stage\r\n                    tourneyId={tourneyId}\r\n                    roundId={roundId}\r\n                    stagedPlayers={stagedPlayers}\r\n                    setStagedPlayers={setStagedPlayers}\r\n                />\r\n                <PanelContainer>\r\n                    {stagedPlayers.map((id) =>\r\n                        id !== null && (\r\n                            <Panel key={id}>\r\n                                <PlayerInfo\r\n                                    playerId={id}\r\n                                    tourneyId={tourneyId}\r\n                                    roundId={roundId}\r\n                                />\r\n                            </Panel>\r\n                        )\r\n                    )}\r\n                </PanelContainer>\r\n            </Panel>\r\n        </PanelContainer>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Round from \"./round\";\r\nimport PairPicker from \"./pair-picker\";\r\nimport {useRound} from \"../../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.roundId\r\n * @param {number} props.tourneyId\r\n */\r\nexport default function Index({tourneyId, roundId}) {\r\n    const {unmatched} = useRound(tourneyId, roundId);\r\n    const [isPickView, setIsPickView] = useState(unmatched.length > 0);\r\n    useEffect(\r\n        function () {\r\n            setIsPickView(unmatched.length > 0);\r\n        },\r\n        [unmatched.length]\r\n    );\r\n    if (isPickView) {\r\n        return (\r\n            <PairPicker\r\n                tourneyId={tourneyId}\r\n                roundId={roundId}\r\n                setIsPickView={setIsPickView}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <Round\r\n                tourneyId={tourneyId}\r\n                roundId={roundId}\r\n                setIsPickView={setIsPickView}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport numeral from \"numeral\";\r\nimport dashify from \"dashify\";\r\nimport {PanelContainer, Panel} from \"../utility\";\r\nimport {dummyPlayer} from \"../../data/player\";\r\nimport {useTournament, usePlayers} from \"../../state\";\r\nimport {calcStandings, tieBreakMethods} from \"../../pairing-scoring/scoring\";\r\nimport style from \"./scores.module.css\";\r\n\r\n// let's make a custom numeral format. I don't really know how this works.\r\nnumeral.register(\"format\", \"half\", {\r\n    regexps: {\r\n        format: /(1\\/2)/,\r\n        unformat: /(1\\/2)/\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    format: function (value, format, roundingFunction) {\r\n        /** @type {number | string} */\r\n        let whole = Math.floor(value);\r\n        /** @type {number | string} */\r\n        let remainder = value - whole;\r\n        if (remainder === 0.5) {\r\n            remainder = \"½\";\r\n        } else if (remainder === 0) {\r\n            remainder = \"\";\r\n        }\r\n        if (whole === 0 && remainder) {\r\n            whole = \"\";\r\n        }\r\n        // let output = numeral._.numberToFormat(value, format, roundingFunction);\r\n        // return output;\r\n        return String(whole) + remainder;\r\n    },\r\n    unformat: function (value) {\r\n        return Number(value); // doesn't work... todo?\r\n    }\r\n});\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n */\r\nfunction ScoreList({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [{tieBreaks, roundList}] = useTournament(tourneyId);\r\n    const {getPlayer} = usePlayers();\r\n    const [standingTree, tbMethods] = calcStandings(tieBreaks, roundList);\r\n    return (\r\n        <table className={style.table}>\r\n            <caption>Standings</caption>\r\n            <tbody>\r\n                <tr className={style.topHeader}>\r\n                    <th scope=\"col\">Rank</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Score</th>\r\n                    {tbMethods.map((name, i) => (\r\n                        <th key={i} scope=\"col\">\r\n                            {name}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                {standingTree.map((standingsFlat, rank) =>\r\n                    standingsFlat.filter(\r\n                        (p) => p.id !== dummyPlayer.id\r\n                    ).map((standing, j, src) => (\r\n                        <tr key={standing.id} className={style.row}>\r\n                            {j === 0 && ( // Only display the rank once\r\n                                <th\r\n                                    scope=\"row\"\r\n                                    className={\"table__number \" + style.rank}\r\n                                    rowSpan={src.length}\r\n                                >\r\n                                    {numeral(rank + 1).format(\"0o\")}\r\n                                </th>\r\n                            )}\r\n                            <th\r\n                                scope=\"row\"\r\n                                className={style.playerName}\r\n                                data-testid={rank}\r\n                            >\r\n                                {getPlayer(standing.id).firstName}&nbsp;\r\n                                {getPlayer(standing.id).lastName}\r\n                            </th>\r\n                            <td\r\n                                className=\"table__number\"\r\n                                data-testid={dashify(\r\n                                    getPlayer(standing.id).firstName\r\n                                    + getPlayer(standing.id).lastName\r\n                                    + \" score\"\r\n                                )}\r\n                            >\r\n                                {numeral(standing.score).format(\"1/2\")}\r\n                            </td>\r\n                            {standing.tieBreaks.map((score, i) => (\r\n                                <td\r\n                                    key={i}\r\n                                    className=\"table__number\"\r\n                                    data-testid={dashify(\r\n                                        getPlayer(standing.id).firstName\r\n                                        + getPlayer(standing.id).lastName\r\n                                        + tbMethods[i]\r\n                                    )}\r\n                                >\r\n                                    {numeral(score).format(\"1/2\")}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n */\r\nfunction SelectTieBreaks({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [{tieBreaks}, dispatch] = useTournament(tourneyId);\r\n    const [selectedTb, setSelectedTb] = useState(null);\r\n    /** @param {number} [id] */\r\n    function toggleTb(id = null) {\r\n        if (!id) {\r\n            id = selectedTb;\r\n        }\r\n        if (tieBreaks.includes(id)) {\r\n            dispatch({type: \"DEL_TIEBREAK\", id, tourneyId});\r\n        } else {\r\n            dispatch({type: \"ADD_TIEBREAK\", id, tourneyId});\r\n        }\r\n    }\r\n    /** @param {number} direction */\r\n    function moveTb(direction) {\r\n        const index = tieBreaks.indexOf(selectedTb);\r\n        dispatch({\r\n            type: \"MOVE_TIEBREAK\",\r\n            oldIndex: index,\r\n            newIndex: index + direction,\r\n            tourneyId\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Selected tiebreak methods</h3>\r\n            <div className=\"toolbar\">\r\n                <button\r\n                    onClick={() => toggleTb()}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Toggle\r\n                </button>\r\n                <button\r\n                    onClick={() => moveTb(-1)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Move up\r\n                </button>\r\n                <button\r\n                    onClick={() => moveTb(1)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Move down\r\n                </button>\r\n                <button\r\n                    onClick={() => setSelectedTb(null)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Done\r\n                </button>\r\n            </div>\r\n            <ol>\r\n                {tieBreaks.map((id) => (\r\n                    <li key={id}>\r\n                        {tieBreakMethods[id].name}\r\n                        <button\r\n                            onClick={() =>\r\n                                selectedTb === id\r\n                                    ? setSelectedTb(null)\r\n                                    : setSelectedTb(id)\r\n                            }\r\n                            disabled={\r\n                                selectedTb !== null && selectedTb !== id\r\n                            }\r\n                        >\r\n                            {selectedTb === id ? \"Done\" : \"Edit\"}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <h3>Available tiebreak methods</h3>\r\n            <ol>\r\n                {tieBreakMethods.map((method, i) => (\r\n                    <li key={i}>\r\n                        <span\r\n                            className={\r\n                                tieBreaks.includes(i)\r\n                                    ? \"enabled\"\r\n                                    : \"disabled\"\r\n                            }\r\n                        >\r\n                            {method.name}\r\n                        </span>\r\n                        {!tieBreaks.includes(i) && (\r\n                            <button onClick={() => toggleTb(i)}>\r\n                                Add\r\n                            </button>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n */\r\nconst Scores = ({tourneyId}) => (\r\n    <PanelContainer>\r\n        <Panel>\r\n            <ScoreList tourneyId={tourneyId}/>\r\n        </Panel>\r\n        <Panel>\r\n            <SelectTieBreaks tourneyId={tourneyId}/>\r\n        </Panel>\r\n    </PanelContainer>\r\n);\r\n\r\nexport default Scores;\r\n","import React from \"react\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function Selecting({tourneyId}) {\r\n    const [{players}, dispatch] = useTournament(tourneyId);\r\n    const {playerState, getPlayer} = usePlayers();\r\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\r\n    function togglePlayer(event) {\r\n        const id = Number(event.target.value);\r\n        if (event.target.checked) {\r\n            dispatch({\r\n                type: \"SET_TOURNEY_PLAYERS\",\r\n                players: players.concat([id]),\r\n                tourneyId\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: \"SET_TOURNEY_PLAYERS\",\r\n                players: players.filter((pId) => pId !== id),\r\n                tourneyId\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <button\r\n                onClick={() =>\r\n                    dispatch({\r\n                        type: \"SET_TOURNEY_PLAYERS\",\r\n                        players: playerState.players.map(\r\n                            (p) => p.id\r\n                        ),\r\n                        tourneyId\r\n                    })\r\n                }\r\n            >\r\n                Select all\r\n            </button>\r\n            <button\r\n                onClick={() =>\r\n                    dispatch({\r\n                        type: \"SET_TOURNEY_PLAYERS\",\r\n                        players: [],\r\n                        tourneyId\r\n                    })\r\n                }\r\n            >\r\n                Select none\r\n            </button>\r\n            {/* <button onClick={() => setIsSelecting(false)}>\r\n                Done\r\n            </button> */}\r\n            <table>\r\n                <caption>Select players</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Select</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {playerState.players.map(({id}) => (\r\n                        <tr key={id}>\r\n                            <td>{getPlayer(id).firstName}</td>\r\n                            <td>{getPlayer(id).lastName}</td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    value={id}\r\n                                    checked={players.includes(id)}\r\n                                    onChange={togglePlayer}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Selecting from \"./selecting\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\nimport {PanelContainer, Panel} from \"../../utility\";\r\nimport {hasHadBye} from \"../../../pairing-scoring/scoring\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function PlayerSelect({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [{players, byeQueue, roundList}, dispatch] = useTournament(tourneyId);\r\n    const {getPlayer} = usePlayers();\r\n    const [isSelecting, setIsSelecting] = useState(players.length === 0);\r\n    return (\r\n        <PanelContainer>\r\n            <Panel>\r\n                <button onClick={() => setIsSelecting(true)}>\r\n                    Edit player roster\r\n                </button>\r\n                <table>\r\n                    <caption>Current roster</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>First name</th>\r\n                            <th>Last name</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {players.map((pId) => (\r\n                            <tr\r\n                                key={pId}\r\n                                className={getPlayer(pId).type + \" player\"}\r\n                            >\r\n                                <td>{getPlayer(pId).firstName}</td>\r\n                                <td>{getPlayer(pId).lastName}</td>\r\n                                <td>\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            dispatch({\r\n                                                type: \"SET_BYE_QUEUE\",\r\n                                                byeQueue: byeQueue.concat(\r\n                                                    [pId]\r\n                                                ),\r\n                                                tourneyId\r\n                                            })\r\n                                        }\r\n                                        disabled={byeQueue.includes(\r\n                                            pId\r\n                                        )}\r\n                                    >\r\n                                        Bye signup\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Panel>\r\n            <Panel>\r\n                <h3>Bye queue</h3>\r\n                {(byeQueue.length === 0) &&\r\n                    <p>No players have signed up for a bye round.</p>\r\n                }\r\n                <ol>\r\n                    {byeQueue.map((pId) => (\r\n                        <li\r\n                            key={pId}\r\n                            className={\r\n                                hasHadBye(pId, roundList)\r\n                                    ? \"disabled\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            {getPlayer(pId).firstName}{\" \"}\r\n                            {getPlayer(pId).lastName}\r\n                            <button\r\n                                onClick={() =>\r\n                                    dispatch({\r\n                                        type: \"SET_BYE_QUEUE\",\r\n                                        byeQueue: byeQueue.filter(\r\n                                            (id) => pId !== id\r\n                                        ),\r\n                                        tourneyId\r\n                                    })\r\n                                }\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </Panel>\r\n            <Dialog isOpen={isSelecting}>\r\n                <button onClick={() => setIsSelecting(false)}>Done</button>\r\n                <Selecting tourneyId={tourneyId} />\r\n            </Dialog>\r\n        </PanelContainer>\r\n    );\r\n}\r\n","import React, {useState, useEffect, useMemo} from \"react\";\r\nimport {Tabs, TabList, Tab, TabPanels, TabPanel} from \"@reach/tabs\";\r\nimport Tooltip from \"@reach/tooltip\";\r\nimport {Link, Redirect} from \"@reach/router\";\r\nimport last from \"ramda/src/last\";\r\nimport Check from \"react-feather/dist/icons/check-circle\";\r\nimport Alert from \"react-feather/dist/icons/alert-circle\";\r\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\r\nimport Round from \"./round/\";\r\nimport Scores from \"./scores\";\r\nimport PlayerSelect from \"./player-select/index\";\r\nimport {useTournament, usePlayers} from \"../../state\";\r\nimport {calcNumOfRounds} from \"../../data/utility\";\r\nimport \"@reach/tabs/styles.css\";\r\nimport \"@reach/tooltip/styles.css\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {string} [props.path]\r\n * @param {number} [props.tourneyId]\r\n */\r\nexport default function Tournament({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [tourney, dispatch] = useTournament(tourneyId);\r\n    const {name, players, roundList} = tourney;\r\n    const {playerState} = usePlayers();\r\n    const [openTab, setOpenTab] = useState(0);\r\n    // This isn't expensive, but why not memoize it?\r\n    const isNewRoundReady = useMemo(\r\n        function () {\r\n            if (!tourney) {\r\n                return false;\r\n            }\r\n            const lastRound = last(roundList);\r\n            if (!lastRound) {\r\n                return true;\r\n            }\r\n            const matchedPlayers = lastRound.reduce(\r\n                /** @param {number[]} acc */\r\n                (acc, match) => acc.concat(match.players),\r\n                []\r\n            );\r\n            const unMatchedPlayers = players.filter(\r\n                (pId) => !matchedPlayers.includes(pId)\r\n            );\r\n            const results = lastRound.map(\r\n                (match) => match.result[0] + match.result[1]\r\n            );\r\n            return (unMatchedPlayers.length === 0 && !results.includes(0));\r\n        },\r\n        [tourney, players, roundList]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            const origTitle = document.title;\r\n            document.title = name;\r\n            return function () {\r\n                document.title = origTitle;\r\n            };\r\n        },\r\n        [name]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            if (roundList.length > 0) {\r\n                setOpenTab(roundList.length + 1);\r\n            }\r\n        },\r\n        [roundList.length]\r\n    );\r\n    const isItOver = roundList.length >= calcNumOfRounds(players.length);\r\n    let tooltipText = \"\";\r\n    let tooltipWarn = false;\r\n    if (!isNewRoundReady) {\r\n        tooltipText = `You must complete the last round before beginning a new\r\n        one.`;\r\n        tooltipWarn = true;\r\n    } else if (isItOver) {\r\n        tooltipText = \"All necessary rounds have completed.\";\r\n        tooltipWarn = true;\r\n    } else {\r\n        tooltipText = \"Ready to begin a new round.\";\r\n    }\r\n    function newRound() {\r\n        const confirmText = (\r\n            \"All rounds have completed. Are you sure you want to begin a new \"\r\n            + \"one?\"\r\n        );\r\n        if (isItOver) {\r\n            if (!window.confirm(confirmText)) {\r\n                return;\r\n            }\r\n        }\r\n        dispatch({type: \"ADD_ROUND\", tourneyId});\r\n        setOpenTab(roundList.length + 1);\r\n        return;\r\n    }\r\n    function delLastRound() {\r\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\r\n            dispatch({\r\n                type: \"DEL_LAST_ROUND\",\r\n                players: playerState.players,\r\n                tourneyId\r\n            });\r\n        }\r\n    }\r\n    if (!tourney) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n        <Tabs index={openTab} onChange={(index) => setOpenTab(index)}>\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <ChevronLeft/> Back\r\n                </Link>\r\n                <h2>{name}</h2>\r\n                Round progress: {roundList.length}/\r\n                {calcNumOfRounds(players.length)}{\" \"}\r\n                <button\r\n                    onClick={newRound}\r\n                    disabled={!isNewRoundReady}\r\n                >\r\n                    New round\r\n                </button>{\" \"}\r\n                <Tooltip label={tooltipText}>\r\n                    <span className=\"helpIcon\">\r\n                        {(tooltipWarn) ? <Alert /> : <Check />}\r\n                    </span>\r\n                </Tooltip>{\" \"}\r\n                <button\r\n                    className=\"danger\"\r\n                    onClick={delLastRound}\r\n                    disabled={roundList.length === 0}\r\n                >\r\n                    Remove last round\r\n                </button>\r\n            </div>\r\n            <TabList>\r\n                <Tab>Players</Tab>\r\n                <Tab>Scores</Tab>\r\n                {Object.keys(roundList).map((id) => (\r\n                    <Tab key={id}>Round {Number(id) + 1}</Tab>\r\n                ))}\r\n            </TabList>\r\n            <TabPanels>\r\n                <TabPanel>\r\n                    <PlayerSelect tourneyId={tourneyId} />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                    <Scores tourneyId={tourneyId} />\r\n                </TabPanel>\r\n                {Object.keys(roundList).map((id) => (\r\n                    <TabPanel key={id}>\r\n                        <Round roundId={Number(id)} tourneyId={tourneyId} />\r\n                    </TabPanel>\r\n                ))}\r\n            </TabPanels>\r\n        </Tabs>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport {Link} from \"@reach/router\";\r\nimport createTournament from \"../../data/tournament\";\r\nimport {useTournaments} from \"../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nexport default function TournamentList(props) {\r\n    const [tourneys, dispatch] = useTournaments();\r\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\r\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\r\n    function updateNewName(event) {\r\n        setNewTourneyName(event.target.value);\r\n    }\r\n    /** @param {React.FormEvent<HTMLFormElement>} event */\r\n    function makeTournament(event) {\r\n        event.preventDefault();\r\n        dispatch({\r\n            type: \"ADD_TOURNEY\",\r\n            tourney: createTournament({name: newTourneyName})\r\n        });\r\n        setNewTourneyName(\"\");\r\n    }\r\n    return (\r\n        <div>\r\n            {(tourneys.length > 0) &&\r\n                <h2>Tournament list</h2>\r\n            }\r\n            {(tourneys.length > 0)\r\n                ?\r\n                <ol>\r\n                    {tourneys.map((tourney, i) =>\r\n                        <li key={i}>\r\n                            <Link to={String(i)}>\r\n                                {tourney.name}\r\n                            </Link>{\" \"}\r\n                            <button\r\n                                title={`Delete “${tourney.name}”`}\r\n                                aria-label={`Delete “${tourney.name}”`}\r\n                                className=\"danger iconButton\"\r\n                                onClick={\r\n                                    () => dispatch({\r\n                                        type: \"DEL_TOURNEY\",\r\n                                        index: i\r\n                                    })\r\n                                }>\r\n                                <Trash />\r\n                            </button>\r\n                        </li>\r\n                    )}\r\n                </ol>\r\n                : <p>No tournaments added yet.</p>\r\n            }\r\n            <form onSubmit={makeTournament}>\r\n                <fieldset>\r\n                    <legend>Make a new tournament</legend>\r\n                    <label>Name:{\" \"}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"tournament name\"\r\n                            value={newTourneyName}\r\n                            onChange={updateNewName}\r\n                            required={true}\r\n                        />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Create\" />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * @typedef {import(\"./index\").Tournament} Tournament\r\n */\r\n/**\r\n * @param {Object} importObj\r\n */\r\nexport default function createTournament(importObj) {\r\n    /** @type {Tournament} */\r\n    const tourney = {\r\n        name: importObj.name || \"\",\r\n        tieBreaks: importObj.tieBreaks || [0, 1, 2, 3],\r\n        byeQueue: importObj.byeQueue || [],\r\n        players: importObj.players || [],\r\n        roundList: importObj.roundList || []\r\n    };\r\n    return tourney;\r\n}\r\n","import React from \"react\";\r\nimport Tournament from \"./tournament\";\r\nimport TournamentList from \"./list\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nconst TournamentIndex = (props) => (\r\n    <div>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default TournamentIndex;\r\nexport {Tournament, TournamentList};\r\n","import React, {useMemo, useState, useEffect} from \"react\";\r\nimport numeral from \"numeral\";\r\n// import {Link} from \"@reach/router\";\r\n// import ChevronLeft from \"react-feather/dist/icons/chevron-left\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport {getPlayerAvoidList, kFactor} from \"../../data/player\";\r\nimport {usePlayers} from \"../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {string | number} [props.playerId]\r\n * @param {string} [props.path]\r\n */\r\nexport default function PlayerInfoBox(props) {\r\n    const playerId = Number(props.playerId);\r\n    const {playerState, playerDispatch, getPlayer} = usePlayers();\r\n    const avoidList = playerState.avoid;\r\n    const [singAvoidList, setSingAvoidList] = useState(\r\n        getPlayerAvoidList(playerId, avoidList)\r\n    );\r\n    const unAvoided = useMemo(\r\n        () => (\r\n            playerState.players.map(\r\n                (player) => player.id\r\n            ).filter(\r\n                (pId) => !singAvoidList.includes(pId) && pId !== playerId\r\n            )\r\n        ),\r\n        [playerState.players, playerId, singAvoidList]\r\n    );\r\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\r\n    /** @param {React.FormEvent<HTMLFormElement>} event */\r\n    function avoidAdd(event) {\r\n        event.preventDefault();\r\n        playerDispatch({\r\n            type: \"ADD_AVOID_PAIR\",\r\n            pair: [playerId, Number(selectedAvoider)]\r\n        });\r\n    }\r\n    useEffect(\r\n        function () {\r\n            setSingAvoidList(getPlayerAvoidList(playerId, avoidList));\r\n        },\r\n        [avoidList, playerId]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            setSelectedAvoider(unAvoided[0]);\r\n        },\r\n        [setSelectedAvoider, unAvoided]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            const origTitle = document.title;\r\n            document.title = (\r\n                getPlayer(playerId).firstName\r\n                + \" \" + getPlayer(playerId).lastName\r\n            );\r\n            return function () {\r\n                document.title = origTitle;\r\n            };\r\n        },\r\n        [playerId, getPlayer]\r\n    );\r\n    return (\r\n        <div>\r\n            {/* <Link to=\"/players\"><ChevronLeft /> Back</Link> */}\r\n            <h2>\r\n                {getPlayer(playerId).firstName} {getPlayer(playerId).lastName}\r\n            </h2>\r\n            <dl>\r\n                <dt id=\"match-count\">Matches played</dt>\r\n                <dd aria-labelledby=\"match-count\">\r\n                    {getPlayer(playerId).matchCount}\r\n                </dd>\r\n                <dt id=\"rating\">Rating</dt>\r\n                <dd aria-labelledby=\"rating\">{getPlayer(playerId).rating}</dd>\r\n                <dt>K factor</dt>\r\n                <dd>\r\n                    {numeral(kFactor(getPlayer(playerId).matchCount)).format(\r\n                        \"00\"\r\n                    )}\r\n                </dd>\r\n                <dt>Players to avoid</dt>\r\n                <dd>\r\n                    <ul>\r\n                        {singAvoidList.map((pId) => (\r\n                            <li key={pId}>\r\n                                {getPlayer(pId).firstName}{\" \"}\r\n                                {getPlayer(pId).lastName}{\" \"}\r\n                                <button\r\n                                    className=\"danger iconButton\"\r\n                                    onClick={() =>\r\n                                        playerDispatch({\r\n                                            type: \"DEL_AVOID_PAIR\",\r\n                                            pair: [playerId, pId]\r\n                                        })\r\n                                    }\r\n                                    title={`Remove ${getPlayer(pId).firstName}\r\n${getPlayer(pId).lastName}`}\r\n                                    arial-label={`Remove \r\n${getPlayer(pId).firstName} ${getPlayer(pId).lastName} from avoid list.`}\r\n                                >\r\n                                    <Trash />\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                        {avoidList.length === 0 && <li>None</li>}\r\n                    </ul>\r\n                </dd>\r\n            </dl>\r\n            <form onSubmit={(event) => avoidAdd(event)}>\r\n                <fieldset>\r\n                    <legend>Add player to avoid</legend>\r\n                    <select\r\n                        onBlur={(event) =>\r\n                            setSelectedAvoider(Number(event.target.value))\r\n                        }\r\n                    >\r\n                        {unAvoided.map((pId) => (\r\n                            <option key={pId} value={pId}>\r\n                                {getPlayer(pId).firstName}{\" \"}\r\n                                {getPlayer(pId).lastName}\r\n                            </option>\r\n                        ))}\r\n                    </select>{\" \"}\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Fragment, useState} from \"react\";\r\nimport {Link} from \"@reach/router\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport {createPlayer} from \"../../data/player\";\r\nimport {usePlayers} from \"../../state\";\r\nimport {PlayerLink} from \"../utility\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nexport default function PlayerList(props) {\r\n    const {playerState, playerDispatch} = usePlayers();\r\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\r\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\r\n    const ids = playerState.players.map((p) => p.id);\r\n    ids.sort((a, b) => a - b);\r\n    ids.reverse();\r\n    const [nextId, setNextId] = useState(ids[0] + 1);\r\n    /** @param {React.FormEvent<HTMLFormElement>} event */\r\n    const handleSubmit = function (event) {\r\n        event.preventDefault();\r\n        const newPlayer = createPlayer(newPlayerData);\r\n        newPlayer.id = nextId;\r\n        setNextId((prevId) => prevId + 1);\r\n        setNewPlayerdata(newPlayerDefault);\r\n        playerDispatch({type: \"ADD_PLAYER\", newPlayer});\r\n    };\r\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\r\n    const updateField = function (event) {\r\n        event.preventDefault();\r\n        /** @type {Object<string, string>} */\r\n        let update = {};\r\n        update[event.currentTarget.name] = event.currentTarget.value;\r\n        setNewPlayerdata(Object.assign({}, newPlayerData, update));\r\n    };\r\n    /**\r\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\r\n     * @param {number} id\r\n     */\r\n    const delPlayer = function (event, id) {\r\n        event.preventDefault();\r\n        playerDispatch({type: \"DEL_PLAYER\", id});\r\n    };\r\n    let rosterTable = <Fragment></Fragment>;\r\n    if (playerState.players.length > 0) {\r\n        rosterTable =\r\n        <table>\r\n            <caption>Demo Roster</caption>\r\n            <thead>\r\n                <tr>\r\n                    <th>First name</th>\r\n                    <th>Last name</th>\r\n                    <th>Rating</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{playerState.players.map((player) =>\r\n                <tr key={player.id}>\r\n                    <td className=\"table__player\">\r\n                        <PlayerLink id={player.id} firstName />\r\n                    </td>\r\n                    <td className=\"table__player\">\r\n                        <PlayerLink id={player.id} lastName />\r\n                    </td>\r\n                    <td className=\"table__number\">{player.rating}</td>\r\n                    <td>\r\n                        <button\r\n                            className=\"danger iconButton\"\r\n                            onClick={(event) =>\r\n                                delPlayer(event, player.id)\r\n                            }\r\n                            // eslint-disable-next-line max-len\r\n                            title={`Delete ${player.firstName} ${player.lastName}`}\r\n                            // eslint-disable-next-line max-len\r\n                            aria-label={`Delete ${player.firstName} ${player.lastName}`}\r\n                        >\r\n                            <Trash />\r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <Link to={String(player.id)}>\r\n                            Open\r\n                            <VisuallyHidden>\r\n                                {\" \"}{player.firstName} {player.lastName}\r\n                            </VisuallyHidden>\r\n                            {\" \"}<ChevronRight />\r\n                        </Link>\r\n                    </td>\r\n                </tr>\r\n            )}</tbody>\r\n        </table>;\r\n    }\r\n    return (\r\n        <div className=\"roster\">\r\n            {rosterTable}\r\n            <form onSubmit={handleSubmit}>\r\n                <fieldset>\r\n                    <legend>Add your own players</legend>\r\n                    <p>\r\n                        <label>\r\n                            First name\r\n                            {\" \"}\r\n                            <input type=\"text\" name=\"firstName\"\r\n                                onChange={updateField}\r\n                                value={newPlayerData.firstName} required />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            Last name\r\n                            {\" \"}\r\n                            <input type=\"text\" name=\"lastName\"\r\n                                onChange={updateField}\r\n                                value={newPlayerData.lastName} required />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            Rating\r\n                            {\" \"}\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"rating\"\r\n                                onChange={updateField}\r\n                                value={newPlayerData.rating}\r\n                                required />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <input type=\"submit\" value=\"Add\"/>\r\n                    </p>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PlayerInfo from \"./info-box\";\r\nimport PlayerList from \"./list\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function Players(props) {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {PlayerInfo, PlayerList};\r\n","import React from \"react\";\r\nimport {useTournaments, useOptions, usePlayers} from \"../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nexport function Options(props) {\r\n    const [tourneys] = useTournaments();\r\n    const [options, dispatch] = useOptions();\r\n    const {playerState} = usePlayers();\r\n    const exportData = {options, tourneys, playerState};\r\n    return (\r\n        <div>\r\n            <form>\r\n                <fieldset>\r\n                    <legend>Bye options</legend>\r\n                    Select how many points a bye is worth:{\" \"}\r\n                    <label>\r\n                        1\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={options.byeValue === 1}\r\n                            onChange={() => dispatch({\r\n                                type: \"SET_BYE_VALUE\",\r\n                                byeValue: 1\r\n                            })}\r\n                        />\r\n                    </label>{\" \"}\r\n                    <label>\r\n                        ½\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={options.byeValue === 0.5}\r\n                            onChange={() => dispatch({\r\n                                type: \"SET_BYE_VALUE\",\r\n                                byeValue: 0.5\r\n                            })}\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <form onSubmit={(event) => event.preventDefault()}>\r\n                <fieldset>\r\n                    <legend>Export data</legend>\r\n                    <textarea\r\n                        className=\"json\"\r\n                        rows={25}\r\n                        cols={50}\r\n                        value={JSON.stringify(exportData, null, 2)}\r\n                        name=\"playerdata\"\r\n                        readOnly />\r\n                    <input type=\"submit\" value=\"Load\" disabled />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Caution = () => (\r\n    <div className={styles.caution}>\r\n        <p className={styles.caution__text}>\r\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\r\n            &nbsp;\r\n            This is an unstable demo build.\r\n            &nbsp;\r\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\r\n            {\" \"}\r\n            Want to help make it better? Head to the\r\n            {\" \"}\r\n            <span role=\"img\" aria-label=\"finger pointing right\">👉</span>\r\n            &nbsp;\r\n            <a\r\n                className={styles.caution__link}\r\n                href=\"https://github.com/johnridesabike/chessahoochee\">\r\n                Git repository\r\n            </a>.\r\n        </p>\r\n    </div>\r\n);\r\n\r\nexport default Caution;\r\n","import React from \"react\";\r\nimport {\r\n    Router,\r\n    Link,\r\n    LocationProvider,\r\n    createHistory,\r\n    Redirect\r\n} from \"@reach/router\";\r\nimport createHashSource from \"hash-source\";\r\nimport About from \"./components/about\";\r\nimport NotFound from \"./components/404\";\r\nimport TournamentIndex from \"./components/tournament\";\r\nimport {TournamentList, Tournament} from \"./components/tournament\";\r\nimport Players, {PlayerList, PlayerInfo} from \"./components/players\";\r\nimport {Options} from \"./components/options\";\r\nimport Caution from \"./components/caution\";\r\nimport {OptionsProvider, TournamentProvider, PlayersProvider} from \"./state\";\r\nimport \"./global.css\";\r\n// @ts-ignore\r\nimport {link} from \"./App.module.css\";\r\n// These are just for deploying to GitHub pages.\r\nlet source = createHashSource();\r\n// @ts-ignore\r\nlet history = createHistory(source);\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <Caution />\r\n            <LocationProvider history={history}>\r\n                <nav className=\"header\">\r\n                    <Link to=\"tourneys\" className={link}>\r\n                        Tournaments\r\n                    </Link>\r\n                    <Link to=\"players\" className={link}>\r\n                        Players\r\n                    </Link>\r\n                    <Link to=\"options\" className={link}>\r\n                        Options\r\n                    </Link>\r\n                    <Link to=\"about\" className={link}>\r\n                        About\r\n                    </Link>\r\n                </nav>\r\n                <main className=\"content\">\r\n                    {/* Lots of nested contexts. Is there a better way? */}\r\n                    <OptionsProvider>\r\n                        <PlayersProvider>\r\n                            <TournamentProvider>\r\n                                <Router>\r\n                                    <TournamentIndex path=\"tourneys\">\r\n                                        <TournamentList path=\"/\" />\r\n                                        <Tournament path=\":tourneyId\" />\r\n                                    </TournamentIndex>\r\n                                    <Players path=\"players\">\r\n                                        <PlayerList path=\"/\"/>\r\n                                        <PlayerInfo path=\":playerId\" />\r\n                                    </Players>\r\n                                    <Options path=\"options\" />\r\n                                    <About path=\"about\" />\r\n                                    <NotFound default />\r\n                                    <Redirect from=\"/\" to=\"tourneys\" noThrow />\r\n                                </Router>\r\n                            </TournamentProvider>\r\n                        </PlayersProvider>\r\n                    </OptionsProvider>\r\n                </main>\r\n            </LocationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","/*jslint browser*/\r\n/*global process fetch*/\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {StrictMode} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <StrictMode><App /></StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"round_table__3_NXr\",\"winnerSelect\":\"round_winnerSelect__1TUKD\",\"toolbar\":\"round_toolbar__1eb5p\",\"selected\":\"round_selected__3wjb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"scores_table__2rxnd\",\"topHeader\":\"scores_topHeader__1NdDN\",\"row\":\"scores_row__ecCJQ\",\"playerName\":\"scores_playerName__3zgHS\",\"rank\":\"scores_rank__f-nA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__1tXRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__2rrOM\",\"caution__text\":\"caution_caution__text__LxysE\",\"caution__link\":\"caution_caution__link__3X8Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__5PR5o\",\"panel\":\"utility_panel__12Wgy\"};"],"sourceRoot":""}