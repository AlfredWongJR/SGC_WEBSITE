{"version":3,"sources":["components/about.jsx","components/404.jsx","components/icons.jsx","state/helpers.js","pairing-scoring/constants.js","factories.js","pairing-scoring/helpers.js","state/player-state.js","pairing-scoring/scoring.js","pairing-scoring/pairing.js","state/tourneys-state.js","state/match-functions.js","state/options-state.js","components/tournament/tournament.jsx","components/tournament/list.jsx","components/tournament/index.jsx","components/players/info-box.jsx","components/utility.jsx","components/players/new-player.jsx","components/players/list.jsx","components/players/index.jsx","components/tournament/scores.jsx","components/tournament/player-select/selecting.jsx","components/tournament/player-select/index.jsx","components/tournament/crosstable.jsx","components/tournament/round/player-match-info.jsx","components/tournament/round/match-row.jsx","components/tournament/round/round.jsx","components/tournament/pair-picker/select-list.jsx","components/tournament/pair-picker/stage.jsx","components/tournament/pair-picker/player-info.jsx","components/tournament/pair-picker/index.jsx","components/tournament/round/index.jsx","components/options.jsx","components/caution/index.jsx","side-effects.js","App.jsx","serviceWorker.js","index.jsx","components/tournament/scores.module.css","components/tournament/tournament.module.css","components/tournament/round/round.module.css","App.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["About","props","react_default","a","createElement","data-testid","href","NotFound","icons","Alert","ArrowDown","ArrowUp","Check","ChevronLeft","ChevronRight","Edit","Info","Layers","List","Plus","Repeat","Settings","Trash","UserMinus","UserPlus","Users","X","localStorageOrDefault","key","defaultValue","value","JSON","parse","localStorage","getItem","setItem","stringify","BLACK","WHITE","DUMMY_ID","createMatch","importObj","id","players","result","origRating","newRating","createPlayer","arguments","length","undefined","type","firstName","lastName","rating","matchCount","dummyPlayer","isNotBye","match","includes","isBye","isNotDummy","playerId","getMatchesByPlayer","roundList","roundId","slice","reduce","acc","round","concat","filter","Object","freeze","removeFirstAndLast","pipe","init","tail","getPlayerById","playerList","player","p","getPlayerAvoidList","avoidList","pair","accumulator","calcNumOfRounds","playerCount","rounds","Math","ceil","log2","Number","isFinite","getById","list","x","defaultPlayers","demoPlayers","map","avoid","playersReducer","state","action","getNextId","sort","b","head","inc","over","lensPath","append","assoc","lensIndex","findIndex","propEq","mergeLeft","set","Error","PlayerContext","createContext","usePlayers","_useContext","useContext","_useContext2","slicedToArray","playerState","playerDispatch","getPlayer","curry","PlayersProvider","loadedData","_useReducer","useReducer","_useReducer2","dispatch","useEffect","Provider","children","tieBreakMethods","name","func","scores","opponentScores","scoresMinusFirstAndLast","sum","scoreList","playerScoreCum","oppScores","getPlayersByOpponent","playerColorBalance","hasHadBye","opponentId","playerScore","indexOf","playerScoreList","playerScoreListNoByes","score","last","colorList","pId","opponent","createStandingList","methods","selectedTieBreaks","i","tieBreakNames","m","standings","allPlayers","Array","from","Set","getAllPlayers","tieBreaks","method","sortFunc","ignore","index","thenBy","standing","firstBy","dueColor","prevColor","matchList","playerMatchColor","createPlayerStats","profile","colorBalance","opponentHistory","upperHalf","isDueBye","kFactor","priority","condition","avoidMeetingTwice","sameScores","divider","differentHalf","differentDueColor","maxPriority","add","calcPairIdeal","player1","player2","metBefore","mustAvoid","abs","setUpperHalves","playerStatsList","splitInHalf","splitAt","src","isUpperHalf","view","sortPlayersForPairing","pairPlayers","byeQueue","hasNotHadBye","nextByeSignup","indexOfDueBye","findLastIndex","T","setByePlayer","potentialMatches","playerMatches","reducedResults","blossom","p1Id","p2Id","p1","p2","ideal","matched","matches","pair1","pair2","reverse","byePlayer","defaultData","defaultTourneyList","tourneysReducer","tourneyId","remove","move","oldIndex","newIndex","__","tourney","unPairedPlayers","byeValue","join","autoPair","unpairedPlayers","manualPair","matchId","mergeRight","TournamentContext","useTournaments","useTournament","tourneys","useRound","_useTournament","_useTournament2","unmatched","difference","TournamentProvider","reducer","OptionsContext","useOptions","OptionsProvider","defaultOptions","Tournament","_usePlayers","isNewRoundReady","useMemo","lastRound","matchedPlayers","unMatchedPlayers","results","origTitle","document","title","isItOver","_ref","_ref2","tooltipText","tooltipWarn","_delLastRound","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","window","confirm","navigate","forEach","color","stop","apply","this","className","styles","tournament","header","es","to","sidebar","keys","onClick","disabled","tooltip_es","label","toolbarItem","content","TournamentList","_useTournaments","_useTournaments2","_useState","useState","_useState2","newTourneyName","setNewTourneyName","String","aria-label","onSubmit","event","preventDefault","placeholder","onChange","target","required","TournamentIndex","PlayerInfoBox","singAvoidList","setSingAvoidList","unAvoided","_useState3","_useState4","selectedAvoider","setSelectedAvoider","handleChange","_event$currentTarget","currentTarget","readOnly","numeral","format","arial-label","avoidAdd","onBlur","Panel","_ref4","style","objectSpread","panel","PanelContainer","assign","panels","React","Children","child","PlayerLink","_ref5","NewPlayer","newPlayerDefault","newPlayerData","setNewPlayerdata","updateField","prevState","PlayerList","delPlayer","visually_hidden_es","Players","ScoreTable","_useTournament2$","_createStandingTree","_createStandingList","_createStandingList2","standingsFlat","orig","standing1","standing2","prevStanding","createStandingTree","_createStandingTree2","standingTree","tbMethods","table","topHeader","scope","rank","j","row","rowSpan","playerName","dashify","SelectTieBreaks","_useTournament3","_useTournament4","selectedTb","setSelectedTb","toggleTb","defaultId","defaultTo","moveTb","direction","Scores","_ref3","tabs_es","Selecting","togglePlayer","checked","PlayerSelect","isSelecting","setIsSelecting","dialog_es","isOpen","Crosstable","_useMemo","opponentResults","lensProp","getResultsByOpponent","_useMemo2","getRatingChange","_getPerformanceRating","firstMatch","firstColor","firstRating","lastMatch","lastColor","getPerformanceRatings","_getPerformanceRating2","lastRating","change","index2","player1Id","player2Id","getXScore","PlayerMatchInfo","_useRound","playerData","prettyBalance","opId","MatchRow","pos","selectedMatch","setSelectedMatch","openModal","setOpenModal","resultCode","every","whiteName","blackName","setMatchResult","white","black","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","calcNewRatings","role","aria-hidden","winnerSelect","Round","moveMatch","toolbar","unMatch","SelectList","stagedPlayers","setStagedPlayers","_useOptions","isModalOpen","setIsModalOpen","unmatchedWithDummy","Stage","_stagedPlayers","unstage","react","PlayerInfo","_createPlayerStats","PairPicker","statsList","matchIdeal","Index","openTab","setOpenTab","Options","tourneysDispatch","_useOptions2","options","optionsDispatch","text","setText","exportData","loadData","data","alert","encodeURIComponent","download","reader","FileReader","onload","ev","readAsText","files","defaultTourneys","rows","cols","spellCheck","Caution","caution","caution__text","caution__link","register","regexps","unformat","roundingFunction","whole","floor","remainder","fraction","source","createHashSource","history","createHistory","App","link","path","tournament_scores","about","_404","default","noThrow","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9d283b3b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst About = (props) => (\n    <p data-testid=\"about\">\n        This is an early, proof-of-concept, demo of a\n        chess tournament manager.{\" \"}\n        <a href=\"https://github.com/johnridesabike/chessahoochee\">\n        You can find out more here.</a>\n    </p>\n);\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = (props) => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","import Alert from \"react-feather/dist/icons/alert-circle\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport Check from \"react-feather/dist/icons/check\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Info from \"react-feather/dist/icons/info\";\nimport List from \"react-feather/dist/icons/list\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Users from \"react-feather/dist/icons/users\";\nimport X from \"react-feather/dist/icons/x\";\nimport Layers from \"react-feather/dist/icons/layers\";\nimport Settings from \"react-feather/dist/icons/settings\";\n\nexport default {\n    Alert,\n    ArrowDown,\n    ArrowUp,\n    Check,\n    ChevronLeft,\n    ChevronRight,\n    Edit,\n    Info,\n    Layers,\n    List,\n    Plus,\n    Repeat,\n    Settings,\n    Trash,\n    UserMinus,\n    UserPlus,\n    Users,\n    X\n};\n","/**\n * @template {object} T\n * @param {string} key\n * @param {T} defaultValue\n * @returns {T}\n */\nexport function localStorageOrDefault(key, defaultValue) {\n    if (process.env.NODE_ENV === \"test\") {\n        return defaultValue; // don't store values during tests\n    }\n    const value = JSON.parse(localStorage.getItem(key)) || defaultValue;\n    localStorage.setItem(key, JSON.stringify(value));\n    return value;\n}\n","const BLACK = 1;\nexport {BLACK};\nconst WHITE = 0;\nexport {WHITE};\nconst DUMMY_ID = -1;\nexport {DUMMY_ID};\n","/**\n * @typedef {import(\"./factory-types\").Match} Match\n * @typedef {import(\"./factory-types\").Tournament} Tournament\n * @typedef {import(\"./factory-types\").Player} Player\n */\n\n/**\n *\n * @param {object} importObj\n * @returns {Match}\n */\nexport function createMatch(importObj) {\n    return {\n        id: importObj.id,\n        players: importObj.players,\n        result: importObj.result || [0, 0],\n        origRating: importObj.origRating,\n        newRating: importObj.newRating\n    };\n}\n\n/**\n * @param {Object} importObj\n * @returns {Player}\n */\nexport function createPlayer(importObj = {}) {\n    return {\n        id: importObj.id || 0,\n        type: importObj.type || \"person\", // used for CSS styling etc.\n        firstName: importObj.firstName || \"\",\n        lastName: importObj.lastName || \"\",\n        rating: importObj.rating || 0,\n        matchCount: importObj.matchCount || 0\n    };\n}\n\nconst dummyPlayer = createPlayer({\n    id: -1,\n    firstName: \"Bye\",\n    lastName: \"Player\",\n    type: \"dummy\"\n});\nObject.freeze(dummyPlayer);\nexport {dummyPlayer};\n\n\n/**\n * @param {Object} importObj\n * @returns {Tournament}\n */\nexport function createTournament(importObj) {\n    return {\n        name: importObj.name || \"\",\n        tieBreaks: importObj.tieBreaks || [0, 1, 2, 3],\n        byeQueue: importObj.byeQueue || [],\n        players: importObj.players || [],\n        roundList: importObj.roundList || []\n    };\n}\n","// TODO: Clean this up. Refactor unnecessary functions, etc.\nimport {\n    init,\n    pipe,\n    tail\n} from \"ramda\";\nimport {WHITE, BLACK, DUMMY_ID} from \"./constants\";\nimport {createPlayer, dummyPlayer} from \"../factories\";\n\n/**\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\n * @typedef {import(\"./\").Standing} Standing\n * @typedef {import(\"../factory-types\").Match} Match\n * @typedef {import(\"../factory-types\").Player} Player\n */\n\n\n/**\n *\n * @param {Match} match\n * @returns {boolean}\n */\nfunction isBye(match) {\n    return match.players.includes(DUMMY_ID);\n}\n\n/**\n *\n * @param {Match} match\n * @returns {boolean}\n */\nexport function isNotBye(match) {\n    return !isBye(match);\n}\n\n/**\n * @param {number} playerId\n */\nexport function isNotDummy(playerId) {\n    return playerId !== DUMMY_ID;\n}\n\n/**\n * @param {typeof WHITE | typeof BLACK} color\n */\nexport function switchColor(color) {\n    return ( // return the opposite color\n        (color === WHITE)\n        ? BLACK\n        : WHITE\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {Match[]}\n */\nexport function getMatchesByPlayer(playerId, roundList, roundId = null) {\n    const rounds = (\n        (roundId === null)\n        ? roundList\n        : roundList.slice(0, roundId + 1)\n    );\n    return rounds.reduce( // flatten the rounds to just the matches\n        (acc, round) => acc.concat(round),\n        []\n    ).filter(\n        (match) => match.players.includes(playerId)\n    );\n}\n\n/**\n * Helper function.\n * @param {Standing} standing1\n * @param {Standing} standing2\n * @returns {boolean}\n */\nexport function areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            /** @param {boolean[]} acc */\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n/**\n * @param {Match[][]} roundList\n * @returns {number[]}\n */\nexport function getAllPlayers(roundList) {\n    const allPlayers = roundList.reduce( // flatten the rounds\n        (acc, round) => acc.concat(round),\n        []\n    ).reduce( // flaten the players\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\n/**\n * Get a list of all of a player's scores from each match.\n * @type {ScoreCalculator}\n * @returns {number[]} the list of scores\n */\nexport function playerScoreList(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/** @type {(scores: number[]) => number[]} */\n// @ts-ignore\nconst removeFirstAndLast = pipe(init, tail);\nexport {removeFirstAndLast};\n\n\n/**\n * @param {number} playerId\n * @param {object[]} matchList\n * @returns {typeof WHITE | typeof BLACK?}\n */\nexport function playerMatchColor(playerId, matchList) {\n    const match = matchList.filter((m) => m.players.includes(playerId))[0];\n    return (\n        (match)\n        ? match.players.indexOf(playerId)\n        : null\n    );\n}\n\n\n\n/**\n * @param {Player[]} playerList\n * @param {number} id\n * @returns {Player}\n */\nexport function getPlayerById(playerList, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = playerList.filter((p) => p.id === id)[0];\n    return (\n        (player)\n        ? player\n        : createPlayer({\n            id: id,\n            firstName: \"Anonymous\",\n            type: \"missing\"\n        })\n    );\n}\n\n/**\n * @param {number} playerId\n * @param {number[][]} avoidList\n * @returns {number[]}\n */\nexport function getPlayerAvoidList(playerId, avoidList) {\n    return avoidList.filter( // get pairings with the player\n        (pair) => pair.includes(playerId)\n    ).reduce( // Flatten the array\n        (accumulator, pair) => pair.concat(accumulator),\n        []\n    ).filter( // filter out the player's id\n        (id) => id !== playerId\n    );\n}\n\n/**\n * @param {number[][]} avoidList\n * @param {Player[]} playerList\n */\nexport function cleanAvoidList(avoidList, playerList) {\n    const ids = playerList.map((p) => p.id);\n    return avoidList.filter(\n        (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\n    );\n}\n\n/**\n * @param {number} playerCount\n */\nexport function calcNumOfRounds(playerCount) {\n    const rounds = Math.ceil(Math.log2(playerCount));\n    return (\n        (Number.isFinite(rounds))\n        ? rounds\n        : 0\n    );\n}\n\n/**\n * @template {object} T\n * @param {T[]} list\n * @param {number | string} id\n * @returns {T}\n */\nexport function getById(list, id) {\n    return list.filter((x) => x.id === id)[0];\n}\n\n/**\n * @param {Object[]} list\n * @param {number | string} id\n */\nexport function getIndexById(list, id) {\n    return list.indexOf(getById(list, id));\n}\n","import {\n    createContext,\n    createElement,\n    useContext,\n    useReducer,\n    useEffect\n} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    append,\n    assoc,\n    curry,\n    head,\n    inc,\n    lensPath,\n    lensIndex,\n    filter,\n    findIndex,\n    map,\n    mergeLeft,\n    over,\n    pipe,\n    propEq,\n    set,\n    sort\n} from \"ramda\";\nimport {localStorageOrDefault} from \"./helpers\";\nimport {getPlayerById} from \"../pairing-scoring/helpers\";\nimport {createPlayer} from \"../factories\";\nimport demoPlayers from \"./demo-players.json\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../factory-types\").Player} Player\n * @typedef {import(\"./dispatch\").PlayerAction} PlayerAction\n */\n\nconst defaultPlayers = {\n    players: demoPlayers.playerList.map((p) => createPlayer(p)),\n    avoid: demoPlayers.avoidList\n};\n\n/**\n * @param {typeof defaultPlayers} state\n * @param {PlayerAction} action\n */\nfunction playersReducer(state, action ) {\n    // @ts-ignore\n    const getNextId = pipe(map((p) => p.id), sort((a, b) => b - a), head, inc);\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            append(createPlayer({\n                firstName: action.firstName,\n                lastName: action.lastName,\n                rating: action.rating,\n                id: getNextId(state.players)\n            })),\n            state\n        );\n    case \"SET_PLAYER\":\n        return assoc(\n            \"players\",\n            over(\n                lensIndex(findIndex(propEq(\"id\", action.id), state.players)),\n                mergeLeft(\n                    {\n                        firstName: action.firstName,\n                        lastName: action.lastName,\n                        rating: action.rating,\n                        matchCount: action.matchCount\n                    }\n                ),\n                state.players\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            filter((p) => p.id !== action.id),\n            set(\n                lensPath([\"avoid\"]),\n                filter((pair) => !pair.includes(action.id)),\n                state\n            )\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"matchCount\"\n            ]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"rating\"\n            ]),\n            action.rating,\n            state\n        );\n    // Avoid\n    case \"ADD_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            filter((pair) => !(\n                pair.includes(action.pair[0])\n                && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n\n/** @type {[typeof defaultPlayers, React.Dispatch<PlayerAction>]} */\nconst defaultContext = null;\nconst PlayerContext = createContext(defaultContext);\n\nexport function usePlayers() {\n    const [playerState, playerDispatch] = useContext(PlayerContext);\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    return {playerState, playerDispatch, getPlayer};\n}\n\n/**\n * @param {Object} props\n */\nexport function PlayersProvider(props) {\n    const loadedData = localStorageOrDefault(\"players\", defaultPlayers);\n    const [state, dispatch] = useReducer(playersReducer, loadedData);\n    useEffect(\n        function () {\n            localStorage.setItem(\"players\", JSON.stringify(state));\n        },\n        [state]\n    );\n    return (\n        createElement(\n            PlayerContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","// TODO: Clean this up. Refactor unnecessary functions, etc.\nimport {\n    add,\n    append,\n    defaultTo,\n    last,\n    lensIndex,\n    lensProp,\n    over,\n    pipe,\n    sort,\n    sum\n} from \"ramda\";\nimport {firstBy} from \"thenby\";\nimport EloRank from \"elo-rank\";\n// eslint-disable-next-line no-unused-vars\nimport {WHITE, BLACK, DUMMY_ID} from \"./constants\";\nimport {\n    isNotBye,\n    getMatchesByPlayer,\n    playerScoreList,\n    removeFirstAndLast,\n    isNotDummy,\n    getAllPlayers,\n    areScoresEqual,\n    playerMatchColor,\n    switchColor,\n    getPlayerById,\n    getPlayerAvoidList\n} from \"./helpers\";\n\n/**\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\n * @typedef {import(\"./\").PlayerStats} PlayerStats\n * @typedef {import(\"./\").Standing} Standing\n * @typedef {import(\"../factory-types\").Match} Match\n * @typedef {import(\"../factory-types\").Player} Player\n */\n\nconst tieBreakMethods = [\n    {\n        name: \"Modified median\",\n        func: modifiedMedian\n    },\n    {\n        name: \"Solkoff\",\n        func: solkoff\n    },\n    {\n        name: \"Cumulative score\",\n        func: playerScoreCum\n    },\n    {\n        name: \"Cumulative of opposition\",\n        func: playerOppScoreCum\n    },\n    {\n        name: \"Most black\",\n        func: playerColorBalance\n    }\n];\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\n/**\n * Create a function to sort the players. This dynamically creates a `thenBy`\n * function based on the desired tiebreak sort methods.\n * @param {typeof tieBreakMethods} tieBreaks\n */\nfunction createTieBreakSorter(tieBreaks) {\n    return tieBreaks.reduce(\n        (acc, ignore, index) => (\n            acc.thenBy(\n                /** @param {Standing} standing */\n                (standing) => standing.tieBreaks[index], -1\n            )\n        ),\n        firstBy(\n            /** @param {Standing} standing */\n            (standing) => standing.score, -1\n        )\n    );\n}\n\n/**\n * TODO: Maybe merge this with the other function?\n */\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nfunction playerScoreListNoByes(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotBye\n    ).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {boolean}\n */\nexport function hasHadBye(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).includes(DUMMY_ID);\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nexport function getPlayersByOpponent(opponentId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        opponentId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).filter(\n        (playerId) => playerId !== opponentId\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerScore(playerId, roundList, roundId = null) {\n    const scoreList = playerScoreList(playerId, roundList, roundId);\n    return sum(scoreList);\n}\n\n/**\n * The player's cumulative score.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerScoreCum(playerId, roundList, roundId = null) {\n    const scoreList = playerScoreListNoByes(\n        playerId,\n        roundList,\n        roundId\n    ).reduce( // turn the regular score list into a \"running\" score list\n        (acc, score) => acc.concat([last(acc) + score]),\n        [0]\n    );\n    return sum(scoreList);\n}\n\n/**\n * Calculate a player's color balance. A negative number means they played as\n * white more. A positive number means they played as black more.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerColorBalance(playerId, roundList, roundId = null) {\n    const colorList = getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotBye\n    ).reduce(\n        (acc, match) => (\n            (match.players[WHITE] === playerId)\n            ? acc.concat(-1) // White = -1\n            : acc.concat(1) // Black = +1\n        ),\n        [0]\n    );\n    return sum(colorList);\n}\n\n/**\n * Used for `modifiedMedian` and `solkoff`.\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nfunction opponentScores(pId, roundList, roundId) {\n    const scores = getPlayersByOpponent(\n        pId,\n        roundList,\n        roundId\n    ).filter(\n        isNotDummy\n    ).map(\n        (opponent) => playerScore(opponent, roundList, roundId)\n    );\n    return sort((a, b) => a - b, scores);\n}\n\n/**\n * Gets the modified median factor defined in USCF § 34E1\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction modifiedMedian(playerId, roundList, roundId = null) {\n    const scores = opponentScores(playerId, roundList, roundId);\n    const scoresMinusFirstAndLast = removeFirstAndLast(scores);\n    return sum(scoresMinusFirstAndLast);\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction solkoff(playerId, roundList, roundId = null) {\n    const scoreList = opponentScores(playerId, roundList, roundId);\n    return sum(scoreList);\n}\n\n/**\n * Get the cumulative scores of a player's opponents.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerOppScoreCum(playerId, roundList, roundId = null) {\n    const oppScores = getPlayersByOpponent(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotDummy\n    ).map(\n        (p) => playerScoreCum(p, roundList, roundId)\n    );\n    return sum(oppScores);\n}\n\n\n/**\n * Sort the standings by score, see USCF tie-break rules from § 34.\n * @param {number[]} methods\n * @param {Match[][]} roundList\n * @param {number} [roundId]\n * @returns {[Standing[], string[]]} The standings and the list of method used\n */\nexport function createStandingList(methods, roundList, roundId) {\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\n    const tieBreakNames = selectedTieBreaks.map((m) => m.name);\n    // Get a flat list of all of the players and their scores.\n    const standings = getAllPlayers(\n        roundList\n    ).filter(\n        (id) => id !== DUMMY_ID\n    ).map(\n        (id) => ({\n            id,\n            score: playerScore(id, roundList, roundId),\n            tieBreaks: selectedTieBreaks.map(\n                (method) => method.func(id, roundList, roundId)\n            )\n        })\n    );\n    const sortFunc = createTieBreakSorter(selectedTieBreaks);\n    const standingsSorted = sort(sortFunc, standings);\n    return [standingsSorted, tieBreakNames];\n}\n\n/**\n * Sort the standings by score, see USCF tie-break rules from § 34.\n * example: `[[Dale, Audrey], [Pete], [Bob]]`\n * Dale and Audrey are tied for first, Pete is 2nd, Bob is 3rd.\n * @param {number[]} methods\n * @param {Match[][]} roundList\n * @param {number} [roundId]\n * @returns {[Standing[][], string[]]} The standings and the list of method used\n */\nexport function createStandingTree(methods, roundList, roundId = null) {\n    const [\n        standingsFlat,\n        tieBreakNames\n    ] = createStandingList(methods, roundList, roundId);\n    const standingsTree = standingsFlat.reduce(\n        /** @param {Standing[][]} acc*/\n        function (acc, standing, i, orig) {\n            const prevStanding = orig[i - 1];\n            const isNewRank = (\n                (i === 0)\n                ? true // Always make a new rank for the first player\n                : !areScoresEqual(standing, prevStanding)\n            );\n            if (isNewRank) {\n                return append([standing], acc);\n            }\n            // If this player has the same score as the last, list them together\n            return over(lensIndex(acc.length - 1), append(standing), acc);\n        },\n        []\n    );\n    return [standingsTree, tieBreakNames];\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {typeof WHITE | typeof BLACK?}\n */\nfunction dueColor(playerId, roundList, roundId = null) {\n    const match = (\n        (roundId === null)\n        ? last(roundList)\n        : roundList[roundId - 1]\n    );\n    if (!match) {\n        return null;\n    }\n    const prevColor = playerMatchColor(playerId, match);\n    return switchColor(prevColor);\n}\n\n/**\n * @param {number} playerId\n * @param {Match[][]} roundList\n * @param {number} roundId\n * @param {Player[]} playerList\n * @param {number[][]} avoidList\n * @returns {PlayerStats}\n */\nexport function createPlayerStats(\n    playerId,\n    playerList,\n    avoidList,\n    roundList,\n    roundId\n) {\n    const player = getPlayerById(playerList, playerId);\n    return {\n        profile: player,\n        rating: player.rating, // is this shortcut necessary?\n        id: playerId, // is this shortcut necessary?\n        score: playerScore(playerId, roundList, roundId),\n        dueColor: dueColor(playerId, roundList, roundId),\n        colorBalance: playerColorBalance(playerId, roundList, roundId),\n        opponentHistory: getPlayersByOpponent(playerId, roundList, roundId),\n        upperHalf: false,\n        avoidList: getPlayerAvoidList(playerId, avoidList),\n        hasHadBye: hasHadBye(playerId, roundList, roundId),\n        isDueBye: false\n    };\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {Object.<string, number>} {opponentId: result}\n */\nexport function getResultsByOpponent(playerId, roundList, roundId = null) {\n    const matches = getMatchesByPlayer(playerId, roundList, roundId);\n    return matches.reduce(\n        /** @param {Object.<string, number>} acc*/\n        function (acc, match) {\n            const opponent = match.players.filter((id) => id !== playerId)[0];\n            const color = match.players.indexOf(playerId);\n            const result = match.result[color];\n            // This sets a default result of 0 and then adds the existing\n            // result. Most of the time, this would be the same as using `set()`\n            // with the result, but if two players play each other multiple\n            // times then the total results will be displayed.\n            return over(\n                lensProp(String(opponent)),\n                pipe(defaultTo(0), add(result)),\n                acc\n            );\n        },\n        {}\n    );\n}\n\n/** @type {ScoreCalculator} */\nexport function getPerformanceRatings(playerId, roundList, roundId = null) {\n    const matches = getMatchesByPlayer(playerId, roundList, roundId);\n    // TODO: This could be Don't-Repeat-Yourself'd a bit\n    const firstMatch = matches[0];\n    const firstColor = firstMatch.players.indexOf(playerId);\n    const firstRating = firstMatch.origRating[firstColor];\n    const lastMatch = last(matches);\n    const lastColor = lastMatch.players.indexOf(playerId);\n    const lastRating = lastMatch.newRating[lastColor];\n    return [firstRating, lastRating];\n}\n\n\n/**\n * @param {number} matchCount\n */\nexport function kFactor(matchCount) {\n    const ne = matchCount || 1;\n    return (800 / ne);\n}\n\n/**\n * @param {[number, number]} origRatings\n * @param {[number, number]} matchCounts\n * @param {[number, number]} result\n * @returns {[number, number]}\n */\nexport function calcNewRatings(origRatings, matchCounts, result) {\n    const whiteElo = new EloRank(kFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(kFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    /** @type {[number, number]} */\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    // @ts-ignore\n    return newRating.map(\n        (rating) => (\n            rating < FLOOR\n            ? FLOOR\n            : rating\n        )\n    );\n}\n","import {firstBy} from \"thenby\";\nimport {\n    add,\n    assoc,\n    filter,\n    findLastIndex,\n    lensIndex,\n    map,\n    pipe,\n    over,\n    reverse,\n    splitAt,\n    sort,\n    T,\n    view\n} from \"ramda\";\nimport blossom from \"edmonds-blossom\";\nimport {createPlayerStats} from \"./scoring\";\nimport {DUMMY_ID} from \"./constants\";\n/**\n * @typedef {import(\"./\").PlayerStats} PlayerStats\n */\n/** @type {(value: number) => (condition: boolean) => number} */\nconst priority = (value) => (condition) => condition ? value : 0;\n/** @type {(value: number) => (divider: number) => number} */\nconst divisiblePriority = (value) => (divider) => value / divider;\n\n/**\n * TODO: These probably need to be tweaked a lot.\n */\n/**\n * @constant avoidMeetingTwicePriority The weight given to avoid players\n * meeting twice. This same weight is given to avoid matching players on each\n * other's \"avoid\" list. This is the highest priority. (USCF § 27A1)\n */\nconst avoidMeetingTwice = priority(20);\n/**\n * @constant sameScoresPriority The weight given to match players with\n * equal scores. This gets divided against the difference between each players'\n * scores, plus one. For example, players with scores `1` and `3` would have\n * this priority divided by `3`. Players with scores `0` and `3` would have this\n * priority divided by `4`. Players with equal scores would divide it by `1`,\n * leaving it unchanged. (USCF § 27A2)\n */\nconst sameScores = divisiblePriority(16);\n\n/**\n * @constant differentHalfPriority The weight given to match players in lower\n * versus upper halves. This is only applied to players being matched within\n * the same score group. (USCF § 27A3)\n */\nconst differentHalf = priority(2);\n/**\n * @constant differentDueColorPriority The weight given to match players with\n * opposite due colors. (USCF § 27A4 and § 27A5)\n */\nconst differentDueColor = priority(1);\n\nconst maxPriority = pipe(\n    add(differentHalf(true)),\n    add(differentDueColor(true)),\n    add(sameScores(1)),\n    add(avoidMeetingTwice(true))\n)(0);\nexport {maxPriority};\n\n/**\n * @param {PlayerStats} player1\n * @param {PlayerStats} player2\n * @returns {number}\n */\nexport function calcPairIdeal(player1, player2) {\n    const metBefore = player1.opponentHistory.includes(player2.id);\n    const mustAvoid = player1.avoidList.includes(player2.id);\n    return pipe(\n        add(differentHalf(\n            player1.upperHalf !== player2.upperHalf\n            && player1.score === player2.score\n        )),\n        add(differentDueColor(\n            player1.dueColor === null\n            || player1.dueColor !== player2.dueColor\n        )),\n        add(sameScores(Math.abs(player1.score - player2.score) + 1)),\n        add(avoidMeetingTwice(!metBefore && !mustAvoid))\n    )(0);\n}\n\n/**\n * Determine which players are in the upper and lower halves of their score\n * groups.\n * @param {PlayerStats[]} playerStatsList\n */\nexport function setUpperHalves(playerStatsList) {\n    /** @param {any[]} list */\n    const splitInHalf = (list) => splitAt(list.length / 2, list);\n    return playerStatsList.reduce(\n        /** @param {typeof playerStatsList} acc */\n        function (acc, player, ignore, src) {\n            const upperHalfIds = pipe(\n                // @ts-ignore\n                filter((a) => a.score === player.score),\n                // These should already be sorted\n                // sort((a, b) => b.rating - a.rating),\n                splitInHalf,\n                view(lensIndex(0)),\n                map((a) => a.id)\n            )(src);\n            const isUpperHalf = upperHalfIds.includes(player.id);\n            return acc.concat([assoc(\"upperHalf\", isUpperHalf, player)]);\n        },\n        []\n    );\n}\n\n/**\n * @param {number[]} byeQueue\n * @param {PlayerStats[]} playerStatsList\n */\nfunction setByePlayer(byeQueue, playerStatsList) {\n    // if the list is even, just return it.\n    if (playerStatsList.length % 2 === 0) {\n        return playerStatsList;\n    }\n    const hasNotHadBye = playerStatsList.filter(\n        (p) => !p.hasHadBye\n    ).map((p) => p.id);\n    const nextByeSignup = byeQueue.filter((id) => hasNotHadBye.includes(id))[0];\n    const indexOfDueBye = (\n        (nextByeSignup)\n        // Assign the bye to the next person who signed up.\n        ? findLastIndex((p) => p.id === nextByeSignup, playerStatsList)\n        // Assign a bye to the lowest-rated player in the lowest score group.\n        // Because the list is sorted, the last player is the lowest.\n        // (USCF § 29L2.)\n        : findLastIndex((p) => !p.hasHadBye, playerStatsList)\n    );\n    // In the impossible situation that *everyone* has played a bye round\n    // previously, then just pick the last player.\n    const index = (\n        (indexOfDueBye === -1)\n        ? findLastIndex(T, playerStatsList)\n        : indexOfDueBye\n    );\n    return over(\n        lensIndex(index),\n        assoc(\"isDueBye\", true),\n        playerStatsList\n    );\n}\n\n/**\n * Sort the data so matchups default to order by score and rating.\n * @param {PlayerStats[]} playerStatsList\n */\nexport function sortPlayersForPairing(playerStatsList) {\n    return sort(\n        firstBy(\n            (a, b) => b.score - a.score\n        ).thenBy(\n            (a, b) => b.rating - a.rating\n        ),\n        playerStatsList\n    );\n}\n\n/**\n * Creates pairings according to the rules specified in USCF § 27, § 28,\n * and § 29. This is a work in progress and does not account for all of the\n * rules yet.\n * @param {object[][]} roundList\n * @param {number} roundId\n * @param {number[]} players\n * @param {object[]} playerList\n * @param {number[][]} avoidList\n * @param {number[]} byeQueue\n */\nexport default function pairPlayers(\n    players,\n    roundId,\n    roundList,\n    playerList,\n    avoidList,\n    byeQueue\n) {\n    const playerStatsList = pipe(\n        map((id) => (\n            createPlayerStats(id, playerList, avoidList, roundList, roundId)\n        )),\n        sortPlayersForPairing,\n        setUpperHalves,\n        (list) => setByePlayer(byeQueue, list)\n    )(players);\n    // Turn the data into blossom-compatible input.\n    const potentialMatches = playerStatsList.filter(\n        (p) => !p.isDueBye\n    ).reduce(\n        /** @param {number[][]} acc */\n        function (acc, player1, ignore, src) {\n            const playerMatches = src.filter(\n                (player) => player !== player1\n            ).map(\n                (player2) => [\n                    player1.id,\n                    player2.id,\n                    calcPairIdeal(player1, player2)\n                ]\n            );\n            return acc.concat(playerMatches);\n        },\n        []\n    );\n    // Feed all of the potential matches to Edmonds-blossom and let the\n    // algorithm work its magic. This returns an array where each index is the\n    // ID of one player and each value is the ID of the matched player.\n    const blossomResults = blossom(potentialMatches);\n    // Translate those IDs into actual pairs of players.\n    /** @type {[PlayerStats, PlayerStats, number][]} */\n    const reducedResults = blossomResults.reduce(\n        function (acc, p1Id, p2Id) {\n            // Filter out unmatched players. Blossom will automatically include\n            // their missing IDs in its results.\n            if (p1Id !== -1) {\n                const p1 = playerStatsList.filter((p) => p.id === p1Id)[0];\n                const p2 = playerStatsList.filter((p) => p.id === p2Id)[0];\n                const ideal = potentialMatches.filter(\n                    (pair) => pair[0] === p1Id && pair[1] === p2Id\n                )[0][2];\n                // Blossom returns a lot of redundant matches. Check that this\n                // matchup wasn't already added.\n                const matched = acc.map((pair) => pair[0]);\n                if (!matched.includes(p1) && !matched.includes(p2)) {\n                    return acc.concat([[p1, p2, ideal]]);\n                }\n            }\n            return acc;\n        },\n        []\n    );\n    // Sort by net score and rating for board placement.\n    const sortedResults = sort(\n        firstBy((pair1, pair2) => (\n            pair2[0].score + pair2[1].score - pair1[0].score - pair1[1].score\n        )).thenBy((pair1, pair2) => (\n            pair2[0].rating + pair2[1].rating\n            - pair1[0].rating - pair1[1].rating\n        )),\n        reducedResults\n    );\n    const matches = sortedResults.map(\n        function (pair) {\n            const player1 = pair[0];\n            const player2 = pair[1];\n            const match = [player1.id, player2.id];\n            if (player1.colorBalance < player2.colorBalance) {\n                return reverse(match);\n            }\n            return match;\n        }\n    );\n    // The bye match always gets added last so the the numbering isn't affected.\n    const byePlayer = playerStatsList.filter((p) => p.isDueBye)[0];\n    if (byePlayer) {\n        return matches.concat([[byePlayer.id, DUMMY_ID]]);\n    }\n    return matches;\n}\n","import {\n    createContext,\n    createElement,\n    useContext,\n    useReducer,\n    useEffect\n} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    __,\n    append,\n    concat,\n    difference,\n    lensPath,\n    mergeRight,\n    filter,\n    findIndex,\n    move,\n    over,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport {localStorageOrDefault} from \"./helpers\";\nimport defaultTourneyList from \"./demo-tourney.json\";\nimport {autoPair, manualPair} from \"./match-functions\";\nimport {createTournament} from \"../factories\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../factory-types\").Tournament} Tournament\n */\n\n/** @type {Tournament[]} */\n// @ts-ignore\nconst defaultData = defaultTourneyList;\n\n/**\n * @param {Tournament[]} state\n * @param {Action} action\n * @returns {Tournament[]}\n */\nfunction tourneysReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_TOURNEY\":\n        return append(createTournament({name: action.name}), state);\n    case \"DEL_TOURNEY\":\n        return state.filter((ignore, i) => i !== action.index);\n    case \"ADD_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        return set(\n            lensPath([action.tourneyId, \"players\"]),\n            action.players,\n            state\n        );\n    case \"SET_BYE_QUEUE\":\n        return set(\n            lensPath([action.tourneyId, \"byeQueue\"]),\n            action.byeQueue,\n            state\n        );\n    case \"AUTO_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            concat(\n                // @ts-ignore\n                __,\n                autoPair(\n                    state[action.tourneyId],\n                    action.playerState,\n                    action.roundId,\n                    action.unpairedPlayers,\n                    action.byeValue\n                )\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            append(manualPair(action.players, action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_MATCH_RESULT\":\n        return set(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                ),\n                \"result\"\n            ]),\n            action.result,\n            set(\n                lensPath([\n                    action.tourneyId,\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state[action.tourneyId].roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n                state\n            )\n        );\n    case \"DEL_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        return over(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    result: reverse(match.result),\n                    players: reverse(match.players),\n                    origRating: reverse(match.origRating),\n                    newRating: reverse(match.newRating)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n\n/** @type {[Tournament[], React.Dispatch<Action>]} */\nconst defaultContext = null;\nconst TournamentContext = createContext(defaultContext);\n\nexport function useTournaments() {\n    return useContext(TournamentContext);\n}\n\n/**\n * @param {number} [tourneyId]\n * @returns {[Tournament, React.Dispatch<Action>]}\n */\nexport function useTournament(tourneyId) {\n    const [tourneys, dispatch] = useContext(TournamentContext);\n    return [tourneys[tourneyId], dispatch];\n}\n\n/**\n * @param {number} tourneyId\n * @param {number} roundId\n */\nexport function useRound(tourneyId, roundId) {\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const matchList = tourney.roundList[roundId];\n    const matched = matchList.reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    const unmatched = difference(tourney.players, matched);\n    return {tourney, dispatch, unmatched, matchList};\n}\n\n/**\n * @param {Object} props\n */\nexport function TournamentProvider(props) {\n    const loadedData = localStorageOrDefault(\"tourneys\", defaultData);\n    const [state, dispatch] = useReducer(tourneysReducer, loadedData);\n    useEffect(\n        function () {\n            localStorage.setItem(\"tourneys\", JSON.stringify(state));\n        },\n        [state]\n    );\n    return (\n        createElement(\n            TournamentContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import {curry, assoc} from \"ramda\";\nimport {BLACK, WHITE, DUMMY_ID} from \"../pairing-scoring/constants\";\nimport {createMatch} from \"../factories\";\nimport {getPlayerById} from \"../pairing-scoring/helpers\";\nimport pairPlayers from \"../pairing-scoring/pairing\";\n/**\n * @typedef {import(\"../factory-types\").Player} Player\n * @typedef {import(\"../factory-types\").Tournament} Tournament\n*/\n\n/**\n * @param {Tournament} tourney\n * @param {number} roundId\n * @param {import(\"./dispatch\").PlayerState} playerState\n * @param {number[]} unPairedPlayers\n * @param {number} byeValue\n */\nexport function autoPair(\n    tourney,\n    playerState,\n    roundId,\n    unPairedPlayers,\n    byeValue\n) {\n    const roundList = tourney.roundList;\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    const pairs = pairPlayers(\n        unPairedPlayers,\n        roundId,\n        roundList,\n        playerState.players,\n        playerState.avoid,\n        tourney.byeQueue\n    );\n    const newMatchList = pairs.map(\n        (pair) => createMatch({\n            id: pair.join(\"-\"),\n            players: [pair[WHITE], pair[BLACK]],\n            origRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ],\n            newRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ]\n        })\n    );\n    return newMatchList.reduce(\n        // Set match results for bye matches\n        function (acc, match) {\n            if (match.players[WHITE] === DUMMY_ID) {\n                return acc.concat([assoc(\"result\", [0, byeValue], match)]);\n            }\n            if (match.players[BLACK] === DUMMY_ID) {\n                return acc.concat([assoc(\"result\", [byeValue, 0], match)]);\n            }\n            return acc.concat([match]);\n        },\n        []\n    );\n}\n\n/**\n * @param {Player[]} players\n * @param {number[]} pair\n * @param {number} byeValue\n */\nexport function manualPair(players, pair, byeValue) {\n    const getPlayer = curry(getPlayerById)(players);\n    const match = createMatch({\n        id: pair.join(\"-\"),\n        players: [pair[WHITE], pair[BLACK]],\n        origRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ],\n        newRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ]\n    });\n    if (pair[WHITE] === DUMMY_ID) {\n        return assoc(\"result\", [0, byeValue], match);\n    }\n    if (pair[BLACK] === DUMMY_ID) {\n        return assoc(\"result\", [byeValue, 0], match);\n    }\n    return match;\n}\n","import {\n    createContext,\n    createElement,\n    useContext,\n    useReducer,\n    useEffect\n} from \"react\";\nimport {assoc} from \"ramda\";\nimport {localStorageOrDefault} from \"./helpers\";\nimport defaultOptions from \"./demo-options.json\";\n/**\n * @typedef {import(\"./dispatch\").OptionAction} OptionAction\n */\n\n/**\n * @param {typeof defaultOptions} state\n * @param {OptionAction} action\n */\nfunction reducer(state, action) {\n    switch (action.type) {\n    case \"SET_BYE_VALUE\":\n        return assoc(\"byeValue\", action.byeValue, state);\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n/** @type {[typeof defaultOptions, React.Dispatch<OptionAction>]} */\nconst defaultContext = null;\nconst OptionsContext = createContext(defaultContext);\n\nexport function useOptions() {\n    return useContext(OptionsContext);\n}\n\n/**\n * @param {Object} props\n */\nexport function OptionsProvider(props) {\n    const loadedData = localStorageOrDefault(\"options\", defaultOptions);\n    const [state, dispatch] = useReducer(reducer, loadedData);\n    useEffect(\n        function () {\n            localStorage.setItem(\"options\", JSON.stringify(state));\n        },\n        [state]\n    );\n    return (\n        createElement(\n            OptionsContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import React, {useEffect, useMemo} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"@reach/tooltip\";\nimport {Link} from \"@reach/router\";\nimport last from \"ramda/src/last\";\nimport Icons from \"../icons\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {calcNumOfRounds} from \"../../pairing-scoring/helpers\";\nimport {DUMMY_ID} from \"../../pairing-scoring/constants\";\nimport \"@reach/tabs/styles.css\";\nimport \"@reach/tooltip/styles.css\";\nimport styles from \"./tournament.module.css\";\n\nexport default function Tournament(props) {\n    const tourneyId = Number(props.tourneyId);\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const {name, players, roundList} = tourney;\n    const {playerState, getPlayer, playerDispatch} = usePlayers();\n    // This isn't expensive, but why not memoize it?\n    const isNewRoundReady = useMemo(\n        function () {\n            const lastRound = last(roundList);\n            if (!lastRound) {\n                return true;\n            }\n            const matchedPlayers = lastRound.reduce(\n                /** @param {number[]} acc */\n                (acc, match) => acc.concat(match.players),\n                []\n            );\n            const unMatchedPlayers = players.filter(\n                (pId) => !matchedPlayers.includes(pId)\n            );\n            const results = lastRound.map(\n                (match) => match.result[0] + match.result[1]\n            );\n            return (unMatchedPlayers.length === 0 && !results.includes(0));\n        },\n        [players, roundList]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = name;\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [name]\n    );\n    const isItOver = roundList.length >= calcNumOfRounds(players.length);\n    /** @type {[string, boolean]} */\n    const [tooltipText, tooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"You must complete the last round before beginning a new one.\",\n                true\n            ];\n        } else if (isItOver) {\n            return [\"All necessary rounds have completed.\", true];\n        } else {\n            return [\"Ready to begin a new round.\", false];\n        }\n    }());\n    function newRound() {\n        const confirmText = (\n            \"All rounds have completed. Are you sure you want to begin a new \"\n            + \"one?\"\n        );\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        dispatch({type: \"ADD_ROUND\", tourneyId});\n        return;\n    }\n    async function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            await props.navigate(\".\");\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.players.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playerDispatch({\n                        type: \"SET_PLAYER_MATCHCOUNT\",\n                        id: pId,\n                        matchCount: matchCount - 1\n                    });\n                    playerDispatch({\n                        type: \"SET_PLAYER_RATING\",\n                        id: pId,\n                        rating: match.origRating[color]\n                    });\n                });\n            });\n            dispatch({\n                type: \"DEL_LAST_ROUND\",\n                players: playerState.players,\n                tourneyId\n            });\n        }\n    }\n    return (\n        <div className={styles.tournament}>\n            <div className={styles.header}>\n                <nav>\n                    <Link to=\"/\">\n                        <Icons.ChevronLeft/> Back\n                    </Link>\n                </nav>\n                <h2>{name}</h2>\n            </div>\n            <div className={styles.sidebar}>\n                <nav>\n                    <ul>\n                        <li>\n                            <Link to=\".\">\n                                <Icons.Users /> Players\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"crosstable\">\n                                <Icons.Layers /> Crosstable\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"scores\">\n                                <Icons.List /> Score detail\n                            </Link>\n                        </li>\n                    </ul>\n                    <hr />\n                    <ul>\n                        {Object.keys(roundList).map((id) => (\n                            <li key={id}>\n                                <Link to={`${id}`}>\n                                    Round {Number(id) + 1}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </nav>\n                <hr />\n                <ul>\n                    <li>\n                        <button\n                            onClick={newRound}\n                            disabled={!isNewRoundReady}\n                        >\n                            <Icons.Plus/> New round\n                        </button>{\" \"}\n                        <Tooltip label={tooltipText}>\n                            <span className=\"helpIcon\">\n                                {(tooltipWarn)\n                                    // @ts-ignore\n                                    ? <Icons.Alert className=\"status-alert\" />\n                                    // @ts-ignore\n                                    : <Icons.Check className=\"status-ok\" />\n                                }\n                            </span>\n                        </Tooltip>\n                    </li>\n                    <li>\n                        <button\n                            className={\"danger \" + styles.toolbarItem}\n                            onClick={delLastRound}\n                            disabled={roundList.length === 0}\n                        >\n                            <Icons.Trash /> Remove last round\n                        </button>\n                    </li>\n                    <li>\n                        Round progress: {roundList.length}/\n                        {calcNumOfRounds(players.length)}{\" \"}\n                    </li>\n                </ul>\n            </div>\n            <div className={styles.content}>\n                {props.children}\n            </div>\n        </div>\n    );\n}\nTournament.propTypes = {\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    children: PropTypes.node,\n    navigate: PropTypes.func,\n    path: PropTypes.string\n};\n","import React, {useState} from \"react\";\nimport Icons from \"../icons\";\nimport {Link} from \"@reach/router\";\nimport {useTournaments} from \"../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function TournamentList(props) {\n    const [tourneys, dispatch] = useTournaments();\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({\n            type: \"ADD_TOURNEY\",\n            name: newTourneyName\n        });\n        setNewTourneyName(\"\");\n    }\n    return (\n        <div>\n            {(tourneys.length > 0) &&\n                <h2>Tournament list</h2>\n            }\n            {(tourneys.length > 0)\n                ?\n                <ol>\n                    {tourneys.map((tourney, i) =>\n                        <li key={i}>\n                            <Link to={String(i)}>\n                                {tourney.name}\n                            </Link>{\" \"}\n                            <button\n                                title={`Delete “${tourney.name}”`}\n                                aria-label={`Delete “${tourney.name}”`}\n                                className=\"danger iconButton\"\n                                onClick={\n                                    () => dispatch({\n                                        type: \"DEL_TOURNEY\",\n                                        index: i\n                                    })\n                                }>\n                                <Icons.Trash />\n                            </button>\n                        </li>\n                    )}\n                </ol>\n                : <p>No tournaments added yet.</p>\n            }\n            <form onSubmit={makeTournament}>\n                <fieldset>\n                    <legend>Make a new tournament</legend>\n                    <label>Name:{\" \"}\n                        <input\n                            type=\"text\"\n                            placeholder=\"tournament name\"\n                            value={newTourneyName}\n                            onChange={updateNewName}\n                            required={true}\n                        />\n                    </label>\n                    <input type=\"submit\" value=\"Create\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./list\";\n\nconst TournamentIndex = (props) => (\n    <div>\n        {props.children}\n    </div>\n);\nTournamentIndex.propTypes = {\n    children: PropTypes.node,\n    path: PropTypes.string\n};\n\nexport default TournamentIndex;\nexport {Tournament, TournamentList};\n","import React, {useMemo, useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {Link} from \"@reach/router\";\nimport Icons from \"../icons\";\nimport {getPlayerAvoidList} from \"../../pairing-scoring/helpers\";\nimport {kFactor} from \"../../pairing-scoring/scoring\";\nimport {usePlayers} from \"../../state\";\n\nexport default function PlayerInfoBox(props) {\n    const playerId = Number(props.playerId);\n    const {playerState, playerDispatch, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const [singAvoidList, setSingAvoidList] = useState(\n        getPlayerAvoidList(playerId, avoid)\n    );\n    const unAvoided = useMemo(\n        () => (\n            players.map(\n                (player) => player.id\n            ).filter(\n                (pId) => !singAvoidList.includes(pId) && pId !== playerId\n            )\n        ),\n        [players, playerId, singAvoidList]\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function avoidAdd(event) {\n        event.preventDefault();\n        playerDispatch({\n            type: \"ADD_AVOID_PAIR\",\n            pair: [playerId, Number(selectedAvoider)]\n        });\n    }\n    useEffect(\n        function () {\n            setSingAvoidList(getPlayerAvoidList(playerId, avoid));\n        },\n        [avoid, playerId]\n    );\n    useEffect(\n        function () {\n            setSelectedAvoider(unAvoided[0]);\n        },\n        [setSelectedAvoider, unAvoided]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = (\n                getPlayer(playerId).firstName\n                + \" \" + getPlayer(playerId).lastName\n            );\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [playerId, getPlayer]\n    );\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playerDispatch({\n            type: \"SET_PLAYER\",\n            id: playerId,\n            firstName: firstName.value,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value)\n        });\n    }\n    return (\n        <div>\n            <Link to=\"..\"><Icons.ChevronLeft /> Back</Link>\n            <h2>\n                Profile for{\" \"}\n                {getPlayer(playerId).firstName} {getPlayer(playerId).lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label>\n                    First name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            defaultValue={getPlayer(playerId).firstName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Last name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            defaultValue={getPlayer(playerId).lastName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Matches played{\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"matchCount\"\n                            defaultValue={\n                                String(getPlayer(playerId).matchCount)\n                            }\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Rating\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            defaultValue={String(getPlayer(playerId).rating)}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    K factor\n                        <input\n                            type=\"number\"\n                            readOnly\n                            value={(\n                                numeral(\n                                    kFactor(getPlayer(playerId).matchCount)\n                                ).format(\"00\")\n                            )}\n                        />\n                    </label>\n                </p>\n            </form>\n            <ul>\n                <h3>Players to avoid</h3>\n                {singAvoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName}{\" \"}\n                        {getPlayer(pId).lastName}{\" \"}\n                        <button\n                            className=\"danger iconButton\"\n                            onClick={() =>\n                                playerDispatch({\n                                    type: \"DEL_AVOID_PAIR\",\n                                    pair: [playerId, pId]\n                                })\n                            }\n                            title={`Remove ${getPlayer(pId).firstName} \n${getPlayer(pId).lastName}`}\n                            arial-label={`Remove \n${getPlayer(pId).firstName} ${getPlayer(pId).lastName} from avoid list.`}\n                        >\n                            <Icons.Trash />\n                        </button>\n                    </li>\n                ))}\n                {avoid.length === 0 && <li>None</li>}\n            </ul>\n            <form onSubmit={(event) => avoidAdd(event)}>\n                <fieldset>\n                    <legend>Add player to avoid</legend>\n                    <select\n                        onBlur={(event) =>\n                            setSelectedAvoider(Number(event.target.value))\n                        }\n                    >\n                        {unAvoided.map((pId) => (\n                            <option key={pId} value={pId}>\n                                {getPlayer(pId).firstName}{\" \"}\n                                {getPlayer(pId).lastName}\n                            </option>\n                        ))}\n                    </select>{\" \"}\n                    <input type=\"submit\" value=\"Add\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\nPlayerInfoBox.propTypes = {\n    playerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    path: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"@reach/router\";\nimport {usePlayers} from \"../state\";\nimport styles from \"./utility.module.css\";\nimport {DUMMY_ID} from \"../pairing-scoring/constants\";\n\n/**\n * @typedef {(event: React.MouseEvent | React.KeyboardEvent) => void} Action\n */\n\nexport const Button = ({children, action}) => (\n    <button onClick={action}>\n        {children}\n    </button>\n);\nButton.propTypes = {\n    children: PropTypes.node.isRequired,\n    action: PropTypes.func.isRequired\n};\n\nexport const BackButton = ({action}) => (\n    <Button action={action}>&lt; Back</Button>\n);\nBackButton.propTypes = {\n    action: PropTypes.func.isRequired\n};\n\nexport const OpenButton = ({action}) => (\n    <Button action={action}>Open &gt;</Button>\n);\nOpenButton.propTypes = {\n    action: PropTypes.func.isRequired\n};\n\nexport function Panel({children, style}) {\n    return (\n        <div style={{...style}} className={styles.panel}>\n            {children}\n        </div>\n    );\n}\nPanel.propTypes = {\n    children: PropTypes.node.isRequired,\n    style: PropTypes.object\n};\n\nexport function PanelContainer(props) {\n    return (\n        <div {...props} className={styles.panels}>\n            {React.Children.map(props.children, (child) => child)}\n        </div>\n    );\n}\nPanelContainer.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nexport function PlayerLink({id, firstName, lastName}) {\n    const {getPlayer} = usePlayers();\n    if (id === DUMMY_ID) {\n        return ( // there's no bye player profile\n            <span>\n                {firstName && getPlayer(id).firstName}{\" \"}\n                {lastName && getPlayer(id).lastName}\n            </span>\n        );\n    }\n    return (\n        <Link to={\"/players/\" + id}>\n            {firstName && getPlayer(id).firstName}{\" \"}\n            {lastName && getPlayer(id).lastName}\n        </Link>\n    );\n}\nPlayerLink.propTypes = {\n    id: PropTypes.number.isRequired,\n    firstName: PropTypes.bool,\n    lastName: PropTypes.bool\n};\n","import React, {useState} from \"react\";\nimport {usePlayers} from \"../../state\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer() {\n    const {playerDispatch} = usePlayers();\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        playerDispatch({type: \"ADD_PLAYER\", firstName, lastName, rating});\n    };\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label>\n                        First name{\" \"}\n                        <input type=\"text\" name=\"firstName\"\n                            onChange={updateField}\n                            value={newPlayerData.firstName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Last name{\" \"}\n                        <input type=\"text\" name=\"lastName\"\n                            onChange={updateField}\n                            value={newPlayerData.lastName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Rating {\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            onChange={updateField}\n                            value={newPlayerData.rating}\n                            required />\n                    </label>\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport Icons from \"../icons\";\nimport {usePlayers} from \"../../state\";\nimport {PlayerLink} from \"../utility\";\nimport NewPlayer from \"./new-player\";\n\n/**\n * @param {Object} props\n */\nexport default function PlayerList(props) {\n    const {playerState, playerDispatch} = usePlayers();\n    /**\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\n     * @param {number} id\n     */\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        playerDispatch({type: \"DEL_PLAYER\", id});\n    };\n    return (\n        <div>\n            <table>\n                <caption>Demo Roster</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Rating</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>{playerState.players.map((player) =>\n                    <tr key={player.id}>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} firstName />\n                        </td>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} lastName />\n                        </td>\n                        <td className=\"table__number\">{player.rating}</td>\n                        <td>\n                            <button\n                                className=\"danger iconButton\"\n                                onClick={(event) =>\n                                    delPlayer(event, player.id)\n                                }\n                                // eslint-disable-next-line max-len\n                                title={`Delete ${player.firstName} ${player.lastName}`}\n                                // eslint-disable-next-line max-len\n                                aria-label={`Delete ${player.firstName} ${player.lastName}`}\n                            >\n                                <Icons.Trash />\n                            </button>\n                        </td>\n                        <td>\n                            <Link to={String(player.id)}>\n                            Open\n                                <VisuallyHidden>\n                                    {\" \"}{player.firstName} {player.lastName}\n                                </VisuallyHidden>\n                                {\" \"}<Icons.ChevronRight />\n                            </Link>\n                        </td>\n                    </tr>\n                )}</tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlayerInfo from \"./info-box\";\nimport PlayerList from \"./list\";\n\nexport default function Players(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\nPlayers.propTypes = {\n    children: PropTypes.node,\n    path: PropTypes.string\n};\n\nexport {PlayerInfo, PlayerList};\n","import React, {useState} from \"react\";\nimport numeral from \"numeral\";\nimport dashify from \"dashify\";\nimport {defaultTo} from \"ramda\";\nimport PropTypes from \"prop-types\";\nimport Icons from \"../icons\";\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {\n    createStandingTree,\n    tieBreakMethods\n} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n\nfunction ScoreTable({tourneyId}) {\n    const [{tieBreaks, roundList}] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [standingTree, tbMethods] = createStandingTree(tieBreaks, roundList);\n    return (\n        <table className={style.table}>\n            <caption>Score detail</caption>\n            <tbody>\n                <tr className={style.topHeader}>\n                    <th scope=\"col\">Rank</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Score</th>\n                    {tbMethods.map((name, i) => (\n                        <th key={i} scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.map((standing, j, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {j === 0 && ( // Only display the rank once\n                                <th\n                                    scope=\"row\"\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                >\n                                    {numeral(rank + 1).format(\"0o\")}\n                                </th>\n                            )}\n                            <th\n                                scope=\"row\"\n                                className={style.playerName}\n                                data-testid={rank}\n                            >\n                                {getPlayer(standing.id).firstName}&nbsp;\n                                {getPlayer(standing.id).lastName}\n                            </th>\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {standing.tieBreaks.map((score, i) => (\n                                <td\n                                    key={i}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tbMethods[i]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\nScoreTable.propTypes = {\n    tourneyId: PropTypes.number.isRequired\n};\n\nfunction SelectTieBreaks({tourneyId}) {\n    const [{tieBreaks}, dispatch] = useTournament(tourneyId);\n    const [selectedTb, setSelectedTb] = useState(null);\n    /** @param {number} [id] */\n    function toggleTb(id = null) {\n        /** @type {(id: number) => number} */\n        const defaultId = defaultTo(selectedTb);\n        if (tieBreaks.includes(defaultId(id))) {\n            dispatch({type: \"DEL_TIEBREAK\", id: defaultId(id), tourneyId});\n            setSelectedTb(null);\n        } else {\n            dispatch({type: \"ADD_TIEBREAK\", id: defaultId(id), tourneyId});\n        }\n    }\n    /** @param {number} direction */\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        dispatch({\n            type: \"MOVE_TIEBREAK\",\n            oldIndex: index,\n            newIndex: index + direction,\n            tourneyId\n        });\n    }\n    return (\n        <div>\n            <h3>Selected tiebreak methods</h3>\n            <div className=\"toolbar\">\n                <button\n                    onClick={() => toggleTb()}\n                    disabled={selectedTb === null}\n                >\n                    Toggle\n                </button>\n                <button\n                    onClick={() => moveTb(-1)}\n                    disabled={selectedTb === null}\n                >\n                    <Icons.ArrowUp/> Move up\n                </button>\n                <button\n                    onClick={() => moveTb(1)}\n                    disabled={selectedTb === null}\n                >\n                    <Icons.ArrowDown/> Move down\n                </button>\n                <button\n                    onClick={() => setSelectedTb(null)}\n                    disabled={selectedTb === null}\n                >\n                    Done\n                </button>\n            </div>\n            <ol>\n                {tieBreaks.map((id) => (\n                    <li\n                        key={id}\n                        className={selectedTb === id ? \"selected\" : \"\"}\n                    >\n                        {tieBreakMethods[id].name}\n                        <button\n                            onClick={() =>\n                                selectedTb === id\n                                    ? setSelectedTb(null)\n                                    : setSelectedTb(id)\n                            }\n                            disabled={\n                                selectedTb !== null && selectedTb !== id\n                            }\n                        >\n                            {selectedTb === id ? \"Done\" : \"Edit\"}\n                        </button>\n                    </li>\n                ))}\n            </ol>\n            <h3>Available tiebreak methods</h3>\n            <ol>\n                {tieBreakMethods.map((method, id) => (\n                    <li key={id}>\n                        <span\n                            className={\n                                tieBreaks.includes(id)\n                                    ? \"enabled\"\n                                    : \"disabled\"\n                            }\n                        >\n                            {method.name}\n                        </span>\n                        {!tieBreaks.includes(id) && (\n                            <button onClick={() => toggleTb(id)}>\n                                Add\n                            </button>\n                        )}\n                    </li>\n                ))}\n            </ol>\n        </div>\n    );\n}\nSelectTieBreaks.propTypes = {\n    tourneyId: PropTypes.number.isRequired\n};\n\nconst Scores = ({tourneyId}) => (\n    <Tabs>\n        <TabList>\n            <Tab><Icons.List /> Scores</Tab>\n            <Tab><Icons.Settings /> Edit tiebreak rules</Tab>\n        </TabList>\n        <TabPanels>\n            <TabPanel>\n                <ScoreTable tourneyId={Number(tourneyId)}/>\n            </TabPanel>\n            <TabPanel>\n                <SelectTieBreaks tourneyId={Number(tourneyId)} />\n            </TabPanel>\n        </TabPanels>\n    </Tabs>\n);\nScores.propTypes = {\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    path: PropTypes.string\n};\n\nexport default Scores;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NewPlayer from \"../../players/new-player\";\nimport {useTournament, usePlayers} from \"../../../state\";\n\nexport default function Selecting({tourneyId}) {\n    // // eslint-disable-next-line fp/no-mutation\n    // tourneyId = Number(tourneyId);\n    const [{players}, dispatch] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function togglePlayer(event) {\n        const id = Number(event.target.value);\n        if (event.target.checked) {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.concat([id]),\n                tourneyId\n            });\n        } else {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.filter((pId) => pId !== id),\n                tourneyId\n            });\n        }\n    }\n    return (\n        <div>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: playerState.players.map(\n                            (p) => p.id\n                        ),\n                        tourneyId\n                    })\n                }\n            >\n                Select all\n            </button>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: [],\n                        tourneyId\n                    })\n                }\n            >\n                Select none\n            </button>\n            {/* <button onClick={() => setIsSelecting(false)}>\n                Done\n            </button> */}\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {playerState.players.map(({id}) => (\n                        <tr key={id}>\n                            <td>{getPlayer(id).firstName}</td>\n                            <td>{getPlayer(id).lastName}</td>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    value={id}\n                                    checked={players.includes(id)}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\nSelecting.propTypes = {\n    tourneyId: PropTypes.number\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../icons\";\nimport Selecting from \"./selecting\";\nimport {useTournament, usePlayers} from \"../../../state\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {hasHadBye} from \"../../../pairing-scoring/scoring\";\n\nexport default function PlayerSelect({tourneyId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId);\n    const [{players, byeQueue, roundList}, dispatch] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [isSelecting, setIsSelecting] = useState(players.length === 0);\n    return (\n        <PanelContainer>\n            <Panel>\n                <button onClick={() => setIsSelecting(true)}>\n                    <Icons.Edit /> Edit player roster\n                </button>\n                <table>\n                    <caption>Current roster</caption>\n                    <thead>\n                        <tr>\n                            <th>First name</th>\n                            <th>Last name</th>\n                            <th>Options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {players.map((pId) => (\n                            <tr\n                                key={pId}\n                                className={getPlayer(pId).type + \" player\"}\n                            >\n                                <td>{getPlayer(pId).firstName}</td>\n                                <td>{getPlayer(pId).lastName}</td>\n                                <td>\n                                    <button\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"SET_BYE_QUEUE\",\n                                                byeQueue: byeQueue.concat(\n                                                    [pId]\n                                                ),\n                                                tourneyId\n                                            })\n                                        }\n                                        disabled={byeQueue.includes(\n                                            pId\n                                        )}\n                                    >\n                                        Bye signup\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <h3>Bye queue</h3>\n                {(byeQueue.length === 0) &&\n                    <p>No players have signed up for a bye round.</p>\n                }\n                <ol>\n                    {byeQueue.map((pId) => (\n                        <li\n                            key={pId}\n                            className={\n                                hasHadBye(pId, roundList)\n                                    ? \"disabled\"\n                                    : \"\"\n                            }\n                        >\n                            {getPlayer(pId).firstName}{\" \"}\n                            {getPlayer(pId).lastName}\n                            <button\n                                onClick={() =>\n                                    dispatch({\n                                        type: \"SET_BYE_QUEUE\",\n                                        byeQueue: byeQueue.filter(\n                                            (id) => pId !== id\n                                        ),\n                                        tourneyId\n                                    })\n                                }\n                            >\n                                Remove\n                            </button>\n                        </li>\n                    ))}\n                </ol>\n            </Panel>\n            <Dialog isOpen={isSelecting}>\n                <button onClick={() => setIsSelecting(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </PanelContainer>\n    );\n}\nPlayerSelect.propTypes = {\n    path: PropTypes.string,\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n","// TODO: This component is in need of a major cleanup. I made this way too\n// complex and fragile.\nimport React, {useMemo} from \"react\";\nimport PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {assoc} from \"ramda\";\nimport Icons from \"../icons\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {\n    createStandingList,\n    getResultsByOpponent,\n    getPerformanceRatings\n} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n/**\n * @typedef {import(\"../../pairing-scoring\").Standing} Standing\n */\n\nexport default function Crosstable({tourneyId}) {\n    const [{tieBreaks, roundList}] = useTournament(Number(tourneyId));\n    const {getPlayer} = usePlayers();\n    const [standings, opponentScores] = useMemo(\n        function () {\n            const [standingsFlat] = createStandingList(tieBreaks, roundList);\n            /** @type {Object.<string, Object.<string, number>>} */\n            const opponentResults = standingsFlat.reduce(\n                /** @param {Object.<string, Object.<string, number>>} acc */\n                (acc, standing) => (\n                    assoc(\n                        String(standing.id),\n                        getResultsByOpponent(standing.id, roundList),\n                        acc\n                    )\n                ),\n                {}\n            );\n            return [standingsFlat, opponentResults];\n        },\n        [roundList, tieBreaks]\n    );\n    /**\n     * @param {number} player1Id\n     * @param {number} player2Id\n     */\n    function getXScore(player1Id, player2Id) {\n        if (player1Id === player2Id) {\n            return <Icons.X/>;\n        }\n        const result = opponentScores[String(player1Id)][player2Id];\n        if (result === undefined) {\n            return null;\n        }\n        return numeral(result).format(\"1/2\");\n    }\n    /** @param {number} playerId */\n    function getRatingChange(playerId) {\n        const [\n            firstRating,\n            lastRating\n        ] = getPerformanceRatings(playerId, roundList);\n        const change = numeral(lastRating - firstRating).format(\"+0\");\n        return `${lastRating}\\xA0(${change})`; // \\xA0 = &nsbp;\n    }\n    return (\n        <table className={style.table}>\n            <caption>Crosstable</caption>\n            <tbody>\n                <tr>\n                    <th>Rank</th>\n                    <th>Name</th>\n                    {standings.map((ignore, index) =>\n                        <th key={index}>\n                            {index + 1}\n                        </th>\n                    )}\n                    <th>Score</th>\n                    <th>Rating</th>\n                </tr>\n                {standings.map((standing, index)=>\n                    <tr key={index} className={style.row}>\n                        <th scope=\"col\">\n                            {index + 1}\n                        </th>\n                        <th\n                            scope=\"row\"\n                            className={style.playerName}\n                        >\n                            {getPlayer(standing.id).firstName}&nbsp;\n                            {getPlayer(standing.id).lastName}\n                        </th>\n                        {standings.map((opponent, index2) =>\n                            <td\n                                key={index2}\n                                className=\"table__number\"\n                            >\n                                {getXScore(standing.id, opponent.id)}\n                            </td>\n                        )}\n                        <td\n                            className=\"table__number\"\n                        >\n                            {numeral(standing.score).format(\"1/2\")}\n                        </td>\n                        <td className=\"table__number\">\n                            {getRatingChange(standing.id)}\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nCrosstable.propTypes = {\n    tourneyId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    path: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {createPlayerStats} from \"../../../pairing-scoring/scoring\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport {getById} from \"../../../pairing-scoring/helpers\";\n/**\n * @typedef {import(\"../../../factory-types\").Match} Match\n */\n\nexport default function PlayerMatchInfo({matchId, color, tourneyId, roundId}) {\n    const {tourney, matchList} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const match = getById(matchList, matchId);\n    const playerData = createPlayerStats(\n        match.players[color],\n        playerState.players,\n        playerState.avoid,\n        tourney.roundList,\n        roundId\n    );\n    const colorBalance = playerData.colorBalance;\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {playerData.profile.firstName} {playerData.profile.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{playerData.score}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerData.id}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{playerData.hasHadBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {playerData.opponentHistory.map((opId) => (\n                        <li key={opId}>\n                            {getPlayer(opId).firstName}{\" \"}\n                            {getPlayer(opId).lastName}\n                        </li>\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\nPlayerMatchInfo.propTypes = {\n    matchId: PropTypes.string,\n    color: PropTypes.number,\n    tourneyId: PropTypes.number,\n    roundId: PropTypes.number\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../icons\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {calcNewRatings} from \"../../../pairing-scoring/scoring\";\nimport {BLACK, WHITE, DUMMY_ID} from \"../../../pairing-scoring/constants\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport PlayerMatchInfo from \"./player-match-info\";\n// @ts-ignore\nimport {winnerSelect} from \"./round.module.css\";\nimport \"@reach/dialog/styles.css\";\n\nexport default function MatchRow({\n    pos,\n    match,\n    tourneyId,\n    roundId,\n    selectedMatch,\n    setSelectedMatch\n}) {\n    const {tourney, dispatch} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whiteName = (\n        getPlayer(match.players[0]).firstName\n        + \" \"\n        + getPlayer(match.players[0]).lastName\n    );\n    const blackName = (\n        getPlayer(match.players[1]).firstName\n        + \" \"\n        + getPlayer(match.players[1]).lastName\n    );\n    function setMatchResult(event) {\n        /** @type {[number, number]} */\n        const result = (function () {\n            switch (event.target.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        const white = getPlayer(match.players[WHITE]);\n        const black = getPlayer(match.players[BLACK]);\n        const newRating = (\n            (event.currentTarget.value === \"NOTSET\")\n            ? match.origRating\n            : calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: white.id,\n            rating: newRating[WHITE]\n        });\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: black.id,\n            rating: newRating[BLACK]\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (match.result.reduce((a, b) => a + b) === 0) {\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: white.id,\n                matchCount: white.matchCount + 1\n            });\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: black.id,\n                matchCount: black.matchCount + 1\n            });\n        }\n        dispatch({\n            type: \"SET_MATCH_RESULT\",\n            tourneyId,\n            roundId,\n            matchId: match.id,\n            result,\n            newRating\n        });\n    }\n    return (\n        <tr className={match.id === selectedMatch ? \"selected\" : \"\"}>\n            <th className=\"table__number row__id\" scope=\"row\">{pos + 1}</th>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}{\" \"}\n                {resultCode === \"WHITE\" && (\n                    <span role=\"img\" aria-hidden>\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}{\" \"}\n                {resultCode === \"BLACK\" && (\n                    <span role=\"img\" aria-hidden>\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td className=\"data__input row__controls\">\n                <select\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                    disabled={match.players.includes(DUMMY_ID)}\n                    value={resultCode}\n                    className={winnerSelect}\n                >\n                    <option value=\"NOTSET\">\n                        Select a winner\n                    </option>\n                    <option value=\"WHITE\">\n                        {whiteName} won\n                    </option>\n                    <option value=\"BLACK\">\n                        {blackName} won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            <td className=\"data__input row__controls\">\n                {(selectedMatch !== match.id)\n                ? (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(match.id)}\n                        title=\"Edit match\"\n                    >\n                        <Icons.Edit />\n                    </button>\n                ) : (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(null)}\n                        title=\"End editing match\"\n                    >\n                        <Icons.Check />\n                    </button>\n                )}\n                <button\n                    className=\"iconButton\"\n                    onClick={() => setOpenModal(true)}\n                    title=\"Open match information.\"\n                >\n                    <Icons.Info />\n                    <Hidden>\n                        View information for match:{\" \"}\n                        {whiteName} versus {blackName}\n                    </Hidden>\n                </button>\n                <Dialog isOpen={openModal}>\n                    <button onClick={() => setOpenModal(false)}>\n                        close\n                    </button>\n                    <p>{tourney.name}</p>\n                    <p>Round {roundId + 1}, match {pos + 1}</p>\n                    <PanelContainer>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={0}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={1}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                    </PanelContainer>\n                </Dialog>\n            </td>\n        </tr>\n    );\n}\nMatchRow.propTypes = {\n    pos: PropTypes.number,\n    match: PropTypes.object,\n    tourneyId: PropTypes.number,\n    roundId: PropTypes.number,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icons from \"../../icons\";\nimport MatchRow from \"./match-row\";\nimport {getById, getIndexById} from \"../../../pairing-scoring/helpers\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport style from \"./round.module.css\";\n\nexport default function Round({roundId, tourneyId}) {\n    const {matchList, dispatch} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    /** @type {string} */\n    const defaultMatch = null;\n    const [selectedMatch, setSelectedMatch] = useState(defaultMatch);\n    if (!matchList) {\n        throw new Error(\"Round \" + roundId + \" does not exist.\");\n    }\n    /** @param {string} matchId */\n    function unMatch(matchId) {\n        const match = getById(matchList, matchId);\n        if (match.result.reduce((a, b) => a + b) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.players.forEach(function (pId, color) {\n                playerDispatch({\n                    type: \"SET_PLAYER_MATCHCOUNT\",\n                    id: pId,\n                    matchCount: getPlayer(pId).matchCount - 1\n                });\n                playerDispatch({\n                    type: \"SET_PLAYER_RATING\",\n                    id: pId,\n                    rating: match.origRating[color]\n                });\n            });\n        }\n        dispatch({type: \"DEL_MATCH\", tourneyId, roundId, matchId});\n        setSelectedMatch(null);\n    }\n    /** @param {string} matchId */\n    function swapColors(matchId) {\n        dispatch({type: \"SWAP_COLORS\", tourneyId, roundId, matchId});\n    }\n    /**\n     * @param {string} matchId\n     * @param {number} direction\n     */\n    function moveMatch(matchId, direction) {\n        const oldIndex = getIndexById(matchList, matchId);\n        const newIndex = (\n            (oldIndex + direction >= 0)\n            ? oldIndex + direction\n            : 0\n        );\n        dispatch({type: \"MOVE_MATCH\", tourneyId, roundId, oldIndex, newIndex});\n    }\n    return (\n        <div>\n            <div className={style.toolbar}>\n                <button\n                    className=\"danger iconButton\"\n                    onClick={() => unMatch(selectedMatch)}\n                    disabled={selectedMatch === null}\n                >\n                    <Icons.Trash /> Unmatch\n                </button>\n                <button\n                    className=\"iconButton\"\n                    onClick={() => swapColors(selectedMatch)}\n                    disabled={selectedMatch === null}\n                >\n                    <Icons.Repeat /> Swap colors\n                </button>\n                <button\n                    className=\"iconButton\"\n                    onClick={() => moveMatch(selectedMatch, -1)}\n                    disabled={selectedMatch === null}\n                >\n                    <Icons.ArrowUp /> Move up\n                </button>\n                <button\n                    className=\"iconButton\"\n                    onClick={() => moveMatch(selectedMatch, 1)}\n                    disabled={selectedMatch === null}\n                >\n                    <Icons.ArrowDown /> Move down\n                </button>\n            </div>\n            {(matchList.length === 0) &&\n                <p>No players matched yet.</p>\n            }\n            <table className={style.table}>\n                {(matchList.length > 0) &&\n                    <caption>Round {roundId + 1} results</caption>\n                }\n                <tbody>\n                    {(matchList.length > 0) &&\n                        <tr>\n                            <th className=\"row__id\" scope=\"col\">\n                                #\n                            </th>\n                            <th className=\"row__player\" scope=\"col\">\n                                White\n                            </th>\n                            <th className=\"row__player\" scope=\"col\">\n                                Black\n                            </th>\n                            <th className=\"row__result\" scope=\"col\">\n                                Result\n                            </th>\n                            <th className=\"row__controls\" scope=\"col\">\n                                Controls\n                            </th>\n                        </tr>\n                    }\n                    {matchList.map((match, pos) => (\n                        <MatchRow\n                            key={match.id}\n                            pos={pos}\n                            match={match}\n                            tourneyId={tourneyId}\n                            roundId={roundId}\n                            selectedMatch={selectedMatch}\n                            setSelectedMatch={setSelectedMatch}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\nRound.propTypes = {\n    tourneyId: PropTypes.number,\n    roundId: PropTypes.number\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {set, lensIndex, append} from \"ramda\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../icons\";\nimport Selecting from \"../player-select/selecting\";\nimport {useRound, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK, DUMMY_ID} from \"../../../pairing-scoring/constants\";\n\nexport default function SelectList({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {dispatch, unmatched} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const [{byeValue}] = useOptions();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    /** @param {number} id */\n    function selectPlayer(id) {\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(WHITE), id, prevState)\n            );\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(BLACK), id, prevState)\n            );\n        }\n        // else... nothing happens\n    }\n    // make a new list so as not to affect auto-pairing\n    const unmatchedWithDummy = (\n        (unmatched.length % 2 !== 0)\n        ? append(DUMMY_ID, unmatched)\n        : unmatched\n    );\n    if (unmatched.length === 0) {\n        return null;\n    }\n    return (\n        <div>\n            <button\n                onClick={() => dispatch({\n                    type: \"AUTO_PAIR\",\n                    unpairedPlayers: unmatched,\n                    tourneyId,\n                    roundId,\n                    playerState,\n                    byeValue\n                })}\n                disabled={unmatched.length === 0}\n            >\n                Auto-pair unmatched players\n            </button><br/>\n            <button onClick={() => setIsModalOpen(true)}>\n                Add or remove players from the roster.\n            </button>\n            <ul>\n                {unmatchedWithDummy.map((pId) => (\n                    <li key={pId}>\n                        {stagedPlayers.includes(pId)\n                        ? <button disabled>Selected</button>\n                        : (\n                            <button\n                                disabled={!stagedPlayers.includes(null)}\n                                onClick={() => selectPlayer(pId)}\n                            >\n                                <Icons.UserPlus/>\n                                <Hidden>\n                                    Select {getPlayer(pId).firstName}{\" \"}\n                                    {getPlayer(pId).lastName}\n                                </Hidden>\n                            </button>\n                        )}{\" \"}\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ul>\n            <Dialog isOpen={isModalOpen}>\n                <button onClick={() => setIsModalOpen(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </div>\n    );\n}\nSelectList.propTypes = {\n    tourneyId: PropTypes.number,\n    roundId: PropTypes.number,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.number),\n    setStagedPlayers: PropTypes.func\n};\n","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {set, lensIndex} from \"ramda\";\nimport Icons from \"../../icons\";\nimport {useTournament, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK} from \"../../../pairing-scoring/constants\";\n\nexport default function Stage({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {playerState, getPlayer} = usePlayers();\n    const {players} = playerState;\n    const dispatch = useTournament(tourneyId)[1];\n    const [{byeValue}] = useOptions();\n    const [white, black] = stagedPlayers;\n    /** @param {typeof WHITE | typeof BLACK} color */\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n    function match() {\n        dispatch({\n            type: \"MANUAL_PAIR\",\n            pair: [white, black],\n            tourneyId,\n            roundId,\n            byeValue,\n            players\n        });\n        setStagedPlayers([null, null]);\n    }\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <p>\n                White:{\" \"}\n                {white !== null &&\n                    <Fragment>\n                        {getPlayer(white).firstName}{\" \"}\n                        {getPlayer(white).lastName}{\" \"}\n                        <button onClick={() => unstage(WHITE)}>\n                            <Icons.UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <p>\n                Black:{\" \"}\n                {black !== null &&\n                    <Fragment>\n                        {getPlayer(black).firstName}{\" \"}\n                        {getPlayer(black).lastName}{\" \"}\n                        <button onClick={() => unstage(BLACK)}>\n                            <Icons.UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <button\n                onClick={() => setStagedPlayers(\n                    (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                )}\n                disabled={\n                    stagedPlayers.every((id) => id === null)\n                }\n            >\n                <Icons.Repeat/> Swap colors\n            </button>{\" \"}\n            <button\n                onClick={match}\n                disabled={stagedPlayers.includes(null)}\n            >\n                <Icons.Check/> Match selected\n            </button>{\" \"}\n        </div>\n    );\n}\nStage.propTypes = {\n    tourneyId: PropTypes.number,\n    roundId: PropTypes.number,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.number),\n    setStagedPlayers: PropTypes.func\n};\n","// this component should eventually replace player-match-info.jsx\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {createPlayerStats} from \"../../../pairing-scoring/scoring\";\nimport {useTournament, usePlayers} from \"../../../state\";\n/**\n * @typedef {import(\"../../../factory-types\").Match} Match\n */\n\nexport default function PlayerInfo({playerId, tourneyId, roundId}) {\n    const [{roundList}] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const {\n        profile,\n        rating,\n        score,\n        colorBalance,\n        hasHadBye,\n        opponentHistory,\n        avoidList\n    } = createPlayerStats(playerId, players, avoid, roundList, roundId);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {profile.firstName} {profile.lastName}\n            </h3>\n            <p>Score: {score}</p>\n            <p>Rating: {rating}</p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasHadBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {opponentHistory.map((opId) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\nPlayerInfo.propTypes = {\n    tourneyId: PropTypes.number,\n    roundId: PropTypes.number,\n    playerId: PropTypes.number\n};\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {pipe, map} from \"ramda\";\nimport SelectList  from \"./select-list\";\nimport Stage from \"./stage\";\nimport PlayerInfo from \"./player-info\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {usePlayers, useTournament} from \"../../../state\";\nimport {getById} from \"../../../pairing-scoring/helpers\";\nimport {createPlayerStats} from \"../../../pairing-scoring/scoring\";\nimport {\n    calcPairIdeal,\n    maxPriority,\n    sortPlayersForPairing,\n    setUpperHalves\n} from \"../../../pairing-scoring/pairing\";\n\nexport default function PairPicker({tourneyId, roundId}) {\n    /** @type {[number, number]} */\n    const defaultPlayers = [null, null];\n    const [stagedPlayers, setStagedPlayers] = useState(defaultPlayers);\n    const {playerState} = usePlayers();\n    const [tourney] = useTournament(tourneyId);\n    const statsList = React.useMemo(\n        function () {\n            return pipe(\n                map((id) => (\n                    createPlayerStats(\n                        id,\n                        playerState.players,\n                        playerState.avoid,\n                        tourney.roundList,\n                        roundId\n                    )\n                )),\n                sortPlayersForPairing,\n                setUpperHalves\n            )(tourney.players);\n        },\n        [\n            tourney.players,\n            tourney.roundList,\n            playerState.avoid,\n            playerState.players,\n            roundId\n        ]\n    );\n    const matchIdeal = React.useMemo(\n        function () {\n            if (stagedPlayers.includes(null)) {\n                return null;\n            }\n            const player0stats = getById(statsList, stagedPlayers[0]);\n            const player1stats = getById(statsList, stagedPlayers[1]);\n            const ideal = calcPairIdeal(player0stats, player1stats);\n            return numeral(ideal / maxPriority).format(\"%\");\n        },\n        [stagedPlayers, statsList]\n    );\n    return (\n        <PanelContainer>\n            <Panel>\n                <SelectList\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n            </Panel>\n            <Panel>\n                <Stage\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n                <PanelContainer>\n                    {stagedPlayers.map((id) =>\n                        id !== null && (\n                            <Panel key={id}>\n                                <PlayerInfo\n                                    playerId={id}\n                                    tourneyId={tourneyId}\n                                    roundId={roundId}\n                                />\n                            </Panel>\n                        )\n                    )}\n                </PanelContainer>\n                Match ideal: {matchIdeal}\n            </Panel>\n        </PanelContainer>\n    );\n}\nPairPicker.propTypes = {\n    tourneyId: PropTypes.number,\n    roundId: PropTypes.number\n};\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\nimport Icons from \"../../icons\";\nimport Round from \"./round\";\nimport PairPicker from \"../pair-picker\";\nimport {useRound} from \"../../../state\";\n\nexport default function Index({tourneyId, roundId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead\n    // eslint-disable-next-line fp/no-mutation\n    roundId = Number(roundId); // reach router passes a string instead\n    const {unmatched} = useRound(tourneyId, roundId);\n    const [openTab, setOpenTab] = useState(0);\n    useEffect(\n        function () {\n            if (unmatched.length > 0) {\n                setOpenTab(1);\n            } else {\n                setOpenTab(0);\n            }\n        },\n        [unmatched.length]\n    );\n    return (\n        <Tabs index={openTab} onChange={(index) => setOpenTab(index)}>\n            <TabList>\n                <Tab><Icons.List/> Matches</Tab>\n                <Tab disabled={unmatched.length === 0}>\n                    <Icons.Users/> Unmatched players\n                </Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <Round\n                        tourneyId={tourneyId}\n                        roundId={roundId}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <PairPicker\n                        tourneyId={tourneyId}\n                        roundId={roundId}\n                    />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nIndex.propTypes = {\n    tourneyId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    roundId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    path: PropTypes.string\n};\n","import React, {useState, useEffect, useMemo} from \"react\";\nimport {useTournaments, useOptions, usePlayers} from \"../state\";\nimport {createPlayer} from \"../factories\";\nimport defaultPlayers from \"../state/demo-players.json\";\nimport defaultOptions from \"../state/demo-options.json\";\nimport defaultTourneys from \"../state/demo-tourney.json\";\n\nexport function Options(props) {\n    const [tourneys, tourneysDispatch] = useTournaments();\n    const [options, optionsDispatch] = useOptions();\n    const {playerState, playerDispatch} = usePlayers();\n    const [text, setText] = useState(\"\");\n    // memoize this so the `useEffect` hook syncs with the correct state\n    const exportData = useMemo(\n        () => ({options, tourneys, playerState}),\n        [options, tourneys, playerState]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    /** @param {typeof exportData} data */\n    function loadData(data) {\n        tourneysDispatch({type: \"LOAD_STATE\", state: data.tourneys});\n        optionsDispatch({type: \"LOAD_STATE\", state: data.options});\n        playerDispatch({type: \"LOAD_STATE\", state: data.playerState});\n        window.alert(\"Data loaded!\");\n    }\n    function handleText(event) {\n        event.preventDefault();\n        /** @type {typeof exportData} */\n        const importData = JSON.parse(text);\n        loadData(importData);\n    }\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        // eslint-disable-next-line fp/no-mutation\n        reader.onload = function (ev) {\n            /** @type {string} */\n            // @ts-ignore\n            const data = ev.target.result;\n            /** @type {typeof exportData} */\n            const importData = JSON.parse(data);\n            loadData(importData);\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    function reloadDemoData(event) {\n        event.preventDefault();\n        loadData({\n            options: defaultOptions,\n            playerState: {\n                players: defaultPlayers.playerList.map((p) => createPlayer(p)),\n                avoid: defaultPlayers.avoidList\n            },\n            // @ts-ignore\n            tourneys: defaultTourneys\n        });\n    }\n    return (\n        <div>\n            <form>\n                <fieldset>\n                    <legend>Bye options</legend>\n                    Select how many points a bye is worth:{\" \"}\n                    <label>\n                        1\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 1}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 1\n                            })}\n                        />\n                    </label>{\" \"}\n                    <label>\n                        ½\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 0.5}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 0.5\n                            })}\n                        />\n                    </label>\n                </fieldset>\n            </form>\n            <fieldset>\n                <legend>Manage data</legend>\n                <p>\n                    <a\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                        download=\"chessahoochee.json\"\n                    >\n                        Download all data\n                    </a>\n                </p>\n                <label>\n                    Load data file:{\" \"}\n                    <input type=\"file\" id=\"file\" onChange={handleFile}/>\n                </label>\n            </fieldset>\n            <fieldset>\n                <legend>Reset all changes</legend>\n                <button onClick={reloadDemoData}>Reload demo data</button>\n            </fieldset>\n            <form onSubmit={handleText}>\n                <fieldset>\n                    <legend>\n                        Advanced: manually edit data\n                    </legend>\n                    <textarea\n                        className=\"json\"\n                        rows={25}\n                        cols={50}\n                        value={text}\n                        name=\"playerdata\"\n                        onChange={(event) => setText(event.currentTarget.value)}\n                        spellCheck={false}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport styles from \"./index.module.css\";\n\nconst Caution = () => (\n    <div className={styles.caution}>\n        <p className={styles.caution__text}>\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            &nbsp;\n            This is an unstable demo build.\n            &nbsp;\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            {\" \"}\n            Want to help make it better? Head to the\n            {\" \"}\n            <span role=\"img\" aria-label=\"finger pointing right\">👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href=\"https://github.com/johnridesabike/chessahoochee\">\n                Git repository\n            </a>.\n        </p>\n    </div>\n);\n\nexport default Caution;\n","import numeral from \"numeral\";\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"half\", {\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    // @ts-ignore\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        const whole = Math.floor(value);\n        const remainder = value - whole;\n        const fraction = (function () {\n            switch (remainder) {\n            case 0.25:\n                return \"¼\";\n            case 0.5:\n                return \"½\";\n            case 0.75:\n                return \"¾\";\n            default:\n                return \"\";\n            }\n        }());\n        const stringedWhole = (\n            (whole === 0 && remainder)\n            ? \"\"\n            : String(whole)\n        );\n        return stringedWhole + fraction;\n    },\n    /** @param {string} value */\n    unformat: function (value) {\n        return Number(value); // doesn't work... todo?\n    }\n});\n","import React from \"react\";\nimport {\n    Router,\n    Link,\n    LocationProvider,\n    createHistory,\n    Redirect\n} from \"@reach/router\";\nimport createHashSource from \"hash-source\";\nimport About from \"./components/about\";\nimport NotFound from \"./components/404\";\nimport TournamentIndex from \"./components/tournament\";\nimport {TournamentList, Tournament} from \"./components/tournament\";\nimport Players, {PlayerList, PlayerInfo} from \"./components/players\";\nimport Scores from \"./components/tournament/scores\";\nimport PlayerSelect from \"./components/tournament/player-select\";\nimport Crosstable from \"./components/tournament/crosstable\";\nimport Round from \"./components/tournament/round\";\nimport {Options} from \"./components/options\";\nimport Caution from \"./components/caution\";\nimport {OptionsProvider, TournamentProvider, PlayersProvider} from \"./state\";\nimport \"side-effects\";\nimport \"./global.css\";\n// @ts-ignore\nimport {link} from \"./App.module.css\";\n// These are just for deploying to GitHub pages.\nlet source = createHashSource();\n// @ts-ignore\nlet history = createHistory(source);\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Caution />\n            <LocationProvider history={history}>\n                <nav className=\"header\">\n                    <Link to=\"tourneys\" className={link}>\n                        Tournaments\n                    </Link>\n                    <Link to=\"players\" className={link}>\n                        Players\n                    </Link>\n                    <Link to=\"options\" className={link}>\n                        Options\n                    </Link>\n                    <Link to=\"about\" className={link}>\n                        About\n                    </Link>\n                </nav>\n                <main className=\"content\">\n                    {/* Lots of nested contexts. Is there a better way? */}\n                    <OptionsProvider>\n                        <PlayersProvider>\n                            <TournamentProvider>\n                                <Router>\n                                    <TournamentIndex path=\"tourneys\">\n                                        <TournamentList path=\"/\" />\n                                        <Tournament path=\":tourneyId\">\n                                            <PlayerSelect path=\"/\" />\n                                            <Crosstable path=\"crosstable\" />\n                                            <Scores path=\"scores\" />\n                                            <Round path=\":roundId\" />\n                                        </Tournament>\n                                    </TournamentIndex>\n                                    <Players path=\"players\">\n                                        <PlayerList path=\"/\"/>\n                                        <PlayerInfo path=\":playerId\" />\n                                    </Players>\n                                    <Options path=\"options\" />\n                                    <About path=\"about\" />\n                                    <NotFound default />\n                                    <Redirect from=\"/\" to=\"tourneys\" noThrow />\n                                </Router>\n                            </TournamentProvider>\n                        </PlayersProvider>\n                    </OptionsProvider>\n                </main>\n            </LocationProvider>\n        </div>\n    );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {StrictMode} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"scores_table__22BFZ\",\"topHeader\":\"scores_topHeader__2RVRR\",\"row\":\"scores_row__bmBzX\",\"playerName\":\"scores_playerName__3ghv9\",\"rank\":\"scores_rank__3AxBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__2nSxH\",\"header\":\"tournament_header__9nZzI\",\"sidebar\":\"tournament_sidebar__21G-s\",\"content\":\"tournament_content__1mdG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"round_table__2JmnE\",\"winnerSelect\":\"round_winnerSelect__317oT\",\"toolbar\":\"round_toolbar__3CWVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__TB6Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}