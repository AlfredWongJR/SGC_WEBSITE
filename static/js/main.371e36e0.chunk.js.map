{"version":3,"sources":["components/tournament/scores.module.css","components/tournament/round/round.module.css","App.module.css","components/caution/index.module.css","components/utility.module.css","components/about.jsx","components/404.jsx","data/constants.js","data/player.js","state/player-state.jsx","data/match.js","pairing-scoring/scoring.js","pairing-scoring/pairing.js","state/match-functions.js","state/tourneys-state.jsx","state/options-state.jsx","components/utility.jsx","components/tournament/round/match-row.jsx","components/tournament/round/player-match-info.jsx","components/tournament/round/pair-picker.jsx","data/utility.js","components/tournament/round/index.jsx","components/tournament/scores.jsx","components/tournament/player-select/selecting.jsx","components/tournament/player-select/roster.jsx","components/tournament/player-select/index.jsx","components/tournament/tournament.jsx","data/tournament.js","components/tournament/list.jsx","components/tournament/index.jsx","components/players/info-box.jsx","components/players/list.jsx","components/players/index.jsx","components/options.jsx","components/caution/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","table","topHeader","row","playerName","rank","winnerSelect","toolbar","link","caution","caution__text","caution__link","panels","panel","About","props","react_default","a","createElement","data-testid","href","NotFound","BLACK","WHITE","createPlayer","importObj","arguments","length","undefined","id","type","firstName","lastName","rating","matchCount","Object","freeze","dummyPlayer","getPlayerById","playerList","player","filter","p","getPlayerAvoidList","playerId","avoidList","pair","includes","reduce","accumulator","concat","kFactor","calcNewRatings","origRatings","matchCounts","result","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","map","ids","pairs","defaultPlayers","players","demoPlayers","avoid","playersReducer","state","action","over","lensPath","append","newPlayer","set","findIndex","propEq","Error","PlayerContext","React","createContext","usePlayers","_React$useContext","useContext","_React$useContext2","slicedToArray","curry","PlayersProvider","_usePlayerReducer","useReducer","_usePlayerReducer2","playerState","playerDispatch","Provider","value","children","origRating","newRating","isBye","match","playerMatchColor","matchList","color","m","indexOf","getMatchesByPlayer","roundList","roundId","slice","acc","round","hasHadBye","getPlayersByOpponent","opponentId","playerScore","score","scoreList","playerScoreList","b","playerScoreCum","runningScore","cumScores","playerScoreListNoByes","forEach","push","totalScore","playerColorBalance","modifiedMedian","pId","isSolkoff","scores","opponent","sort","pop","shift","finalScore","tieBreakMethods","name","func","oppScores","calcStandings","methods","tieBreaks","standingsFlat","allPlayers","Array","from","Set","getAllPlayers","method","sortFunc","firstBy","standing","ignore","index","thenBy","standingsTree","runningRank","i","orig","standing1","standing2","areEqual","keys","Number","areScoresEqual","dueColor","genPlayerData","data","colorBalance","opponentHistory","upperHalf","avoidMeetingTwicePriority","sameScoresPriority","differentHalfPriority","differentDueColorPriority","calcPairIdeal","player1","player2","scoreDiff","priority","metBefore","mustAvoid","Math","abs","ceil","byeMatch","potentialMatches","matches","reducedResults","playerData","byePlayerData","last","playersWithScore","pd","reverse","splitAt","playerDatum","src","playerMatches","blossom","p1Id","p2Id","p1","p2","ideal","matched","autoPair","tourney","unPairedPlayers","byeValue","getPlayer","nextBye","byeQueue","createMatch","newMatchList","pairPlayers","join","dummy","manualPair","defaultData","defaultTourneyList","tourneysReducer","tourneyId","remove","move","oldIndex","newIndex","__","unpairedPlayers","matchId","objectSpread","TournamentContext","useTournament","tourneys","dispatch","useTournaments","TournamentProvider","_useTournamentReducer","_useTournamentReducer2","reducer","OptionsContext","useOptions","OptionsProvider","_useOptionsReducer","defaultOptions","_useOptionsReducer2","Panel","_ref4","style","className","styles","PanelContainer","_ref5","Children","child","PlayerLink","_ref6","es","to","MatchRow","_ref","resultCode","pos","selectedMatch","setSelectedMatch","_usePlayers","_usePlayers2","every","x","whiteName","blackName","setMatchResult","event","currentTarget","white","black","scope","role","aria-label","onBlur","onChange","disabled","defaultValue","title","onClick","more_horizontal_default","x_default","PlayerMatchInfo","_useTournaments","prettyBalance","numeral","format","opId","key","PairPicker","_useTournament","_useTournament2","_useTournament2$","_useOptions","_useState","useState","_useState2","selectedPlayers","setSelectedPlayers","selectPlayer","target","checked","prevState","unMatched","htmlFor","calcNumOfRounds","playerCount","log2","isFinite","getById","list","getIndexById","Round","moveMatch","direction","unMatch","trash_2_default","repeat_default","arrow_up_default","arrow_down_default","ScoreList","_calcStandings","_calcStandings2","standingTree","tbMethods","j","rowSpan","dashify","SelectTieBreaks","_ref2","_useTournament3","_useTournament4","selectedTb","setSelectedTb","toggleTb","moveTb","register","regexps","unformat","roundingFunction","whole","floor","remainder","String","Scores","_ref3","Selecting","setIsSelecting","togglePlayer","Roster","PlayerSelect","isSelecting","Tournament","defaultTab","setDefaultTab","isNewRoundReady","useMemo","lastRound","matchedPlayers","unMatchedPlayers","results","useEffect","origTitle","document","tabs_es","defaultIndex","chevron_left_default","tooltip_es","label","check_circle_default","alert_circle_default","window","confirm","tournament_scores","TournamentList","_useTournaments2","newTourneyName","setNewTourneyName","onSubmit","preventDefault","createTournament","placeholder","required","TournamentIndex","PlayerInfoBox","singAvoidList","setSingAvoidList","unAvoided","_useState3","_useState4","selectedAvoider","setSelectedAvoider","aria-labelledby","arial-label","avoidAdd","PlayerList","newPlayerDefault","newPlayerData","setNewPlayerdata","nextId","setNextId","updateField","update","assign","rosterTable","react","delPlayer","visually_hidden_es","chevron_right_default","prevId","Players","Options","_useOptions2","options","exportData","rows","cols","JSON","stringify","readOnly","Caution","source","createHashSource","history","createHistory","App","components_tournament","path","about","_404","default","noThrow","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.371e36e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"scores_table__2rxnd\",\"topHeader\":\"scores_topHeader__1NdDN\",\"row\":\"scores_row__ecCJQ\",\"playerName\":\"scores_playerName__3zgHS\",\"rank\":\"scores_rank__f-nA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"round_table__3_NXr\",\"winnerSelect\":\"round_winnerSelect__1TUKD\",\"toolbar\":\"round_toolbar__1eb5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__1tXRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__2rrOM\",\"caution__text\":\"caution_caution__text__LxysE\",\"caution__link\":\"caution_caution__link__3X8Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__5PR5o\",\"panel\":\"utility_panel__12Wgy\"};","import React from \"react\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst About = (props) => (\r\n    <p data-testid=\"about\">\r\n        This is an early, proof-of-concept, demo of a\r\n        chess tournament manager.{\" \"}\r\n        <a href=\"https://github.com/johnridesabike/chessahoochee\">\r\n        You can find out more here.</a>\r\n    </p>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst NotFound = (props) => (\r\n    <div data-testid=\"404\">\r\n        <p>Page not found.</p>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","const BLACK = 1;\r\nexport {BLACK};\r\nconst WHITE = 0;\r\nexport {WHITE};\r\n","import EloRank from \"elo-rank\";\r\nimport {WHITE, BLACK} from \"./constants\";\r\n/**\r\n * @typedef {import(\"./index\").Player} Player\r\n */\r\n\r\n/**\r\n * @param {Object} importObj\r\n */\r\nfunction createPlayer(importObj = {}) {\r\n    /** @type {Player} */\r\n    const player = {\r\n        id: importObj.id || 0,\r\n        type: importObj.type || \"person\", // used for CSS styling etc.\r\n        firstName: importObj.firstName || \"\",\r\n        lastName: importObj.lastName || \"\",\r\n        rating: importObj.rating || 0,\r\n        matchCount: importObj.matchCount || 0\r\n    };\r\n    return player;\r\n}\r\nObject.freeze(createPlayer);\r\nexport {createPlayer};\r\n\r\nconst dummyPlayer = createPlayer();\r\ndummyPlayer.id = -1;\r\ndummyPlayer.firstName = \"Bye\";\r\ndummyPlayer.lastName = \"Player\";\r\ndummyPlayer.type = \"dummy\";\r\nObject.freeze(dummyPlayer);\r\nexport {dummyPlayer};\r\n\r\n\r\n/**\r\n * @param {Player[]} playerList\r\n * @param {number} id\r\n * @returns {Player}\r\n */\r\nfunction getPlayerById(playerList, id) {\r\n    if (id === -1) {\r\n        return dummyPlayer;\r\n    }\r\n    let player = playerList.filter((p) => p.id === id)[0];\r\n    if (!player) {\r\n        player = createPlayer({\r\n            id: id,\r\n            firstName: \"Anonymous\",\r\n            type: \"missing\"\r\n        });\r\n    }\r\n    return player;\r\n}\r\nObject.freeze(getPlayerById);\r\nexport {getPlayerById};\r\n\r\n/**\r\n * @param {number} playerId\r\n * @param {number[][]} avoidList\r\n * @returns {number[]}\r\n */\r\nfunction getPlayerAvoidList(playerId, avoidList) {\r\n    return avoidList.filter( // get pairings with the player\r\n        (pair) => pair.includes(playerId)\r\n    ).reduce( // Flatten the array\r\n        (accumulator, pair) => pair.concat(accumulator),\r\n        []\r\n    ).filter( // filter out the player's id\r\n        (id) => id !== playerId\r\n    );\r\n}\r\nObject.freeze(getPlayerAvoidList);\r\nexport {getPlayerAvoidList};\r\n\r\n/**\r\n * @param {number[][]} avoidList\r\n * @param {Player[]} playerList\r\n */\r\nfunction cleanAvoidList(avoidList, playerList) {\r\n    const ids = playerList.map((p) => p.id);\r\n    return avoidList.filter(\r\n        (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\r\n    );\r\n}\r\nObject.freeze(cleanAvoidList);\r\nexport {cleanAvoidList};\r\n\r\n/**\r\n * @param {number} matchCount\r\n */\r\nfunction kFactor(matchCount) {\r\n    const ne = matchCount || 1;\r\n    return (800 / ne);\r\n}\r\nObject.freeze(kFactor);\r\nexport {kFactor};\r\n\r\n/**\r\n * @param {[number, number]} origRatings\r\n * @param {[number, number]} matchCounts\r\n * @param {[number, number]} result\r\n * @returns {[number, number]}\r\n */\r\nfunction calcNewRatings(origRatings, matchCounts, result) {\r\n    const whiteElo = new EloRank(kFactor(matchCounts[WHITE]));\r\n    const blackElo = new EloRank(kFactor(matchCounts[BLACK]));\r\n    const FLOOR = 100;\r\n    const scoreExpected = [\r\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\r\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\r\n    ];\r\n    /** @type {[number, number]} */\r\n    const newRating = [\r\n        whiteElo.updateRating(\r\n            scoreExpected[WHITE],\r\n            result[WHITE],\r\n            origRatings[WHITE]\r\n        ),\r\n        blackElo.updateRating(\r\n            scoreExpected[BLACK],\r\n            result[BLACK],\r\n            origRatings[BLACK]\r\n        )\r\n    ];\r\n    // @ts-ignore\r\n    return newRating.map(\r\n        (rating) => (\r\n            rating < FLOOR\r\n            ? FLOOR\r\n            : rating\r\n        )\r\n    );\r\n}\r\nObject.freeze(calcNewRatings);\r\nexport {calcNewRatings};\r\n","import React from \"react\";\r\n// This will cause Webpack to import the entire Ramda library, but we're using\r\n// so much of it that cherry-picking individual files has virtually no benefit.\r\nimport {\r\n    append,\r\n    curry,\r\n    lensPath,\r\n    filter,\r\n    findIndex,\r\n    over,\r\n    propEq,\r\n    set\r\n} from \"ramda\";\r\nimport {createPlayer, getPlayerById} from \"../data/player\";\r\nimport demoPlayers from \"./demo-players.json\";\r\n/**\r\n * @typedef {import(\"./dispatch\").Action} Action\r\n * @typedef {import(\"../data/index\").Player} Player\r\n * @typedef {import(\"./dispatch\").PlayerAction} PlayerAction\r\n */\r\n\r\nconst defaultPlayers = {\r\n    players: demoPlayers.playerList.map((p) => createPlayer(p)),\r\n    avoid: demoPlayers.avoidList\r\n};\r\n\r\n/**\r\n * @param {typeof defaultPlayers} state\r\n * @param {PlayerAction} action\r\n */\r\nfunction playersReducer(state, action ) {\r\n    switch (action.type) {\r\n    // Players\r\n    case \"ADD_PLAYER\":\r\n        return over(\r\n            lensPath([\"players\"]),\r\n            append(action.newPlayer),\r\n            state\r\n        );\r\n    case \"DEL_PLAYER\":\r\n        return over(\r\n            lensPath([\"players\"]),\r\n            filter((p) => p.id !== action.id),\r\n            set(\r\n                lensPath([\"avoid\"]),\r\n                filter((pair) => !pair.includes(action.id)),\r\n                state\r\n            )\r\n        );\r\n    case \"SET_PLAYER_MATCHCOUNT\":\r\n        return set(\r\n            lensPath([\r\n                \"players\",\r\n                findIndex(propEq(\"id\", action.id), state.players),\r\n                \"matchCount\"\r\n            ]),\r\n            action.matchCount,\r\n            state\r\n        );\r\n    case \"SET_PLAYER_RATING\":\r\n        return set(\r\n            lensPath([\r\n                \"players\",\r\n                findIndex(propEq(\"id\", action.id), state.players),\r\n                \"rating\"\r\n            ]),\r\n            action.rating,\r\n            state\r\n        );\r\n    // Avoid\r\n    case \"ADD_AVOID_PAIR\":\r\n        return over(\r\n            lensPath([\"avoid\"]),\r\n            append(action.pair),\r\n            state\r\n        );\r\n    case \"DEL_AVOID_PAIR\":\r\n        return over(\r\n            lensPath([\"avoid\"]),\r\n            filter((pair) => !(\r\n                pair.includes(action.pair[0])\r\n                && pair.includes(action.pair[1])\r\n            )),\r\n            state\r\n        );\r\n    default:\r\n        throw new Error(\"Unexpected action type\");\r\n    }\r\n}\r\n\r\n/** @type {[typeof defaultPlayers, React.Dispatch<PlayerAction>]} */\r\nconst defaultContext = null;\r\nconst PlayerContext = React.createContext(defaultContext);\r\n\r\nfunction usePlayerReducer() {\r\n    return React.useReducer(playersReducer, defaultPlayers);\r\n}\r\n\r\n/**\r\n * @returns {[typeof defaultPlayers, React.Dispatch<PlayerAction>, Curry.Curry<(id: number) => Player>]}\r\n */\r\nexport function usePlayers() {\r\n    const [state, dispatch] = React.useContext(PlayerContext);\r\n    const getPlayer = curry(getPlayerById)(state.players);\r\n    return [state, dispatch, getPlayer];\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function PlayersProvider(props) {\r\n    const [playerState, playerDispatch] = usePlayerReducer();\r\n    return (\r\n        <PlayerContext.Provider value={[playerState, playerDispatch]}>\r\n            {props.children}\r\n        </PlayerContext.Provider>\r\n    );\r\n}\r\n","/**\r\n * @typedef {import(\"./index\").Match} Match\r\n */\r\n/**\r\n *\r\n * @param {object} importObj\r\n */\r\nfunction createMatch(importObj) {\r\n    /** @type {Match} */\r\n    const match = {\r\n        id: importObj.id,\r\n        players: importObj.players,\r\n        result: importObj.result || [0, 0],\r\n        origRating: importObj.origRating,\r\n        newRating: importObj.newRating\r\n    };\r\n    return match;\r\n}\r\nexport default Object.freeze(createMatch);\r\n","import {firstBy} from \"thenby\";\r\nimport {\r\n    dummyPlayer,\r\n    getPlayerById,\r\n    getPlayerAvoidList\r\n} from \"../data/player\";\r\n\r\n/**\r\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\r\n * @typedef {import(\"./\").PlayerData} PlayerData\r\n * @typedef {import(\"./\").Standing} Standing\r\n * @typedef {import(\"../data/\").Match} Match\r\n * @typedef {import(\"../data/\").Player} Player\r\n */\r\n\r\n/**\r\n *\r\n * @param {Match} match\r\n * @returns {boolean}\r\n */\r\nfunction isBye(match) {\r\n    return match.players.includes(dummyPlayer.id);\r\n}\r\n\r\n/**\r\n * @param {number} playerId\r\n * @param {object[]} matchList\r\n * @returns {number?}\r\n */\r\nfunction playerMatchColor(playerId, matchList) {\r\n    /**@type {number} */\r\n    let color = null;\r\n    const match = matchList.filter((m) => m.players.includes(playerId))[0];\r\n    if (match) {\r\n        color = match.players.indexOf(playerId);\r\n    }\r\n    return color;\r\n}\r\nObject.freeze(playerMatchColor);\r\nexport {playerMatchColor};\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {Match[]}\r\n */\r\nfunction getMatchesByPlayer(playerId, roundList, roundId = null) {\r\n    /** @type {Match[]} */\r\n    let rounds;\r\n    if (roundId === null) {\r\n        rounds = roundList;\r\n    } else {\r\n        rounds = roundList.slice(0, roundId + 1);\r\n    }\r\n    return rounds.reduce( // flatten the rounds to just the matches\r\n        (acc, round) => acc.concat(round),\r\n        []\r\n    ).filter(\r\n        (match) => match.players.includes(playerId)\r\n    );\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {boolean}\r\n */\r\nfunction hasHadBye(playerId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(\r\n        playerId,\r\n        roundList,\r\n        roundId\r\n    ).reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    ).includes(dummyPlayer.id);\r\n}\r\nObject.freeze(hasHadBye);\r\nexport {hasHadBye};\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number[]}\r\n */\r\nfunction getPlayersByOpponent(opponentId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(\r\n        opponentId,\r\n        roundList,\r\n        roundId\r\n    ).reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    ).filter(\r\n        (playerId) => playerId !== opponentId\r\n    );\r\n}\r\nObject.freeze(getPlayersByOpponent);\r\nexport {getPlayersByOpponent};\r\n\r\n/**\r\n * Get a list of all of a player's scores from each match.\r\n * @type {ScoreCalculator}\r\n * @returns {number[]} the list of scores\r\n */\r\nfunction playerScoreList(playerId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(playerId, roundList, roundId).map(\r\n        (match) => match.result[match.players.indexOf(playerId)]\r\n    );\r\n}\r\n\r\n/**\r\n * TODO: Maybe merge this with the other function?\r\n */\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number[]}\r\n */\r\nfunction playerScoreListNoByes(playerId, roundList, roundId = null) {\r\n    return getMatchesByPlayer(\r\n        playerId,\r\n        roundList,\r\n        roundId\r\n    ).filter(\r\n        (match) => !isBye(match)\r\n    ).map(\r\n        (match) => match.result[match.players.indexOf(playerId)]\r\n    );\r\n}\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction playerScore(playerId, roundList, roundId = null) {\r\n    let score = 0;\r\n    const scoreList = playerScoreList(playerId, roundList, roundId);\r\n    if (scoreList.length > 0) {\r\n        score = scoreList.reduce((a, b) => a + b);\r\n    }\r\n    return score;\r\n}\r\nObject.freeze(playerScore);\r\nexport {playerScore};\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction playerScoreCum(playerId, roundList, roundId = null) {\r\n    let runningScore = 0;\r\n    /** @type {number[]} */\r\n    let cumScores = [];\r\n    let scores = playerScoreListNoByes(playerId, roundList, roundId);\r\n    scores.forEach(function (score) {\r\n        runningScore += score;\r\n        cumScores.push(runningScore);\r\n    });\r\n    let totalScore = 0;\r\n    if (cumScores.length !== 0) {\r\n        totalScore = cumScores.reduce((a, b) => a + b);\r\n    }\r\n    return totalScore;\r\n}\r\n\r\n/**\r\n * Calculate a player's color balance. A negative number means they played as\r\n * white more. A positive number means they played as black more.\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction playerColorBalance(playerId, roundList, roundId = null) {\r\n    let color = 0;\r\n    getMatchesByPlayer(playerId, roundList, roundId).filter(\r\n        (match) => !isBye(match)\r\n    ).forEach(\r\n        function (match) {\r\n            if (match.players[0] === playerId) {\r\n                color += -1;\r\n            } else if (match.players[1] === playerId) {\r\n                color += 1;\r\n            }\r\n        }\r\n    );\r\n    return color;\r\n}\r\nObject.freeze(playerColorBalance);\r\nexport {playerColorBalance};\r\n\r\n/**\r\n * Gets the modified median factor defined in USCF § 34E1\r\n * @type {ScoreCalculator}\r\n * @param {boolean} [isSolkoff]\r\n * @returns {number}\r\n */\r\nfunction modifiedMedian(pId, roundList, roundId = null, isSolkoff = false) {\r\n    // get all of the opponent's scores\r\n    let scores = getPlayersByOpponent(\r\n        pId,\r\n        roundList,\r\n        roundId\r\n    ).filter(\r\n        (opponent) => opponent !== dummyPlayer.id\r\n    ).map(\r\n        (opponent) => playerScore(opponent, roundList, roundId)\r\n    );\r\n    //sort them, then remove the first and last items\r\n    scores.sort();\r\n    if (!isSolkoff) {\r\n        scores.pop();\r\n        scores.shift();\r\n    }\r\n    let finalScore = 0;\r\n    if (scores.length > 0) {\r\n        finalScore = scores.reduce((a, b) => a + b);\r\n    }\r\n    return finalScore;\r\n}\r\n\r\n/**\r\n * A shortcut for passing the `isSolkoff` variable to `modifiedMedian`.\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction solkoff(playerId, roundList, roundId = null) {\r\n    return modifiedMedian(playerId, roundList, roundId, true);\r\n}\r\n\r\n/**\r\n * Get the cumulative scores of a player's opponents.\r\n * @type {ScoreCalculator}\r\n * @returns {number}\r\n */\r\nfunction playerOppScoreCum(playerId, roundList, roundId = null) {\r\n    const opponents = getPlayersByOpponent(\r\n        playerId,\r\n        roundList,\r\n        roundId\r\n    ).filter(\r\n        (opponent) => opponent !== dummyPlayer.id\r\n    );\r\n    let oppScores = opponents.map((p) => playerScoreCum(p, roundList, roundId));\r\n    let score = 0;\r\n    if (oppScores.length !== 0) {\r\n        score = oppScores.reduce((a, b) => a + b);\r\n    }\r\n    return score;\r\n}\r\n\r\nconst tieBreakMethods = [\r\n    {\r\n        name: \"Modified median\",\r\n        func: modifiedMedian\r\n    },\r\n    {\r\n        name: \"Solkoff\",\r\n        func: solkoff\r\n    },\r\n    {\r\n        name: \"Cumulative score\",\r\n        func: playerScoreCum\r\n    },\r\n    {\r\n        name: \"Cumulative of opposition\",\r\n        func: playerOppScoreCum\r\n    },\r\n    {\r\n        name: \"Most black\",\r\n        func: playerColorBalance\r\n    }\r\n];\r\n\r\nObject.freeze(tieBreakMethods);\r\nexport {tieBreakMethods};\r\n\r\n/**\r\n * @param {Standing} standing1\r\n * @param {Standing} standing2\r\n * @returns {boolean}\r\n */\r\nfunction areScoresEqual(standing1, standing2) {\r\n    let areEqual = true;\r\n    // Check if any of them aren't equal\r\n    if (standing1.score !== standing2.score) {\r\n        areEqual = false;\r\n    }\r\n    Object.keys(standing1.tieBreaks).forEach(function (index) {\r\n        const i = Number(index);\r\n        if (standing1.tieBreaks[i] !== standing2.tieBreaks[i]) {\r\n            areEqual = false;\r\n        }\r\n    });\r\n    return areEqual;\r\n}\r\n\r\n/**\r\n * @typedef {import(\"../data/index\").Round} Round\r\n */\r\n\r\n/**\r\n * @param {Round[]} roundList\r\n * @returns {number[]}\r\n */\r\nfunction getAllPlayers(roundList) {\r\n    const allPlayers = roundList.reduce( // flatten the rounds\r\n        (acc, round) => acc.concat(round),\r\n        []\r\n    ).reduce( // flaten the players\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    );\r\n    return Array.from(new Set(allPlayers));\r\n}\r\n\r\n/**\r\n * Sort the standings by score, see USCF tie-break rules from § 34.\r\n * @param {number[]} methods\r\n * @param {Round[]} roundList\r\n * @param {number} [roundId]\r\n * @returns {[Standing[][], string[]]} The standings and the list of method used\r\n */\r\nfunction calcStandings(methods, roundList, roundId = null) {\r\n    const tieBreaks = methods.map((m) => tieBreakMethods[m]);\r\n    // Get a flat list of all of the players and their scores.\r\n    const standingsFlat = getAllPlayers(roundList).map(function (pId) {\r\n        /** @type {Standing} */\r\n        const standing = {\r\n            id: pId,\r\n            score: playerScore(pId, roundList, roundId),\r\n            tieBreaks: tieBreaks.map((method) => (\r\n                method.func(pId, roundList, roundId)\r\n            ))\r\n        };\r\n        return standing;\r\n    });\r\n    // Create a function to sort the players\r\n    let sortFunc = firstBy((standing) => standing.score, -1);\r\n    // For each tiebreak method, chain another `thenBy` to the function.\r\n    tieBreaks.forEach(function (ignore, index) {\r\n        sortFunc = sortFunc.thenBy((standing) => standing.tieBreaks[index], -1);\r\n    });\r\n    // Finally, sort the players.\r\n    standingsFlat.sort(sortFunc);\r\n    /** @type {Standing[][]} */\r\n    const standingsTree = [];\r\n    let runningRank = 0;\r\n    standingsFlat.forEach(function (standing, i, orig) {\r\n        if (i !== 0) { // we can't compare the first player with a previous one\r\n            const prevPlayer = orig[i - 1];\r\n            if (!areScoresEqual(standing, prevPlayer)) {\r\n                runningRank += 1;\r\n            }\r\n        }\r\n        if (!standingsTree[runningRank]) {\r\n            standingsTree[runningRank] = [];\r\n        }\r\n        standingsTree[runningRank].push(standing);\r\n    });\r\n    return [standingsTree, tieBreaks.map((m) => m.name)];\r\n}\r\nObject.freeze(calcStandings);\r\nexport {calcStandings};\r\n\r\n/**\r\n * @type {ScoreCalculator}\r\n * @returns {number?} 0 for white, 1 for black, null if no color history\r\n */\r\nfunction dueColor(playerId, roundList, roundId = null) {\r\n    if (!roundList[roundId - 1]) {\r\n        return null;\r\n    }\r\n    let color = 0;\r\n    let prevColor = playerMatchColor(\r\n        playerId,\r\n        roundList[roundId - 1]\r\n    );\r\n    if (prevColor === 0) {\r\n        color = 1;\r\n    }\r\n    return color;\r\n}\r\n\r\n/**\r\n * @param {number} playerId\r\n * @param {Round[]} roundList\r\n * @param {number} roundId\r\n * @param {Player[]} playerList\r\n * @param {number[][]} avoidList\r\n * @returns {PlayerData}\r\n */\r\nfunction genPlayerData(playerId, playerList, avoidList, roundList, roundId) {\r\n    const player = getPlayerById(playerList, playerId);\r\n    return {\r\n        data: player,\r\n        rating: player.rating,\r\n        id: playerId,\r\n        score: playerScore(playerId, roundList, roundId),\r\n        dueColor: dueColor(playerId, roundList, roundId),\r\n        colorBalance: playerColorBalance(playerId, roundList, roundId),\r\n        opponentHistory: getPlayersByOpponent(playerId, roundList, null),\r\n        upperHalf: false,\r\n        avoidList: getPlayerAvoidList(playerId, avoidList),\r\n        hasHadBye: hasHadBye(playerId, roundList, roundId)\r\n    };\r\n}\r\nObject.freeze(genPlayerData);\r\nexport {genPlayerData};\r\n","import {firstBy} from \"thenby\";\r\nimport splitAt from \"ramda/src/splitAt\";\r\nimport last from \"ramda/src/last\";\r\nimport blossom from \"edmonds-blossom\";\r\nimport {dummyPlayer} from \"../data/player\";\r\nimport {genPlayerData} from \"./scoring\";\r\n/**\r\n * @typedef {import(\"./\").PlayerData} PlayerData\r\n */\r\n\r\n/**\r\n * TODO: These probably need to be tweaked a lot.\r\n */\r\n/**\r\n * @constant avoidMeetingTwicePriority The weight given to avoid players\r\n * meeting twice. This same weight is given to avoid matching players on each\r\n * other's \"avoid\" list. This is the highest priority. (USCF § 27A1)\r\n * @type {number}\r\n */\r\nconst avoidMeetingTwicePriority = 20;\r\n/**\r\n * @constant sameScoresPriority The weight given to match players with\r\n * equal scores. This gets muliplied against a ratio taken from the distance\r\n * between each player's score. For example, if the tournament has players\r\n * scoring 0, 1, 2, and 3, and if a player scoring 1 gets compared with a\r\n * player scoring 3, then their `sameScoresPriority` will be reduced by 50%.\r\n * (`(3 - 1) / 4 = 0.5`) (USCF § 27A2)\r\n * @type {number}\r\n */\r\nconst sameScoresPriority = 16;\r\n/**\r\n * @constant differentHalfPriority The weight given to match players in lower\r\n * versus upper halves. This is only applied to players being matched within\r\n * the same score group. (USCF § 27A3)\r\n * @type {number}\r\n */\r\nconst differentHalfPriority = 2;\r\n/**\r\n * @constant differentDueColorPriority The weight given to match players with\r\n * opposite due colors. (USCF § 27A4 and § 27A5)\r\n * @type {number}\r\n */\r\nconst differentDueColorPriority = 1;\r\n// /** @type {number} */\r\n// const maxPriority = (\r\n//     avoidMeetingTwicePriority\r\n//     + sameScoresPriority\r\n//     + differentHalfPriority\r\n//     + differentDueColorPriority\r\n// );\r\n\r\n\r\n/**\r\n * Create an array of blossom-compatible weighted matchups. This returns\r\n * an array of each potential match, formatted like so: [idOfPlayer1,\r\n * idOfPlayer2, priority]. A higher priority means a more likely matchup.\r\n * @param {PlayerData} player1\r\n * @param {PlayerData} player2\r\n * @param {number[]} scoreList\r\n * @returns {number}\r\n */\r\nfunction calcPairIdeal(player1, player2, scoreList) {\r\n    let priority = 0;\r\n    let scoreDiff;\r\n    const metBefore = player1.opponentHistory.includes(player2.id);\r\n    const mustAvoid = player1.avoidList.includes(player2.id);\r\n    if (!metBefore && !mustAvoid) {\r\n        priority += avoidMeetingTwicePriority;\r\n    }\r\n    // Calculate the \"distance\" between their scores and multiply that\r\n    // against the `sameScoresPriority` constant.\r\n    scoreDiff = Math.abs(\r\n        scoreList.indexOf(player1.score)\r\n        - scoreList.indexOf(player2.score)\r\n    );\r\n    scoreDiff = (scoreList.length - scoreDiff) / scoreList.length;\r\n    priority += sameScoresPriority * scoreDiff;\r\n    // Only include `differentHalfPriority` if they're in the same\r\n    // score group.\r\n    if (player1.score === player2.score) {\r\n        if (player1.upperHalf !== player2.upperHalf) {\r\n            priority += differentHalfPriority;\r\n        }\r\n    }\r\n    if (player1.dueColor === null) {\r\n        priority += differentDueColorPriority;\r\n    } else if (player1.dueColor !== player2.dueColor) {\r\n        priority += differentDueColorPriority;\r\n    }\r\n    return Math.ceil(priority);\r\n}\r\nObject.freeze(calcPairIdeal);\r\nexport {calcPairIdeal};\r\n\r\n/**\r\n * Creates pairings according to the rules specified in USCF § 27, § 28,\r\n * and § 29. This is a work in progress and does not account for all of the\r\n * rules yet.\r\n * @param {object[][]} roundList\r\n * @param {number} roundId\r\n * @param {number[]} players\r\n * @param {object[]} playerList\r\n * @param {number[][]} avoidList\r\n */\r\nfunction pairPlayers(players, roundId, roundList, playerList, avoidList) {\r\n    /** @type {number[]} */\r\n    let byeMatch;\r\n    /** @type {number[][]} */\r\n    let potentialMatches;\r\n    /** @type {Number[][]} */\r\n    let matches;\r\n    /** @type {number[]} */\r\n    let blossomResults;\r\n    /** @type {[PlayerData, PlayerData, number][]} */\r\n    let reducedResults;\r\n    /** @type {number[]} */\r\n    let scoreList;\r\n    /** @type {PlayerData[]} */\r\n    let playerData = players.map((playerId) => (\r\n        genPlayerData(playerId, playerList, avoidList, roundList, roundId)\r\n    ));\r\n    scoreList = Array.from(new Set(playerData.map((p) => p.score)));\r\n    scoreList.sort();\r\n    // Sort the data so matchups default to order by score and rating.\r\n    playerData.sort(\r\n        firstBy((p) => p.score, -1).thenBy((p) => p.rating, -1)\r\n    );\r\n    // If there's an odd number of players, time to assign a bye.\r\n    if (playerData.length % 2 !== 0) {\r\n        // Assign a bye to the lowest-rated player in the lowest score group.\r\n        // (USCF § 29L2.)\r\n        // filter out players who have had a bye already.\r\n        let byePlayerData = last(playerData.filter((p) => !p.hasHadBye));\r\n        // In the impossible situation that *everyone* has played a bye round\r\n        // previously, then just pick the last player.\r\n        if (!byePlayerData) {\r\n            byePlayerData = last(playerData);\r\n        }\r\n        byeMatch = [byePlayerData.id, dummyPlayer.id];\r\n        // Remove the bye'd player from the list so they won't be matched again.\r\n        playerData = playerData.filter((p) => p !== byePlayerData);\r\n    }\r\n    // Determine which players are in the upper and lower halves of their score\r\n    // groups.\r\n    scoreList.forEach(function (score) {\r\n        let playersWithScore = playerData.filter((pd) => pd.score === score);\r\n        playersWithScore.sort((pd) => pd.rating).reverse();\r\n        if (playersWithScore.length > 1) {\r\n            splitAt(\r\n                playersWithScore.length / 2,\r\n                playersWithScore\r\n            )[0].forEach(function (playerDatum) {\r\n                playerDatum.upperHalf = true;\r\n            });\r\n        }\r\n    });\r\n    // Turn the data into blossom-compatible input.\r\n    potentialMatches = playerData.reduce(\r\n        function (acc, player1, ignore, src) {\r\n            const playerMatches = src.filter(\r\n                (player) => player !== player1\r\n            ).map(\r\n                (player2) => [\r\n                    player1.id,\r\n                    player2.id,\r\n                    calcPairIdeal(player1, player2, scoreList)\r\n                ]\r\n            );\r\n            return acc.concat(playerMatches);\r\n        },\r\n        []\r\n    );\r\n    // Feed all of the potential matches to Edmonds-blossom and let the\r\n    // algorithm work its magic. This returns an array where each index is the\r\n    // ID of one player and each value is the ID of the matched player.\r\n    blossomResults = blossom(potentialMatches);\r\n    // Translate those IDs into actual pairs of players.\r\n    reducedResults = blossomResults.reduce(\r\n        function (acc, p1Id, p2Id) {\r\n            // Filter out unmatched players. Even though we removed the byes\r\n            // from the list, blossom will automatically include their missing\r\n            // IDs in its results.\r\n            if (p1Id !== -1) {\r\n                const p1 = playerData.filter((p) => p.id === p1Id)[0];\r\n                const p2 = playerData.filter((p) => p.id === p2Id)[0];\r\n                const ideal = potentialMatches.filter(\r\n                    (pair) => pair[0] === p1Id && pair[1] === p2Id\r\n                )[0][2];\r\n                const matched = acc.map((pair) => pair[0]);\r\n                // Blossom returns a lot of redundant matches. Check that this\r\n                // matchup wasn't already added.\r\n                if (!matched.includes(p1) && !matched.includes(p2)) {\r\n                    acc.push([p1, p2, ideal]);\r\n                }\r\n            }\r\n            return acc;\r\n        },\r\n        []\r\n    );\r\n    // Sort by net score and rating for board placement.\r\n    reducedResults.sort(\r\n        firstBy(\r\n            /** @param {[PlayerData, PlayerData, number]} pair */\r\n            (pair) => pair[0].score + pair[1].score,\r\n            -1\r\n        ).thenBy(\r\n            /** @param {[PlayerData, PlayerData, number]} pair */\r\n            (pair) => pair[0].rating + pair[1].rating,\r\n            -1\r\n        )\r\n    );\r\n    // Turn the results into new match objects.\r\n    matches = reducedResults.map(\r\n        function (pair) {\r\n            const player1 = pair[0];\r\n            const player2 = pair[1];\r\n            // const ideal = pair[2];\r\n            const match = [player1.id, player2.id];\r\n            if (player1.colorBalance < player2.colorBalance) {\r\n                match.reverse();\r\n            }\r\n            return match;\r\n        }\r\n    );\r\n    // The bye match always gets added last so as not to affect the numbering.\r\n    if (byeMatch) {\r\n        matches.push(byeMatch);\r\n    }\r\n    return matches;\r\n}\r\nexport default Object.freeze(pairPlayers);\r\n","import {curry} from \"ramda\";\r\nimport {BLACK, WHITE} from \"../data/constants\";\r\nimport createMatch from \"../data/match\";\r\nimport {dummyPlayer, getPlayerById} from \"../data/player\";\r\nimport {hasHadBye} from \"../pairing-scoring/scoring\";\r\nimport pairPlayers from \"../pairing-scoring/pairing\";\r\n/**\r\n * @typedef {import(\"../data/index\").Player} Player\r\n * @typedef {import(\"../data/index\").Tournament} Tournament\r\n*/\r\n\r\n/**\r\n * @param {Tournament} tourney\r\n * @param {number} roundId\r\n * @param {import(\"./dispatch\").PlayerState} playerState\r\n * @param {number[]} unPairedPlayers\r\n * @param {number} byeValue\r\n */\r\nfunction autoPair(tourney, playerState, roundId, unPairedPlayers, byeValue) {\r\n    const roundList = tourney.roundList;\r\n    const getPlayer = curry(getPlayerById)(playerState.players);\r\n    const nextBye = tourney.byeQueue.filter(\r\n        (pId) => !hasHadBye(pId, roundList)\r\n    )[0];\r\n    let byeMatch = null;\r\n    if (nextBye >= 0) {\r\n        byeMatch = createMatch({\r\n            id: nextBye + \"-\" + dummyPlayer.id,\r\n            players: [nextBye, dummyPlayer.id],\r\n            origRating: [\r\n                getPlayer(nextBye).rating,\r\n                dummyPlayer.rating\r\n            ],\r\n            newRating: [\r\n                getPlayer(nextBye).rating,\r\n                dummyPlayer.rating\r\n            ]\r\n        });\r\n        unPairedPlayers = unPairedPlayers.filter((pId) => pId !== nextBye);\r\n    }\r\n    const pairs = pairPlayers(\r\n        unPairedPlayers,\r\n        roundId,\r\n        roundList,\r\n        playerState.players,\r\n        playerState.avoid\r\n    );\r\n    const newMatchList = pairs.map(\r\n        (pair) => createMatch({\r\n            id: pair.join(\"-\"),\r\n            players: [pair[WHITE], pair[BLACK]],\r\n            origRating: [\r\n                getPlayer(pair[WHITE]).rating,\r\n                getPlayer(pair[BLACK]).rating\r\n            ],\r\n            newRating: [\r\n                getPlayer(pair[WHITE]).rating,\r\n                getPlayer(pair[BLACK]).rating\r\n            ]\r\n        })\r\n    );\r\n    if (byeMatch) {\r\n        newMatchList.push(byeMatch);\r\n    }\r\n    // this covers manual bye matches and auto-paired bye matches\r\n    newMatchList.forEach(function (match) {\r\n        const dummy = match.players.indexOf(dummyPlayer.id);\r\n        if (dummy === BLACK) {\r\n            match.result[WHITE] = byeValue;\r\n        }\r\n        if (dummy === WHITE) {\r\n            match.result[BLACK] = byeValue;\r\n        }\r\n    });\r\n    return newMatchList;\r\n}\r\nObject.freeze(autoPair);\r\nexport {autoPair};\r\n\r\n/**\r\n * @param {Player[]} players\r\n * @param {number[]} pair\r\n * @param {number} byeValue\r\n */\r\nfunction manualPair(players, pair, byeValue) {\r\n    const getPlayer = curry(getPlayerById)(players);\r\n    const match = createMatch({\r\n        id: pair.join(\"-\"),\r\n        players: [pair[WHITE], pair[BLACK]],\r\n        origRating: [\r\n            getPlayer(pair[WHITE]).rating,\r\n            getPlayer(pair[BLACK]).rating\r\n        ],\r\n        newRating: [\r\n            getPlayer(pair[WHITE]).rating,\r\n            getPlayer(pair[BLACK]).rating\r\n        ]\r\n    });\r\n    if (pair[WHITE] === dummyPlayer.id) {\r\n        match.result = [0, byeValue];\r\n    }\r\n    if (pair[BLACK] === dummyPlayer.id) {\r\n        match.result = [byeValue, 0];\r\n    }\r\n    return match;\r\n}\r\nObject.freeze(manualPair);\r\nexport {manualPair};\r\n","import React from \"react\";\r\n// This will cause Webpack to import the entire Ramda library, but we're using\r\n// so much of it that cherry-picking individual files has virtually no benefit.\r\nimport {\r\n    __,\r\n    append,\r\n    concat,\r\n    last,\r\n    lensPath,\r\n    filter,\r\n    findIndex,\r\n    move,\r\n    over,\r\n    propEq,\r\n    remove,\r\n    reverse,\r\n    set\r\n} from \"ramda\";\r\nimport {getPlayerById} from \"../data/player\";\r\nimport defaultTourneyList from \"./demo-tourney.json\";\r\nimport {autoPair, manualPair} from \"./match-functions\";\r\n/**\r\n * @typedef {import(\"./dispatch\").Action} Action\r\n * @typedef {import(\"../data/index\").Tournament} Tournament\r\n */\r\n\r\n/** @type {Tournament[]} */\r\n// @ts-ignore\r\nconst defaultData = defaultTourneyList;\r\n\r\n/**\r\n * @param {Tournament[]} state\r\n * @param {Action} action\r\n * @returns {Tournament[]}\r\n */\r\nfunction tourneysReducer(state, action) {\r\n    switch (action.type) {\r\n    case \"ADD_TOURNEY\":\r\n        return append(action.tourney, state);\r\n    case \"DEL_TOURNEY\":\r\n        return state.filter((ignore, i) => i !== action.index);\r\n    case \"ADD_ROUND\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\"]),\r\n            append([]),\r\n            state\r\n        );\r\n    case \"DEL_LAST_ROUND\":\r\n        // If a match has been scored, then reset it.\r\n        // TODO: This logic should probably be somewhere else?\r\n        last(\r\n            state[action.tourneyId].roundList\r\n        ).forEach(\r\n            function (match) {\r\n                if (match.result[0] + match.result[1] !== 0) {\r\n                    match.players.forEach(\r\n                        function (pId, color) {\r\n                            getPlayerById(action.players, pId).matchCount -= 1;\r\n                            getPlayerById(action.players, pId).rating = (\r\n                                match.origRating[color]\r\n                            );\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        );\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\"]),\r\n            remove(-1, 1),\r\n            state\r\n        );\r\n    case \"ADD_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            append(action.id),\r\n            state\r\n        );\r\n    case \"DEL_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            filter((id) => id !== action.id),\r\n            state\r\n        );\r\n    case \"MOVE_TIEBREAK\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"tieBreaks\"]),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    case \"SET_TOURNEY_PLAYERS\":\r\n        return set(\r\n            lensPath([action.tourneyId, \"players\"]),\r\n            action.players,\r\n            state\r\n        );\r\n    case \"SET_BYE_QUEUE\":\r\n        return set(\r\n            lensPath([action.tourneyId, \"byeQueue\"]),\r\n            action.byeQueue,\r\n            state\r\n        );\r\n    case \"AUTO_PAIR\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            concat(\r\n                // @ts-ignore\r\n                __,\r\n                autoPair(\r\n                    state[action.tourneyId],\r\n                    action.playerState,\r\n                    action.roundId,\r\n                    action.unpairedPlayers,\r\n                    action.byeValue\r\n                )\r\n            ),\r\n            state\r\n        );\r\n    case \"MANUAL_PAIR\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            append(manualPair(action.players, action.pair, action.byeValue)),\r\n            state\r\n        );\r\n    case \"SET_MATCH_RESULT\":\r\n        return set(\r\n            lensPath([\r\n                action.tourneyId,\r\n                \"roundList\",\r\n                action.roundId,\r\n                findIndex(\r\n                    propEq(\"id\", action.matchId),\r\n                    state[action.tourneyId].roundList[action.roundId]),\r\n                \"result\"\r\n            ]),\r\n            action.result,\r\n            set(\r\n                lensPath([\r\n                    action.tourneyId,\r\n                    \"roundList\",\r\n                    action.roundId,\r\n                    findIndex(\r\n                        propEq(\"id\", action.matchId),\r\n                        state[action.tourneyId].roundList[action.roundId]),\r\n                    \"newRating\"\r\n                ]),\r\n                action.newRating,\r\n                state\r\n            )\r\n        );\r\n    case \"DEL_MATCH\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            filter((match) => match.id !== action.matchId),\r\n            state\r\n        );\r\n    case \"SWAP_COLORS\":\r\n        return over(\r\n            lensPath([\r\n                action.tourneyId,\r\n                \"roundList\",\r\n                action.roundId,\r\n                findIndex(\r\n                    propEq(\"id\", action.matchId),\r\n                    state[action.tourneyId].roundList[action.roundId]\r\n                )\r\n            ]),\r\n            (match) => ({\r\n                ...match,\r\n                players: reverse(match.players),\r\n                origRating: reverse(match.origRating),\r\n                newRating: reverse(match.newRating)\r\n            }),\r\n            state\r\n        );\r\n    case \"MOVE_MATCH\":\r\n        return over(\r\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    default:\r\n        throw new Error(\"Unexpected action type \" + action.type);\r\n    }\r\n}\r\n\r\n/** @type {[Tournament[], React.Dispatch<Action>]} */\r\nconst defaultContext = null;\r\nconst TournamentContext = React.createContext(defaultContext);\r\n\r\nfunction useTournamentReducer() {\r\n    return React.useReducer(tourneysReducer, defaultData);\r\n}\r\n\r\n/**\r\n * @param {number} [tourneyId]\r\n * @return {[Tournament, React.Dispatch<Action>]}\r\n */\r\nexport function useTournament(tourneyId) {\r\n    const [tourneys, dispatch] = React.useContext(TournamentContext);\r\n    return [tourneys[tourneyId], dispatch];\r\n}\r\n\r\nexport function useTournaments() {\r\n    return React.useContext(TournamentContext);\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function TournamentProvider(props) {\r\n    const [data, dispatch] = useTournamentReducer();\r\n    return (\r\n        <TournamentContext.Provider value={[data, dispatch]}>\r\n            {props.children}\r\n        </TournamentContext.Provider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {lensPath, set} from \"ramda\";\r\nimport defaultOptions from \"./demo-options.json\";\r\n/**\r\n * @typedef {import(\"./dispatch\").OptionAction} OptionAction\r\n */\r\n\r\n/**\r\n * @param {typeof defaultOptions} state\r\n * @param {OptionAction} action\r\n */\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n    case \"SET_BYE_VALUE\":\r\n        return set(\r\n            lensPath([\"byeValue\"]),\r\n            action.byeValue,\r\n            state\r\n        );\r\n    default:\r\n        throw new Error(\"Unexpected action type \" + action.type);\r\n    }\r\n}\r\n\r\n/** @type {[typeof defaultOptions, React.Dispatch<OptionAction>]} */\r\nconst defaultContext = null;\r\nconst OptionsContext = React.createContext(defaultContext);\r\n\r\nfunction useOptionsReducer() {\r\n    return React.useReducer(reducer, defaultOptions);\r\n}\r\n\r\n\r\nexport function useOptions() {\r\n    return React.useContext(OptionsContext);\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function OptionsProvider(props) {\r\n    const [data, dispatch] = useOptionsReducer();\r\n    return (\r\n        <OptionsContext.Provider value={[data, dispatch]}>\r\n            {props.children}\r\n        </OptionsContext.Provider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"@reach/router\";\r\nimport {usePlayers} from \"../state\";\r\nimport {dummyPlayer} from \"../data/player\";\r\nimport styles from \"./utility.module.css\";\r\n\r\n/**\r\n * @typedef {(event: React.MouseEvent | React.KeyboardEvent) => void} Action\r\n */\r\n\r\n/** @param {{children: JSX.Element | string, action: Action}} props */\r\nexport const Button = ({children, action}) => (\r\n    <button onClick={action}>\r\n        {children}\r\n    </button>\r\n);\r\n\r\n/** @param {{action: Action}} action */\r\nexport const BackButton = ({action}) => (\r\n    <Button action={action}>&lt; Back</Button>\r\n);\r\n\r\n/** @param {{action: Action}} action */\r\nexport const OpenButton = ({action}) => (\r\n    <Button action={action}>Open &gt;</Button>\r\n);\r\n\r\n/**\r\n * @param {object} props\r\n * @param {React.ReactNode} props.children\r\n * @param {React.CSSProperties} [props.style]\r\n */\r\nexport function Panel({children, style}) {\r\n    return (\r\n        <div style={{...style}} className={styles.panel}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} props\r\n */\r\nexport function PanelContainer({children}) {\r\n    return (\r\n        <div className={styles.panels}>\r\n            {React.Children.map(children, (child) => child)}\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport function PlayerLink({id, firstName, lastName}) {\r\n    const getPlayer = usePlayers()[2];\r\n    let name = \"\";\r\n    if (firstName) {\r\n        name += getPlayer(id).firstName + \" \";\r\n    }\r\n    if (lastName) {\r\n        name += getPlayer(id).lastName;\r\n    }\r\n    if (id === dummyPlayer.id) {\r\n        return <span>{name}</span>; // there's no bye player profile\r\n    }\r\n    return (\r\n        <Link to={\"/players/\" + id}>\r\n            {name}\r\n        </Link>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport More from \"react-feather/dist/icons/more-horizontal\";\r\nimport Close from \"react-feather/dist/icons/x\";\r\nimport {PlayerLink} from \"../../utility\";\r\nimport {calcNewRatings, dummyPlayer} from \"../../../data/player\";\r\nimport {BLACK, WHITE} from \"../../../data/constants\";\r\nimport {useTournaments, usePlayers} from \"../../../state\";\r\n// @ts-ignore\r\nimport {winnerSelect} from \"./round.module.css\";\r\n\r\n/**\r\n * @typedef {import(\"../../../data\").Match} Match\r\n */\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.pos\r\n * @param {Match} props.match\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n * @param {string} props.selectedMatch\r\n * @param {React.Dispatch<React.SetStateAction<string>>} props.setSelectedMatch\r\n */\r\nexport default function MatchRow({\r\n    pos,\r\n    match,\r\n    tourneyId,\r\n    roundId,\r\n    selectedMatch,\r\n    setSelectedMatch\r\n}) {\r\n    const dispatch = useTournaments()[1];\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [ignore, playerDispatch, getPlayer] = usePlayers();\r\n    /** @type {string} */\r\n    let resultCode;\r\n    if (match.result[0] > match.result[1]) {\r\n        resultCode = \"WHITE\";\r\n    } else if (match.result[1] > match.result[0]) {\r\n        resultCode = \"BLACK\";\r\n    } else if (match.result.every((x) => x === 0.5)) {\r\n        resultCode = \"DRAW\";\r\n    } else {\r\n        resultCode = \"NOTSET\";\r\n    }\r\n    const whiteName = (\r\n        getPlayer(match.players[0]).firstName\r\n        + \" \"\r\n        + getPlayer(match.players[0]).lastName\r\n    );\r\n    const blackName = (\r\n        getPlayer(match.players[1]).firstName\r\n        + \" \"\r\n        + getPlayer(match.players[1]).lastName\r\n    );\r\n\r\n    /**\r\n     * @param {React.FocusEvent<HTMLSelectElement>} event\r\n     */\r\n    function setMatchResult(event) {\r\n        /** @type {[number, number]} */\r\n        let result;\r\n        switch (event.currentTarget.value) {\r\n        case \"WHITE\":\r\n            result = [1, 0];\r\n            break;\r\n        case \"BLACK\":\r\n            result = [0, 1];\r\n            break;\r\n        case \"DRAW\":\r\n            result = [0.5, 0.5];\r\n            break;\r\n        case \"NOTSET\":\r\n            result = [0, 0];\r\n            break;\r\n        default:\r\n            throw new Error();\r\n        }\r\n        const white = getPlayer(match.players[WHITE]);\r\n        const black = getPlayer(match.players[BLACK]);\r\n        const newRating = (\r\n            (event.currentTarget.value === \"NOTSET\")\r\n            ? match.origRating\r\n            : calcNewRatings(\r\n                match.origRating,\r\n                [white.matchCount, black.matchCount],\r\n                result\r\n            )\r\n        );\r\n        playerDispatch({\r\n            type: \"SET_PLAYER_RATING\",\r\n            id: white.id,\r\n            rating: newRating[WHITE]\r\n        });\r\n        playerDispatch({\r\n            type: \"SET_PLAYER_RATING\",\r\n            id: black.id,\r\n            rating: newRating[BLACK]\r\n        });\r\n        // if the result hasn't been scored yet, increment the matchCount\r\n        if (match.result.reduce((a, b) => a + b) === 0) {\r\n            playerDispatch({\r\n                type: \"SET_PLAYER_MATCHCOUNT\",\r\n                id: white.id,\r\n                matchCount: white.matchCount + 1\r\n            });\r\n            playerDispatch({\r\n                type: \"SET_PLAYER_MATCHCOUNT\",\r\n                id: black.id,\r\n                matchCount: black.matchCount + 1\r\n            });\r\n        }\r\n        dispatch({\r\n            type: \"SET_MATCH_RESULT\",\r\n            tourneyId,\r\n            roundId,\r\n            matchId: match.id,\r\n            result,\r\n            newRating\r\n        });\r\n    }\r\n    return (\r\n        <tr>\r\n            <th className=\"table__number row__id\" scope=\"row\">{pos + 1}</th>\r\n            <td\r\n                className=\"table__player row__player\"\r\n                data-testid={`match-${pos}-white`}\r\n            >\r\n                <PlayerLink id={match.players[0]} firstName lastName/>{\" \"}\r\n                {resultCode === \"WHITE\" && (\r\n                    <span role=\"img\" aria-label=\"Winner\">\r\n                        🏆\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td\r\n                className=\"table__player row__player\"\r\n                data-testid={`match-${pos}-black`}\r\n            >\r\n                <PlayerLink id={match.players[1]} firstName lastName/>{\" \"}\r\n                {resultCode === \"BLACK\" && (\r\n                    <span role=\"img\" aria-label=\"Winner\">\r\n                        🏆\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td className=\"data__input row__controls\">\r\n                <select\r\n                    onBlur={setMatchResult}\r\n                    onChange={setMatchResult}\r\n                    disabled={match.players.includes(dummyPlayer.id)}\r\n                    defaultValue={resultCode}\r\n                    className={winnerSelect}\r\n                >\r\n                    <option value=\"NOTSET\">\r\n                        Select a winner\r\n                    </option>\r\n                    <option value=\"WHITE\">\r\n                        {whiteName} won\r\n                    </option>\r\n                    <option value=\"BLACK\">\r\n                        {blackName} won\r\n                    </option>\r\n                    <option value=\"DRAW\">\r\n                        Draw\r\n                    </option>\r\n                </select>\r\n            </td>\r\n            <td className=\"data__input row__controls\">\r\n                {(selectedMatch !== match.id)\r\n                ? (\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        title={\r\n                            // eslint-disable-next-line max-len\r\n                            `Open information for ${whiteName} versus ${blackName}.`\r\n                        }\r\n                        aria-label={\r\n                            // eslint-disable-next-line max-len\r\n                            `Open information for ${whiteName} versus ${blackName}.`\r\n                        }\r\n                        onClick={() => setSelectedMatch(match.id)}\r\n                    >\r\n                        <More />\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        title=\"Close information.\"\r\n                        aria-label=\"Close information.\"\r\n                        onClick={() => setSelectedMatch(null)}\r\n                    >\r\n                        <Close/>\r\n                    </button>\r\n                )}\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport {genPlayerData} from \"../../../pairing-scoring/scoring\";\r\nimport {useTournaments, usePlayers} from \"../../../state\";\r\n\r\n/**\r\n * @typedef {import(\"../../../data\").Match} Match\r\n */\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {Match} props.match\r\n * @param {number} props.color\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n */\r\nexport default function PlayerMatchInfo({match, color, tourneyId, roundId}) {\r\n    const [tourneys] = useTournaments();\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [playerState, ignore, getPlayer] = usePlayers();\r\n    const playerData = genPlayerData(\r\n        match.players[color],\r\n        playerState.players,\r\n        playerState.avoid,\r\n        tourneys[tourneyId].roundList,\r\n        roundId\r\n    );\r\n    const colorBalance = playerData.colorBalance;\r\n    let prettyBalance = \"Even\";\r\n    if (colorBalance < 0) {\r\n        prettyBalance = \"White +\" + Math.abs(colorBalance);\r\n    } else if (colorBalance > 0) {\r\n        prettyBalance = \"Black +\" + colorBalance;\r\n    }\r\n    return (\r\n        <dl className=\"player-card\">\r\n            <h3>\r\n                {playerData.data.firstName} {playerData.data.lastName}\r\n            </h3>\r\n            <dt>Score</dt>\r\n            <dd>{playerData.score}</dd>\r\n            <dt>Rating</dt>\r\n            <dd>\r\n                {match.origRating[color]} (\r\n                {numeral(\r\n                    match.newRating[color] - match.origRating[color]\r\n                ).format(\"+0\")}\r\n                )\r\n            </dd>\r\n            <dt>Color balance</dt>\r\n            <dd>{prettyBalance}</dd>\r\n            <dt>Has had a bye round</dt>\r\n            <dd>{playerData.hasHadBye ? \"Yes\" : \"No\"}</dd>\r\n            <dt>Opponent history</dt>\r\n            <dd>\r\n                <ol>\r\n                    {playerData.opponentHistory.map((opId) => (\r\n                        <li key={opId}>\r\n                            {getPlayer(opId).firstName}{\" \"}\r\n                            {getPlayer(opId).lastName}\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </dd>\r\n            <dt>Players to avoid</dt>\r\n            <dd>\r\n                <ol>\r\n                    {playerData.avoidList.map((pId) => (\r\n                        <li key={pId}>\r\n                            {getPlayer(pId).firstName} {getPlayer(pId).lastName}\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </dd>\r\n        </dl>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {dummyPlayer} from \"../../../data/player\";\r\nimport {useTournament, usePlayers, useOptions} from \"../../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n * @param {number} props.roundId\r\n */\r\nexport default function PairPicker({tourneyId, roundId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [{roundList, players}, dispatch] = useTournament(tourneyId);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [playerState, ignore, getPlayer] = usePlayers();\r\n    const [{byeValue}] = useOptions();\r\n    const matchList = roundList[roundId];\r\n    /** @type {number[]} */\r\n    const defaultPlayers = [];\r\n    const [selectedPlayers, setSelectedPlayers] = useState(defaultPlayers);\r\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\r\n    function selectPlayer(event) {\r\n        const pId = Number(event.target.value);\r\n        if (event.target.checked) {\r\n            setSelectedPlayers(function (prevState) {\r\n                // stop React from adding an ID twice in a row\r\n                if (!prevState.includes(pId)) {\r\n                    prevState.push(pId);\r\n                }\r\n                // ensure that only the last two players stay selected.\r\n                return prevState.slice(-2);\r\n            });\r\n        } else {\r\n            setSelectedPlayers(selectedPlayers.filter((id) => id !== pId));\r\n        }\r\n    }\r\n    const matched = matchList.reduce(\r\n        (acc, match) => acc.concat(match.players),\r\n        []\r\n    );\r\n    const unMatched = players.filter((pId) => !matched.includes(pId));\r\n    if (unMatched.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Unmatched players</h3>\r\n            <ul>\r\n                {unMatched.map((pId) => (\r\n                    <li key={pId}>\r\n                        <input\r\n                            id={`${pId}`}\r\n                            type=\"checkbox\"\r\n                            checked={selectedPlayers.includes(pId)}\r\n                            value={pId}\r\n                            onChange={selectPlayer}\r\n                        />{\" \"}\r\n                        <label htmlFor={`${pId}`}>\r\n                            {getPlayer(pId).firstName} {getPlayer(pId).lastName}\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n                {unMatched.length % 2 !== 0 && (\r\n                    <li>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={selectedPlayers.includes(\r\n                                dummyPlayer.id\r\n                            )}\r\n                            value={dummyPlayer.id}\r\n                            onChange={selectPlayer}\r\n                        />\r\n                        {dummyPlayer.firstName} {dummyPlayer.lastName}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <button\r\n                onClick={() => dispatch({\r\n                    type: \"MANUAL_PAIR\",\r\n                    pair: selectedPlayers,\r\n                    tourneyId,\r\n                    roundId,\r\n                    byeValue,\r\n                    players: playerState.players\r\n                })}\r\n                disabled={selectedPlayers.length !== 2}\r\n            >\r\n                Pair checked\r\n            </button>{\" \"}\r\n            <button\r\n                onClick={() => dispatch({\r\n                    type: \"AUTO_PAIR\",\r\n                    unpairedPlayers: unMatched,\r\n                    tourneyId,\r\n                    roundId,\r\n                    playerState,\r\n                    byeValue\r\n                })}\r\n                disabled={unMatched.length === 0}\r\n            >\r\n                Auto-pair\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * @param {number} playerCount\r\n */\r\nfunction calcNumOfRounds(playerCount) {\r\n    let roundId = Math.ceil(Math.log2(playerCount));\r\n    if (!Number.isFinite(roundId)) {\r\n        roundId = 0;\r\n    }\r\n    return roundId;\r\n}\r\nObject.freeze(calcNumOfRounds);\r\nexport {calcNumOfRounds};\r\n\r\n/**\r\n * @template {object} T\r\n * @param {T[]} list\r\n * @param {number | string} id\r\n * @returns {T}\r\n */\r\nfunction getById(list, id) {\r\n    return list.filter((x) => x.id === id)[0];\r\n}\r\nObject.freeze(getById);\r\nexport {getById};\r\n/**\r\n * @param {Object[]} list\r\n * @param {number | string} id\r\n */\r\nfunction getIndexById(list, id) {\r\n    return list.indexOf(getById(list, id));\r\n}\r\nObject.freeze(getIndexById);\r\nexport {getIndexById};\r\n","import React, {useState} from \"react\";\r\nimport Repeat from \"react-feather/dist/icons/repeat\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\r\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\r\nimport MatchRow from \"./match-row\";\r\nimport PlayerMatchInfo from \"./player-match-info\";\r\nimport PairPicker from \"./pair-picker\";\r\nimport {PanelContainer, Panel} from \"../../utility\";\r\nimport {getById, getIndexById} from \"../../../data/utility\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\nimport style from \"./round.module.css\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.roundId\r\n * @param {number} props.tourneyId\r\n */\r\nexport default function Round({roundId, tourneyId}) {\r\n    const [{roundList}, dispatch] = useTournament(tourneyId);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [ignore, playerDispatch, getPlayer] = usePlayers();\r\n    const matchList = roundList[roundId];\r\n    /** @type {string} */\r\n    const defaultMatch = null;\r\n    const [selectedMatch, setSelectedMatch] = useState(defaultMatch);\r\n    /** @param {string} matchId */\r\n    function unMatch(matchId) {\r\n        const match = getById(roundList[roundId], matchId);\r\n        if (match.result.reduce((a, b) => a + b) !== 0) {\r\n            // checks if the match has been scored yet & resets the players'\r\n            // records\r\n            match.players.forEach(function (pId, color) {\r\n                playerDispatch({\r\n                    type: \"SET_PLAYER_MATCHCOUNT\",\r\n                    id: pId,\r\n                    matchCount: getPlayer(pId).matchCount - 1\r\n                });\r\n                playerDispatch({\r\n                    type: \"SET_PLAYER_RATING\",\r\n                    id: pId,\r\n                    rating: match.origRating[color]\r\n                });\r\n            });\r\n        }\r\n        dispatch({type: \"DEL_MATCH\", tourneyId, roundId, matchId});\r\n        setSelectedMatch(null);\r\n    }\r\n    /** @param {string} matchId */\r\n    function swapColors(matchId) {\r\n        dispatch({type: \"SWAP_COLORS\", tourneyId, roundId, matchId});\r\n    }\r\n    /**\r\n     * @param {string} matchId\r\n     * @param {number} direction\r\n     */\r\n    function moveMatch(matchId, direction) {\r\n        const matchesRef = roundList[roundId];\r\n        const oldIndex = getIndexById(matchesRef, matchId);\r\n        const newIndex = (\r\n            (oldIndex + direction >= 0)\r\n            ? oldIndex + direction\r\n            : 0\r\n        );\r\n        dispatch({type: \"MOVE_MATCH\", tourneyId, roundId, oldIndex, newIndex});\r\n    }\r\n    return (\r\n        <PanelContainer>\r\n            <Panel>\r\n                <div className={style.toolbar}>\r\n                    <button\r\n                        className=\"danger iconButton\"\r\n                        onClick={() => unMatch(selectedMatch)}\r\n                        disabled={selectedMatch === null}\r\n                        title=\"Unmatch\"\r\n                        aria-label=\"Unmatch\"\r\n                    >\r\n                        <Trash />\r\n                    </button>\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => swapColors(selectedMatch)}\r\n                        disabled={selectedMatch === null}\r\n                        title=\"Swap colors\"\r\n                        aria-label=\"Swap colors\"\r\n                    >\r\n                        <Repeat />\r\n                    </button>\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => moveMatch(selectedMatch, -1)}\r\n                        disabled={selectedMatch === null}\r\n                        title=\"Move up\"\r\n                        aria-label=\"Move up\"\r\n                    >\r\n                        <ArrowUp />\r\n                    </button>\r\n                    <button\r\n                        className=\"iconButton\"\r\n                        onClick={() => moveMatch(selectedMatch, 1)}\r\n                        disabled={selectedMatch === null}\r\n                        title=\"Move down\"\r\n                        aria-label=\"Move down\"\r\n                    >\r\n                        <ArrowDown/>\r\n                    </button>\r\n                </div>\r\n                {(matchList.length === 0) &&\r\n                    <p>No players matched yet.</p>\r\n                }\r\n                <table className={style.table}>\r\n                    {(matchList.length > 0) &&\r\n                        <caption>Round {roundId + 1} results</caption>\r\n                    }\r\n                    <tbody>\r\n                        {(matchList.length > 0) &&\r\n                            <tr>\r\n                                <th className=\"row__id\" scope=\"col\">\r\n                                    #\r\n                                </th>\r\n                                <th className=\"row__player\" scope=\"col\">\r\n                                    White\r\n                                </th>\r\n                                <th className=\"row__player\" scope=\"col\">\r\n                                    Black\r\n                                </th>\r\n                                <th className=\"row__result\" scope=\"col\">\r\n                                    Result\r\n                                </th>\r\n                                <th className=\"row__controls\" scope=\"col\">\r\n                                    Controls\r\n                                </th>\r\n                            </tr>\r\n                        }\r\n                        {matchList.map((match, pos) => (\r\n                            <MatchRow\r\n                                key={match.id}\r\n                                pos={pos}\r\n                                match={match}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                                selectedMatch={selectedMatch}\r\n                                setSelectedMatch={setSelectedMatch}\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Panel>\r\n            <Panel>\r\n                {selectedMatch !== null && (\r\n                    <PanelContainer>\r\n                        <Panel>\r\n                            <PlayerMatchInfo\r\n                                match={getById(matchList, selectedMatch)}\r\n                                color={0}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                            />\r\n                        </Panel>\r\n                        <Panel>\r\n                            <PlayerMatchInfo\r\n                                match={getById(matchList, selectedMatch)}\r\n                                color={1}\r\n                                tourneyId={tourneyId}\r\n                                roundId={roundId}\r\n                            />\r\n                        </Panel>\r\n                    </PanelContainer>\r\n                )}\r\n                <PairPicker\r\n                    tourneyId={tourneyId}\r\n                    roundId={roundId}\r\n                />\r\n            </Panel>\r\n        </PanelContainer>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport numeral from \"numeral\";\r\nimport dashify from \"dashify\";\r\nimport {PanelContainer, Panel} from \"../utility\";\r\nimport {dummyPlayer} from \"../../data/player\";\r\nimport {useTournament, usePlayers} from \"../../state\";\r\nimport {calcStandings, tieBreakMethods} from \"../../pairing-scoring/scoring\";\r\nimport style from \"./scores.module.css\";\r\n\r\n// let's make a custom numeral format. I don't really know how this works.\r\nnumeral.register(\"format\", \"half\", {\r\n    regexps: {\r\n        format: /(1\\/2)/,\r\n        unformat: /(1\\/2)/\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    format: function (value, format, roundingFunction) {\r\n        /** @type {number | string} */\r\n        let whole = Math.floor(value);\r\n        /** @type {number | string} */\r\n        let remainder = value - whole;\r\n        if (remainder === 0.5) {\r\n            remainder = \"½\";\r\n        } else if (remainder === 0) {\r\n            remainder = \"\";\r\n        }\r\n        if (whole === 0 && remainder) {\r\n            whole = \"\";\r\n        }\r\n        // let output = numeral._.numberToFormat(value, format, roundingFunction);\r\n        // return output;\r\n        return String(whole) + remainder;\r\n    },\r\n    unformat: function (value) {\r\n        return Number(value); // doesn't work... todo?\r\n    }\r\n});\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n */\r\nfunction ScoreList({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [tourney] = useTournament(tourneyId);\r\n    const getPlayer = usePlayers()[2];\r\n    const [standingTree, tbMethods] = calcStandings(\r\n        tourney.tieBreaks,\r\n        tourney.roundList\r\n    );\r\n    return (\r\n        <table className={style.table}>\r\n            <caption>Standings</caption>\r\n            <tbody>\r\n                <tr className={style.topHeader}>\r\n                    <th scope=\"col\">Rank</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Score</th>\r\n                    {tbMethods.map((name, i) => (\r\n                        <th key={i} scope=\"col\">\r\n                            {name}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                {standingTree.map((standingsFlat, rank) =>\r\n                    standingsFlat.filter(\r\n                        (p) => p.id !== dummyPlayer.id\r\n                    ).map((standing, j, src) => (\r\n                        <tr key={standing.id} className={style.row}>\r\n                            {j === 0 && ( // Only display the rank once\r\n                                <th\r\n                                    scope=\"row\"\r\n                                    className={\"table__number \" + style.rank}\r\n                                    rowSpan={src.length}\r\n                                >\r\n                                    {numeral(rank + 1).format(\"0o\")}\r\n                                </th>\r\n                            )}\r\n                            <th\r\n                                scope=\"row\"\r\n                                className={style.playerName}\r\n                                data-testid={rank}\r\n                            >\r\n                                {getPlayer(standing.id).firstName}&nbsp;\r\n                                {getPlayer(standing.id).lastName}\r\n                            </th>\r\n                            <td\r\n                                className=\"table__number\"\r\n                                data-testid={dashify(\r\n                                    getPlayer(standing.id).firstName\r\n                                    + getPlayer(standing.id).lastName\r\n                                    + \" score\"\r\n                                )}\r\n                            >\r\n                                {numeral(standing.score).format(\"1/2\")}\r\n                            </td>\r\n                            {standing.tieBreaks.map((score, i) => (\r\n                                <td\r\n                                    key={i}\r\n                                    className=\"table__number\"\r\n                                    data-testid={dashify(\r\n                                        getPlayer(standing.id).firstName\r\n                                        + getPlayer(standing.id).lastName\r\n                                        + tbMethods[i]\r\n                                    )}\r\n                                >\r\n                                    {numeral(score).format(\"1/2\")}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n */\r\nfunction SelectTieBreaks({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [{tieBreaks}, dispatch] = useTournament(tourneyId);\r\n    const [selectedTb, setSelectedTb] = useState(null);\r\n    /** @param {number} [id] */\r\n    function toggleTb(id = null) {\r\n        if (!id) {\r\n            id = selectedTb;\r\n        }\r\n        if (tieBreaks.includes(id)) {\r\n            dispatch({type: \"DEL_TIEBREAK\", id, tourneyId});\r\n        } else {\r\n            dispatch({type: \"ADD_TIEBREAK\", id, tourneyId});\r\n        }\r\n    }\r\n    /** @param {number} direction */\r\n    function moveTb(direction) {\r\n        const index = tieBreaks.indexOf(selectedTb);\r\n        dispatch({\r\n            type: \"MOVE_TIEBREAK\",\r\n            oldIndex: index,\r\n            newIndex: index + direction,\r\n            tourneyId\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Selected tiebreak methods</h3>\r\n            <div className=\"toolbar\">\r\n                <button\r\n                    onClick={() => toggleTb()}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Toggle\r\n                </button>\r\n                <button\r\n                    onClick={() => moveTb(-1)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Move up\r\n                </button>\r\n                <button\r\n                    onClick={() => moveTb(1)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Move down\r\n                </button>\r\n                <button\r\n                    onClick={() => setSelectedTb(null)}\r\n                    disabled={selectedTb === null}\r\n                >\r\n                    Done\r\n                </button>\r\n            </div>\r\n            <ol>\r\n                {tieBreaks.map((id) => (\r\n                    <li key={id}>\r\n                        {tieBreakMethods[id].name}\r\n                        <button\r\n                            onClick={() =>\r\n                                selectedTb === id\r\n                                    ? setSelectedTb(null)\r\n                                    : setSelectedTb(id)\r\n                            }\r\n                            disabled={\r\n                                selectedTb !== null && selectedTb !== id\r\n                            }\r\n                        >\r\n                            {selectedTb === id ? \"Done\" : \"Edit\"}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <h3>Available tiebreak methods</h3>\r\n            <ol>\r\n                {tieBreakMethods.map((method, i) => (\r\n                    <li key={i}>\r\n                        <span\r\n                            className={\r\n                                tieBreaks.includes(i)\r\n                                    ? \"enabled\"\r\n                                    : \"disabled\"\r\n                            }\r\n                        >\r\n                            {method.name}\r\n                        </span>\r\n                        {!tieBreaks.includes(i) && (\r\n                            <button onClick={() => toggleTb(i)}>\r\n                                Add\r\n                            </button>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {number} props.tourneyId\r\n */\r\nconst Scores = ({tourneyId}) => (\r\n    <PanelContainer>\r\n        <Panel>\r\n            <ScoreList tourneyId={tourneyId}/>\r\n        </Panel>\r\n        <Panel>\r\n            <SelectTieBreaks tourneyId={tourneyId}/>\r\n        </Panel>\r\n    </PanelContainer>\r\n);\r\n\r\nexport default Scores;\r\n","import React from \"react\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\nimport {PlayerLink} from \"../../utility\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function Selecting({tourneyId, setIsSelecting}) {\r\n    const [{players}, dispatch] = useTournament(tourneyId);\r\n    const [playerState] = usePlayers();\r\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\r\n    function togglePlayer(event) {\r\n        const id = Number(event.target.value);\r\n        if (event.target.checked) {\r\n            dispatch({\r\n                type: \"SET_TOURNEY_PLAYERS\",\r\n                players: players.concat([id]),\r\n                tourneyId\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: \"SET_TOURNEY_PLAYERS\",\r\n                players: players.filter((pId) => pId !== id),\r\n                tourneyId\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <button\r\n                onClick={() =>\r\n                    dispatch({\r\n                        type: \"SET_TOURNEY_PLAYERS\",\r\n                        players: playerState.players.map(\r\n                            (p) => p.id\r\n                        ),\r\n                        tourneyId\r\n                    })\r\n                }\r\n            >\r\n                Select all\r\n            </button>\r\n            <button\r\n                onClick={() =>\r\n                    dispatch({\r\n                        type: \"SET_TOURNEY_PLAYERS\",\r\n                        players: [],\r\n                        tourneyId\r\n                    })\r\n                }\r\n            >\r\n                Select none\r\n            </button>\r\n            <button onClick={() => setIsSelecting(false)}>\r\n                Done\r\n            </button>\r\n            <table>\r\n                <caption>Select players</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Select</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {playerState.players.map(({id}) => (\r\n                        <tr key={id}>\r\n                            <td><PlayerLink id={id} firstName /></td>\r\n                            <td><PlayerLink id={id} lastName /></td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    value={id}\r\n                                    checked={players.includes(id)}\r\n                                    onChange={togglePlayer}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {PanelContainer, Panel, PlayerLink} from \"../../utility\";\r\nimport {hasHadBye} from \"../../../pairing-scoring/scoring\";\r\nimport {useTournament, usePlayers} from \"../../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function Roster({tourneyId, setIsSelecting}) {\r\n    const [{players, byeQueue, roundList}, dispatch] = useTournament(tourneyId);\r\n    const getPlayer = usePlayers()[2];\r\n    return (\r\n        <PanelContainer>\r\n            <Panel>\r\n                <button onClick={() => setIsSelecting(true)}>\r\n                    Edit player roster\r\n                </button>\r\n                <table>\r\n                    <caption>Current roster</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>First name</th>\r\n                            <th>Last name</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {players.map((pId) => (\r\n                            <tr\r\n                                key={pId}\r\n                                className={getPlayer(pId).type + \" player\"}\r\n                            >\r\n                                <td><PlayerLink id={pId} firstName /></td>\r\n                                <td><PlayerLink id={pId} lastName /></td>\r\n                                <td>\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            dispatch({\r\n                                                type: \"SET_BYE_QUEUE\",\r\n                                                byeQueue: byeQueue.concat(\r\n                                                    [pId]\r\n                                                ),\r\n                                                tourneyId\r\n                                            })\r\n                                        }\r\n                                        disabled={byeQueue.includes(\r\n                                            pId\r\n                                        )}\r\n                                    >\r\n                                        Bye signup\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Panel>\r\n            <Panel>\r\n                <h3>Bye queue</h3>\r\n                {(byeQueue.length === 0) &&\r\n                    <p>No players have signed up for a bye round.</p>\r\n                }\r\n                <ol>\r\n                    {byeQueue.map((pId) => (\r\n                        <li\r\n                            key={pId}\r\n                            className={\r\n                                hasHadBye(pId, roundList)\r\n                                    ? \"disabled\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            {getPlayer(pId).firstName}{\" \"}\r\n                            {getPlayer(pId).lastName}\r\n                            <button\r\n                                onClick={() =>\r\n                                    dispatch({\r\n                                        type: \"SET_BYE_QUEUE\",\r\n                                        byeQueue: byeQueue.filter(\r\n                                            (id) => pId !== id\r\n                                        ),\r\n                                        tourneyId\r\n                                    })\r\n                                }\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </Panel>\r\n        </PanelContainer>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Selecting from \"./selecting\";\r\nimport Roster from \"./roster\";\r\nimport {useTournament} from \"../../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function PlayerSelect({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [{players}] = useTournament(tourneyId);\r\n    const [isSelecting, setIsSelecting] = useState(players.length === 0);\r\n    if (isSelecting) {\r\n        return (\r\n            <Selecting tourneyId={tourneyId} setIsSelecting={setIsSelecting} />\r\n        );\r\n    } else {\r\n        return (\r\n            <Roster tourneyId={tourneyId} setIsSelecting={setIsSelecting} />\r\n        );\r\n    }\r\n}\r\n","import React, {useState, useEffect, useMemo} from \"react\";\r\nimport {Tabs, TabList, Tab, TabPanels, TabPanel} from \"@reach/tabs\";\r\nimport Tooltip from \"@reach/tooltip\";\r\nimport {Link, Redirect} from \"@reach/router\";\r\nimport last from \"ramda/src/last\";\r\nimport Check from \"react-feather/dist/icons/check-circle\";\r\nimport Alert from \"react-feather/dist/icons/alert-circle\";\r\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\r\nimport Round from \"./round/\";\r\nimport Scores from \"./scores\";\r\nimport PlayerSelect from \"./player-select/index\";\r\nimport {useTournament, usePlayers} from \"../../state\";\r\nimport {calcNumOfRounds} from \"../../data/utility\";\r\nimport \"@reach/tabs/styles.css\";\r\nimport \"@reach/tooltip/styles.css\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {string} [props.path]\r\n * @param {number} [props.tourneyId]\r\n */\r\nexport default function Tournament({tourneyId}) {\r\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\r\n    const [tourney, dispatch] = useTournament(tourneyId);\r\n    const [playerState] = usePlayers();\r\n    const [defaultTab, setDefaultTab] = useState(0);\r\n    // This isn't expensive, but why not memoize it?\r\n    const isNewRoundReady = useMemo(\r\n        function () {\r\n            if (!tourney) {\r\n                return false;\r\n            }\r\n            const lastRound = last(tourney.roundList);\r\n            if (!lastRound) {\r\n                return true;\r\n            }\r\n            const matchedPlayers = lastRound.reduce(\r\n                /** @param {number[]} acc */\r\n                (acc, match) => acc.concat(match.players),\r\n                []\r\n            );\r\n            const unMatchedPlayers = tourney.players.filter(\r\n                (pId) => !matchedPlayers.includes(pId)\r\n            );\r\n            const results = lastRound.map(\r\n                (match) => match.result[0] + match.result[1]\r\n            );\r\n            return (unMatchedPlayers.length === 0 && !results.includes(0));\r\n        },\r\n        [tourney]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            const origTitle = document.title;\r\n            document.title = tourney.name;\r\n            return function () {\r\n                document.title = origTitle;\r\n            };\r\n        },\r\n        [tourney]\r\n    );\r\n    function newRound() {\r\n        dispatch({type: \"ADD_ROUND\", tourneyId});\r\n        setDefaultTab(tourney.roundList.length + 1);\r\n    }\r\n    function delLastRound() {\r\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\r\n            dispatch({\r\n                type: \"DEL_LAST_ROUND\",\r\n                players: playerState.players,\r\n                tourneyId\r\n            });\r\n        }\r\n    }\r\n    if (!tourney) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n        <Tabs defaultIndex={defaultTab}>\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <ChevronLeft/> Back\r\n                </Link>\r\n                <h2>{tourney.name}</h2>\r\n                Round progress: {tourney.roundList.length}/\r\n                {calcNumOfRounds(tourney.players.length)}{\" \"}\r\n                <button\r\n                    onClick={newRound}\r\n                    disabled={!isNewRoundReady}\r\n                >\r\n                    New round\r\n                </button>{\" \"}\r\n                <Tooltip\r\n                    label={(\r\n                        (isNewRoundReady)\r\n                        ? \"Ready to begin a new round.\"\r\n                        // eslint-disable-next-line max-len\r\n                        : \"You must complete the last round before beginning a new one.\"\r\n                    )}\r\n                >\r\n                    <span className=\"helpIcon\">\r\n                        {(\r\n                            (isNewRoundReady)\r\n                            ? <Check />\r\n                            : <Alert />\r\n                        )}\r\n                    </span>\r\n                </Tooltip>{\" \"}\r\n                <button\r\n                    className=\"danger\"\r\n                    onClick={delLastRound}\r\n                    disabled={tourney.roundList.length === 0}\r\n                >\r\n                    Remove last round\r\n                </button>\r\n            </div>\r\n            <TabList>\r\n                <Tab>Players</Tab>\r\n                <Tab>Scores</Tab>\r\n                {Object.keys(tourney.roundList).map((id) => (\r\n                    <Tab key={id}>Round {Number(id) + 1}</Tab>\r\n                ))}\r\n            </TabList>\r\n            <TabPanels>\r\n                <TabPanel>\r\n                    <PlayerSelect tourneyId={tourneyId} />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                    <Scores tourneyId={tourneyId} />\r\n                </TabPanel>\r\n                {Object.keys(tourney.roundList).map((id) => (\r\n                    <TabPanel key={id}>\r\n                        <Round roundId={Number(id)} tourneyId={tourneyId} />\r\n                    </TabPanel>\r\n                ))}\r\n            </TabPanels>\r\n        </Tabs>\r\n    );\r\n}\r\n","/**\r\n * @typedef {import(\"./index\").Tournament} Tournament\r\n */\r\n/**\r\n * @param {Object} importObj\r\n */\r\nfunction createTournament(importObj) {\r\n    /** @type {Tournament} */\r\n    const tourney = {\r\n        name: importObj.name || \"\",\r\n        tieBreaks: importObj.tieBreaks || [0, 1, 2, 3],\r\n        byeQueue: importObj.byeQueue || [],\r\n        players: importObj.players || [],\r\n        roundList: importObj.roundList || []\r\n    };\r\n    return tourney;\r\n}\r\nexport default Object.freeze(createTournament);\r\n","import React, {useState} from \"react\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport {Link} from \"@reach/router\";\r\nimport createTournament from \"../../data/tournament\";\r\nimport {useTournaments} from \"../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nexport default function TournamentList(props) {\r\n    const [tourneys, dispatch] = useTournaments();\r\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\r\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\r\n    function updateNewName(event) {\r\n        setNewTourneyName(event.target.value);\r\n    }\r\n    /** @param {React.FormEvent<HTMLFormElement>} event */\r\n    function makeTournament(event) {\r\n        event.preventDefault();\r\n        dispatch({\r\n            type: \"ADD_TOURNEY\",\r\n            tourney: createTournament({name: newTourneyName})\r\n        });\r\n        setNewTourneyName(\"\");\r\n    }\r\n    return (\r\n        <div>\r\n            {(tourneys.length > 0) &&\r\n                <h2>Tournament list</h2>\r\n            }\r\n            {(tourneys.length > 0)\r\n                ?\r\n                <ol>\r\n                    {tourneys.map((tourney, i) =>\r\n                        <li key={i}>\r\n                            <Link to={String(i)}>\r\n                                {tourney.name}\r\n                            </Link>{\" \"}\r\n                            <button\r\n                                title={`Delete “${tourney.name}”`}\r\n                                aria-label={`Delete “${tourney.name}”`}\r\n                                className=\"danger iconButton\"\r\n                                onClick={\r\n                                    () => dispatch({\r\n                                        type: \"DEL_TOURNEY\",\r\n                                        index: i\r\n                                    })\r\n                                }>\r\n                                <Trash />\r\n                            </button>\r\n                        </li>\r\n                    )}\r\n                </ol>\r\n                : <p>No tournaments added yet.</p>\r\n            }\r\n            <form onSubmit={makeTournament}>\r\n                <fieldset>\r\n                    <legend>Make a new tournament</legend>\r\n                    <label>Name:{\" \"}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"tournament name\"\r\n                            value={newTourneyName}\r\n                            onChange={updateNewName}\r\n                            required={true}\r\n                        />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Create\" />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Tournament from \"./tournament\";\r\nimport TournamentList from \"./list\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nconst TournamentIndex = (props) => (\r\n    <div>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default TournamentIndex;\r\nexport {Tournament, TournamentList};\r\n","import React, {useMemo, useState, useEffect} from \"react\";\r\nimport numeral from \"numeral\";\r\nimport {Link} from \"@reach/router\";\r\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport {getPlayerAvoidList, kFactor} from \"../../data/player\";\r\nimport {usePlayers} from \"../../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {string | number} [props.playerId]\r\n * @param {string} [props.path]\r\n */\r\nexport default function PlayerInfoBox(props) {\r\n    const playerId = Number(props.playerId);\r\n    const [playerState, playerDispatch, getPlayer] = usePlayers();\r\n    const avoidList = playerState.avoid;\r\n    const [singAvoidList, setSingAvoidList] = useState(\r\n        getPlayerAvoidList(playerId, avoidList)\r\n    );\r\n    const unAvoided = useMemo(\r\n        () => (\r\n            playerState.players.map(\r\n                (player) => player.id\r\n            ).filter(\r\n                (pId) => !singAvoidList.includes(pId) && pId !== playerId\r\n            )\r\n        ),\r\n        [playerState.players, playerId, singAvoidList]\r\n    );\r\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\r\n    /** @param {React.FormEvent<HTMLFormElement>} event */\r\n    function avoidAdd(event) {\r\n        event.preventDefault();\r\n        playerDispatch({\r\n            type: \"ADD_AVOID_PAIR\",\r\n            pair: [playerId, Number(selectedAvoider)]\r\n        });\r\n    }\r\n    useEffect(\r\n        function () {\r\n            setSingAvoidList(getPlayerAvoidList(playerId, avoidList));\r\n        },\r\n        [avoidList, playerId]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            setSelectedAvoider(unAvoided[0]);\r\n        },\r\n        [setSelectedAvoider, unAvoided]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            const origTitle = document.title;\r\n            document.title = (\r\n                getPlayer(playerId).firstName\r\n                + \" \" + getPlayer(playerId).lastName\r\n            );\r\n            return function () {\r\n                document.title = origTitle;\r\n            };\r\n        },\r\n        [playerId, getPlayer]\r\n    );\r\n    return (\r\n        <div>\r\n            <Link to=\"/players\"><ChevronLeft /> Back</Link>\r\n            <h2>\r\n                {getPlayer(playerId).firstName} {getPlayer(playerId).lastName}\r\n            </h2>\r\n            <dl>\r\n                <dt id=\"match-count\">Matches played</dt>\r\n                <dd aria-labelledby=\"match-count\">\r\n                    {getPlayer(playerId).matchCount}\r\n                </dd>\r\n                <dt id=\"rating\">Rating</dt>\r\n                <dd aria-labelledby=\"rating\">{getPlayer(playerId).rating}</dd>\r\n                <dt>K factor</dt>\r\n                <dd>\r\n                    {numeral(kFactor(getPlayer(playerId).matchCount)).format(\r\n                        \"00\"\r\n                    )}\r\n                </dd>\r\n                <dt>Players to avoid</dt>\r\n                <dd>\r\n                    <ul>\r\n                        {singAvoidList.map((pId) => (\r\n                            <li key={pId}>\r\n                                {getPlayer(pId).firstName}{\" \"}\r\n                                {getPlayer(pId).lastName}{\" \"}\r\n                                <button\r\n                                    className=\"danger iconButton\"\r\n                                    onClick={() =>\r\n                                        playerDispatch({\r\n                                            type: \"DEL_AVOID_PAIR\",\r\n                                            pair: [playerId, pId]\r\n                                        })\r\n                                    }\r\n                                    title={`Remove ${getPlayer(pId).firstName}\r\n${getPlayer(pId).lastName}`}\r\n                                    arial-label={`Remove \r\n${getPlayer(pId).firstName} ${getPlayer(pId).lastName} from avoid list.`}\r\n                                >\r\n                                    <Trash />\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                        {avoidList.length === 0 && <li>None</li>}\r\n                    </ul>\r\n                </dd>\r\n            </dl>\r\n            <form onSubmit={(event) => avoidAdd(event)}>\r\n                <fieldset>\r\n                    <legend>Add player to avoid</legend>\r\n                    <select\r\n                        onBlur={(event) =>\r\n                            setSelectedAvoider(Number(event.target.value))\r\n                        }\r\n                    >\r\n                        {unAvoided.map((pId) => (\r\n                            <option key={pId} value={pId}>\r\n                                {getPlayer(pId).firstName}{\" \"}\r\n                                {getPlayer(pId).lastName}\r\n                            </option>\r\n                        ))}\r\n                    </select>{\" \"}\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Fragment, useState} from \"react\";\r\nimport {Link} from \"@reach/router\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport {createPlayer} from \"../../data/player\";\r\nimport {usePlayers} from \"../../state\";\r\nimport {PlayerLink} from \"../utility\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function PlayerList(props) {\r\n    const [playerState, playerDispatch] = usePlayers();\r\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\r\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\r\n    const ids = playerState.players.map((p) => p.id);\r\n    ids.sort((a, b) => a - b);\r\n    ids.reverse();\r\n    const [nextId, setNextId] = useState(ids[0] + 1);\r\n    /** @param {React.FormEvent<HTMLFormElement>} event */\r\n    const handleSubmit = function (event) {\r\n        event.preventDefault();\r\n        const newPlayer = createPlayer(newPlayerData);\r\n        newPlayer.id = nextId;\r\n        setNextId((prevId) => prevId + 1);\r\n        setNewPlayerdata(newPlayerDefault);\r\n        playerDispatch({type: \"ADD_PLAYER\", newPlayer});\r\n    };\r\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\r\n    const updateField = function (event) {\r\n        event.preventDefault();\r\n        /** @type {Object<string, string>} */\r\n        let update = {};\r\n        update[event.currentTarget.name] = event.currentTarget.value;\r\n        setNewPlayerdata(Object.assign({}, newPlayerData, update));\r\n    };\r\n    /**\r\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\r\n     * @param {number} id\r\n     */\r\n    const delPlayer = function (event, id) {\r\n        event.preventDefault();\r\n        playerDispatch({type: \"DEL_PLAYER\", id});\r\n    };\r\n    let rosterTable = <Fragment></Fragment>;\r\n    if (playerState.players.length > 0) {\r\n        rosterTable =\r\n        <table>\r\n            <caption>Demo Roster</caption>\r\n            <thead>\r\n                <tr>\r\n                    <th>First name</th>\r\n                    <th>Last name</th>\r\n                    <th>Rating</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{playerState.players.map((player) =>\r\n                <tr key={player.id}>\r\n                    <td className=\"table__player\">\r\n                        <PlayerLink id={player.id} firstName />\r\n                    </td>\r\n                    <td className=\"table__player\">\r\n                        <PlayerLink id={player.id} lastName />\r\n                    </td>\r\n                    <td className=\"table__number\">{player.rating}</td>\r\n                    <td>\r\n                        <button\r\n                            className=\"danger iconButton\"\r\n                            onClick={(event) =>\r\n                                delPlayer(event, player.id)\r\n                            }\r\n                            // eslint-disable-next-line max-len\r\n                            title={`Delete ${player.firstName} ${player.lastName}`}\r\n                            // eslint-disable-next-line max-len\r\n                            aria-label={`Delete ${player.firstName} ${player.lastName}`}\r\n                        >\r\n                            <Trash />\r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <Link to={String(player.id)}>\r\n                            Open\r\n                            <VisuallyHidden>\r\n                                {\" \"}{player.firstName} {player.lastName}\r\n                            </VisuallyHidden>\r\n                            {\" \"}<ChevronRight />\r\n                        </Link>\r\n                    </td>\r\n                </tr>\r\n            )}</tbody>\r\n        </table>;\r\n    }\r\n    return (\r\n        <div className=\"roster\">\r\n            {rosterTable}\r\n            <form onSubmit={handleSubmit}>\r\n                <fieldset>\r\n                    <legend>Add your own players</legend>\r\n                    <p>\r\n                        <label>\r\n                            First name\r\n                            {\" \"}\r\n                            <input type=\"text\" name=\"firstName\"\r\n                                onChange={updateField}\r\n                                value={newPlayerData.firstName} required />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            Last name\r\n                            {\" \"}\r\n                            <input type=\"text\" name=\"lastName\"\r\n                                onChange={updateField}\r\n                                value={newPlayerData.lastName} required />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            Rating\r\n                            {\" \"}\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"rating\"\r\n                                onChange={updateField}\r\n                                value={newPlayerData.rating}\r\n                                required />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <input type=\"submit\" value=\"Add\"/>\r\n                    </p>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PlayerInfo from \"./info-box\";\r\nimport PlayerList from \"./list\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\nexport default function Players(props) {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {PlayerInfo, PlayerList};\r\n","import React from \"react\";\r\nimport {useTournaments, useOptions, usePlayers} from \"../state\";\r\n\r\n/**\r\n * @param {Object} props\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nexport function Options(props) {\r\n    const [tourneys] = useTournaments();\r\n    const [options, dispatch] = useOptions();\r\n    const [players] = usePlayers();\r\n    const exportData = {options, tourneys, players};\r\n    return (\r\n        <div>\r\n            <form>\r\n                <fieldset>\r\n                    <legend>Bye options</legend>\r\n                    Select how many points a bye is worth:{\" \"}\r\n                    <label>\r\n                        1\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={options.byeValue === 1}\r\n                            onChange={() => dispatch({\r\n                                type: \"SET_BYE_VALUE\",\r\n                                byeValue: 1\r\n                            })}\r\n                        />\r\n                    </label>{\" \"}\r\n                    <label>\r\n                        ½\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={options.byeValue === 0.5}\r\n                            onChange={() => dispatch({\r\n                                type: \"SET_BYE_VALUE\",\r\n                                byeValue: 0.5\r\n                            })}\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <form onSubmit={(event) => event.preventDefault()}>\r\n                <fieldset>\r\n                    <legend>Export data</legend>\r\n                    <textarea\r\n                        className=\"json\"\r\n                        rows={25}\r\n                        cols={50}\r\n                        value={JSON.stringify(exportData, null, 2)}\r\n                        name=\"playerdata\"\r\n                        readOnly />\r\n                    <input type=\"submit\" value=\"Load\" disabled />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Caution = () => (\r\n    <div className={styles.caution}>\r\n        <p className={styles.caution__text}>\r\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\r\n            &nbsp;\r\n            This is an unstable demo build.\r\n            &nbsp;\r\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\r\n            {\" \"}\r\n            Want to help make it better? Head to the\r\n            {\" \"}\r\n            <span role=\"img\" aria-label=\"finger pointing right\">👉</span>\r\n            &nbsp;\r\n            <a\r\n                className={styles.caution__link}\r\n                href=\"https://github.com/johnridesabike/chessahoochee\">\r\n                Git repository\r\n            </a>.\r\n        </p>\r\n    </div>\r\n);\r\n\r\nexport default Caution;\r\n","import React from \"react\";\r\nimport {\r\n    Router,\r\n    Link,\r\n    LocationProvider,\r\n    createHistory,\r\n    Redirect\r\n} from \"@reach/router\";\r\nimport createHashSource from \"hash-source\";\r\nimport About from \"./components/about\";\r\nimport NotFound from \"./components/404\";\r\nimport TournamentIndex from \"./components/tournament\";\r\nimport {TournamentList, Tournament} from \"./components/tournament\";\r\nimport Players, {PlayerList, PlayerInfo} from \"./components/players\";\r\nimport {Options} from \"./components/options\";\r\nimport Caution from \"./components/caution\";\r\nimport {OptionsProvider, TournamentProvider, PlayersProvider} from \"./state\";\r\nimport \"./global.css\";\r\n// @ts-ignore\r\nimport {link} from \"./App.module.css\";\r\n// These are just for deploying to GitHub pages.\r\nlet source = createHashSource();\r\n// @ts-ignore\r\nlet history = createHistory(source);\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <Caution />\r\n            <LocationProvider history={history}>\r\n                <nav className=\"header\">\r\n                    <Link to=\"tourneys\" className={link}>\r\n                        Tournaments\r\n                    </Link>\r\n                    <Link to=\"players\" className={link}>\r\n                        Players\r\n                    </Link>\r\n                    <Link to=\"options\" className={link}>\r\n                        Options\r\n                    </Link>\r\n                    <Link to=\"about\" className={link}>\r\n                        About\r\n                    </Link>\r\n                </nav>\r\n                <main className=\"content\">\r\n                    {/* Lots of nested contexts. Is there a better way? */}\r\n                    <OptionsProvider>\r\n                        <PlayersProvider>\r\n                            <TournamentProvider>\r\n                                <Router>\r\n                                    <TournamentIndex path=\"tourneys\">\r\n                                        <TournamentList path=\"/\" />\r\n                                        <Tournament path=\":tourneyId\" />\r\n                                    </TournamentIndex>\r\n                                    <Players path=\"players\">\r\n                                        <PlayerList path=\"/\"/>\r\n                                        <PlayerInfo path=\":playerId\" />\r\n                                    </Players>\r\n                                    <Options path=\"options\" />\r\n                                    <About path=\"about\" />\r\n                                    <NotFound default />\r\n                                    <Redirect from=\"/\" to=\"tourneys\" noThrow />\r\n                                </Router>\r\n                            </TournamentProvider>\r\n                        </PlayersProvider>\r\n                    </OptionsProvider>\r\n                </main>\r\n            </LocationProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","/*jslint browser*/\r\n/*global process fetch*/\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {StrictMode} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <StrictMode><App /></StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}