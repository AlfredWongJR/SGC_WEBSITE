{"version":3,"sources":["pages/options.module.css","serviceWorker.js","side-effects.js","data-types/constants.js","data-types/types.js","data-types/factories.js","data-types/helpers.js","pairing-scoring/types.js","pairing-scoring/scoring.js","pairing-scoring/factories.js","pairing-scoring/converters.js","pairing-scoring/pairing.js","pairing-scoring/ratings.js","components/icons.jsx","pages/tournament/crosstable.jsx","components/utility.jsx","components/new-player.jsx","hooks/reducers/generic-db-reducer.js","hooks/reducers/options-reducer.js","demo-data/index.js","hooks/hooks.js","hooks/db.js","pages/tournament/player-select/selecting.jsx","pages/tournament/player-select/index.jsx","pages/tournament/pair-picker/player-info.jsx","pages/tournament/pair-picker/select-list.jsx","pages/tournament/pair-picker/stage.jsx","pages/tournament/pair-picker/index.jsx","components/404.jsx","pages/tournament/round/player-match-info.jsx","pages/tournament/round/match-row.jsx","pages/tournament/round/round-table.jsx","pages/tournament/round/round.jsx","pages/tournament/round/index.jsx","pages/tournament/round/round-panels.jsx","pages/tournament/scores.jsx","pages/tournament/setup.jsx","pages/tournament/sidebar.jsx","pages/tournament/status.jsx","pages/tournament/tournament-data/players-reducer.js","pages/tournament/tournament-data/match-functions.js","pages/tournament/tournament-data/tournament-reducer.js","electron-utils.js","components/sidebar-default.jsx","components/windows-controls.jsx","components/window.jsx","pages/tournament/tournament-data/index.jsx","pages/tournament/tournament.jsx","pages/tournament/tournament-list.jsx","pages/tournament/index.jsx","test-data/index.js","pages/options.jsx","pages/players/player-list.jsx","pages/players/player-profile.jsx","pages/players/index.jsx","components/caution/index.jsx","pages/splash.jsx","App.jsx","index.jsx","pages/tournament/index.module.css","pages/tournament/round/round.module.css","pages/splash.module.css","components/windows-controls.module.css","icon-min.svg","pages/players/index.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["module","exports","options","Boolean","window","location","hostname","match","numeral","register","format","value","roundingFunction","whole","Math","floor","remainder","fraction","String","regexps","unformat","Number","WHITE","BLACK","DUMMY_ID","Id","t","refinement","id","test","Color","num","AvoidPair","tuple","Player","interface","firstName","lastName","matchCount","rating","type","Match","newRating","origRating","playerIds","result","RoundList","list","Tournament","byeQueue","date","Date","name","roundList","tieBreaks","OptionsDb","avoidPairs","byeValue","TourneysDb","dict","PlayersDb","Object","freeze","createMatch","importObj","types","assign","nanoid","createPlayer","isDummyId","playerId","isDummyObj","playerObj","dummyPlayer","createMissingPlayer","getPlayerMaybe","playerDict","player","rounds2Matches","lastRound","arguments","length","undefined","slice","reduce","acc","round","concat","getUnmatched","players","roundId","matchedIds","_ref","values","includes","assoc","isRoundComplete","unmatched","results","map","_ref2","keys","ColorScore","ScoreData","colorScores","colors","isDummy","opponentResults","ratings","resultsNoByes","PairingData","avoidIds","halfPos","isUpperHalf","opponents","score","ScoreCalculator","func","Standing","BLACKVALUE","WHITEVALUE","getOpponentScores","scoreData","filter","oppId","getPlayerScore","sum","getCumulativeScore","scoreList","last","tieBreakMethods","0","of","scores","pipe","sort","ascend","init","tail","1","2","3","4","getTieBreakNames","idList","i","createBlankScoreData","createStandingList","methods","selectedTieBreaks","standings","sortFuncList","key","descend","path","prop","sortWith","createStandingTree","standingList","standing","orig","standing1","standing2","prevStanding","append","over","lensIndex","match2ScoreDataReducer","_map","color","origData","lensProp","defaultTo","scoreTypes","color2Score","lensPath","add","_map2","slicedToArray","p1Data","p2Data","matches2ScoreData","matchList","data","avoidPairReducer","pair","createPairingData","playerData","avoidDict","pairingData","playerStats","pairData","priority","condition","divisiblePriority","dividend","divisor","avoidMeetingTwice","sameScores","halfPosition","sameHalfPriority","differentHalf","isDiffHalf","differentDueColor","maxPriority","calcPairIdeal","player1","player2","metBefore","mustAvoid","p1LastColor","p2LastColor","scoreDiff","abs","halfDiff","splitInHalf","splitAt","upperHalfReducer","ignore","src","_pipe","p2","p","_pipe2","upperHalfIds","lowerHalfIds","indexOf","mergeRight","setUpperHalves","sortByScoreThenRating","assignColorsForPair","_pair","sortByNetScoreThenRating","pair1","pair2","pluck","getKFactor","calcNewRatings","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","simpleIcon","icon","props","react_default","a","createElement","dangerouslySetInnerHTML","__html","svg","aria-label","title","role","style","fill","hex","icons","Activity","Alert","ArrowDown","ArrowLeft","ArrowUp","Award","Check","CheckCircle","ChevronDown","ChevronLeft","ChevronRight","ChevronUp","Circle","Download","Edit","Help","Info","Javascript","Layers","List","Plus","React","ReactIcon","Repeat","Settings","Sidebar","Trash","UserMinus","UserPlus","Users","X","Crosstable","tournament","tourney","getPlayer","className","table","rank","colSpan","index","row","scope","playerName","opponent","index2","player1Id","player2Id","getXScore","firstRating","lastRating","change","Fragment","getRatingChangeTds","Panel","children","styles","panel","objectSpread","PanelContainer","classNames","panels","dateFormat","Intl","DateTimeFormat","day","month","year","DateFormat","cleanProps","omit","dateTime","toISOString","Notification","_ref3","success","warning","error","_ref4","tooltip","PlaceholderButton","aria-hidden","disabled","SortLabel","_ref5","sortKey","dispatch","utility_PlaceholderButton","onClick","isDescending","dont-hide","findById","x","NewPlayer","newPlayerDefault","_useState","useState","_useState2","newPlayerData","setNewPlayerdata","updateField","event","preventDefault","_event$currentTarget","currentTarget","prevState","onSubmit","htmlFor","required","onChange","genericDbReducer","state","action","nextId","console","warn","item","dissoc","mergeLeft","Error","optionsReducer","option","union","demo_data","tournaments","fromJSON","toLowerCaseIfPossible","toLowerCase","sortedTableReducer","oldState","newState","_oldState$newState","direction","caseInsensitiveProp","sortFunc","useSortedTable","initialState","_useReducer","useReducer","_useReducer2","useEffect","useLoadingCursor","isLoaded","document","body","cursor","setItemsPrototype","localForage","removeItemsPrototype","optionsStore","createInstance","storeName","playerStore","tourneyStore","loadDemoDB","_loadDemoDB","apply","this","_callee3","regenerator_default","wrap","_context3","prev","next","setItems","demoData","alert","stop","useAllItemsFromDb","store","items","setIsLoaded","didCancel","asyncToGenerator","mark","_callee","cleanResults","_context","getItems","sent","log","config","is","_callee2","deleted","_context2","difference","removeItems","useAllPlayersDb","useAllTournamentsDb","useOptionsDb","_useReducer3","defaultOptions","_useReducer4","_useState3","_useState4","iterate","then","Selecting","tourneyDispatch","_useAllPlayersDb","_useAllPlayersDb2","allPlayersDispatch","togglePlayer","target","checked","pId","visually_hidden_es","PlayerList","PlayerSelect","activePlayers","isSelecting","setIsSelecting","matches","flexShrink","dialog_es","isOpen","PlayerInfo","_useOptionsDb","colorBalance","hasBye","avoidList","prettyBalance","data-testid","entries","opId","SelectList","stagedPlayers","setStagedPlayers","_useSortedTable","_useSortedTable2","sorted","sortedDispatch","isOnePlayerSelected","Set","size","selectedIds","selectedPlayer","calcIdealOrNot","ideal","setWhite","set","setBlack","selectPlayer","Stage","_stagedPlayers","white","black","whiteName","blackName","unstage","matchIdeal","player0stats","player1stats","react","every","PairPicker","isModalOpen","setIsModalOpen","_useMemo","useMemo","_scoreData","curry","_useMemo2","unmatchedCount","unmatchedWithDummy","p1","width","flexGrow","NotFound","PlayerMatchInfo","_scoreData$playerId","MatchRow","compact","pos","selectedMatch","setSelectedMatch","playersDispatch","openModal","setOpenModal","resultCode","whitePlayer","blackPlayer","ResultDisplay","setMatchResult","matchId","rowId","playerResult","matchResult","winnerSelect","onBlur","controls","RoundTable","tbody","Round","_404","moveMatch","oldIndex","newIndex","forEach","unMatch","RoundPanels","_props$tournament","activePlayersCount","openTab","setOpenTab","tabs_es","ScoreTable","tieBreakNames","standingTree","obj","defineProperty","topHeader","standingsFlat","rowSpan","dashify","j","SelectTieBreaks","selectedTb","setSelectedTb","toggleTb","defaultId","moveTb","button-primary","selected","marginTop","Scores","Setup","isEditingName","setIsEditingName","isEditingDate","setIsEditingDate","dateInput","getFullYear","getMonth","getDate","textAlign","_event$currentTarget$","split","_event$currentTarget$2","rawYear","rawMonth","rawDay","es","to","noDraggy","onDragStart","e","navigate","isItOver","isNewRoundReady","isComplete","_delLastRound","confirm","Status","lastRoundId","justifyContent","playersReducer","scoreByeMatch","autoPair","_setByePlayer","dummyId","dataList","playersWithoutByes","nextByeSignup","dataForNextBye","byeData","setByePlayer","_setByePlayer2","pairDataNoByes","byePlayerData","pairs","playerIdArray","reduceWithIndices","addIndex","accArr","srcArr","playerMatches","blossom","p1Index","p2Index","matched","pairPlayers","pairsWithBye","idsPair","tournamentReducer","remove","move","__","findIndex","propEq","reverse","electron","require","ifElectron","fn","IfElectron","_ref$onlyWin","onlyWin","_ref$onlyMac","onlyMac","win","navigator","appVersion","mac","ifElectronOpen","url","shell","openExternal","macOSDoubleClick","doubleClickAction","getUserDefault","remote","systemPreferences","getCurrentWindow","minimize","isMaximized","unmaximize","maximize","toggleMaximize","propTypes","PropTypes","node","isRequired","bool","onlyWindows","Close","height","viewBox","xmlns","d","Maximize","Minimize","Restore","Controls","setIsMaximized","unregisterListeners","removeAllListeners","on","container","winButton","windows_controls_Minimize","windows_controls_Restore","windows_controls_Maximize","close","windows_controls_Close","WindowContext","createContext","useWindowContext","useContext","DEFAULT_TITLE","initialWinState","isBlur","isFullScreen","isSidebarOpen","windowReducer","WindowTitleBar","traffic-light-padding","onDoubleClick","alignItems","display","marginLeft","marginRight","logo","alt","left","position","right","Window","isFocused","open-sidebar","closed-sidebar","window-blur","isWindows","isMacOS","isElectron","window_WindowTitleBar","Provider","winDispatch","winState","WindowBody","footer","sidebar","_ref2$footerProps","footerProps","winBody-hasFooter","sidebar_default_Sidebar","emptyTourney","loadReducer","initLoading","noDbError","TournamentData","tourneyId","tourneyReducer","_useReducer5","_useReducer6","isLoading","loadingDispatch","getItem","allTheIds","allPlayers","Array","from","getAllPlayerIdsFromMatches","unChangedPlayers","symmetricDifference","setItem","catch","_ref6","roundCount","playerCount","ceil","log2","isFinite","calcNumOfRounds","Footer","tooltipText","tooltipWarn","backgroundColor","margin","minHeight","default","TournamentList","_useAllTournamentsDb","_useAllTournamentsDb2","tourneys","sortDispatch","newTourneyName","setNewTourneyName","isFormOpen","setIsFormOpen","message","deleteTournament","placeholder","TournamentIndex","invalidAlert","Options","tourneysDispatch","text","setText","_useOptionsDb2","optionsDispatch","exportData","loadData","JSON","stringify","download","href","encodeURIComponent","reader","FileReader","onload","ev","parse","_unused2","readAsText","files","process","_unused","cols","rows","spellCheck","delPlayer","PlayerProfile","avoidObj","singAvoidList","unAvoided","selectedAvoider","setSelectedAvoider","handleChange","handleAvoidChange","playerInfo","defaultValue","readOnly","arial-label","newSelected","PlayerProfileWrapper","Players","childProps","basepath","player_list_PlayerList","GITHUB_URL","Caution","caution","caution__text","caution__link","LICENSE_URL","ISSUES_URL","Splash","border","splash","hint","titleIcon","titleText","subtitle","fontSize","source","createHashSource","history","createHistory","App","pages_tournament","tournament_Tournament","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister","header","contentFrame","__webpack_require__"],"mappings":"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","file":"static/js/main.211f832a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"options_options__2hUUH\"};","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import numeral from \"numeral\";\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"fraction\", {\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        const whole = Math.floor(value);\n        const remainder = value - whole;\n        const fraction = (function () {\n            switch (remainder) {\n            case 0.25:\n                return \"¼\";\n            case 0.5:\n                return \"½\";\n            case 0.75:\n                return \"¾\";\n            default:\n                return \"\";\n            }\n        }());\n        const stringedWhole = whole === 0 && remainder ? \"\" : String(whole);\n        return stringedWhole + fraction;\n    },\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    unformat: function (value) {\n        // TODO: This doesn't do anything currently\n        return Number(value);\n    }\n});\n","// These define the array indices used in `Match` objects.\n// @example: `[WhitePlayer, BlackPlayer1]`, `[WhiteScore, BlackScore]`\nconst WHITE = 0;\nconst BLACK = 1;\n// This is used in by matches to indicate a dummy player. The\n// `getPlayerMaybe()` method returns a special dummy player profile when\n// fetching this ID.\n// This ID conforms to the NanoID regex.\nconst DUMMY_ID = \"________DUMMY________\";\n\nexport {BLACK, DUMMY_ID, WHITE};\n","import {BLACK, WHITE} from \"./constants\";\nimport t from \"tcomb\";\n\nconst Id = t.refinement(\n    t.String,\n    (id) => /^[A-Za-z0-9_-]{21}$/.test(id),\n    \"NanoId\"\n);\n\nconst Color = t.refinement(\n    t.Number,\n    (num) => num === BLACK || num === WHITE,\n    \"Color\"\n);\n\nconst AvoidPair = t.tuple([Id, Id], \"AvoidPair\");\n\nconst Player = t.interface(\n    {\n        firstName: t.String,\n        id: Id,\n        lastName: t.String,\n        matchCount: t.Number,\n        rating: t.Number,\n        type: t.String // used for CSS styling etc\n    },\n    \"Player\"\n);\n\nconst Match = t.interface(\n    {\n        id: Id,\n        newRating: t.tuple([t.Number, t.Number]),\n        origRating: t.tuple([t.Number, t.Number]),\n        playerIds: t.tuple([Id, Id]),\n        result: t.tuple([t.Number, t.Number])\n    },\n    \"Match\"\n);\n\nconst RoundList = t.list(t.list(Match), \"RoundList\");\n\nconst Tournament = t.interface(\n    {\n        byeQueue: t.list(t.String),\n        date: Date,\n        id: Id,\n        name: t.String,\n        playerIds: t.list(t.String),\n        roundList: RoundList,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Tournament\"\n);\n\n// Database stuff:\nconst OptionsDb = t.interface(\n    {\n        avoidPairs: t.list(AvoidPair),\n        byeValue: t.refinement(t.Number, (num) => num === 1 || num === 0.5)\n    },\n    \"Options\"\n);\nconst TourneysDb = t.dict(Id, Tournament, \"TournamentsDB\");\nconst PlayersDb = t.dict(Id, Player, \"PlayersDB\");\n\nexport default Object.freeze({\n    AvoidPair,\n    Color,\n    Id,\n    Match,\n    OptionsDb,\n    Player,\n    PlayersDb,\n    RoundList,\n    Tournament,\n    TourneysDb\n});\n","// These factories are mainly useful as a shortcut for default values.\nimport nanoid from \"nanoid\";\nimport types from \"./types\";\n\nexport function createMatch(importObj) {\n    return types.Match(\n        Object.assign(\n            {\n                id: nanoid(),\n                result: [0, 0]\n            },\n            importObj\n        )\n    );\n}\n\nexport function createPlayer(importObj) {\n    return types.Player(\n        Object.assign(\n            {\n                id: nanoid(),\n                matchCount: 0,\n                rating: 0,\n                type: \"person\" // used for CSS styling etc.\n            },\n            importObj\n        )\n    );\n}\n\nexport function createTournament(importObj) {\n    return types.Tournament(\n        Object.assign(\n            {\n                byeQueue: [],\n                date: new Date(),\n                id: nanoid(),\n                playerIds: [],\n                roundList: [],\n                tieBreaks: [0, 1, 2, 3]\n            },\n            importObj\n        )\n    );\n}\n","import {DUMMY_ID} from \"./constants\";\nimport {assoc} from \"ramda\";\nimport {createPlayer} from \"./factories\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\n/*******************************************************************************\n * Player functions\n ******************************************************************************/\n// These are useful for passing to `filter()` methods.\nconst isDummyId = (playerId) => types.Id(playerId) === DUMMY_ID;\nexport {isDummyId};\n// This can take any object with a compliant `id` property.\nconst isDummyObj = (playerObj) => types.Id(playerObj.id) === DUMMY_ID;\nexport {isDummyObj};\n\n// This is the dummy profile that `getPlayerMaybe()` returns for bye rounds.\nconst dummyPlayer = createPlayer({\n    firstName: \"Bye\",\n    id: DUMMY_ID,\n    lastName: \"Player\",\n    type: \"dummy\"\n});\n\n// If `getPlayerMaybe()` can't find a profile (e.g. if it was deleted) then it\n// outputs this instead. The ID will be the same as missing player's ID.\nconst createMissingPlayer = (id) => createPlayer({\n    firstName: \"Anonymous\",\n    id: id,\n    lastName: \"Player\",\n    type: \"missing\"\n});\n\n// This function should always be used in components that *might* not be able to\n// display current player information. This includes bye rounds with \"dummy\"\n// players, or scoreboards where a player may have been deleted.\nexport function getPlayerMaybe(playerDict, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = t.dict(types.Id, types.Player)(playerDict)[id];\n    return player ? player : createMissingPlayer(id);\n}\n\n/*******************************************************************************\n * Round functions\n ******************************************************************************/\n\n// This flattens a list of rounds to a list of matches.\n// The optional `lastRound` parameter will slice the rounds to only the last\n// index specified. For example: if you just want to see the scores through\n// round 2 and not include round 3.\nexport function rounds2Matches(roundList, lastRound = null) {\n    const rounds = (\n        lastRound === null\n        ? roundList\n        : roundList.slice(0, lastRound + 1)\n    );\n    return rounds.reduce((acc, round) => acc.concat(round), []);\n}\n\n// This creates a filtered version of `players` with only the players that are\n// not matched for the specified round.\nexport function getUnmatched(roundList, players, roundId) {\n    const matchList = roundList[roundId] || [];\n    const matchedIds = matchList.reduce(\n        (acc, {playerIds}) => acc.concat(playerIds),\n        []\n    );\n    const playerList = Object.values(players);\n    const unmatched = playerList.reduce(\n        (acc, player) => (\n            matchedIds.includes(player.id)\n            ? acc\n            : assoc(player.id, player, acc)\n        ),\n        {}\n    );\n    return unmatched;\n}\n\nexport function isRoundComplete(roundList, players, roundId) {\n    if (roundId < roundList.length - 1) {\n        // If it's not the last round, it's complete.\n        return true;\n    }\n    const unmatched = getUnmatched(roundList, players, roundId);\n    const results = roundList[roundId].map(({result}) => result[0] + result[1]);\n    return Object.keys(unmatched).length === 0 && !results.includes(0);\n}\n","// This file is a complement to `../data-types/`, except its types are specific\n// to the scoring and pairing functions.\nimport t from \"tcomb\";\nimport {types} from \"../data-types\";\n\nconst BLACKVALUE = 1;\nconst WHITEVALUE = -1;\nconst ColorScore = t.refinement(\n    t.Number,\n    (num) => num === BLACKVALUE || num === WHITEVALUE,\n    \"ColorScore\"\n);\nconst ScoreData = t.interface(\n    {\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        id: types.Id,\n        isDummy: t.Boolean,\n        opponentResults: t.dict(types.Id, t.Number),\n        ratings: t.list(t.Number),\n        results: t.list(t.Number),\n        resultsNoByes: t.list(t.Number)\n    },\n    \"ScoreData\"\n);\nconst PairingData = t.interface(\n    {\n        avoidIds: t.list(types.Id),\n        colorScores: t.list(ColorScore),\n        colors: t.list(types.Color),\n        // `halfPos` is the index of the player within their scoregroup that's\n        // split into upper and lower halves. Example: in a group of 8, the\n        // first and the fifth players would both be `halfPos: 0`.\n        halfPos: t.Number,\n        id: types.Id,\n        // isDueBye: t.Boolean,\n        isUpperHalf: t.Boolean,\n        opponents: t.list(types.Id),\n        rating: t.Number,\n        score: t.Number\n    },\n    \"PairingData\"\n);\nconst ScoreCalculator = t.func(\n    [t.dict(t.String, ScoreData), types.Id],\n    t.Number,\n    \"ScoreCalulator\"\n);\nconst Standing = t.interface(\n    {\n        id: types.Id,\n        score: t.Number,\n        tieBreaks: t.list(t.Number)\n    },\n    \"Standing\"\n);\n\nexport default Object.freeze({\n    BLACKVALUE,\n    PairingData,\n    ScoreCalculator,\n    ScoreData,\n    Standing,\n    WHITEVALUE\n});\n","// This implements the tiebreak methods specified in USCF § 34E.\n// This is incomplete; many more tiebreak methods need to be added. These are\n// simply the most commonly used.\nimport {\n    ascend,\n    init,\n    last,\n    pipe,\n    sort,\n    sum,\n    tail\n} from \"ramda\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\nfunction getOpponentScores(scoreData, id) {\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\n    return opponentIds.filter(\n        (oppId) => !scoreData[oppId].isDummy\n    ).map(\n        (oppId) => getPlayerScore(scoreData, oppId)\n    );\n}\n\n/*******************************************************************************\n * The main scoring methods\n ******************************************************************************/\nfunction getPlayerScore(scoreData, id) {\n    return sum(scoreData[id].results);\n}\nexport {getPlayerScore};\n\n\n// USCF § 34E1.\nfunction getMedianScore(scoreData, id) {\n    const scores = getOpponentScores(scoreData, id);\n    return pipe(\n        sort(ascend),\n        init,\n        tail,\n        sum\n    )(scores);\n}\n\n// USCF § 34E2.\nfunction getSolkoffScore(scoreData, id) {\n    return sum(getOpponentScores(scoreData, id));\n}\n// USCF § 34E3.\nfunction getCumulativeScore(scoreData, id) {\n    // turn the regular score list into a \"running\" score list\n    const scoreList = scoreData[id].resultsNoByes.reduce(\n        (acc, score) => acc.concat([last(acc) + score]),\n        [0]\n    );\n    return sum(scoreList);\n}\n\n// USCF § 34E4.\nfunction getCumulativeOfOpponentScore(scoreData, id) {\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\n    const scoreList = opponentIds.filter(\n        (oppId) => !scoreData[oppId].isDummy\n    ).map(\n        (oppId) => getCumulativeScore(scoreData, oppId)\n    );\n    return sum(scoreList);\n}\n\nfunction getColorBalanceScore(scoreData, id) {\n    return sum(scoreData[id].colorScores);\n};\n\nconst {ScoreCalculator} = types;\nconst tieBreakMethods = {\n    0: {\n        func: ScoreCalculator.of(getMedianScore),\n        id: 0,\n        name: \"Median\"\n    },\n    1: {\n        func: ScoreCalculator.of(getSolkoffScore),\n        id: 1,\n        name: \"Solkoff\"\n    },\n    2: {\n        func: ScoreCalculator.of(getCumulativeScore),\n        id: 2,\n        name: \"Cumulative score\"\n    },\n    3: {\n        func: ScoreCalculator.of(getCumulativeOfOpponentScore),\n        id: 3,\n        name: \"Cumulative of opposition\"\n    },\n    4: {\n        func: ScoreCalculator.of(getColorBalanceScore),\n        id: 4,\n        name: \"Most black\"\n    }\n};\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\n// Returns the names of the tiebreak methods selected for your tournament.\nconst getTieBreakNames = (idList) => (\n    t.list(t.Number)(idList).map((i) => tieBreakMethods[i].name)\n);\nexport {getTieBreakNames};\n","import {\n    append,\n    descend,\n    lensIndex,\n    over,\n    path,\n    prop,\n    sortWith\n} from \"ramda\";\nimport {\n    getPlayerScore,\n    tieBreakMethods\n} from \"./scoring\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\n// This is useful for cases where the regular factory functions return empty\n// results because a player hasn't been added yet.\nconst createBlankScoreData = (id) => types.ScoreData({\n    colorScores: [],\n    colors: [],\n    halfPos: 0,\n    id,\n    isDummy: false,\n    opponentResults: {},\n    ratings: [],\n    results: [],\n    resultsNoByes: []\n});\nexport {createBlankScoreData};\n\n// Sort the standings by score, see USCF tie-break rules from § 34.\n// Returns the list of the standings. Each standing has a `tieBreaks` property\n// which lists the score associated with each method. The order of these\n// coresponds to the order of the method names in the second list.\nexport function createStandingList(methods, scoreData) {\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\n    // Get a flat list of all of the players and their scores.\n    const standings = Object.keys(scoreData).map(\n        (id) => types.Standing({\n            id,\n            score: getPlayerScore(scoreData, id),\n            tieBreaks: selectedTieBreaks.map(({func}) => func(scoreData, id))\n        })\n    );\n    // create a list of functions to pass to `sortWith`. This will sort by\n    // scores and then by each tiebreak value.\n    const sortFuncList = Object.keys(selectedTieBreaks).reduce(\n        (acc, key) => acc.concat([descend(path([\"tieBreaks\", key]))]),\n        [descend(prop(\"score\"))]\n    );\n    const standingsSorted = sortWith(sortFuncList, standings);\n    return standingsSorted;\n}\n\nfunction areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any tie-break values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n// Groups the standings by score, see USCF tie-break rules from § 34.\n// example: `[[Dale, Audrey], [Pete], [Bob]]` Dale and Audrey are tied for\n// first, Pete is 2nd, Bob is 3rd.\nexport function createStandingTree(standingList) {\n    const standingsTree = t.list(types.Standing)(standingList).reduce(\n        function assignStandingsToTree(acc, standing, i, orig) {\n            const prevStanding = orig[i - 1];\n            // Always make a new rank for the first player\n            const isNewRank = (\n                i === 0\n                ? true\n                // Make a new rank if the scores aren't equal\n                : !areScoresEqual(standing, prevStanding)\n            );\n            return (\n                isNewRank\n                // If this player doesn't have the same score, create a new\n                // branch of the tree\n                ? append([standing], acc)\n                // If this player has the same score as the last, append it\n                // to the last branch\n                : over(lensIndex(acc.length - 1), append(standing), acc)\n            );\n        },\n        []\n    );\n    return standingsTree;\n}\n","// These functions are for converting data types defined in `../data-types` to\n// data that can be used by the scoring functions in rest of this module.\nimport {\n    BLACK,\n    WHITE,\n    isDummyId,\n    types\n} from \"../data-types\";\nimport {\n    add,\n    append,\n    assoc,\n    defaultTo,\n    lensPath,\n    lensProp,\n    over,\n    pipe,\n    sum\n} from \"ramda\";\nimport {createBlankScoreData} from \"./factories\";\nimport scoreTypes from \"./types\";\nimport t from \"tcomb\";\n\nfunction color2Score(color) {\n    return (\n        types.Color(color) === BLACK\n        ? scoreTypes.BLACKVALUE\n        : scoreTypes.WHITEVALUE\n    );\n}\n\nfunction match2ScoreDataReducer(acc, match) {\n    const {playerIds, result, newRating, origRating} = match;\n    const [p1Data, p2Data] = [WHITE, BLACK].map(function dataForColor(color) {\n        const id = playerIds[color];\n        const oppColor = color === WHITE ? BLACK : WHITE;\n        const oppId = playerIds[oppColor];\n        // Get existing score data to update, or create it fresh\n        // The ratings will always begin with the `origRating` of the\n        // first match they were in.\n        const origData = acc[id] || {id, ratings: [origRating[color]]};\n        return pipe(\n            over(lensProp(\"results\"), append(result[color])),\n            over(\n                lensProp(\"resultsNoByes\"),\n                isDummyId(oppId) ? defaultTo([]) : append(result[color])\n            ),\n            over(lensProp(\"colors\"), append(color)),\n            over(lensProp(\"colorScores\"), append(color2Score(color))),\n            over(\n                lensPath([\"opponentResults\", oppId]),\n                pipe(defaultTo(0), add(result[color]))\n            ),\n            over(lensProp(\"ratings\"), append(newRating[color])),\n            assoc(\"isDummy\", isDummyId(id))\n        )(origData);\n    });\n    return pipe(\n        assoc(p1Data.id, p1Data),\n        assoc(p2Data.id, p2Data)\n    )(acc);\n}\n\nexport function matches2ScoreData(matchList) {\n    const data = matchList.reduce(match2ScoreDataReducer, {});\n    // TODO: remove this tcomb check for production\n    return t.dict(types.Id, scoreTypes.ScoreData)(data);\n}\n\n// Flatten the `[[id1, id2], [id1, id3]]` structure into an easy-to-read\n// `{id1: [id2, id3], id2: [id1], id3: [id1]}` structure.\nexport function avoidPairReducer(acc, pair) {\n    return pipe(\n        over(lensProp(pair[0]), append(pair[1])),\n        over(lensProp(pair[1]), append(pair[0]))\n    )(t.dict(types.Id, t.list(types.Id))(acc));\n}\n\nexport function createPairingData(playerData, avoidPairs, scoreData) {\n    const avoidDict = avoidPairs.reduce(avoidPairReducer, {});\n    const pairingData = Object.values(playerData).reduce(\n        function pairingDataReducer(acc, data) {\n            // If there's no scoreData for a player, use empty values\n            const playerStats = (\n                scoreData[data.id]\n                ? scoreData[data.id]\n                : createBlankScoreData(data.id)\n            );\n            // `isUpperHalf` and `halfPos` will have to be set by another\n            // function later.\n            const pairData = {\n                avoidIds: avoidDict[data.id] || [],\n                colorScores: playerStats.colorScores,\n                colors: playerStats.colors,\n                halfPos: 0,\n                id: data.id,\n                // isDueBye: false,\n                isUpperHalf: false,\n                opponents: Object.keys(playerStats.opponentResults),\n                rating: data.rating,\n                // `score` is calculated and cached here because the blossom\n                // pairing will reuse it many times.\n                score: sum(playerStats.results)\n            };\n            return assoc(data.id, pairData, acc);\n        },\n        {}\n    );\n    // TODO: remove this tcomb check for production\n    return t.dict(types.Id, scoreTypes.PairingData)(pairingData);\n}\n","import {\n    addIndex,\n    assoc,\n    descend,\n    dissoc,\n    filter,\n    last,\n    map,\n    mergeRight,\n    pipe,\n    pluck,\n    prop,\n    reduce,\n    sort,\n    sortWith,\n    splitAt,\n    sum\n} from \"ramda\";\nimport blossom from \"edmonds-blossom\";\nimport t from \"tcomb\";\nimport types from \"./types\";\n\nconst priority = (value) => (condition) => condition ? value : 0;\nconst divisiblePriority = (dividend) => (divisor) => dividend / divisor;\n\n// These following consts probably need to be tweaked a lot.\n\n// The weight given to avoid players meeting twice. This same weight is given to\n// avoid matching players on each other's \"avoid\" list.\n// This is the highest priority. (USCF § 27A1)\nconst avoidMeetingTwice = priority(32);\n\n// The weight given to match players with equal scores. This gets divided\n// against the difference between each players' scores, plus one. For example,\n// players with scores `1` and `3` would have this priority divided by `3`.\n// Players with scores `0` and `3` would have this priority divided by `4`.\n// Players with equal scores would divide it by `1`, leaving it unchanged.\n// (USCF § 27A2)\nconst sameScores = divisiblePriority(16);\n\n// The weight given to match players in lower versus upper halves. This is only\n// applied to players being matched within the same score group. (USCF § 27A3)\nconst halfPosition = divisiblePriority(8);\nconst sameHalfPriority = () => 0;\nconst differentHalf = (isDiffHalf) => (\n    isDiffHalf\n    ? halfPosition\n    : sameHalfPriority\n);\n\n// The weight given to match players with opposite due colors.\n// (USCF § 27A4 and § 27A5)\nconst differentDueColor = priority(4);\n\n// This is useful for dividing against a calculated priority, to inspect how\n// \"compatible\" two players may be.\nconst maxPriority = sum([\n    differentHalf(true)(1),\n    differentDueColor(true),\n    sameScores(1),\n    avoidMeetingTwice(true)\n]);\nexport {maxPriority};\n\n// The pairing code is broken up into several functions which take each other's\n// input to build the data necessary to pair players appropriately.\n// Using a function like Ramda's `pipe` to put them together, the final product\n// will look something like this:\n// ```js\n// const pairs = pipe(\n//     rounds2Matches,\n//     matches2ScoreData,\n//     createPairingData,\n//     setUpperHalves,\n//     setByePlayer,\n//     pairPlayers // <-- the function that actually pairs them!\n// )(roundList);\n// ```\n// (This may be outdated as the actual functions aren't stable yet.)\n\n// Given two `PairingData` objects, this assigns a number for how much they\n// should be matched. The number gets fed to the `blossom` algorithm.\nexport function calcPairIdeal(player1, player2) {\n    if (player1.id === player2.id) {\n        return 0;\n    }\n    const metBefore = player1.opponents.includes(player2.id);\n    const mustAvoid = player1.avoidIds.includes(player2.id);\n    const p1LastColor = last(player1.colors);\n    const p2LastColor = last(player2.colors);\n    const scoreDiff = Math.abs(player1.score - player2.score) + 1;\n    const halfDiff = Math.abs(player1.halfPos - player2.halfPos) + 1;\n    const isDiffHalf = (\n        player1.isUpperHalf !== player2.isUpperHalf\n        && player1.score === player2.score\n    );\n    return sum([\n        differentDueColor(\n            p1LastColor === undefined || p1LastColor !== p2LastColor\n        ),\n        sameScores(scoreDiff),\n        differentHalf(isDiffHalf)(halfDiff),\n        avoidMeetingTwice(!metBefore && !mustAvoid)\n    ]);\n}\n\nconst splitInHalf = (list) => splitAt(list.length / 2, list);\n\n// for each object sent to this, it determines whether or not it's in the\n// \"upper half\" of it's score group.\n// (USCF § 29C1.)\nfunction upperHalfReducer(acc, playerData, ignore, src) {\n    types.PairingData(playerData);\n    const [upperHalfIds, lowerHalfIds] = pipe(\n        filter((p2) => p2.score === playerData.score),\n        // this may be redundant if the list was already sorted.\n        sort(descend(prop(\"rating\"))),\n        map((p) => p.id),\n        splitInHalf\n    )(src);\n    const isUpperHalf = upperHalfIds.includes(playerData.id);\n    const halfPos = (\n        isUpperHalf\n        ? upperHalfIds.indexOf(playerData.id)\n        : lowerHalfIds.indexOf(playerData.id)\n    );\n    return assoc(\n        playerData.id,\n        mergeRight(playerData, {halfPos, isUpperHalf}),\n        acc\n    );\n}\nexport function setUpperHalves(data) {\n    return Object.values(data).reduce(upperHalfReducer, {});\n}\n\n// Sort the data so matchups default to order by score and rating.\nconst sortByScoreThenRating = sortWith([\n    descend(prop(\"score\")),\n    descend(prop(\"rating\"))\n]);\n// This this returns a tuple of two objects: The modified array of player data\n// without the player assigned a bye, and the player assigned a bye.\n// If no player is assigned a bye, the second object is `null`.\n// After calling this, be sure to add the bye round after the non-bye'd\n// players are paired.\nexport function setByePlayer(byeQueue, dummyId, data) {\n    const hasNotHadBye = (p) => !p.opponents.includes(dummyId);\n    // if the list is even, just return it.\n    if (Object.keys(data).length % 2 === 0) {\n        return [data, null];\n    }\n    const dataList = pipe(\n        Object.values,\n        filter(hasNotHadBye),\n        sortByScoreThenRating\n    )(data);\n    const playersWithoutByes = dataList.map((p) => p.id);\n    const nextByeSignup = t.list(t.String)(byeQueue).filter(\n        (id) => playersWithoutByes.includes(id)\n    )[0];\n    const dataForNextBye = (\n        nextByeSignup\n        // Assign the bye to the next person who signed up.\n        ? data[nextByeSignup]\n        // Assign a bye to the lowest-rated player in the lowest score group.\n        // Because the list is sorted, the last player is the lowest.\n        // (USCF § 29L2.)\n        : last(dataList)\n    );\n    // In the impossible situation that *everyone* has played a bye round\n    // previously, then just pick the last player.\n    const id = (\n        dataForNextBye\n        ? dataForNextBye.id\n        : pipe(Object.values, sortByScoreThenRating, last)(data).id\n    );\n    const byeData = data[id];\n    const dataWithoutBye = dissoc(id, data);\n    return [dataWithoutBye, byeData];\n}\n\nfunction assignColorsForPair(pair) {\n    const [player1, player2] = pair;\n    // This is a quick-and-dirty heuristic to keep color balances\n    // mostly equal. Ideally, it would also examine due colors and how\n    // many times a player played each color last.\n    return (\n        sum(player1.colorScores) < sum(player2.colorScores)\n        // player 1 has played as white more than player 2\n        ? [player2.id, player1.id]\n        // player 1 has played as black more than player 2\n        // (or they're equal).\n        : [player1.id, player2.id]\n    );\n}\n\nconst netScoreDescend = (pair1, pair2) => (\n    sum(pluck(\"score\", pair2)) - sum(pluck(\"score\", pair1))\n);\nconst netRatingDescend = (pair1, pair2) => (\n    sum(pluck(\"rating\", pair2)) - sum(pluck(\"rating\", pair1))\n);\nconst sortByNetScoreThenRating = sortWith([netScoreDescend, netRatingDescend]);\n\n// Create pairings according to the rules specified in USCF § 27, § 28,\n//  and § 29. This is a work in progress and does not account for all of the\n// rules yet.\nexport function pairPlayers(pairingData) {\n    // Because `blossom` has to use numbers that correspond to array indices,\n    // we'll use `playerIdArray` as our source for that.\n    const playerIdArray = Object.keys(pairingData);\n    // Turn the data into blossom-compatible input.\n    function pairIdealReducer(accArr, player1, index, srcArr) {\n        // slice out players who have already computed, plus the current one\n        const playerMatches = srcArr.slice(index + 1).map(\n            (player2) => [\n                playerIdArray.indexOf(player1.id),\n                playerIdArray.indexOf(player2.id),\n                calcPairIdeal(player1, player2)\n            ]\n        );\n        return accArr.concat(playerMatches);\n    }\n    function blossom2Pairs(acc, p1Index, p2Index) {\n        // Filter out unmatched players. Blossom will automatically include\n        // their missing IDs in its results.\n        if (p1Index === -1) {\n            return acc;\n        }\n        // Translate the indices into ID strings\n        const p1 = pairingData[playerIdArray[p1Index]];\n        const p2 = pairingData[playerIdArray[p2Index]];\n        // TODO: in the future, we may store the ideal for debugging. Because it\n        // rarely serves a purpose, we're not including it now.\n        // const ideal = potentialMatches.filter(\n        //     (pair) => pair[0] === p1Id && pair[1] === p2Id\n        // )[0][2];\n        // Blossom returns a lot of redundant matches. Check that this matchup\n        // wasn't already added.\n        const matched = acc.map((pair) => pair[0]);\n        if (!matched.includes(p1) && !matched.includes(p2)) {\n            return acc.concat([[p1, p2]]);\n        }\n        return acc;\n    }\n    // This makes Ramda's `reduce` work more like `Array.prototype.reduce`.\n    const reduceWithIndices = addIndex(reduce);\n    return pipe(\n        Object.values,\n        reduceWithIndices(pairIdealReducer, []),\n        // Feed all of the potential matches to Edmonds-blossom and let the\n        // algorithm work its magic. This returns an array where each index is the\n        // ID of one player and each value is the ID of the matched player.\n        blossom,\n        // Translate those IDs into actual pairs of player Ids.\n        reduceWithIndices(blossom2Pairs, []),\n        sortByNetScoreThenRating,\n        map(assignColorsForPair)\n    )(pairingData);\n}\n","import {BLACK, WHITE} from \"../data-types\";\nimport EloRank from \"elo-rank\";\nimport t from \"tcomb\";\n\nfunction getKFactor(matchCount) {\n    const ne = t.Number(matchCount) || 1;\n    return (800 / ne);\n}\n\nfunction calcNewRatings(origRatings, matchCounts, result) {\n    t.tuple([t.Number, t.Number])(origRatings);\n    t.tuple([t.Number, t.Number])(matchCounts);\n    t.tuple([t.Number, t.Number])(result);\n    const whiteElo = new EloRank(getKFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(getKFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    return newRating.map((rating) => rating < FLOOR ? FLOOR : rating);\n}\n\nexport default Object.freeze({\n    calcNewRatings,\n    getKFactor\n});\n","import Activity from \"react-feather/dist/icons/activity\";\nimport Alert from \"react-feather/dist/icons/alert-triangle\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport ArrowLeft from \"react-feather/dist/icons/arrow-left\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport Award from \"react-feather/dist/icons/award\";\nimport Check from \"react-feather/dist/icons/check\";\nimport CheckCircle from \"react-feather/dist/icons/check-circle\";\nimport ChevronDown from \"react-feather/dist/icons/chevron-down\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport ChevronUp from \"react-feather/dist/icons/chevron-up\";\nimport Circle from \"react-feather/dist/icons/circle\";\nimport Download from \"react-feather/dist/icons/download\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Help from \"react-feather/dist/icons/help-circle\";\nimport Info from \"react-feather/dist/icons/info\";\nimport Javascript from \"simple-icons/icons/javascript\";\nimport Layers from \"react-feather/dist/icons/layers\";\nimport List from \"react-feather/dist/icons/list\";\n// import Logo from \"./logo\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport React from \"react\";\nimport ReactIcon from \"simple-icons/icons/react\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Settings from \"react-feather/dist/icons/settings\";\nimport Sidebar from \"react-feather/dist/icons/sidebar\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Users from \"react-feather/dist/icons/users\";\nimport X from \"react-feather/dist/icons/x\";\n\n// This converts a specified `simple-icons` icon into a React component.\nconst simpleIcon = (icon) => (props) => (\n    <span\n        dangerouslySetInnerHTML={{__html: icon.svg}}\n        aria-label={icon.title}\n        role=\"img\"\n        style={{fill: \"#\" + icon.hex}}\n        {...props}\n    />\n);\n\nexport default {\n    Activity,\n    Alert,\n    ArrowDown,\n    ArrowLeft,\n    ArrowUp,\n    Award,\n    Check,\n    CheckCircle,\n    ChevronDown,\n    ChevronLeft,\n    ChevronRight,\n    ChevronUp,\n    Circle,\n    Download,\n    Edit,\n    Help,\n    Info,\n    Javascript: simpleIcon(Javascript),\n    Layers,\n    List,\n    // Logo,\n    Plus,\n    React: simpleIcon(ReactIcon),\n    Repeat,\n    Settings,\n    Sidebar,\n    Trash,\n    UserMinus,\n    UserPlus,\n    Users,\n    X\n};\n","import {\n    createStandingList,\n    matches2ScoreData\n} from \"../../pairing-scoring\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {last} from \"ramda\";\nimport numeral from \"numeral\";\nimport {rounds2Matches} from \"../../data-types\";\nimport style from \"./index.module.css\";\n\nexport default function Crosstable({tournament}) {\n    const {tourney, getPlayer} = tournament;\n    const {tieBreaks, roundList} = tourney;\n    const scoreData = matches2ScoreData(rounds2Matches(roundList));\n    const standings = createStandingList(tieBreaks, scoreData);\n\n    function getXScore(player1Id, player2Id) {\n        if (player1Id === player2Id) {\n            return <Icons.X className=\"disabled\" />;\n        }\n        const result = scoreData[player1Id].opponentResults[player2Id];\n        if (result === undefined) {\n            return null;\n        }\n        return numeral(result).format(\"1/2\");\n    }\n\n    function getRatingChangeTds(playerId) {\n        const firstRating = scoreData[playerId].ratings[0];\n        const lastRating = last(scoreData[playerId].ratings);\n        const change = numeral(lastRating - firstRating).format(\"+0\");\n        return (\n            <>\n            <td className=\"table__number\">\n                {lastRating}\n            </td>\n            <td className=\"table__number body-10\">\n                ({change})\n            </td>\n            </>\n        );\n    }\n\n    return (\n        <table className={style.table}>\n            <caption>Crosstable</caption>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    {/* Display a rank as a shorthand for each player. */}\n                    {Object.keys(standings).map((rank) =>\n                        <th key={rank}>\n                            {Number(rank) + 1}\n                        </th>\n                    )}\n                    <th>Score</th>\n                    <th colSpan={2}>Rating</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* Output a row for each player */}\n                {standings.map((standing, index)=>\n                    <tr key={index} className={style.row}>\n                        <th className={style.rank} scope=\"col\">\n                            {index + 1}\n                        </th>\n                        <th className={style.playerName} scope=\"row\">\n                            {getPlayer(standing.id).firstName}&nbsp;\n                            {getPlayer(standing.id).lastName}\n                        </th>\n                        {/* Output a cell for each other player */}\n                        {standings.map((opponent, index2) =>\n                            <td\n                                key={index2}\n                                className=\"table__number\"\n                            >\n                                {getXScore(standing.id, opponent.id)}\n                            </td>\n                        )}\n                        {/* Output their score and rating change */}\n                        <td className=\"table__number\">\n                            {numeral(standing.score).format(\"1/2\")}\n                        </td>\n                        {getRatingChangeTds(standing.id)}\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nCrosstable.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {omit} from \"ramda\";\nimport styles from \"./utility.module.css\";\n\nexport function Panel({children, style}) {\n    return (\n        <div className={styles.panel} style={{...style}}>\n            {children}\n        </div>\n    );\n}\nPanel.propTypes = {\n    children: PropTypes.node.isRequired,\n    style: PropTypes.object\n};\n\nexport function PanelContainer(props) {\n    return (\n        <div {...props} className={classNames(styles.panels, props.className)}>\n            {props.children}\n        </div>\n    );\n}\nPanelContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string\n};\n\nconst {format: dateFormat} = new Intl.DateTimeFormat(\n    \"en-US\",\n    {\n        day: \"2-digit\",\n        month: \"short\",\n        year: \"numeric\"\n    }\n);\nexport function DateFormat(props) {\n    const cleanProps = omit([\"date\"], props);\n    return (\n        <time dateTime={props.date.toISOString()} {...cleanProps}>\n            {dateFormat(props.date)}\n        </time>\n    );\n}\nDateFormat.propTypes = {\n    date: PropTypes.instanceOf(Date).isRequired\n};\n\nexport function Notification(props) {\n    const [icon, className] = (function () {\n        if (props.success) {\n            return [<Icons.Check />, \"notification__success\"];\n        } else if (props.warning) {\n            return [<Icons.Alert />, \"notification__warning\"];\n        } else if (props.error) {\n            return [<Icons.X />, \"notification__error\"];\n        } else {\n            return [<Icons.Info />, \"notification__generic\"];\n        }\n    }());\n    const cleanProps = omit([\"warning\", \"error\", \"success\", \"tooltip\"], props);\n    return (\n        <div\n            {...cleanProps}\n            className={classNames(\"notification\", className, props.className)}\n        >\n            <div\n                aria-label={props.tooltip}\n                className=\"notification__icon\"\n                title={props.tooltip}\n            >\n                {icon}\n            </div>\n            <div className=\"notification__text\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\nNotification.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    success: PropTypes.bool,\n    tooltip: PropTypes.string,\n    warning: PropTypes.bool\n};\n\n// This just creates empty space to balance the layout, e.g. if there's a button\n// on one side of a centered element that's offsetting it.\nconst PlaceholderButton = () => (\n    <button\n        className=\"button-ghost placeholder\"\n        aria-hidden\n        disabled\n    />\n);\nexport {PlaceholderButton};\n\nexport function SortLabel({children, sortKey, data, dispatch}) {\n    function toggleDirAndSetKey() {\n        dispatch({isDescending: !data.isDescending, key: sortKey});\n    }\n    function setKeyOrToggleDir() {\n        if (data.key === sortKey) {\n            dispatch({isDescending: !data.isDescending});\n        } else {\n            dispatch({key: sortKey});\n        }\n    }\n    return (\n        <div className=\"buttons-on-hover\">\n            <PlaceholderButton />\n            <button\n                className=\"button-micro dont-hide button-text-ghost title-20\"\n                onClick={setKeyOrToggleDir}\n            >\n                {children}\n            </button>\n            <button\n                className={classNames(\n                    \"button-ghost\",\n                    {\"dont-hide\": data.key === sortKey}\n                )}\n                onClick={toggleDirAndSetKey}\n            >\n                {data.isDescending\n                ? <Icons.ChevronUp />\n                : <Icons.ChevronDown />}\n            </button>\n        </div>\n    );\n}\nSortLabel.propTypes = {\n    children: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    sortKey: PropTypes.string.isRequired\n};\n\n/*******************************************************************************\n * Non-JSX functions\n ******************************************************************************/\n// TODO: get rid of this.\nexport function findById(id, list) {\n    return list.filter((x) => x.id === id)[0];\n}\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer({dispatch}) {\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        dispatch({\n            firstName,\n            lastName,\n            rating: Number(rating),\n            type: \"ADD_PLAYER\"\n        });\n    };\n\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        name=\"firstName\"\n                        type=\"text\"\n                        value={newPlayerData.firstName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        name=\"lastName\"\n                        type=\"text\"\n                        value={newPlayerData.lastName}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        name=\"rating\"\n                        type=\"number\"\n                        value={newPlayerData.rating}\n                        required\n                        onChange={updateField}\n                    />\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\nNewPlayer.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n","import {\n    assoc,\n    dissoc,\n    lensProp,\n    mergeLeft,\n    over\n} from \"ramda\";\nimport {createPlayer, createTournament, types} from \"../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function genericDbReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_ITEM\":\n        console.warn(\"Use a more specific action instead, please.\");\n        return assoc(nextId, action.item, state);\n    case \"ADD_TOURNEY\":\n        t.interface({name: t.String})(action);\n        return assoc(\n            nextId,\n            createTournament({id: nextId, name: action.name}),\n            state\n        );\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"DEL_ITEM\":\n        // If using the player DB, be sure to delete avoid-pairs too.\n        t.interface({id: t.String})(action);\n        return dissoc(action.id, state);\n    case \"SET_PLAYER\":\n        // This is copied from players-reducer since the profile editor uses it\n        // TODO: unify those\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","import {append, assoc, filter, lensProp, over} from \"ramda\";\nimport t from \"tcomb\";\nimport {types} from \"../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function optionsReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        t.interface({pair: types.AvoidPair})(action);\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !(\n                pair.includes(action.pair[0]) && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"DEL_AVOID_SINGLE\":\n        t.interface({id: types.Id})(action);\n        // call this when you delete a player ID\n        // TODO: make the avoidPairs list smartly auto-clean itself\n        return over(\n            lensProp(\"avoidPairs\"),\n            filter((pair) => !pair.includes(action.id)),\n            state\n        );\n    case \"SET_OPTION\":\n        t.interface({\n            option: t.String,\n            value: t.union([\n                t.Number,\n                t.list(types.AvoidPair)\n            ])\n        })(action);\n        return assoc(\n            action.option,\n            action.value,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\nimport t from \"tcomb\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default {\n    options,\n    players: t.dict(types.Id, types.Player)(players),\n    tournaments: fromJSON(tournaments, t.dict(types.Id, types.Tournament))\n};\n","import {ascend, descend, pipe, prop, sort} from \"ramda\";\nimport {useEffect, useReducer} from \"react\";\nimport t from \"tcomb\";\n\nconst toLowerCaseIfPossible = (x) => x.toLowerCase ? x.toLowerCase() : x;\n\nfunction sortedTableReducer(oldState, newState) {\n    const {isDescending, key, table} = {...oldState, ...newState};\n    const direction = isDescending ? descend : ascend;\n    const caseInsensitiveProp = pipe(prop(key), toLowerCaseIfPossible);\n    const sortFunc = sort(direction(caseInsensitiveProp));\n    return {isDescending, key, table: sortFunc(table)};\n}\n\nexport function useSortedTable(table, key, isDescending = true) {\n    const initialState = {isDescending, key, table};\n    const [state, dispatch] = useReducer(sortedTableReducer, initialState);\n    useEffect(\n        function callDispatchOnceToTriggerInitialSort() {\n            dispatch({});\n        },\n        []\n    );\n    return [state, dispatch];\n}\n\n// export function useDocumentTitle(title) {\n//     useEffect(\n//         function () {\n//             const origTitle = document.title;\n//             document.title = \"Chessahoochee: \" + title;\n//             return function resetTitle() {\n//                 document.title = origTitle;\n//             };\n//         },\n//         [title]\n//     );\n// }\n\nexport function useLoadingCursor(isLoaded) {\n    useEffect(\n        function () {\n            if (t.Boolean(isLoaded)) {\n                document.body.style.cursor = \"auto\";\n            } else {\n                document.body.style.cursor = \"wait\";\n            }\n            // Just in case the component unmounts before the data loads.\n            return function () {\n                document.body.style.cursor = \"auto\";\n            };\n        },\n        [isLoaded]\n    );\n}\n","import \"localforage-getitems\";\nimport {difference, filter} from \"ramda\";\nimport {genericDbReducer, optionsReducer} from \"./reducers\";\nimport {useEffect, useReducer, useState} from \"react\";\nimport defaultOptions from \"./default-options.json\";\nimport demoData from \"../demo-data\";\nimport localForage from \"localforage\";\nimport {extendPrototype as removeItemsPrototype} from \"localforage-removeitems\";\nimport {extendPrototype as setItemsPrototype} from \"localforage-setitems\";\nimport {types} from \"../data-types\";\nimport {useLoadingCursor} from \"./hooks\";\n\n/*******************************************************************************\n * Initialize the databases\n ******************************************************************************/\nsetItemsPrototype(localForage);\nremoveItemsPrototype(localForage);\nconst DATABASE_NAME = \"Chessahoochee\";\nconst optionsStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Options\"\n});\nconst playerStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Players\"\n});\nconst tourneyStore = localForage.createInstance({\n    name: DATABASE_NAME,\n    storeName: \"Tournaments\"\n});\n\nexport {optionsStore, playerStore, tourneyStore};\n\nexport async function loadDemoDB() {\n    document.body.style.cursor = \"wait\";\n    await optionsStore.setItems(demoData.options);\n    await playerStore.setItems(demoData.players);\n    await tourneyStore.setItems(demoData.tournaments);\n    // TODO: for some reason in Electron, this `window.alert()` will disable all\n    // focus after it runs. This affects other `window.alert()`s too.\n    window.alert(\"Demo data loaded!\");\n    document.body.style.cursor = \"auto\";\n}\n\n/*******************************************************************************\n * Generic database hooks\n ******************************************************************************/\nfunction useAllItemsFromDb(store, type) {\n    const [items, dispatch] = useReducer(genericDbReducer, {});\n    const [isLoaded, setIsLoaded] = useState(false);\n    useLoadingCursor(isLoaded);\n    useEffect(\n        function loadItemsFromDb() {\n            let didCancel = false;\n            (async function () {\n                const results = await store.getItems();\n                console.log(\"loaded items from\", store.config().storeName);\n                // TODO: This will silently delete invalid entries from the DB.\n                // Because invalid entries are typically just older data that\n                // was created with a different tcomb interface, this should\n                // ideally update the data to a valid type instead of removing\n                // it completely.\n                const cleanResults =  filter(type.is, results);\n                if (!didCancel) {\n                    dispatch({state: cleanResults, type: \"LOAD_STATE\"});\n                    setIsLoaded(true);\n                }\n            }());\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        [store, type]\n    );\n    useEffect(\n        function saveChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            (async function () {\n                await store.setItems(items);\n                console.log(\"saved items to\", store.config().storeName);\n                const keys = await store.keys();\n                const deleted = difference(keys, Object.keys(items));\n                if (deleted.length > 0 ) {\n                    await store.removeItems(deleted);\n                    console.log(\"Deleted \" + deleted.length + \" items.\");\n                }\n            }());\n        },\n        [store, items, isLoaded]\n    );\n    return [items, dispatch];\n}\n\n/*******************************************************************************\n * Player & tournament wrapper hooks\n ******************************************************************************/\nexport function useAllPlayersDb() {\n    return useAllItemsFromDb(playerStore, types.Player);\n}\n\nexport function useAllTournamentsDb() {\n    return useAllItemsFromDb(tourneyStore, types.Tournament);\n}\n\n/*******************************************************************************\n * Options database hooks\n ******************************************************************************/\nexport function useOptionsDb() {\n    const [options, dispatch] = useReducer(optionsReducer, defaultOptions);\n    const [isLoaded, setIsLoaded] = useState(false);\n    useEffect(\n        function initOptionsFromDb() {\n            let didCancel = false;\n            // This uses `iterate` to easily set key-value pairs.\n            optionsStore.iterate(function (value, key) {\n                if (!didCancel) {\n                    dispatch({option: key, type: \"SET_OPTION\", value: value});\n                }\n            }).then(function () {\n                if (!didCancel) {\n                    setIsLoaded(true);\n                }\n            });\n            return function unMount() {\n                didCancel = true;\n            };\n        },\n        []\n    );\n    useEffect(\n        function writeChangesToDb() {\n            if (!isLoaded) {\n                return;\n            }\n            optionsStore.setItems(options);\n        },\n        [options, isLoaded]\n    );\n    return [options, dispatch];\n}\n","import NewPlayer from \"../../../components/new-player\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {useAllPlayersDb} from \"../../../hooks\";\n\nexport default function Selecting({tourney, tourneyDispatch}) {\n    const [players, allPlayersDispatch] = useAllPlayersDb();\n\n    function togglePlayer(event) {\n        const id = event.target.value;\n        if (event.target.checked) {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.concat([id]),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        } else {\n            tourneyDispatch({\n                playerIds: tourney.playerIds.filter((pId) => pId !== id),\n                type: \"SET_TOURNEY_PLAYERS\"\n            });\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: Object.keys(players),\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select all\n                </button>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => tourneyDispatch({\n                        playerIds: [],\n                        type: \"SET_TOURNEY_PLAYERS\"\n                    })}\n                >\n                    Select none\n                </button>\n            </div>\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.values(players).map(({id, firstName, lastName}) =>\n                        <tr key={id}>\n                            <td>{firstName}</td>\n                            <td>{lastName}</td>\n                            <td>\n                                <VisuallyHidden>\n                                    <label htmlFor={\"select-\" + id}>\n                                        Select {firstName} {lastName}\n                                    </label>\n                                </VisuallyHidden>\n                                <input\n                                    checked={tourney.playerIds.includes(id)}\n                                    type=\"checkbox\"\n                                    value={id}\n                                    id={\"select-\" + id}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <NewPlayer dispatch={allPlayersDispatch}/>\n        </div>\n    );\n}\nSelecting.propTypes = {\n    tourney: PropTypes.object.isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n","import {DUMMY_ID, rounds2Matches, types} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport Selecting from \"./selecting\";\nimport classNames from \"classnames\";\nimport t from \"tcomb\";\n// import {useTournament} from \"../../../hooks\";\n\nfunction hasHadBye(matchList, playerId) {\n    return t.list(types.Match)(matchList).filter(\n        (match) => match.playerIds.includes(playerId)\n    ).reduce(\n        (acc, match) => acc.concat(match.playerIds),\n        []\n    ).includes(DUMMY_ID);\n}\n\nfunction PlayerList({players, dispatch, byeQueue}) {\n    return (\n        <>\n        {Object.values(players).map((p) => (\n            <tr key={p.id} className={p.type + \" player\"}>\n                <td>{p.firstName}</td>\n                <td>{p.lastName}</td>\n                <td>\n                    <button\n                        className=\"button-micro\"\n                        disabled={byeQueue.includes(p.id)}\n                        onClick={() =>\n                            dispatch({\n                                byeQueue:\n                                    byeQueue.concat([p.id]),\n                                type: \"SET_BYE_QUEUE\"\n                            })\n                        }\n                    >\n                        Bye signup\n                    </button>\n                </td>\n            </tr>\n        )\n        )}\n        </>\n    );\n}\nPlayerList.propTypes = {\n    byeQueue: PropTypes.arrayOf(PropTypes.string).isRequired,\n    dispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired\n};\n\nexport default function PlayerSelect({tournament}) {\n    const {tourney, tourneyDispatch, activePlayers} = tournament;\n    const {playerIds, roundList, byeQueue} = tourney;\n    const dispatch = tourneyDispatch;\n    const [isSelecting, setIsSelecting] = useState(playerIds.length === 0);\n    const matches = rounds2Matches(roundList);\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button onClick={() => setIsSelecting(true)}>\n                    <Icons.Edit /> Edit player roster\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel style={{flexShrink: \"0\"}}>\n                    <table>\n                        <caption>Current roster</caption>\n                        <thead>\n                            <tr>\n                                <th colSpan={2}>Name</th>\n                                <th>Options</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"content\">\n                            <PlayerList\n                                byeQueue={byeQueue}\n                                dispatch={dispatch}\n                                players={activePlayers}\n                            />\n                        </tbody>\n                    </table>\n                </Panel>\n                <Panel>\n                    <h3>Bye queue</h3>\n                    {byeQueue.length === 0 &&\n                        <p>No players have signed up for a bye round.</p>\n                    }\n                    <ol>\n                        {byeQueue.map((pId) => (\n                            <li\n                                key={pId}\n                                className={classNames(\n                                    \"buttons-on-hover\",\n                                    {\"disabled\": hasHadBye(matches, pId)}\n                                )}\n                            >\n                                {activePlayers[pId].firstName}{\" \"}\n                                {activePlayers[pId].lastName}{\" \"}\n                                <button\n                                    className=\"button-micro\"\n                                    onClick={() =>\n                                        dispatch({\n                                            byeQueue: byeQueue.filter(\n                                                (id) => pId !== id\n                                            ),\n                                            type: \"SET_BYE_QUEUE\"\n                                        })\n                                    }\n                                >\n                                    Remove\n                                </button>\n                            </li>\n                        ))}\n                    </ol>\n                </Panel>\n                <Dialog isOpen={isSelecting}>\n                    <button\n                        className=\"button-micro button-primary\"\n                        onClick={() => setIsSelecting(false)}\n                    >\n                        Done\n                    </button>\n                    <Selecting\n                        tourney={tourney}\n                        tourneyDispatch={tourneyDispatch}\n                    />\n                </Dialog>\n            </PanelContainer>\n        </div>\n    );\n}\nPlayerSelect.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import {\n    avoidPairReducer,\n    createBlankScoreData\n} from \"../../../pairing-scoring\";\n// this component should eventually replace player-match-info.jsx\nimport {DUMMY_ID} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {sum} from \"ramda\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function PlayerInfo({playerId, players, getPlayer, scoreData}) {\n    const [options] = useOptionsDb();\n    const avoidDict = options.avoidPairs.reduce(avoidPairReducer, {});\n    const playerData = scoreData[playerId] || createBlankScoreData(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = playerData;\n    const colorBalance = sum(colorScores);\n    const player = getPlayer(playerId);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const avoidList = avoidDict[playerId] || [];\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <p>Score: {sum(results)}</p>\n            <p data-testid={\"rating-\" + player.id}>\n                Rating: {player.rating}\n            </p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {Object.entries(opponentResults).map(([opId, result]) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}{\" \"}\n                        -{\" \"}\n                        {result === 0 && \"Lost\"}\n                        {result === 1 && \"Won\"}\n                        {result === 0.5 && \"Draw\"}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    players[pId] && // don't show players not in this tourney\n                        <li key={pId}>\n                            {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                        </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\nPlayerInfo.propTypes = {\n    getPlayer: PropTypes.func.isRequired,\n    playerId: PropTypes.string.isRequired,\n    players: PropTypes.object.isRequired,\n    scoreData: PropTypes.object.isRequired\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport React, {useEffect} from \"react\";\nimport {assoc, lensIndex, set} from \"ramda\";\nimport {\n    calcPairIdeal,\n    maxPriority\n} from \"../../../pairing-scoring\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport {SortLabel} from \"../../../components/utility\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport numeral from \"numeral\";\nimport {useSortedTable} from \"../../../hooks\";\n\nexport default function SelectList({\n    pairData,\n    stagedPlayers,\n    setStagedPlayers,\n    unmatched\n}) {\n    const initialTable = Object.values(unmatched);\n    const [sorted, sortedDispatch] = useSortedTable(initialTable, \"firstName\");\n    const isOnePlayerSelected = (\n        new Set(stagedPlayers).size === 2\n        && stagedPlayers.includes(null)\n    );\n    useEffect(\n        function hydrateIdealToTable() {\n            function calcIdealOrNot(player) {\n                const selectedIds = stagedPlayers.filter((p) => p !== null);\n                if (selectedIds.length !== 1) {\n                    return 0;\n                }\n                const selectedPlayer = pairData[selectedIds[0]];\n                if (!player || !selectedPlayer) {\n                    return 0; // if it's a bye player\n                }\n                return calcPairIdeal(selectedPlayer, player) / maxPriority;\n            }\n            const table = Object.values(unmatched).map(\n                (data) => assoc(\n                    \"ideal\",\n                    calcIdealOrNot(pairData[data.id]),\n                    data\n                ),\n                []\n            );\n            sortedDispatch({table});\n        },\n        [unmatched, pairData, sortedDispatch, stagedPlayers]\n    );\n    // only use unmatched players if this is the last round.\n    function selectPlayer(id) {\n        const setWhite = set(lensIndex(WHITE), id);\n        const setBlack = set(lensIndex(BLACK), id);\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers((prevState) => setWhite(prevState));\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers((prevState) => setBlack(prevState));\n        }\n        // else... nothing happens\n    }\n    if (Object.keys(unmatched).length === 0) {\n        return null;\n    }\n    return (\n        <table className=\"content\">\n            <thead>\n                <tr>\n                    <th>\n                        <VisuallyHidden>Controls</VisuallyHidden>\n                    </th>\n                    <th>\n                        <SortLabel\n                            sortKey=\"firstName\"\n                            data={sorted}\n                            dispatch={sortedDispatch}\n                        >\n                            Name\n                        </SortLabel>\n                    </th>\n                    <th>\n                        <SortLabel\n                            sortKey=\"ideal\"\n                            data={sorted}\n                            dispatch={sortedDispatch}\n                        >\n                            Ideal\n                        </SortLabel>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {sorted.table.map(({id, firstName, lastName, ideal}) =>\n                    <tr key={id}>\n                        <td>\n                            <button\n                                className=\"button-ghost\"\n                                disabled={\n                                    !stagedPlayers.includes(null)\n                                    || stagedPlayers.includes(id)\n                                }\n                                onClick={() => selectPlayer(id)}\n                            >\n                                <Icons.UserPlus/>\n                                <Hidden>\n                                    Add {firstName} {lastName}\n                                </Hidden>\n                            </button>\n                        </td>\n                        <td>\n                            {firstName} {lastName}\n                        </td>\n                        <td>\n                            {isOnePlayerSelected\n                            ? numeral(ideal).format(\"%\")\n                            : \"-\"}\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\nSelectList.propTypes = {\n    pairData: PropTypes.object,\n    setStagedPlayers: PropTypes.func,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string),\n    unmatched: PropTypes.object\n};\n","import {BLACK, WHITE} from \"../../../data-types\";\nimport React, {Fragment} from \"react\";\nimport {\n    calcPairIdeal,\n    maxPriority\n} from \"../../../pairing-scoring\";\nimport {lensIndex, set} from \"ramda\";\nimport Icons from \"../../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function Stage({\n    getPlayer,\n    pairData,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers,\n    tourneyDispatch\n}) {\n    const [options] = useOptionsDb();\n    const [white, black] = stagedPlayers;\n    const whiteName = (\n        white\n        ? getPlayer(white).firstName + \" \" + getPlayer(white).lastName\n        : \"\"\n    );\n    const blackName = (\n        black\n        ? getPlayer(black).firstName + \" \" + getPlayer(black).lastName\n        : \"\"\n    );\n\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n\n    function match() {\n        tourneyDispatch({\n            byeValue: options.byeValue,\n            pair: [getPlayer(white), getPlayer(black)],\n            roundId,\n            type: \"MANUAL_PAIR\"\n        });\n        setStagedPlayers([null, null]);\n    }\n\n    const matchIdeal = (function () {\n        if (stagedPlayers.includes(null)) {\n            return null;\n        }\n        const player0stats = pairData[stagedPlayers[0]];\n        const player1stats = pairData[stagedPlayers[1]];\n        if (!player0stats || !player1stats) {\n            return null;\n        }\n        const ideal = calcPairIdeal(player0stats, player1stats);\n        return numeral(ideal / maxPriority).format(\"%\");\n    }());\n\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <div className=\"content\">\n                <p>\n                    White:{\" \"}\n                    {white !== null &&\n                        <Fragment>\n                            {whiteName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + whiteName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(WHITE)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n                <p>\n                    Black:{\" \"}\n                    {black !== null &&\n                        <Fragment>\n                            {blackName}{\" \"}\n                            <button\n                                aria-label={\"remove \" + blackName}\n                                className=\"button-micro\"\n                                onClick={() => unstage(BLACK)}\n                            >\n                                <Icons.UserMinus /> Remove\n                            </button>\n                        </Fragment>\n                    }\n                </p>\n                <p>Match ideal: {matchIdeal}</p>\n            </div>\n            <div className=\"toolbar\">\n                <button\n                    disabled={\n                        stagedPlayers.every((id) => id === null)\n                    }\n                    onClick={() => setStagedPlayers(\n                        (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                    )}\n                >\n                    <Icons.Repeat/> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-primary\"\n                    disabled={stagedPlayers.includes(null)}\n                    onClick={match}\n                >\n                    <Icons.Check/> Match selected\n                </button>\n            </div>\n        </div>\n    );\n}\nStage.propTypes = {\n    getPlayer: PropTypes.func.isRequired,\n    pairData: PropTypes.object.isRequired,\n    roundId: PropTypes.number.isRequired,\n    setStagedPlayers: PropTypes.func.isRequired,\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string).isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n","import {\n    DUMMY_ID,\n    getUnmatched,\n    rounds2Matches\n} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {assoc, curry, pipe} from \"ramda\";\nimport {\n    createPairingData,\n    matches2ScoreData,\n    setUpperHalves\n} from \"../../../pairing-scoring\";\nimport {Dialog} from \"@reach/dialog\";\nimport PlayerInfo from \"./player-info\";\nimport PropTypes from \"prop-types\";\nimport SelectList  from \"./select-list\";\nimport Selecting from \"../player-select/selecting\";\nimport Stage from \"./stage\";\nimport {useOptionsDb} from \"../../../hooks\";\n\nexport default function PairPicker({roundId, tournament}) {\n    const [stagedPlayers, setStagedPlayers] = useState([null, null]);\n    const [options] = useOptionsDb();\n    const {\n        tourney,\n        activePlayers,\n        players,\n        getPlayer,\n        tourneyDispatch\n    } = tournament;\n    const {roundList} = tourney;\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [scoreData, pairData] = useMemo(\n        function memoizedGetStats() {\n            const matches = rounds2Matches(roundList, roundId);\n            const _scoreData = matches2ScoreData(matches);\n            const _pairData = pipe(\n                curry(createPairingData)(activePlayers, options.avoidPairs),\n                // sortDataForPairing,\n                setUpperHalves\n            )(_scoreData);\n            return [_scoreData, _pairData];\n        },\n        [roundList, activePlayers, roundId, options.avoidPairs]\n    );\n    // Only calculate unmatched players for the latest round. Old rounds don't\n    // get to add new players.\n    const unmatched = (\n        roundId === roundList.length - 1\n        ? getUnmatched(roundList, activePlayers, roundId)\n        : {}\n    );\n    const unmatchedCount = Object.keys(unmatched).length;\n    // make a new list so as not to affect auto-pairing\n    const unmatchedWithDummy = (\n        unmatchedCount % 2 !== 0\n        ? assoc(DUMMY_ID, getPlayer(DUMMY_ID), unmatched)\n        : unmatched\n    );\n    useEffect(\n        function cleanPlayersThatWereRemoved() {\n            const [p1, p2] = stagedPlayers;\n            if (!unmatchedWithDummy[p1] && p1 !== null) {\n                setStagedPlayers((pair) => [null, pair[1]]);\n            }\n            if (!unmatchedWithDummy[p2] && p2 !== null) {\n                setStagedPlayers((pair) => [pair[0], null]);\n            }\n        },\n        [unmatchedWithDummy, stagedPlayers]\n    );\n    return (\n        <div className=\"content-area\" style={{width: \"720px\"}}>\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-primary\"\n                    disabled={unmatchedCount === 0}\n                    onClick={() => tourneyDispatch({\n                        byeValue: options.byeValue,\n                        pairData: pairData,\n                        players: unmatched,\n                        roundId,\n                        type: \"AUTO_PAIR\"\n                    })}\n                >\n                    Auto-pair unmatched players\n                </button>{\" \"}\n                <button onClick={() => setIsModalOpen(true)}>\n                    Add or remove players from the roster.\n                </button>\n            </div>\n            <PanelContainer>\n                <Panel>\n                    <SelectList\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                        unmatched={unmatchedWithDummy}\n                        pairData={pairData}\n                    />\n                </Panel>\n                <Panel style={{flexGrow: \"1\"}}>\n                    <Stage\n                        roundId={roundId}\n                        setStagedPlayers={setStagedPlayers}\n                        stagedPlayers={stagedPlayers}\n                        pairData={pairData}\n                        tourneyDispatch={tourneyDispatch}\n                        getPlayer={getPlayer}\n                    />\n                    <PanelContainer>\n                        {stagedPlayers.map((id) =>\n                            id !== null && (\n                                <Panel key={id}>\n                                    <PlayerInfo\n                                        playerId={id}\n                                        scoreData={scoreData}\n                                        players={players}\n                                        getPlayer={getPlayer}\n                                    />\n                                </Panel>\n                            )\n                        )}\n                    </PanelContainer>\n                </Panel>\n            </PanelContainer>\n            <Dialog isOpen={isModalOpen}>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsModalOpen(false)}\n                >\n                    Done\n                </button>\n                <Selecting\n                    tourney={tourney}\n                    tourneyDispatch={tourneyDispatch}\n                />\n            </Dialog>\n        </div>\n    );\n}\nPairPicker.propTypes = {\n    roundId: PropTypes.number.isRequired,\n    tournament: PropTypes.object.isRequired\n};\n","import React from \"react\";\n\nconst NotFound = (props) => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","import {\n    DUMMY_ID\n    // rounds2Matches\n} from \"../../../data-types\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport {sum} from \"ramda\";\n\nexport default function PlayerMatchInfo({color, scoreData, match, getPlayer}) {\n    const playerId = match.playerIds[color];\n    const player = getPlayer(playerId);\n    const {\n        colorScores,\n        opponentResults,\n        results\n    } = scoreData[playerId];\n    const colorBalance = sum(colorScores);\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {player.firstName} {player.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{sum(results)}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerId}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{hasBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {Object.entries(\n                        opponentResults\n                    ).map(([opId, result], i, src) => (\n                        // don't show the most recent (current) opponent\n                        i < src.length - 1 && (\n                            <li key={opId}>\n                                {getPlayer(opId).firstName}{\" \"}\n                                {getPlayer(opId).lastName}{\" \"}\n                                -{\" \"}\n                                {result === 0 && \"Lost\"}\n                                {result === 1 && \"Won\"}\n                                {result === 0.5 && \"Draw\"}\n                            </li>\n                        )\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\nPlayerMatchInfo.propTypes = {\n    color: PropTypes.number.isRequired,\n    getPlayer: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired,\n    scoreData: PropTypes.object.isRequired\n};\n","import \"@reach/dialog/styles.css\";\nimport {BLACK, DUMMY_ID, WHITE} from \"../../../data-types\";\nimport {Panel, PanelContainer} from \"../../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Icons from \"../../../components/icons\";\nimport PlayerMatchInfo from \"./player-match-info\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {ratings} from \"../../../pairing-scoring\";\nimport styles from \"./round.module.css\";\nimport {sum} from \"ramda\";\n\nexport default function MatchRow({\n    compact,\n    pos,\n    match,\n    roundId,\n    selectedMatch,\n    setSelectedMatch,\n    scoreData,\n    tournament\n}) {\n    const {\n        tourney,\n        tourneyDispatch,\n        players,\n        getPlayer,\n        playersDispatch\n    } = tournament;\n    const dispatch = tourneyDispatch;\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whitePlayer = getPlayer(match.playerIds[WHITE]);\n    const blackPlayer = getPlayer(match.playerIds[BLACK]);\n    const whiteName = whitePlayer.firstName + \" \" + whitePlayer.lastName;\n    const blackName = blackPlayer.firstName + \" \" + blackPlayer.lastName;\n\n    function ResultDisplay(color) {\n        if (resultCode === \"NOTSET\") {\n            return <VisuallyHidden>Not set</VisuallyHidden>;\n        } else if (resultCode === \"DRAW\") {\n            // return <Icons.Minus aria-label=\"Draw\" />;\n            // TODO: find a better icon for draws.\n            return (\n                <span\n                    aria-label=\"Draw\"\n                    role=\"img\"\n                    style={{filter: \"grayscale(100%)\"}}\n                >\n                    🤝\n                </span>\n            );\n        } else if (resultCode === color) {\n            return <Icons.Award  aria-label=\"Won\" />;\n        } else {\n            return <VisuallyHidden>Lost</VisuallyHidden>;\n        }\n    }\n\n    function setMatchResult(event) {\n        const result = (function () {\n            switch (event.target.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        const white = players[match.playerIds[WHITE]];\n        const black = players[match.playerIds[BLACK]];\n        const newRating = (\n            event.currentTarget.value === \"NOTSET\"\n            ? match.origRating\n            : ratings.calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playersDispatch({\n            id: white.id,\n            rating: newRating[WHITE],\n            type: \"SET_PLAYER_RATING\"\n        });\n        playersDispatch({\n            id: black.id,\n            rating: newRating[BLACK],\n            type: \"SET_PLAYER_RATING\"\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (sum(match.result) === 0) {\n            playersDispatch({\n                id: white.id,\n                matchCount: white.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n            playersDispatch({\n                id: black.id,\n                matchCount: black.matchCount + 1,\n                type: \"SET_PLAYER_MATCHCOUNT\"\n            });\n        }\n        dispatch({\n            matchId: match.id,\n            newRating,\n            result,\n            roundId,\n            type: \"SET_MATCH_RESULT\"\n        });\n    }\n\n    return (\n        <tr\n            className={\n                match.id === selectedMatch\n                ? \"selected\"\n                : \"buttons-on-hover\"\n            }\n        >\n            <th className={\"table__number \" + styles.rowId} scope=\"row\">\n                {pos + 1}\n            </th>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"WHITE\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + whitePlayer.type}\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}\n            </td>\n            <td className={styles.playerResult}>\n                {ResultDisplay(\"BLACK\")}\n            </td>\n            <td\n                className={\"table__player row__player \" + blackPlayer.type}\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}\n            </td>\n            <td className={styles.matchResult + \" data__input row__controls\"}>\n                <select\n                    className={styles.winnerSelect}\n                    disabled={match.playerIds.includes(DUMMY_ID)}\n                    value={resultCode}\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                >\n                    <option value=\"NOTSET\">\n                        Select winner\n                    </option>\n                    <option value=\"WHITE\">\n                        White won\n                    </option>\n                    <option value=\"BLACK\">\n                        Black won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            {!compact &&\n                <td className={styles.controls + \" data__input\"}>\n                    {selectedMatch !== match.id\n                    ? (\n                        <button\n                            className=\"button-ghost\"\n                            title=\"Edit match\"\n                            onClick={() => setSelectedMatch(match.id)}\n                        >\n                            <Icons.Circle />\n                            <VisuallyHidden>\n                                Edit match for {whiteName} versus {blackName}\n                            </VisuallyHidden>\n                        </button>\n                    ) : (\n                        <button\n                            className=\"button-ghost button-pressed\"\n                            title=\"End editing match\"\n                            onClick={() => setSelectedMatch(null)}\n                        >\n                            <Icons.CheckCircle />\n                        </button>\n                    )}\n                    <button\n                        className=\"button-ghost\"\n                        title=\"Open match information.\"\n                        onClick={() => setOpenModal(true)}\n                    >\n                        <Icons.Info />\n                        <Hidden>\n                            View information for match:{\" \"}\n                            {whiteName} versus {blackName}\n                        </Hidden>\n                    </button>\n                    <Dialog isOpen={openModal}>\n                        <button\n                            className=\"button-micro button-primary\"\n                            onClick={() => setOpenModal(false)}\n                        >\n                            close\n                        </button>\n                        <p>{tourney.name}</p>\n                        <p>Round {roundId + 1}, match {pos + 1}</p>\n                        <PanelContainer>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={WHITE}\n                                    match={match}\n                                    getPlayer={getPlayer}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                            <Panel>\n                                <PlayerMatchInfo\n                                    color={BLACK}\n                                    match={match}\n                                    getPlayer={getPlayer}\n                                    scoreData={scoreData}\n                                />\n                            </Panel>\n                        </PanelContainer>\n                    </Dialog>\n                </td>\n            }\n        </tr>\n    );\n}\nMatchRow.propTypes = {\n    compact: PropTypes.bool,\n    match: PropTypes.object.isRequired,\n    pos: PropTypes.number.isRequired,\n    roundId: PropTypes.number.isRequired,\n    scoreData: PropTypes.object,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func,\n    tournament: PropTypes.object.isRequired\n};\n","import MatchRow from \"./match-row\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport {matches2ScoreData} from \"../../../pairing-scoring\";\nimport {rounds2Matches} from \"../../../data-types\";\nimport style from \"./round.module.css\";\n\nexport default function RoundTable({\n    compact,\n    roundId,\n    selectedMatch,\n    setSelectedMatch,\n    tournament\n}) {\n    const {tourney} = tournament;\n    const matchList = tourney.roundList[roundId];\n    const scoreData = matches2ScoreData(rounds2Matches(tourney.roundList));\n    return (\n        <table className={style.table}>\n            {matchList.length > 0 &&\n                <>\n                <caption\n                    className={compact ? \"title-30\" : \"title-40\"}\n                >\n                    Round {roundId + 1} matches\n                </caption>\n                <thead>\n                    <tr>\n                        <th className={style.rowId} scope=\"col\">\n                            #\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>White result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            White\n                        </th>\n                        <th scope=\"col\">\n                            <VisuallyHidden>Black result</VisuallyHidden>\n                        </th>\n                        <th className=\"row__player\" scope=\"col\">\n                            Black\n                        </th>\n                        <th className=\"row__result\" scope=\"col\">\n                            Match result\n                        </th>\n                        {!compact &&\n                            <th className=\"row__controls\" scope=\"col\">\n                                <VisuallyHidden>Controls</VisuallyHidden>\n                            </th>\n                        }\n                    </tr>\n                </thead>\n                </>\n            }\n            <tbody className={style.tbody + \" content\"}>\n                {matchList.map((match, pos) => (\n                    <MatchRow\n                        key={match.id}\n                        compact={compact}\n                        match={match}\n                        pos={pos}\n                        roundId={roundId}\n                        selectedMatch={selectedMatch}\n                        setSelectedMatch={setSelectedMatch}\n                        scoreData={scoreData}\n                        tournament={tournament}\n                    />\n                ))}\n            </tbody>\n        </table>\n    );\n}\nRoundTable.propTypes = {\n    compact: PropTypes.bool,\n    roundId: PropTypes.number.isRequired,\n    selectedMatch: PropTypes.string,\n    setSelectedMatch: PropTypes.func,\n    tournament: PropTypes.object.isRequired\n};\n","import React, {useState} from \"react\";\nimport Icons from \"../../../components/icons\";\nimport NotFound from \"../../../components/404\";\nimport PropTypes from \"prop-types\";\nimport RoundTable from \"./round-table\";\nimport {findById} from \"../../../components/utility\";\nimport {sum} from \"ramda\";\n\nexport function findIndexById(id, list) {\n    return list.indexOf(findById(id, list));\n}\n\nexport default function Round({roundId, tournament}) {\n    const {\n        tourney,\n        players,\n        tourneyDispatch,\n        playersDispatch\n    } = tournament;\n    const matchList = tourney.roundList[roundId];\n    const [selectedMatch, setSelectedMatch] = useState(null);\n    if (!matchList) {\n        return <NotFound />;\n    }\n    function unMatch(matchId) {\n        const match = findById(matchId, matchList);\n        if (sum(match.result) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.playerIds.forEach(function (pId, color) {\n                // If there was a dummy player or a deleted player then bail\n                // on the dispatch.\n                if (!players[pId]) {\n                    return;\n                }\n                // Decrement the matchcount for each player\n                playersDispatch({\n                    id: pId,\n                    matchCount: players[pId].matchCount - 1,\n                    type: \"SET_PLAYER_MATCHCOUNT\"\n                });\n                // Set each player's rating to the original rating of the match\n                playersDispatch({\n                    id: pId,\n                    rating: match.origRating[color],\n                    type: \"SET_PLAYER_RATING\"\n                });\n            });\n        }\n        tourneyDispatch({matchId, roundId, type: \"DEL_MATCH\"});\n        setSelectedMatch(null);\n    }\n\n    function swapColors(matchId) {\n        tourneyDispatch({matchId, roundId, type: \"SWAP_COLORS\"});\n    }\n\n    function moveMatch(matchId, direction) {\n        const oldIndex = findIndexById(matchId, matchList);\n        const newIndex = (oldIndex + direction >= 0) ? oldIndex + direction : 0;\n        tourneyDispatch({newIndex, oldIndex, roundId, type: \"MOVE_MATCH\"});\n    }\n\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar\">\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => unMatch(selectedMatch)}\n                >\n                    <Icons.Trash /> Unmatch\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => swapColors(selectedMatch)}\n                >\n                    <Icons.Repeat /> Swap colors\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, -1)}\n                >\n                    <Icons.ArrowUp /> Move up\n                </button>{\" \"}\n                <button\n                    className=\"button-micro\"\n                    disabled={selectedMatch === null}\n                    onClick={() => moveMatch(selectedMatch, 1)}\n                >\n                    <Icons.ArrowDown /> Move down\n                </button>\n            </div>\n            {matchList.length === 0 &&\n                <p>No players matched yet.</p>\n            }\n            <RoundTable\n                roundId={roundId}\n                selectedMatch={selectedMatch}\n                setSelectedMatch={setSelectedMatch}\n                tournament={tournament}\n            />\n        </div>\n    );\n}\nRound.propTypes = {\n    roundId: PropTypes.number.isRequired,\n    tournament: PropTypes.object.isRequired\n};\n","import RoundPanels from \"./round-panels\";\nexport default RoundPanels;\n","import React, {useEffect, useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport Icons from \"../../../components/icons\";\nimport PairPicker from \"../pair-picker\";\nimport PropTypes from \"prop-types\";\nimport Round from \"./round\";\nimport {getUnmatched} from \"../../../data-types\";\n// import {useTournament} from \"../../../hooks\";\n\nexport default function RoundPanels(props) {\n    const roundId = Number(props.roundId); // Reach Router passes a string.\n    const {tourney, activePlayers} = props.tournament;\n    // only use unmatched players if this is the last round.\n    const unmatched = (\n        roundId === tourney.roundList.length - 1\n        ? getUnmatched(tourney.roundList, activePlayers, roundId)\n        : {}\n    );\n    const unmatchedCount = Object.keys(unmatched).length;\n    const activePlayersCount = Object.keys(activePlayers).length;\n    const [openTab, setOpenTab] = useState(0);\n    useEffect(\n        function autoSwitchTab() {\n            if (openTab === 0) {\n                // If all of the players are unmatched then switch to the\n                // pair-picking tab\n                unmatchedCount === activePlayersCount\n                ? setOpenTab(1)\n                : setOpenTab(0);\n            }\n            if (openTab === 1 && unmatchedCount === 0) {\n                setOpenTab(0);\n            }\n        },\n        [unmatchedCount, activePlayersCount, openTab]\n    );\n    return (\n        <Tabs index={openTab} onChange={setOpenTab}>\n            <TabList>\n                <Tab disabled={unmatchedCount === activePlayersCount}>\n                    <Icons.List/> Matches\n                </Tab>\n                <Tab disabled={unmatchedCount === 0}>\n                    <Icons.Users/> Unmatched players\n                </Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <Round roundId={roundId} tournament={props.tournament}/>\n                </TabPanel>\n                <TabPanel>\n                    <PairPicker\n                        roundId={roundId}\n                        tournament={props.tournament}\n                    />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nRoundPanels.propTypes = {\n    roundId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    tournament: PropTypes.object.isRequired\n};\n","import {Panel, PanelContainer} from \"../../components/utility\";\nimport React, {useState} from \"react\";\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\nimport {\n    createStandingList,\n    createStandingTree,\n    getTieBreakNames,\n    matches2ScoreData,\n    tieBreakMethods\n} from \"../../pairing-scoring\";\nimport {defaultTo, filter, pipe} from \"ramda\";\nimport {isDummyObj, rounds2Matches} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport PropTypes from \"prop-types\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport classNames from \"classnames\";\nimport dashify from \"dashify\";\nimport numeral from \"numeral\";\nimport style from \"./index.module.css\";\n// import {useTournament} from \"../../hooks\";\n\nexport function ScoreTable({compact, title, tourney, getPlayer}) {\n    const {tieBreaks, roundList} = tourney;\n    const tieBreakNames = getTieBreakNames(tieBreaks);\n    const standingTree = pipe(\n        rounds2Matches,\n        matches2ScoreData,\n        (data) => createStandingList(tieBreaks, data),\n        filter((obj) => !isDummyObj(obj)),\n        createStandingTree\n    )(roundList);\n    return (\n        <table\n            className={classNames(style.table, {[`${style.compact}`]: compact})\n            }\n        >\n            <caption\n                className={(compact) ? \"title-30\" : \"title-40\"}\n            >\n                {title}\n            </caption>\n            <thead>\n                <tr className={style.topHeader}>\n                    <th className=\"title-10\" scope=\"col\">Rank</th>\n                    <th className=\"title-10\" scope=\"col\">Name</th>\n                    <th className=\"title-10\" scope=\"col\">Score</th>\n                    {!compact && tieBreakNames.map((name, i) => (\n                        <th key={i} className=\"title-10\" scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.map((standing, i, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {i === 0 && ( // Only display the rank once\n                                <th\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                    scope=\"row\"\n                                >\n                                    {rank + 1}\n                                </th>\n                            )}\n                            {compact // use <td> if it's compact.\n                            ? (\n                                <td className={style.playerName}>\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </td>\n                            ) : ( // Use the name as a header if not compact.\n                                <th\n                                    className={style.playerName}\n                                    data-testid={rank}\n                                    scope=\"row\"\n                                >\n                                    {getPlayer(standing.id).firstName}&nbsp;\n                                    {getPlayer(standing.id).lastName}\n                                </th>\n                            )}\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {!compact && standing.tieBreaks.map((score, j) => (\n                                <td\n                                    key={j}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tieBreakNames[j]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\nScoreTable.propTypes = {\n    compact: PropTypes.bool,\n    getPlayer: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    tourney: PropTypes.object.isRequired\n};\n\nfunction SelectTieBreaks({tourney, tourneyDispatch}) {\n    const {tieBreaks} = tourney;\n    const [selectedTb, setSelectedTb] = useState(null);\n\n    function toggleTb(id = null) {\n        const defaultId = defaultTo(selectedTb);\n        if (tieBreaks.includes(defaultId(id))) {\n            tourneyDispatch({id: defaultId(id), type: \"DEL_TIEBREAK\"});\n            setSelectedTb(null);\n        } else {\n            tourneyDispatch({id: defaultId(id), type: \"ADD_TIEBREAK\"});\n        }\n    }\n\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        tourneyDispatch({\n            newIndex: index + direction,\n            oldIndex: index,\n            type: \"MOVE_TIEBREAK\"\n        });\n    }\n\n    return (\n        <PanelContainer className=\"content-area\">\n            <Panel>\n                <div className=\"toolbar\">\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => toggleTb()}\n                    >\n                        Toggle\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(-1)}\n                    >\n                        <Icons.ArrowUp/> Move up\n                    </button>\n                    <button\n                        className=\"button-micro\"\n                        disabled={selectedTb === null}\n                        onClick={() => moveTb(1)}\n                    >\n                        <Icons.ArrowDown/> Move down\n                    </button>\n                    <button\n                        className={classNames(\n                            \"button-micro\",\n                            {\"button-primary\": selectedTb !== null}\n                        )}\n                        disabled={selectedTb === null}\n                        onClick={() => setSelectedTb(null)}\n                    >\n                        Done\n                    </button>\n                </div>\n                <table>\n                    <caption className=\"title-30\">\n                        Selected tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {tieBreaks.map((id) => (\n                            <tr\n                                key={id}\n                                className={classNames(\n                                    {\"selected\": selectedTb === id}\n                                )}\n                            >\n                                <td>\n                                    {tieBreakMethods[id].name}\n                                </td>\n                                <td style={{width: \"48px\"}}>\n                                    <button\n                                        className=\"button-micro\"\n                                        disabled={\n                                            selectedTb !== null\n                                            && selectedTb !== id\n                                        }\n                                        onClick={() =>\n                                            selectedTb === id\n                                            ? setSelectedTb(null)\n                                            : setSelectedTb(id)\n                                        }\n                                    >\n                                        {selectedTb === id ? \"Done\" : \"Edit\"}\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <div className=\"toolbar\">&nbsp;</div>\n                <table style={{marginTop: \"16px\"}}>\n                    <caption className=\"title-30\">\n                        Available tiebreak methods\n                    </caption>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {Object.values(tieBreakMethods).map(({name, id}) => (\n                            <tr key={id}>\n                                <td>\n                                    <span\n                                        className={\n                                            tieBreaks.includes(id)\n                                            ? \"disabled\"\n                                            : \"enabled\"\n                                        }\n                                    >\n                                        {name}\n                                    </span>\n                                </td>\n                                <td>\n                                    {!tieBreaks.includes(id) && (\n                                        <button\n                                            className=\"button-micro\"\n                                            onClick={() => toggleTb(id)}\n                                        >\n                                            Add\n                                        </button>\n                                    )}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n        </PanelContainer>\n    );\n}\nSelectTieBreaks.propTypes = {\n    tourney: PropTypes.object.isRequired,\n    tourneyDispatch: PropTypes.func.isRequired\n};\n\nexport default function Scores({tournament}) {\n    const {getPlayer, tourney, tourneyDispatch} = tournament;\n    return (\n        <Tabs>\n            <TabList>\n                <Tab><Icons.List /> Scores</Tab>\n                <Tab><Icons.Settings /> Edit tiebreak rules</Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <ScoreTable\n                        title=\"Score detail\"\n                        tourney={tourney}\n                        getPlayer={getPlayer}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <SelectTieBreaks\n                        tourney={tourney}\n                        tourneyDispatch={tourneyDispatch}\n                    />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\nScores.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import React, {useState} from \"react\";\nimport {DateFormat} from \"../../components/utility\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\n\nexport default function Setup({tournament}) {\n    const {tourney, tourneyDispatch} = tournament;\n    const [isEditingName, setIsEditingName] = useState(false);\n    const [isEditingDate, setIsEditingDate] = useState(false);\n\n    function changeToOne() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 1\n        });\n        window.alert(\"Bye value updated to 1.\");\n    }\n\n    function changeToOneHalf() {\n        tourneyDispatch({\n            type: \"UPDATE_BYE_SCORES\",\n            value: 0.5\n        });\n        window.alert(\"Bye value updated to ½.\");\n    }\n\n    // lol, why are dates so complicated?!?\n    const dateInput = (function () {\n        const year = tourney.date.getFullYear();\n        const month = (\n            tourney.date.getMonth() < 9\n            ? \"0\" + (tourney.date.getMonth() + 1)\n            : tourney.date.getMonth() + 1\n        );\n        const day = (\n            tourney.date.getDate() < 10\n            ? \"0\" + tourney.date.getDate()\n            : tourney.date.getDate()\n        );\n        return year + \"-\" + month + \"-\" + day;\n    }());\n\n    function updateDate(event) {\n        const [\n            rawYear,\n            rawMonth,\n            rawDay\n        ] = event.currentTarget.value.split(\"-\");\n        const year = Number(rawYear);\n        const month = Number(rawMonth) - 1;\n        const day = Number(rawDay);\n        tourneyDispatch({\n            date: new Date(year, month, day),\n            type: \"SET_DATE\"\n        });\n    }\n\n    return (\n        <div className=\"content-area\">\n            {isEditingName\n            ? (\n                <p className=\"display-20\" style={{textAlign: \"left\"}}>\n                    <input\n                        className=\"display-20\"\n                        style={{textAlign: \"left\"}}\n                        type=\"text\"\n                        value={tourney.name}\n                        onChange={(event) => tourneyDispatch({\n                            name: event.currentTarget.value,\n                            type: \"SET_NAME\"\n                        })}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </p>\n            ) : (\n                <h1 style={{textAlign: \"left\"}}>\n                    <span className=\"inputPlaceholder\">\n                        {tourney.name}\n                    </span>{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingName(true)}\n                    >\n                        <Icons.Edit />\n                    </button>\n                </h1>\n            )}\n            {isEditingDate\n            ? (\n                <p className=\"caption-30\">\n                    <input\n                        className=\"caption-30\"\n                        type=\"date\"\n                        value={dateInput}\n                        onChange={updateDate}\n                    />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(false)}\n                    >\n                        <Icons.Check />\n                    </button>\n                </p>\n            )\n            : (\n                <p className=\"caption-30\">\n                    <DateFormat date={tourney.date} />{\" \"}\n                    <button\n                        className=\"button-ghost\"\n                        onClick={() => setIsEditingDate(true)}\n                    >\n                        <Icons.Edit />\n                    </button>\n                </p>\n            )}\n            <h2>Change bye scores</h2>\n            <button onClick={changeToOne}>Change to 1</button>{\" \"}\n            <button onClick={changeToOneHalf}>Change to ½</button>\n            <p className=\"caption-30\">\n                This will update all bye matches which have been previously\n                scored in this tournament. To change the default bye value in\n                future matches, go to the{\" \"}\n                <Link to=\"/options\">app options</Link>.\n            </p>\n        </div>\n    );\n}\nSetup.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import {curry, last} from \"ramda\";\nimport {DUMMY_ID} from \"../../data-types\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {isRoundComplete} from \"../../data-types\";\n\nconst noDraggy = {onDragStart: (e) => e.preventDefault()};\n\nexport default function Sidebar({className, navigate, tournament}) {\n    const {\n        tourney,\n        isItOver,\n        isNewRoundReady,\n        getPlayer,\n        activePlayers,\n        playersDispatch,\n        tourneyDispatch\n    } = tournament;\n    const {roundList} = tourney;\n    const isComplete = curry(isRoundComplete)(roundList, activePlayers);\n\n    function newRound() {\n        const confirmText = (\n            \"All rounds have completed. Are you sure you want to begin a new \"\n            + \"one?\"\n        );\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        tourneyDispatch({type: \"ADD_ROUND\"});\n    }\n\n    async function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            await navigate(\".\");\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.playerIds.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playersDispatch({\n                        id: pId,\n                        matchCount: matchCount - 1,\n                        type: \"SET_PLAYER_MATCHCOUNT\"\n                    });\n                    playersDispatch({\n                        id: pId,\n                        rating: match.origRating[color],\n                        type: \"SET_PLAYER_RATING\"\n                    });\n                });\n            });\n            tourneyDispatch({type: \"DEL_LAST_ROUND\"});\n            if (tourney.roundList.length === 1) {\n                // Automatically remake round 1.\n                tourneyDispatch({type: \"ADD_ROUND\"});\n            }\n        }\n    }\n\n    return (\n        <div className={classNames(className)}>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"..\" {...noDraggy}>\n                            <Icons.X/>\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Close\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <ul>\n                    <li>\n                        <Link to=\"setup\" {...noDraggy}>\n                            <Icons.Settings />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Setup\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\".\" {...noDraggy}>\n                            <Icons.Users />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Players\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"status\" {...noDraggy}>\n                            <Icons.Activity />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Status\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"crosstable\" {...noDraggy}>\n                            <Icons.Layers />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Crosstable\n                            </span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"scores\" {...noDraggy}>\n                            <Icons.List />\n                            <span className=\"sidebar__hide-on-close\">\n                                &nbsp;Score detail\n                            </span>\n                        </Link>\n                    </li>\n                </ul>\n                <hr />\n                <h5 className=\"sidebar__hide-on-close\">Rounds</h5>\n                <ul>\n                    {Object.keys(roundList).map((id) =>\n                        <li key={id}>\n                            <Link to={`round/${id}`} {...noDraggy}>\n                                {Number(id) + 1}\n                                {isComplete(Number(id))\n                                ? (\n                                    <span\n                                        className={classNames(\n                                            \"sidebar__hide-on-close\",\n                                            \"caption-20\"\n                                        )}\n                                    >\n                                        &nbsp;Complete&nbsp;<Icons.Check />\n                                    </span>\n                                ) : (\n                                    <span\n                                        className={classNames(\n                                            \"sidebar__hide-on-close\",\n                                            \"caption-20\"\n                                        )}\n                                    >\n                                        &nbsp;Not complete&nbsp;<Icons.Alert />\n                                    </span>\n                                )}\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n            </nav>\n            <hr />\n            <ul>\n                <li>\n                    <button\n                        // className={classNames({\"button-primary\": tooltipWarn})}\n                        disabled={!isNewRoundReady}\n                        onClick={newRound}\n                        style={{width: \"100%\"}}\n                    >\n                        <Icons.Plus/>\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;New round\n                        </span>\n                    </button>\n                </li>\n                <li style={{textAlign: \"center\"}}>\n                    <button\n                        disabled={roundList.length === 0}\n                        onClick={delLastRound}\n                        className=\"button-micro\"\n                        style={{marginTop: \"8px\"}}\n                    >\n                        <Icons.Trash />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Remove last round\n                        </span>\n                    </button>\n                </li>\n            </ul>\n        </div>\n    );\n}\nSidebar.propTypes = {\n    className: PropTypes.string,\n    navigate: PropTypes.func.isRequired,\n    tournament: PropTypes.object.isRequired\n};\n","import {Panel, PanelContainer} from \"../../components/utility\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport RoundTable from \"./round/round-table\";\nimport {ScoreTable} from \"./scores\";\n\nexport default function Status({tournament}) {\n    const {tourney, getPlayer} = tournament;\n    const lastRound = (function () {\n        if (tourney.roundList.length === 0) {\n            return <p>No rounds played yet.</p>;\n        }\n        const lastRoundId = tourney.roundList.length - 1;\n        if (tourney.roundList[lastRoundId].length === 0) {\n            return (\n                <p>Matched players in the current round will be shown here.</p>\n            );\n        }\n        return (\n            <RoundTable\n                roundId={lastRoundId}\n                tournament={tournament}\n                compact\n            />\n        );\n    }());\n    return (\n        <>\n            <h2 style={{textAlign: \"center\"}}>Tournament status</h2>\n            <PanelContainer\n                style={{justifyContent: \"center\"}}\n            >\n                <Panel>\n                    {lastRound}\n                </Panel>\n                <Panel>\n                    <ScoreTable\n                        getPlayer={getPlayer}\n                        title=\"Rankings\"\n                        tourney={tourney}\n                        compact\n                    />\n                </Panel>\n            </PanelContainer>\n        </>\n    );\n}\nStatus.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n","import {\n    assoc,\n    dissoc,\n    lensPath,\n    lensProp,\n    mergeLeft,\n    over,\n    set\n} from \"ramda\";\nimport {createPlayer, types} from \"../../../data-types\";\nimport nanoid from \"nanoid\";\nimport t from \"tcomb\";\n\n// eslint-disable-next-line complexity\nexport default function playersReducer(state, action) {\n    const nextId = nanoid();\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            lastName: t.String,\n            rating: t.Number\n        })(action);\n        return assoc(\n            nextId,\n            createPlayer({\n                firstName: action.firstName,\n                id: nextId,\n                lastName: action.lastName,\n                rating: action.rating\n            }),\n            state\n        );\n    case \"SET_PLAYER\":\n        t.interface({\n            firstName: t.String,\n            id: types.Id,\n            lastName: t.String,\n            matchCount: t.Number,\n            rating: t.Number\n        })(action);\n        return over(\n            lensProp(action.id),\n            mergeLeft(\n                {\n                    firstName: action.firstName,\n                    lastName: action.lastName,\n                    matchCount: action.matchCount,\n                    rating: action.rating\n                }\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        // You should delete all avoid-pairs with the id too.\n        t.interface({id: types.Id})(action);\n        return dissoc(\n            lensPath(action.id),\n            state\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        t.interface({\n            id: types.Id,\n            matchCount: t.Number\n        })(action);\n        return set(\n            lensPath([action.id, \"matchCount\"]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        t.interface({id: types.Id, rating: t.Number})(action);\n        return set(\n            lensPath([action.id, \"rating\"]),\n            action.rating,\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n","// TODO: this file needs to be replaced with something more organized.\nimport {\n    BLACK,\n    DUMMY_ID,\n    WHITE,\n    createMatch,\n    getPlayerMaybe,\n    types\n} from \"../../../data-types\";\nimport {assoc, curry} from \"ramda\";\nimport {pairPlayers, setByePlayer} from \"../../../pairing-scoring\";\nimport t from \"tcomb\";\n\nexport function scoreByeMatch(byeValue, match) {\n    if (match.playerIds[WHITE] === DUMMY_ID) {\n        return assoc(\"result\", [0, byeValue], match);\n    } else if (match.playerIds[BLACK] === DUMMY_ID) {\n        return assoc(\"result\", [byeValue, 0], match);\n    }\n    return match;\n}\n\nexport function autoPair({\n    pairData,\n    byeValue,\n    players,\n    tourney\n}) {\n    const [\n        pairDataNoByes,\n        byePlayerData\n    ] = setByePlayer(tourney.byeQueue, DUMMY_ID, pairData);\n    const pairs = pairPlayers(pairDataNoByes);\n    const pairsWithBye = (\n        byePlayerData\n        ? pairs.concat([[byePlayerData.id, DUMMY_ID]])\n        : pairs\n    );\n    const getPlayer = curry(getPlayerMaybe)(players);\n    const newMatchList = pairsWithBye.map(\n        (idsPair) => (\n            createMatch({\n                newRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                origRating: [\n                    getPlayer(idsPair[WHITE]).rating,\n                    getPlayer(idsPair[BLACK]).rating\n                ],\n                playerIds: [idsPair[WHITE], idsPair[BLACK]]\n            })\n        )\n    );\n    return newMatchList.map(curry(scoreByeMatch)(byeValue));\n}\n\nexport function manualPair(pair, byeValue) {\n    t.tuple([types.Player, types.Player])(pair);\n    const match = createMatch({\n        newRating: [pair[WHITE].rating, pair[BLACK].rating],\n        origRating: [pair[WHITE].rating, pair[BLACK].rating],\n        playerIds: [pair[WHITE].id, pair[BLACK].id]\n    });\n    return scoreByeMatch(byeValue, match);\n}\n","import {\n    __,\n    append,\n    assoc,\n    concat,\n    curry,\n    filter,\n    findIndex,\n    lensPath,\n    lensProp,\n    map,\n    mergeRight,\n    move,\n    over,\n    pipe,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport {autoPair, manualPair, scoreByeMatch} from \"./match-functions\";\nimport scoreTypes from \"../../../pairing-scoring/types\";\nimport t from \"tcomb\";\nimport {types} from \"../../../data-types\";\n\n// eslint-disable-next-line complexity\nexport default function tournamentReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensProp(\"roundList\"),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        t.interface({id: t.Number})(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number\n        })(action);\n        return over(\n            lensProp(\"tieBreaks\"),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        t.interface({playerIds: t.list(types.Id)})(action);\n        return assoc(\"playerIds\", action.playerIds, state);\n    case \"SET_BYE_QUEUE\":\n        t.interface({byeQueue: t.list(types.Id)})(action);\n        return assoc(\"byeQueue\", action.byeQueue, state);\n    case \"SET_NAME\":\n        t.interface({name: t.String})(action);\n        return assoc(\"name\", action.name, state);\n    case \"AUTO_PAIR\":\n        t.interface({\n            // avoidList: t.list(types.AvoidPair),\n            byeValue: t.Number,\n            pairData: t.dict(types.Id, scoreTypes.PairingData),\n            players: t.dict(types.Id, types.Player),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            concat(\n                __,\n                autoPair({\n                    // avoidList: action.avoidList,\n                    byeValue: action.byeValue,\n                    pairData: action.pairData,\n                    players: action.players,\n                    // roundId: action.roundId,\n                    tourney: state\n                })\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        t.interface({\n            byeValue: t.Number,\n            pair: t.tuple([types.Player, types.Player]),\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            append(manualPair(action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_DATE\":\n        t.interface({date: Date})(action);\n        return assoc(\"date\", action.date, state);\n    case \"SET_MATCH_RESULT\":\n        t.interface({\n            matchId: t.String,\n            newRating: t.tuple([t.Number, t.Number]),\n            result: t.tuple([t.Number, t.Number]),\n            roundId: t.Number\n        })(action);\n        // There's probably a better way to do this but... #worksforme\n        return pipe(\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"result\"\n                ]),\n                action.result\n            ),\n            set(\n                lensPath([\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state.roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n            ),\n        )(state);\n    case \"DEL_MATCH\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\n        return over(\n            lensPath([\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state.roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    newRating: reverse(match.newRating),\n                    origRating: reverse(match.origRating),\n                    playerIds: reverse(match.playerIds),\n                    result: reverse(match.result)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        t.interface({\n            newIndex: t.Number,\n            oldIndex: t.Number,\n            roundId: t.Number\n        })(action);\n        return over(\n            lensPath([\"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"UPDATE_BYE_SCORES\":\n        t.interface({value: t.Number})(action);\n        return assoc(\n            \"roundList\",\n            map(\n                map(curry(scoreByeMatch)(action.value)),\n                state.roundList\n            ),\n            state\n        );\n    case \"SET_STATE\":\n        console.log(\"setting state:\", action.state);\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n","import PropTypes from \"prop-types\";\nconst electron = window.require ? window.require(\"electron\") : false;\nexport {electron};\n\n// Returns the result of a function if Electron is enabled.\nexport function ifElectron(fn) {\n    return electron ? fn() : null;\n}\n\n// This is the JSX version of the previous function\nexport function IfElectron({children, onlyWin = false, onlyMac = false}) {\n    const win = onlyWin ? navigator.appVersion.includes(\"Windows\") : true;\n    const mac = onlyMac ? navigator.appVersion.includes(\"Mac\") : true;\n    if ([electron, win, mac].includes(false)) {\n        return null;\n    } else {\n        return children;\n    }\n}\nIfElectron.propTypes = {\n    children: PropTypes.node.isRequired,\n    onlyMac: PropTypes.bool,\n    onlyWindows: PropTypes.bool\n};\n\nexport function ifElectronOpen(event, url) {\n    return ifElectron(function () {\n        event.preventDefault();\n        electron.shell.openExternal(url);\n    });\n}\n\nfunction toggleMaximize(win) {\n    if (!win.isMaximized()) {\n        win.maximize();\n    } else {\n        win.unmaximize();\n    }\n}\n\n// https://github.com/electron/electron/issues/16385#issuecomment-453955377\nexport function macOSDoubleClick(event) {\n    ifElectron(function () {\n        if (!event.target.className.includes) {\n            return; // sometimes `className` isn't a string.\n        }\n        // We don't want double-clicking buttons to (un)maximize.\n        if (!event.target.className.includes(\"double-click-control\")) {\n            return;\n        }\n        const {getUserDefault} = electron.remote.systemPreferences;\n        const doubleClickAction = getUserDefault(\n            \"AppleActionOnDoubleClick\",\n            \"string\"\n        );\n        const win = electron.remote.getCurrentWindow();\n        if (doubleClickAction === \"Minimize\") {\n            win.minimize();\n        } else if (doubleClickAction === \"Maximize\") {\n            toggleMaximize(win);\n        }\n    });\n};\n","import Icons from \"./icons\";\nimport {Link} from \"@reach/router\";\n// import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst noDraggy = {onDragStart: (e) => e.preventDefault()};\n\nexport default function Sidebar() {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/tourneys\" {...noDraggy}>\n                        <Icons.Award />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Tournaments\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/players\" {...noDraggy}>\n                        <Icons.Users />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Players\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/options\" {...noDraggy}>\n                        <Icons.Settings />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Options\n                        </span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/\" {...noDraggy}>\n                        <Icons.Help />\n                        <span className=\"sidebar__hide-on-close\">\n                            &nbsp;Info\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n","// This handles the window controls for when the Electron app is running on\n// Windows.\nimport React, {useEffect, useState} from \"react\";\nimport {electron, ifElectron} from \"../electron-utils\";\nimport classNames from \"classnames\";\nimport styles from \"./windows-controls.module.css\";\n\n// https://github.com/microsoft/vscode/tree/master/src/vs/workbench/browser/parts/titlebar/media\nconst Close = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M6.279 5.5L11 10.221l-.779.779L5.5 6.279.779 11 0 10.221 4.721 5.5 0 .779.779 0 5.5 4.721 10.221 0 11 .779 6.279 5.5z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nconst Maximize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 0v11H0V0h11zM9.899 1.101H1.1V9.9H9.9V1.1z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Minimize = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M11 4.399V5.5H0V4.399h11z\" fill=\"#000\"/>\n    </svg>\n);\n\nconst Restore = () => (\n    <svg\n        fill=\"none\"\n        height=\"11\"\n        viewBox=\"0 0 11 11\"\n        width=\"11\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M11 8.798H8.798V11H0V2.202h2.202V0H11v8.798zm-3.298-5.5h-6.6v6.6h6.6v-6.6zM9.9 1.1H3.298v1.101h5.5v5.5h1.1v-6.6z\"\n            fill=\"#000\"\n        />\n    </svg>\n);\n\nconst win = ifElectron(() => electron.remote.getCurrentWindow());\n\nexport default function Controls() {\n    const [isMaximized, setIsMaximized] = useState(false);\n    useEffect(\n        function addEventListeners() {\n            ifElectron(function () {\n                // see comments in ../App.jsx about removing stale listeners.\n                function unregisterListeners() {\n                    win.removeAllListeners(\"maximize\");\n                    win.removeAllListeners(\"unmaximize\");\n                }\n                unregisterListeners();\n                win.on(\"maximize\", () => setIsMaximized(true));\n                win.on(\"unmaximize\", () => setIsMaximized(false));\n                setIsMaximized(win.isMaximized());\n                return unregisterListeners;\n            });\n            console.log(\"rendered\");\n        },\n        []\n    );\n    return (\n        <div className={styles.container}>\n            <button\n                className={classNames(styles.winButton, \"button-ghost\")}\n                onClick={() => win.minimize()}\n            >\n                <Minimize />\n            </button>\n            {isMaximized\n            ? (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.unmaximize()}\n                >\n                    <Restore />\n                </button>\n            ) : (\n                <button\n                    className={classNames(styles.winButton, \"button-ghost\")}\n                    onClick={() => win.maximize()}\n                >\n                    <Maximize />\n                </button>\n            )}\n            <button\n                className={classNames(\n                    styles.winButton,\n                    styles.close,\n                    \"button-ghost\"\n                )}\n                onClick={() => win.close()}\n            >\n                <Close />\n            </button>\n        </div>\n    );\n}\nControls.propTypes = {\n    // isFullScreen: PropTypes.bool.isRequired\n};\n","import {\n    IfElectron,\n    electron,\n    ifElectron,\n    macOSDoubleClick\n} from \"../electron-utils\";\nimport React, {createContext, useContext, useEffect, useReducer} from \"react\";\nimport Icons from \"./icons\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"./sidebar-default\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport WindowsControls from \"./windows-controls\";\nimport classNames from \"classnames\";\nimport logo from \"../icon-min.svg\";\n\nconst WindowContext = createContext(null);\n\nexport function useWindowContext() {\n    return useContext(WindowContext);\n}\n\nconst DEFAULT_TITLE = \"Chessahoochee\";\n\nconst initialWinState = {\n    action: \"\",\n    isBlur: false,\n    isFullScreen: false,\n    isSidebarOpen: true,\n    title: DEFAULT_TITLE\n};\n\nfunction windowReducer(oldState, newState) {\n    const state = {...oldState, ...newState};\n    switch (state.action) {\n    case \"\":\n        return state;\n    case \"RESET_TITLE\":\n        return {...state, action: \"\", title: DEFAULT_TITLE};\n    default:\n        throw new Error(\"Unrecognized action: \" + state.action);\n    }\n}\n\nconst WindowTitleBar = ({state, dispatch}) => (\n    <header\n        className={classNames(\n            \"app__header\",\n            \"double-click-control\",\n            {\"traffic-light-padding\": (\n                electron\n                && navigator.appVersion.includes(\"Mac\")\n                && !state.isFullScreen\n            )}\n        )}\n        onDoubleClick={macOSDoubleClick}\n    >\n        <div>\n            <IfElectron onlyWin>\n                <span\n                    style={{\n                        alignItems: \"center\",\n                        display: \"inline-flex\",\n                        marginLeft: \"4px\",\n                        marginRight: \"8px\"}\n                    }\n                >\n                    <img src={logo} alt=\"\" height=\"16\" width=\"16\" />\n                </span>\n            </IfElectron>\n            <button\n                className=\"button-ghost\"\n                onClick={() => dispatch({isSidebarOpen: !state.isSidebarOpen})}\n            >\n                <Icons.Sidebar/>\n                <VisuallyHidden>Toggle sidebar</VisuallyHidden>\n            </button>\n        </div>\n        <div\n            className={classNames(\n                \"body-20\",\n                \"double-click-control\",\n                {\"disabled\": state.isBlur}\n            )}\n            style={{\n                left: \"0\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                position: \"absolute\",\n                right: \"0\",\n                textAlign: \"center\",\n                width: \"50%\"\n            }}\n        >\n            {state.title}\n        </div>\n        <IfElectron onlyWin><WindowsControls /></IfElectron>\n    </header>\n);\nWindowTitleBar.propTypes = {\n    dispatch: PropTypes.func,\n    state: PropTypes.object\n};\n\nexport function Window(props) {\n    const [state, dispatch] = useReducer(windowReducer, initialWinState);\n    useEffect(\n        function setDocumentTitle() {\n            document.title = state.title;\n        },\n        [state.title]\n    );\n    useEffect(\n        function addEventListeners() {\n            ifElectron(function () {\n                const win = electron.remote.getCurrentWindow();\n                // This will ensure that stale event listeners aren't persisted.\n                // That typically won't be relevant to production builds, but\n                // in a dev environment, where the page reloads frequently,\n                // stale listeners will accumulate. Note that this can cause\n                // side effects if other listeners are added elsewhere.\n                function unregisterListeners() {\n                    win.removeAllListeners(\"enter-full-screen\");\n                    win.removeAllListeners(\"leave-full-screen\");\n                    win.removeAllListeners(\"blur\");\n                    win.removeAllListeners(\"focus\");\n                }\n                unregisterListeners();\n                // Add the event listeners. These will inform styling.\n                win.on(\n                    \"enter-full-screen\",\n                    () => dispatch({isFullScreen: true}));\n                win.on(\n                    \"leave-full-screen\",\n                    () => dispatch({isFullScreen: false})\n                );\n                win.on(\"blur\", () => dispatch({isBlur: true}));\n                win.on(\"focus\", () => dispatch({isBlur: false}));\n                dispatch({isFullScreen: win.isFullScreen()});\n                dispatch({isBlur: !win.isFocused()});\n                // I don't think this ever really fires, but can it hurt?\n                return unregisterListeners;\n            });\n        },\n        []\n    );\n    return (\n        <div\n            {...props}\n            className={classNames(\n                props.className,\n                {\"open-sidebar\": state.isSidebarOpen},\n                {\"closed-sidebar\": !state.isSidebarOpen},\n                {\"window-blur\": state.isBlur},\n                {\"isWindows\": navigator.appVersion.includes(\"Windows\")},\n                {\"isMacOS\": navigator.appVersion.includes(\"Mac\")},\n                {\"isElectron\": electron}\n            )}\n        >\n            <WindowTitleBar state={state} dispatch={dispatch} />\n            <WindowContext.Provider\n                value={{winDispatch: dispatch, winState: state}}\n            >\n                {props.children}\n            </WindowContext.Provider>\n        </div>\n    );\n}\nWindow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string\n};\n\nexport function WindowBody({children, footer, sidebar, footerProps = {}}) {\n    return (\n        <div className={classNames(\"winBody\", {\"winBody-hasFooter\": footer})}>\n            <div className=\"win__sidebar\">\n                {sidebar || <Sidebar />}\n            </div>\n            <div className=\"win__content\">\n                {children}\n            </div>\n            {footer && (\n                <footer\n                    {...footerProps}\n                    className={classNames(\"win__footer\", footerProps.className)}\n                >\n                    {footer}\n                </footer>\n            )}\n        </div>\n    );\n}\nWindowBody.propTypes = {\n    children: PropTypes.node.isRequired,\n    footer: PropTypes.node,\n    footerProps: PropTypes.object,\n    sidebar: PropTypes.node\n};\n","import React, {useEffect, useReducer} from \"react\";\nimport {curry, filter, symmetricDifference} from \"ramda\";\nimport {\n    getPlayerMaybe,\n    isRoundComplete,\n    rounds2Matches\n    // types\n} from \"../../../data-types\";\nimport {playerStore, tourneyStore} from \"../../../hooks/db\";\nimport PropTypes from \"prop-types\";\nimport playersReducer from \"./players-reducer\";\n// import t from \"tcomb\";\nimport tourneyReducer from \"./tournament-reducer\";\nimport {useLoadingCursor} from \"../../../hooks\";\nimport {useWindowContext} from \"../../../components/window\";\n\nfunction getAllPlayerIdsFromMatches(matchList) {\n    const allPlayers = matchList.reduce(\n        (acc, {playerIds}) => acc.concat(playerIds),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\nfunction calcNumOfRounds(playerCount) {\n    const roundCount = Math.ceil(Math.log2(playerCount));\n    // If there aren't any players then `roundCount` === `-Infinity`.\n    return Number.isFinite(roundCount) ? roundCount : 0;\n}\n\nconst emptyTourney = {\n    name: \"\",\n    playerIds: [],\n    roundList: []\n};\nconst loadReducer = (oldState, newState) => ({...oldState, ...newState});\n// Usually I would be more comfortable with `dbError: false` instead of the\n// opposite, `noDbError: true`, since the latter leads to awkward logical\n// statements like \"if there is not no db error.\" However, `noDbError` is\n// consistent with the rest of this state's properties in that `true` means\n// something is good, and `false` means something isn't. It allows shortcuts\n// like calling `.includes(false)` on the values.\nconst initLoading = {noDbError: true, players: false, tourney: false};\n\nexport default function TournamentData({children, tourneyId}) {\n    const [tourney, tourneyDispatch] = useReducer(tourneyReducer, emptyTourney);\n    const {name, playerIds, roundList} = tourney;\n    const [players, playersDispatch] = useReducer(playersReducer, {});\n    const [isLoading, loadingDispatch] = useReducer(loadReducer, initLoading);\n    useLoadingCursor(isLoading.players && isLoading.tourney);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            if (!name) {\n                return;\n            }\n            winDispatch({title: name});\n            return () => winDispatch({action: \"RESET_TITLE\"});\n        },\n        [name, winDispatch]\n    );\n    useEffect(\n        function initTourneyFromDb() {\n            let didCancel = false;\n            (async function () {\n                const value = await tourneyStore.getItem(tourneyId);\n                console.log(\"loaded:\", tourneyId);\n                if (!value) {\n                    loadingDispatch({noDbError: false});\n                } else if(!didCancel) {\n                    tourneyDispatch({state: value || {}, type: \"SET_STATE\"});\n                    loadingDispatch({tourney: true});\n                }\n            }());\n            return () => didCancel = true;\n        },\n        [tourneyId]\n    );\n    useEffect(\n        function hydrateTourneyPlayersFromDb() {\n            // if (!roundList || !playerIds) {\n            //     return; // the tournament hasn't been loaded yet\n            // }\n            // Include players who have played matches but left the tournament,\n            // as well as players who are registered but havne't played yet.\n            const allTheIds = getAllPlayerIdsFromMatches(\n                rounds2Matches(roundList)\n            ).concat(\n                playerIds\n            );\n            // If there are no ids, update the player state and exit early.\n            if (allTheIds.length === 0) {\n                // This check prevents an infinite loop & memory leak.\n                if (Object.keys(players).length !== 0) {\n                    playersDispatch({state: {}, type: \"LOAD_STATE\"});\n                }\n                loadingDispatch({players: true});\n                return;\n            }\n            let didCancel = false;\n            (async function () {\n                const values = await playerStore.getItems(allTheIds);\n                // This safeguards against trying to fetch dummy IDs or IDs from\n                // deleted players. If we updated without this condition, then\n                // this `useEffect` would trigger an infinite loop and a memory\n                // leak.\n                const unChangedPlayers = symmetricDifference(\n                    Object.keys(values),\n                    Object.keys(players)\n                );\n                console.log(\"unchanged players:\", unChangedPlayers);\n                if (unChangedPlayers.length !== 0 && !didCancel) {\n                    console.log(\"hydrated player data\");\n                    playersDispatch({state: values, type: \"LOAD_STATE\"});\n                }\n                if (!didCancel) {\n                    loadingDispatch({players: true});\n                }\n            }());\n            return () => didCancel = true;\n        },\n        [roundList, players, playerIds]\n    );\n    useEffect(\n        function saveTourneyToDb() {\n            if (\n                !isLoading.tourney\n                // The tourney length is 0 when it wasn't found in the DB\n                || Object.keys(tourney).length === 0\n                // I don't know why, but this happens sometimes with a bad URL\n                || tourneyId !== tourney.id\n            ) {\n                return;\n            }\n            tourneyStore.setItem(tourneyId, tourney).catch(function (error) {\n                console.log(\"error saving tourney:\", tourneyId, error);\n            });\n        },\n        [tourneyId, tourney, isLoading.tourney]\n    );\n    useEffect(\n        function savePlayersToDb() {\n            if (!isLoading.players) {\n                return;\n            }\n            (async function () {\n                const values = await playerStore.setItems(players);\n                console.log(\"saved player changes to DB:\", Object.keys(values));\n            }());\n        },\n        [players, isLoading.players]\n    );\n    const getPlayer = curry(getPlayerMaybe)(players);\n    // `players` includes players in past matches who may have left\n    // `activePlayers` is only players to be matched in future matches.\n    // Use Ramda's `filter` because it can filter objects.\n    const activePlayers = filter(({id}) => playerIds.includes(id), players);\n    const roundCount = calcNumOfRounds(Object.keys(activePlayers).length);\n    const isItOver = roundList.length >= roundCount;\n    const isNewRoundReady = (\n        roundList.length === 0\n        ? true\n        : isRoundComplete(roundList, activePlayers, roundList.length - 1)\n    );\n    if (!isLoading.noDbError) {\n        return <div>Error: tournament not found.</div>;\n    }\n    if (Object.values(isLoading).includes(false)) {\n        return <div>Loading...</div>;\n    }\n    return children({\n        activePlayers,\n        getPlayer,\n        isItOver,\n        isNewRoundReady,\n        players,\n        playersDispatch,\n        roundCount,\n        tourney,\n        tourneyDispatch\n    });\n}\nTournamentData.propTypes = {\n    children: PropTypes.func.isRequired,\n    tourneyId: PropTypes.string.isRequired\n};\n","import Crosstable from \"./crosstable\";\nimport NotFound from \"../../components/404\";\nimport {Notification} from \"../../components/utility\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport {Router} from \"@reach/router\";\nimport Scores from \"./scores\";\nimport Setup from \"./setup\";\nimport Sidebar from \"./sidebar\";\nimport Status from \"./status\";\nimport TournamentData from \"./tournament-data\";\nimport {WindowBody} from \"../../components/window\";\n\nfunction Footer({tournament}) {\n    const {roundCount, tourney, isItOver, isNewRoundReady} = tournament;\n    const {roundList} = tourney;\n    const [tooltipText, tooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"Round in progress.\",\n                true\n            ];\n        } else if (isItOver) {\n            return [\"All rounds have completed.\", true];\n        } else {\n            return [\"Ready to begin a new round.\", false];\n        }\n    }());\n    return (\n        <>\n            <label\n                className=\"win__footer-block\"\n                style={{display: \"inline-block\"}}\n            >\n                Rounds completed:{\" \"}\n                {roundList.length} <small>out of</small> {roundCount}\n            </label>\n            {/* <meter\n                id=\"round-progress\"\n                max={roundCount}\n                // optimum={roundCount}\n                // low={roundCount - 1}\n                style={{width: \"200px\"}}\n                title={roundList.length + \"/\" + roundCount}\n                value={roundList.length}\n            >\n                {roundList.length}/{roundCount}\n            </meter> */}\n            <hr className=\"win__footer-divider\" />\n            <Notification\n                success={!tooltipWarn}\n                tooltip={tooltipText}\n                style={{\n                    backgroundColor: \"transparent\",\n                    color: \"initial\",\n                    display: \"inline-flex\",\n                    margin: \"0\",\n                    minHeight: \"initial\"\n                }}\n                className=\"win__footer-block\"\n            >\n                {tooltipText}\n            </Notification>\n        </>\n    );\n}\nFooter.propTypes = {\n    tournament: PropTypes.object.isRequired\n};\n\nexport default function Tournament({tourneyId, navigate}) {\n    return (\n        <TournamentData tourneyId={tourneyId}>\n            {(tournament) =>\n                <WindowBody\n                    sidebar={\n                        <Sidebar navigate={navigate} tournament={tournament}/>\n                    }\n                    footer={<Footer tournament={tournament} />}\n                >\n                    <Router>\n                        <PlayerSelect path=\"/\" tournament={tournament} />\n                        <Status path=\"status\" tournament={tournament} />\n                        <Crosstable path=\"crosstable\" tournament={tournament} />\n                        <Scores path=\"scores\" tournament={tournament}/>\n                        <Round path=\"round/:roundId\" tournament={tournament}/>\n                        <Setup path=\"setup\" tournament={tournament}/>\n                        <NotFound default />\n                    </Router>\n                </WindowBody>\n            }\n        </TournamentData>\n    );\n}\nTournament.propTypes = {\n    navigate: PropTypes.func,\n    tourneyId: PropTypes.string\n};\n","import {DateFormat, SortLabel} from \"../../components/utility\";\nimport React, {useEffect, useState} from \"react\";\nimport {WindowBody, useWindowContext} from \"../../components/window\";\nimport {useAllTournamentsDb, useSortedTable} from \"../../hooks\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport default function TournamentList(props) {\n    const [tourneys, dispatch] = useAllTournamentsDb();\n    const [sorted, sortDispatch] = useSortedTable(\n        Object.values(tourneys),\n        \"date\",\n        true\n    );\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Tournament list\"});\n            return () => winDispatch({action: \"RESET_TITLE\"});\n        },\n        [winDispatch]\n    );\n    useEffect(\n        function () {\n            sortDispatch({table: Object.values(tourneys)});\n        },\n        [tourneys, sortDispatch]\n    );\n\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({name: newTourneyName, type: \"ADD_TOURNEY\"});\n        setNewTourneyName(\"\");\n        setIsFormOpen(false);\n    }\n\n    function deleteTournament(id, name) {\n        const message = \"Are you sure you want to delete “\" + name + \"”?\";\n        if (window.confirm(message)) {\n            dispatch({id, type: \"DEL_ITEM\"});\n        }\n    }\n\n    return (\n        <WindowBody>\n            <div className=\"content-area\">\n                <div className=\"toolbar toolbar__left\">\n                    <button\n                        onClick={() => setIsFormOpen(true)}\n                    >\n                        <Icons.Plus /> Add tournament\n                    </button>\n                </div>\n                {(Object.keys(tourneys).length > 0)\n                ?\n                <table>\n                    <caption>Tournament list</caption>\n                    <thead>\n                        <tr>\n                            <th>\n                                <SortLabel\n                                    data={sorted}\n                                    dispatch={sortDispatch}\n                                    sortKey=\"name\"\n                                >\n                                    Name\n                                </SortLabel>\n                            </th>\n                            <th>\n                                <SortLabel\n                                    data={sorted}\n                                    dispatch={sortDispatch}\n                                    sortKey=\"date\"\n                                >\n                                    Date\n                                </SortLabel>\n                            </th>\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"content\">\n                        {sorted.table.map(({date, id, name}) =>\n                            <tr key={id} className=\"buttons-on-hover\">\n                                <td>\n                                    <Link to={id}>\n                                        {name}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <DateFormat date={date} />\n                                </td>\n                                <td>\n                                    <button\n                                        aria-label={`Delete “${name}”`}\n                                        className=\"danger button-ghost\"\n                                        title={`Delete “${name}”`}\n                                        onClick={\n                                            () => deleteTournament(id, name)\n                                        }\n                                    >\n                                        <Icons.Trash />\n                                    </button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                : <p>No tournaments added yet.</p>\n                }\n                <Dialog isOpen={isFormOpen}>\n                    <button\n                        className=\"button-micro\"\n                        onClick={() => setIsFormOpen(false)}\n                    >\n                        Close\n                    </button>\n                    <form onSubmit={makeTournament}>\n                        <fieldset>\n                            <legend>Make a new tournament</legend>\n                            <label htmlFor=\"tourney-name\">Name:</label>\n                            <input\n                                id=\"tourney-name\"\n                                name=\"tourney-name\"\n                                placeholder=\"tournament name\"\n                                required={true}\n                                type=\"text\"\n                                value={newTourneyName}\n                                onChange={updateNewName}\n                            />{\" \"}\n                            <input\n                                className=\"button-primary\"\n                                type=\"submit\"\n                                value=\"Create\"\n                            />\n                        </fieldset>\n                    </form>\n                </Dialog>\n            </div>\n        </WindowBody>\n    );\n}\n","import Crosstable from \"./crosstable\";\nimport PlayerSelect from \"./player-select\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Round from \"./round\";\nimport Scores from \"./scores\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./tournament-list\";\n\nconst TournamentIndex = (props) => (\n    <div className=\"passthrough\">\n        {props.children}\n    </div>\n);\nTournamentIndex.propTypes = {\n    children: PropTypes.node\n};\n\nexport default TournamentIndex;\nexport {Crosstable, PlayerSelect, Round, Scores, Tournament, TournamentList};\n","import fromJSON from \"tcomb/lib/fromJSON\";\nimport options from \"./options.json\";\nimport players from \"./players.json\";\nimport tournaments from \"./tournaments.json\";\nimport {types} from \"../data-types\";\n\nexport default Object.freeze({\n    options: fromJSON(options, types.OptionsDb),\n    players: fromJSON(players, types.PlayersDb),\n    tournaments: fromJSON(tournaments, types.TourneysDb)\n});\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {WindowBody, useWindowContext} from \"../components/window\";\nimport {\n    useAllPlayersDb,\n    useAllTournamentsDb,\n    useOptionsDb\n} from \"../hooks\";\nimport Icons from \"../components/icons\";\nimport classNames from \"classnames\";\nimport demoData from \"../demo-data\";\nimport fromJSON from \"tcomb/lib/fromJSON\";\nimport styles from \"./options.module.css\";\nimport testData from \"../test-data\";\nimport {types} from \"../data-types\";\n\nfunction invalidAlert() {\n    window.alert(\n        \"That data is invalid! A more helpful error message could not be \"\n        + \"written yet.\"\n    );\n}\n\nexport default function Options(props) {\n    const [tournaments, tourneysDispatch] = useAllTournamentsDb();\n    const [players, playersDispatch] = useAllPlayersDb();\n    const [text, setText] = useState(\"\");\n    const [options, optionsDispatch] = useOptionsDb();\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Options\"});\n            return () => winDispatch({action: \"RESET_TITLE\"});\n        },\n        [winDispatch]\n    );\n    // memoize this so the `useEffect` hook syncs with the correct states\n    const exportData = useMemo(\n        () => ({options, players, tournaments}),\n        [options, tournaments, players]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    function loadData(data) {\n        tourneysDispatch({\n            state: fromJSON(data.tournaments, types.TourneysDb),\n            type: \"LOAD_STATE\"\n        });\n        optionsDispatch({\n            state: fromJSON(data.options, types.OptionsDb),\n            type: \"LOAD_STATE\"\n        });\n        playersDispatch({\n            state: fromJSON(data.players, types.PlayersDb),\n            type: \"LOAD_STATE\"\n        });\n        window.alert(\"Data loaded!\");\n    }\n    function handleText(event) {\n        event.preventDefault();\n        try {\n            const importData = JSON.parse(text);\n            loadData(importData);\n        } catch {\n            invalidAlert();\n        }\n    }\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        reader.onload = function (ev) {\n            const data = ev.target.result;\n            try {\n                const importData = JSON.parse(data);\n                loadData(importData);\n            } catch {\n                invalidAlert();\n            }\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    function reloadDemoData(event) {\n        event.preventDefault();\n        loadData(demoData);\n    }\n    function loadTestData(event) {\n        event.preventDefault();\n        loadData(testData);\n    }\n    return (\n        <WindowBody>\n            <div className={classNames(styles.options, \"content-area\")}>\n                <h2>Bye settings</h2>\n                <form>\n                    <p className=\"caption-30\">\n                        Select the default score for a bye round.\n                    </p>\n                    <label className=\"monospace body-30\">\n                        1{\" \"}\n                        <input\n                            checked={options.byeValue === 1}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 1\n                            })}\n                        />\n                    </label>\n                    <label className=\"monospace body-30\">\n                        ½{\" \"}\n                        <input\n                            checked={options.byeValue === 0.5}\n                            type=\"radio\"\n                            onChange={() => optionsDispatch({\n                                option: \"byeValue\",\n                                type: \"SET_OPTION\",\n                                value: 0.5\n                            })}\n                        />\n                    </label>\n                </form>\n                <h2>Manage data</h2>\n                <p>\n                    <a\n                        download=\"chessahoochee.json\"\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                    >\n                        <Icons.Download /> Export all data\n                    </a>\n                </p>\n                <label htmlFor=\"file\">Load data file:</label>\n                <input\n                    id=\"file\"\n                    name=\"file\"\n                    type=\"file\"\n                    onChange={handleFile}\n                />\n                <h2>Danger zone</h2>\n                <p className=\"caption-30\">\n                    I hope you know what you're doing...\n                </p>\n                <button onClick={reloadDemoData}>\n                    Reset demo data (this erases everything else)\n                </button>\n                {\" \"}\n                {process.env.NODE_ENV !== \"production\" &&\n                    <button onClick={loadTestData}>Load testing data</button>\n                }\n                <h3>Advanced: manually edit data</h3>\n                <form onSubmit={handleText}>\n                    <textarea\n                        className=\"json\"\n                        cols={50}\n                        name=\"playerdata\"\n                        rows={25}\n                        spellCheck={false}\n                        value={text}\n                        onChange={(event) => setText(event.currentTarget.value)}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </form>\n            </div>\n        </WindowBody>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport NewPlayer from \"../../components/new-player\";\nimport PropTypes from \"prop-types\";\nimport {SortLabel} from \"../../components/utility\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport styles from \"./index.module.css\";\nimport {useWindowContext} from \"../../components/window\";\n\nexport default function PlayerList({\n    sorted,\n    sortDispatch,\n    players,\n    playersDispatch,\n    optionsDispatch\n}) {\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Players\"});\n            return () => winDispatch({action: \"RESET_TITLE\"});\n        },\n        [winDispatch]\n    );\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        const message = \"Are you sure you want to delete \"\n            + players[id].firstName + \" \" + players[id].lastName + \"?\";\n        if (window.confirm(message)) {\n            playersDispatch({id, type: \"DEL_ITEM\"});\n            optionsDispatch({id, type: \"DEL_AVOID_SINGLE\"});\n        }\n    };\n    return (\n        <div className=\"content-area\">\n            <div className=\"toolbar toolbar__left\">\n                <button onClick={() => setIsFormOpen(true)}>\n                    <Icons.UserPlus /> Add a new player\n                </button>\n            </div>\n            <table className={styles.table}>\n                <caption>Player roster</caption>\n                <thead>\n                    <tr>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"firstName\"\n                            >\n                                Name\n                            </SortLabel>\n                        </th>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"rating\"\n                            >\n                                Rating\n                            </SortLabel>\n                        </th>\n                        <th>\n                            <SortLabel\n                                data={sorted}\n                                dispatch={sortDispatch}\n                                sortKey=\"matchCount\"\n                            >\n                                Matches\n                            </SortLabel>\n                        </th>\n                        <th><VisuallyHidden>Controls</VisuallyHidden></th>\n                    </tr>\n                </thead>\n                <tbody className=\"content\">\n                    {sorted.table.map((p) =>\n                        <tr key={p.id}  className=\"buttons-on-hover\">\n                            <td className=\"table__player\">\n                                <Link to={p.id}>\n                                    {p.firstName} {p.lastName}\n                                </Link>\n                            </td>\n                            <td className=\"table__number\">\n                                {p.rating}\n                            </td>\n                            <td className=\"table__number\">\n                                {p.matchCount}\n                            </td>\n                            <td>\n                                <button\n                                    className=\"danger button-ghost\"\n                                    onClick={\n                                        (event) => delPlayer(event, p.id)\n                                    }\n                                >\n                                    <Icons.Trash />\n                                    <VisuallyHidden>\n                                        Delete {p.firstName} {p.lastName}\n                                    </VisuallyHidden>\n                                </button>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <Dialog isOpen={isFormOpen}>\n                <button\n                    className=\"button-micro\"\n                    onClick={() => setIsFormOpen(false)}\n                >\n                    Close\n                </button>\n                <NewPlayer dispatch={playersDispatch} />\n            </Dialog>\n        </div>\n    );\n}\nPlayerList.propTypes = {\n    optionsDispatch: PropTypes.func.isRequired,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired,\n    sortDispatch: PropTypes.func.isRequired,\n    sorted: PropTypes.object.isRequired\n};\n","import React, {useEffect, useState} from \"react\";\nimport Icons from \"../../components/icons\";\nimport {Link} from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport {avoidPairReducer} from \"../../pairing-scoring\";\nimport numeral from \"numeral\";\nimport {ratings} from \"../../pairing-scoring\";\nimport styles from \"./index.module.css\";\nimport {useWindowContext} from \"../../components/window\";\n\nfunction PlayerProfile({\n    playerId,\n    players,\n    playersDispatch,\n    options,\n    optionsDispatch\n}) {\n    const player = players[playerId];\n    const playerName = (player) ? player.firstName + \" \" + player.lastName : \"\";\n    const {winDispatch} = useWindowContext();\n    useEffect(\n        function setDocumentTitle() {\n            winDispatch({title: \"Profile for \" + playerName});\n            return () => winDispatch({action: \"RESET_TITLE\"});\n        },\n        [winDispatch, playerName]\n    );\n    const avoidObj = options.avoidPairs.reduce(avoidPairReducer, {});\n    const singAvoidList = (avoidObj[playerId]) ? avoidObj[playerId] : [];\n    const unAvoided = Object.keys(players).filter(\n        (id) => !singAvoidList.includes(id) && id !== playerId\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    function avoidAdd(event) {\n        event.preventDefault();\n        optionsDispatch({\n            pair: [playerId, selectedAvoider],\n            type: \"ADD_AVOID_PAIR\"\n        });\n        // Reset the selected avoider to the first on the list, but check to\n        // make sure they weren't they weren't the first.\n        const newSelected = (\n            unAvoided[0] !== selectedAvoider\n            ? unAvoided[0]\n            : unAvoided[1]\n        );\n        setSelectedAvoider(newSelected);\n    }\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playersDispatch({\n            firstName: firstName.value,\n            id: playerId,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value),\n            type: \"SET_PLAYER\"\n        });\n    }\n    function handleAvoidChange(event) {\n        setSelectedAvoider(event.target.value);\n    }\n    if (!player) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <div className={styles.playerInfo + \" content-area\"}>\n            <Link to=\"..\"><Icons.ChevronLeft /> Back</Link>\n            <h2>\n                Profile for {player.firstName} {player.lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input\n                        defaultValue={player.firstName}\n                        name=\"firstName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"lastName\">Last name</label>\n                    <input\n                        defaultValue={player.lastName}\n                        name=\"lastName\"\n                        type=\"text\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"matchCount\">Matches played</label>\n                    <input\n                        defaultValue={String(player.matchCount)}\n                        name=\"matchCount\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"rating\">Rating</label>\n                    <input\n                        defaultValue={String(player.rating)}\n                        name=\"rating\"\n                        type=\"number\"\n                    />\n                </p>\n                <p>\n                    <label htmlFor=\"Kfactor\">K factor</label>\n                    <input\n                        name=\"kfactor\"\n                        type=\"number\"\n                        disabled\n                        value={\n                            numeral(\n                                ratings.getKFactor(player.matchCount)\n                            ).format(\"00\")\n                        }\n                        readOnly\n                    />\n                </p>\n            </form>\n            <h3>Players to avoid</h3>\n            <ul>\n                {singAvoidList.map((pId) =>\n                    <li key={pId}>\n                        {players[pId].firstName} {players[pId].lastName}\n                        <button\n                            arial-label={`Remove \n${players[pId].firstName} ${players[pId].lastName} from avoid list.`}\n                            className=\"danger button-ghost\"\n                            title={`Remove ${players[pId].firstName} \n${players[pId].lastName}`}\n                            onClick={() =>\n                                optionsDispatch({\n                                    pair: [playerId, pId],\n                                    type: \"DEL_AVOID_PAIR\"\n                                })\n                            }\n                        >\n                            <Icons.Trash />\n                        </button>\n                    </li>\n                )}\n                {singAvoidList.length === 0 &&\n                    <li>None</li>\n                }\n            </ul>\n            <form onSubmit={avoidAdd}>\n                <label htmlFor=\"avoid-select\">\n                    Select a new player to avoid.\n                </label>\n                <select\n                    id=\"avoid-select\"\n                    onBlur={handleAvoidChange}\n                    onChange={handleAvoidChange}\n                    value={selectedAvoider}\n                >\n                    {unAvoided.map((pId) => (\n                        <option key={pId} value={pId}>\n                            {players[pId].firstName} {players[pId].lastName}\n                        </option>\n                    ))}\n                </select>{\" \"}\n                <input className=\"button-micro\" type=\"submit\" value=\"Add\" />\n            </form>\n        </div>\n    );\n}\nPlayerProfile.propTypes = {\n    options: PropTypes.object.isRequired,\n    optionsDispatch: PropTypes.func.isRequired,\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired,\n    playersDispatch: PropTypes.func.isRequired\n};\n\nexport default function PlayerProfileWrapper(props) {\n    if (!props.players[props.playerId]) {\n        return <div>Error: player profile not found.</div>;\n    } else {\n        return <PlayerProfile {...props} />;\n    }\n}\nPlayerProfileWrapper.propTypes = {\n    playerId: PropTypes.string,\n    players: PropTypes.object.isRequired\n};\n","import React, {useEffect} from \"react\";\nimport {useAllPlayersDb, useOptionsDb, useSortedTable} from \"../../hooks\";\nimport PlayerList from \"./player-list\";\nimport PlayerProfile from \"./player-profile\";\nimport {Router} from \"@reach/router\";\nimport {WindowBody} from \"../../components/window\";\n\nexport default function Players(props) {\n    const [players, playersDispatch] = useAllPlayersDb();\n    const [sorted, sortDispatch] = useSortedTable(\n        Object.values(players),\n        \"firstName\",\n        false\n    );\n    useEffect(\n        function () {\n            sortDispatch({table: Object.values(players)});\n        },\n        [players, sortDispatch]\n    );\n    const [options, optionsDispatch] = useOptionsDb();\n    const childProps = {options, optionsDispatch, players, playersDispatch};\n    return (\n        <WindowBody>\n            <Router basepath=\"players\">\n                <PlayerList\n                    path=\"/\"\n                    sorted={sorted}\n                    sortDispatch={sortDispatch}\n                    {...childProps}\n                />\n                <PlayerProfile path=\":playerId\" {...childProps} />\n            </Router>\n        </WindowBody>\n    );\n}\nPlayers.propTypes = {};\n\nexport {PlayerProfile, PlayerList};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport {ifElectronOpen} from \"../../electron-utils\";\nimport styles from \"./index.module.css\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/chessahoochee\";\n\nconst Caution = (props) => (\n    <aside\n        {...props}\n        className={classNames(styles.caution, \"body-20\", props.className)}\n    >\n        <p className={styles.caution__text}>\n            This is beta software. Want to help make it better? Check out the\n            {\" \"}\n            <span role=\"img\" aria-hidden>👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href={GITHUB_URL}\n                onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n\n            >\n                Git repository\n            </a>.\n        </p>\n    </aside>\n);\nCaution.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Caution;\n","import Caution from \"../components/caution\";\nimport Icons from \"../components/icons\";\nimport {Notification} from \"../components/utility\";\nimport React from \"react\";\nimport {WindowBody} from \"../components/window\";\nimport {ifElectronOpen} from \"../electron-utils\";\nimport {loadDemoDB} from \"../hooks/db\";\nimport logo from \"../icon-min.svg\";\nimport styles from \"./splash.module.css\";\n\nconst GITHUB_URL = \"https://github.com/johnridesabike/chessahoochee\";\nconst LICENSE_URL = (\n    \"https://github.com/johnridesabike/chessahoochee/blob/master/LICENSE\"\n);\nconst ISSUES_URL = \"https://github.com/johnridesabike/chessahoochee/issues/new\";\n\nconst Splash = (props) => (\n    <WindowBody footer={<Caution />} footerProps={{style: {border: \"none\"}}}>\n        <div className={styles.splash}>\n            <aside className={styles.hint}>\n                <ol>\n                    <li>\n                        <button\n                            className=\"button-primary\"\n                            onClick={loadDemoDB}\n                        >\n                            Click here to load the demo data\n                        </button>{\" \"}\n                        (optional)\n                    </li>\n                    <li>\n                        <Icons.ArrowLeft /> Select a menu item.\n                    </li>\n                    <li>\n                        Start creating your tournaments!\n                    </li>\n                </ol>\n                <Notification warning>\n                    If you experience any glitches or crashes,<br />\n                    clear your browser cache and try again.\n                </Notification>\n            </aside>\n            <div className={styles.title}>\n                <div className={styles.titleIcon}>\n                    <img src={logo} alt=\"\" height=\"64\" width=\"64\" />\n                </div>\n                <div className={styles.titleText}>\n                    <h1 className=\"title\">\n                        Chessahoochee\n                    </h1>\n                    <p className={styles.subtitle + \" caption-30\"}>\n                        a chess tournament app\n                    </p>\n                </div>\n            </div>\n            <footer className={\"body-20 \" + styles.footer}>\n                <div style={{textAlign: \"left\"}}>\n                    <p>\n                        Copyright &copy; 2019 John Jackson.\n                    </p>\n                    <p>\n                        Chessahoochee is free software.<br/>\n                        <a\n                            href={GITHUB_URL}\n                            onClick={(e) => ifElectronOpen(e, GITHUB_URL)}\n                        >\n                            Source code is available\n                        </a>\n                        {\" \"}under the{\" \"}\n                        <a\n                            href={LICENSE_URL}\n                            onClick={(e) => ifElectronOpen(e, LICENSE_URL)}\n                        >\n                            AGPL v3.0 license\n                        </a>.\n                    </p>\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                    <p>\n                        <a\n                            href={ISSUES_URL}\n                            onClick={(e) => ifElectronOpen(e, ISSUES_URL)}\n                        >\n                            Suggestions and bug reports are welcome.\n                        </a>\n                    </p>\n                    <p>\n                        Built with JavaScript and{\" \"}\n                        <a\n                            href=\"https://reactjs.org/\"\n                            onClick={(e) => ifElectronOpen(\n                                e,\n                                \"https://reactjs.org/\"\n                            )}\n                        >\n                            React\n                        </a>.{\" \"}\n                        <span style={{fontSize: \"16px\"}}>\n                            <Icons.Javascript /> <Icons.React />\n                        </span>\n                    </p>\n                </div>\n            </footer>\n        </div>\n    </WindowBody>\n);\nexport default Splash;\n","import \"./side-effects\";\nimport {\n    LocationProvider,\n    Router,\n    createHistory\n} from \"@reach/router\";\nimport TournamentIndex, {\n    Tournament,\n    TournamentList\n} from \"./pages/tournament\";\nimport NotFound from \"./components/404\";\nimport Options from \"./pages/options\";\nimport Players from \"./pages/players\";\nimport React from \"react\";\nimport Splash from \"./pages/splash\";\nimport {Window} from \"./components/window\";\nimport createHashSource from \"hash-source\";\n\n// These are needed for deploying to GitHub pages.\nconst source = createHashSource();\nconst history = createHistory(source);\n\nfunction App() {\n    return (\n        <LocationProvider history={history}>\n            <Window className=\"app\">\n                <main className=\"app__main\">\n                    <Router>\n                        <Splash path=\"/\" />\n                        <TournamentIndex path=\"tourneys\">\n                            <TournamentList path=\"/\" />\n                            <Tournament path=\":tourneyId/*\" />\n                        </TournamentIndex>\n                        <Players path=\"players/*\" />\n                        <Options path=\"options\" />\n                        <NotFound default />\n                    </Router>\n                </main>\n            </Window>\n        </LocationProvider>\n    );\n}\n\nexport default App;\n","import \"./styles\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport React, {StrictMode} from \"react\";\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"tournament_header__3XvP5\",\"contentFrame\":\"tournament_contentFrame__3ct63\",\"table\":\"tournament_table__1H60d\",\"topHeader\":\"tournament_topHeader__t_tB_\",\"row\":\"tournament_row__2LSFL\",\"compact\":\"tournament_compact__2uTHd\",\"playerName\":\"tournament_playerName__2dXZ_\",\"rank\":\"tournament_rank__2_u9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"winnerSelect\":\"round_winnerSelect__SDt38\",\"table\":\"round_table__1x8KG\",\"tbody\":\"round_tbody__1pAwr\",\"rowId\":\"round_rowId__2gYfm\",\"controls\":\"round_controls__1XYFl\",\"matchResult\":\"round_matchResult__1tb7r\",\"playerResult\":\"round_playerResult__3TMo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splash\":\"splash_splash__2ZYEI\",\"hint\":\"splash_hint__22vCa\",\"footer\":\"splash_footer__HxH6K\",\"title\":\"splash_title__2TA4V\",\"titleIcon\":\"splash_titleIcon__3Nzmb\",\"titleText\":\"splash_titleText__3P6sf\",\"subtitle\":\"splash_subtitle__4wRgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"windows-controls_container__1-7Ur\",\"winButton\":\"windows-controls_winButton__2s6YB\",\"close\":\"windows-controls_close__3i226\"};","module.exports = __webpack_public_path__ + \"static/media/icon-min.4d7ecf66.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"players_table__1xHiA\",\"playerInfo\":\"players_playerInfo__2We7m\",\"controls\":\"players_controls__1d2AM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}