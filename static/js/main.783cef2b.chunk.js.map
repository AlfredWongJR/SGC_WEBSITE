{"version":3,"sources":["components/about.jsx","components/404.jsx","state/helpers.js","pairing-scoring/constants.js","factories.js","pairing-scoring/helpers.js","state/player-state.js","pairing-scoring/scoring.js","pairing-scoring/pairing.js","state/match-functions.js","state/tourneys-state.js","state/options-state.js","components/tournament/tournament.jsx","components/tournament/list.jsx","components/tournament/index.jsx","components/players/info-box.jsx","components/utility.jsx","components/players/new-player.jsx","components/players/list.jsx","components/players/index.jsx","components/tournament/scores.jsx","components/tournament/player-select/selecting.jsx","components/tournament/player-select/index.jsx","components/tournament/crosstable.jsx","components/tournament/round/player-match-info.jsx","components/tournament/round/match-row.jsx","components/tournament/round/round.jsx","components/tournament/pair-picker/pair-picker.jsx","components/tournament/pair-picker/stage.jsx","components/tournament/pair-picker/player-info.jsx","components/tournament/pair-picker/index.jsx","components/tournament/round/index.jsx","components/options.jsx","components/caution/index.jsx","side-effects.js","App.jsx","serviceWorker.js","index.jsx","components/tournament/scores.module.css","components/tournament/tournament.module.css","components/tournament/round/round.module.css","App.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["About","props","react_default","a","createElement","data-testid","href","NotFound","localStorageOrDefault","key","defaultValue","value","JSON","parse","localStorage","getItem","setItem","stringify","BLACK","WHITE","DUMMY_ID","createMatch","importObj","id","players","result","origRating","newRating","createPlayer","arguments","length","undefined","type","firstName","lastName","rating","matchCount","dummyPlayer","isNotBye","match","includes","isBye","isNotDummy","playerId","getMatchesByPlayer","roundList","roundId","slice","reduce","acc","round","concat","filter","Object","freeze","removeFirstAndLast","pipe","init","tail","getPlayerById","playerList","player","p","getPlayerAvoidList","avoidList","pair","accumulator","calcNumOfRounds","playerCount","rounds","Math","ceil","log2","Number","isFinite","getById","list","x","defaultPlayers","demoPlayers","map","avoid","playersReducer","state","action","getNextId","sort","b","head","inc","over","lensPath","append","assoc","lensIndex","findIndex","propEq","mergeLeft","set","Error","PlayerContext","createContext","usePlayers","_useContext","useContext","_useContext2","slicedToArray","playerState","playerDispatch","getPlayer","curry","PlayersProvider","loadedData","_useReducer","useReducer","_useReducer2","dispatch","useEffect","Provider","children","tieBreakMethods","name","func","scores","opponentScores","scoresMinusFirstAndLast","sum","scoreList","playerScoreCum","oppScores","getPlayersByOpponent","playerColorBalance","hasHadBye","opponentId","playerScore","indexOf","playerScoreList","playerScoreListNoByes","score","last","colorList","pId","opponent","createStandingList","methods","selectedTieBreaks","i","tieBreakNames","m","standings","allPlayers","Array","from","Set","getAllPlayers","tieBreaks","method","sortFunc","ignore","index","thenBy","standing","firstBy","dueColor","prevColor","matchList","playerMatchColor","createPlayerStats","profile","colorBalance","opponentHistory","upperHalf","isDueBye","kFactor","priority","condition","avoidMeetingTwice","sameScores","divider","differentHalf","differentDueColor","maxPriority","add","calcPairIdeal","player1","player2","metBefore","mustAvoid","abs","setUpperHalves","playerStatsList","splitInHalf","splitAt","src","view","setByePlayer","indexOfDueBye","findLastIndex","T","autoPair","tourney","unPairedPlayers","byeValue","nextBye","byeQueue","byeMatch","newMatchList","potentialMatches","playerMatches","reducedResults","blossom","p1Id","p2Id","p1","p2","ideal","matched","matches","reverse","byePlayer","pairPlayers","join","push","forEach","dummy","defaultData","defaultTourneyList","tourneysReducer","tourneyId","remove","move","oldIndex","newIndex","__","unpairedPlayers","manualPair","matchId","mergeRight","TournamentContext","useTournaments","useTournament","tourneys","useRound","_useTournament","_useTournament2","unmatched","difference","TournamentProvider","reducer","OptionsContext","useOptions","OptionsProvider","defaultOptions","Tournament","_ref","navigate","_usePlayers","isNewRoundReady","useMemo","lastRound","matchedPlayers","unMatchedPlayers","results","origTitle","document","title","isItOver","_ref2","_ref3","tooltipText","tooltipWarn","_delLastRound","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","window","confirm","color","stop","apply","this","className","styles","tournament","header","es","to","chevron_left_default","sidebar","keys","onClick","disabled","plus_default","tooltip_es","label","alert_circle_default","check_circle_default","toolbarItem","trash_2_default","content","TournamentList","_useTournaments","_useTournaments2","_useState","useState","_useState2","newTourneyName","setNewTourneyName","String","aria-label","onSubmit","event","preventDefault","placeholder","onChange","target","required","TournamentIndex","PlayerInfoBox","singAvoidList","setSingAvoidList","unAvoided","_useState3","_useState4","selectedAvoider","setSelectedAvoider","handleChange","_event$currentTarget","currentTarget","readOnly","numeral","format","arial-label","avoidAdd","onBlur","Panel","_ref4","style","objectSpread","panel","PanelContainer","assign","panels","React","Children","child","PlayerLink","_ref5","NewPlayer","newPlayerDefault","newPlayerData","setNewPlayerdata","updateField","prevState","PlayerList","delPlayer","visually_hidden_es","chevron_right_default","Players","ScoreTable","_useTournament2$","_createStandingTree","_createStandingList","_createStandingList2","standingsFlat","orig","standing1","standing2","prevStanding","createStandingTree","_createStandingTree2","standingTree","tbMethods","table","topHeader","scope","rank","j","row","rowSpan","playerName","dashify","SelectTieBreaks","_useTournament3","_useTournament4","selectedTb","setSelectedTb","toggleTb","defaultId","defaultTo","moveTb","direction","Scores","tabs_es","Selecting","togglePlayer","checked","PlayerSelect","isSelecting","setIsSelecting","dialog_es","isOpen","Crosstable","_useMemo","opponentResults","lensProp","getResultsByOpponent","_useMemo2","getRatingChange","_getPerformanceRating","firstMatch","firstColor","firstRating","lastMatch","lastColor","getPerformanceRatings","_getPerformanceRating2","lastRating","change","index2","player1Id","player2Id","x_default","getXScore","PlayerMatchInfo","_useRound","playerData","prettyBalance","opId","MatchRow","pos","selectedMatch","setSelectedMatch","openModal","setOpenModal","resultCode","every","whiteName","blackName","setMatchResult","white","black","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","calcNewRatings","role","winnerSelect","edit_default","check_default","info_default","Round","moveMatch","toolbar","unMatch","repeat_default","arrow_up_default","arrow_down_default","PairPicker","stagedPlayers","setStagedPlayers","_useOptions","isModalOpen","setIsModalOpen","unmatchedWithDummy","user_plus_default","Stage","_stagedPlayers","unstage","react","user_minus_default","PlayerInfo","_createPlayerStats","matchIdeal","makeStats","Index","openTab","setOpenTab","list_default","users_default","pair_picker_PairPicker","Options","tourneysDispatch","_useOptions2","options","optionsDispatch","text","setText","exportData","loadData","data","alert","encodeURIComponent","download","reader","FileReader","onload","ev","readAsText","files","defaultTourneys","rows","cols","spellCheck","Caution","caution","caution__text","caution__link","register","regexps","unformat","roundingFunction","whole","floor","remainder","source","createHashSource","history","createHistory","App","link","path","tournament_scores","about","_404","default","noThrow","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.783cef2b.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * @param {Object} props\n */\nconst About = (props) => (\n    <p data-testid=\"about\">\n        This is an early, proof-of-concept, demo of a\n        chess tournament manager.{\" \"}\n        <a href=\"https://github.com/johnridesabike/chessahoochee\">\n        You can find out more here.</a>\n    </p>\n);\n\nexport default About;\n","import React from \"react\";\n\n/**\n * @param {Object} props\n */\nconst NotFound = (props) => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","/**\n * @template {object} T\n * @param {string} key\n * @param {T} defaultValue\n * @returns {T}\n */\nexport function localStorageOrDefault(key, defaultValue) {\n    const value = JSON.parse(localStorage.getItem(key)) || defaultValue;\n    localStorage.setItem(key, JSON.stringify(value));\n    return value;\n}\n","const BLACK = 1;\nexport {BLACK};\nconst WHITE = 0;\nexport {WHITE};\nconst DUMMY_ID = -1;\nexport {DUMMY_ID};\n","/**\n * @typedef {import(\"./factory-types\").Match} Match\n * @typedef {import(\"./factory-types\").Tournament} Tournament\n * @typedef {import(\"./factory-types\").Player} Player\n */\n\n/**\n *\n * @param {object} importObj\n * @returns {Match}\n */\nexport function createMatch(importObj) {\n    return {\n        id: importObj.id,\n        players: importObj.players,\n        result: importObj.result || [0, 0],\n        origRating: importObj.origRating,\n        newRating: importObj.newRating\n    };\n}\n\n/**\n * @param {Object} importObj\n * @returns {Player}\n */\nexport function createPlayer(importObj = {}) {\n    return {\n        id: importObj.id || 0,\n        type: importObj.type || \"person\", // used for CSS styling etc.\n        firstName: importObj.firstName || \"\",\n        lastName: importObj.lastName || \"\",\n        rating: importObj.rating || 0,\n        matchCount: importObj.matchCount || 0\n    };\n}\n\nconst dummyPlayer = createPlayer({\n    id: -1,\n    firstName: \"Bye\",\n    lastName: \"Player\",\n    type: \"dummy\"\n});\nObject.freeze(dummyPlayer);\nexport {dummyPlayer};\n\n\n/**\n * @param {Object} importObj\n * @returns {Tournament}\n */\nexport function createTournament(importObj) {\n    return {\n        name: importObj.name || \"\",\n        tieBreaks: importObj.tieBreaks || [0, 1, 2, 3],\n        byeQueue: importObj.byeQueue || [],\n        players: importObj.players || [],\n        roundList: importObj.roundList || []\n    };\n}\n","// TODO: Clean this up. Refactor unnecessary functions, etc.\nimport {\n    init,\n    pipe,\n    tail\n} from \"ramda\";\nimport {WHITE, BLACK, DUMMY_ID} from \"./constants\";\nimport {createPlayer, dummyPlayer} from \"../factories\";\n\n/**\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\n * @typedef {import(\"./\").Standing} Standing\n * @typedef {import(\"../factory-types\").Match} Match\n * @typedef {import(\"../factory-types\").Player} Player\n */\n\n\n/**\n *\n * @param {Match} match\n * @returns {boolean}\n */\nfunction isBye(match) {\n    return match.players.includes(DUMMY_ID);\n}\n\n/**\n *\n * @param {Match} match\n * @returns {boolean}\n */\nexport function isNotBye(match) {\n    return !isBye(match);\n}\n\n/**\n * @param {number} playerId\n */\nexport function isNotDummy(playerId) {\n    return playerId !== DUMMY_ID;\n}\n\n/**\n * @param {typeof WHITE | typeof BLACK} color\n */\nexport function switchColor(color) {\n    return ( // return the opposite color\n        (color === WHITE)\n        ? BLACK\n        : WHITE\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {Match[]}\n */\nexport function getMatchesByPlayer(playerId, roundList, roundId = null) {\n    const rounds = (\n        (roundId === null)\n        ? roundList\n        : roundList.slice(0, roundId + 1)\n    );\n    return rounds.reduce( // flatten the rounds to just the matches\n        (acc, round) => acc.concat(round),\n        []\n    ).filter(\n        (match) => match.players.includes(playerId)\n    );\n}\n\n/**\n * Helper function.\n * @param {Standing} standing1\n * @param {Standing} standing2\n * @returns {boolean}\n */\nexport function areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            /** @param {boolean[]} acc */\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n/**\n * @param {Match[][]} roundList\n * @returns {number[]}\n */\nexport function getAllPlayers(roundList) {\n    const allPlayers = roundList.reduce( // flatten the rounds\n        (acc, round) => acc.concat(round),\n        []\n    ).reduce( // flaten the players\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\n/**\n * Get a list of all of a player's scores from each match.\n * @type {ScoreCalculator}\n * @returns {number[]} the list of scores\n */\nexport function playerScoreList(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/** @type {(scores: number[]) => number[]} */\n// @ts-ignore\nconst removeFirstAndLast = pipe(init, tail);\nexport {removeFirstAndLast};\n\n\n/**\n * @param {number} playerId\n * @param {object[]} matchList\n * @returns {typeof WHITE | typeof BLACK?}\n */\nexport function playerMatchColor(playerId, matchList) {\n    const match = matchList.filter((m) => m.players.includes(playerId))[0];\n    return (\n        (match)\n        ? match.players.indexOf(playerId)\n        : null\n    );\n}\n\n\n\n/**\n * @param {Player[]} playerList\n * @param {number} id\n * @returns {Player}\n */\nexport function getPlayerById(playerList, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = playerList.filter((p) => p.id === id)[0];\n    return (\n        (player)\n        ? player\n        : createPlayer({\n            id: id,\n            firstName: \"Anonymous\",\n            type: \"missing\"\n        })\n    );\n}\n\n/**\n * @param {number} playerId\n * @param {number[][]} avoidList\n * @returns {number[]}\n */\nexport function getPlayerAvoidList(playerId, avoidList) {\n    return avoidList.filter( // get pairings with the player\n        (pair) => pair.includes(playerId)\n    ).reduce( // Flatten the array\n        (accumulator, pair) => pair.concat(accumulator),\n        []\n    ).filter( // filter out the player's id\n        (id) => id !== playerId\n    );\n}\n\n/**\n * @param {number[][]} avoidList\n * @param {Player[]} playerList\n */\nexport function cleanAvoidList(avoidList, playerList) {\n    const ids = playerList.map((p) => p.id);\n    return avoidList.filter(\n        (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\n    );\n}\n\n/**\n * @param {number} playerCount\n */\nexport function calcNumOfRounds(playerCount) {\n    const rounds = Math.ceil(Math.log2(playerCount));\n    return (\n        (Number.isFinite(rounds))\n        ? rounds\n        : 0\n    );\n}\n\n/**\n * @template {object} T\n * @param {T[]} list\n * @param {number | string} id\n * @returns {T}\n */\nexport function getById(list, id) {\n    return list.filter((x) => x.id === id)[0];\n}\n\n/**\n * @param {Object[]} list\n * @param {number | string} id\n */\nexport function getIndexById(list, id) {\n    return list.indexOf(getById(list, id));\n}\n","import {\n    createContext,\n    createElement,\n    useContext,\n    useReducer,\n    useEffect\n} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    append,\n    assoc,\n    curry,\n    head,\n    inc,\n    lensPath,\n    lensIndex,\n    filter,\n    findIndex,\n    map,\n    mergeLeft,\n    over,\n    pipe,\n    propEq,\n    set,\n    sort\n} from \"ramda\";\nimport {localStorageOrDefault} from \"./helpers\";\nimport {getPlayerById} from \"../pairing-scoring/helpers\";\nimport {createPlayer} from \"../factories\";\nimport demoPlayers from \"./demo-players.json\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../factory-types\").Player} Player\n * @typedef {import(\"./dispatch\").PlayerAction} PlayerAction\n */\n\nconst defaultPlayers = {\n    players: demoPlayers.playerList.map((p) => createPlayer(p)),\n    avoid: demoPlayers.avoidList\n};\n\n/**\n * @param {typeof defaultPlayers} state\n * @param {PlayerAction} action\n */\nfunction playersReducer(state, action ) {\n    // @ts-ignore\n    const getNextId = pipe(map((p) => p.id), sort((a, b) => b - a), head, inc);\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            append(createPlayer({\n                firstName: action.firstName,\n                lastName: action.lastName,\n                rating: action.rating,\n                id: getNextId(state.players)\n            })),\n            state\n        );\n    case \"SET_PLAYER\":\n        return assoc(\n            \"players\",\n            over(\n                lensIndex(findIndex(propEq(\"id\", action.id), state.players)),\n                mergeLeft(\n                    {\n                        firstName: action.firstName,\n                        lastName: action.lastName,\n                        rating: action.rating,\n                        matchCount: action.matchCount\n                    }\n                ),\n                state.players\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            filter((p) => p.id !== action.id),\n            set(\n                lensPath([\"avoid\"]),\n                filter((pair) => !pair.includes(action.id)),\n                state\n            )\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"matchCount\"\n            ]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"rating\"\n            ]),\n            action.rating,\n            state\n        );\n    // Avoid\n    case \"ADD_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            filter((pair) => !(\n                pair.includes(action.pair[0])\n                && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n\n/** @type {[typeof defaultPlayers, React.Dispatch<PlayerAction>]} */\nconst defaultContext = null;\nconst PlayerContext = createContext(defaultContext);\n\nexport function usePlayers() {\n    const [playerState, playerDispatch] = useContext(PlayerContext);\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    return {playerState, playerDispatch, getPlayer};\n}\n\n/**\n * @param {Object} props\n */\nexport function PlayersProvider(props) {\n    const loadedData = localStorageOrDefault(\"players\", defaultPlayers);\n    const [state, dispatch] = useReducer(playersReducer, loadedData);\n    useEffect(\n        function () {\n            localStorage.setItem(\"players\", JSON.stringify(state));\n        },\n        [state]\n    );\n    return (\n        createElement(\n            PlayerContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","// TODO: Clean this up. Refactor unnecessary functions, etc.\nimport {\n    add,\n    append,\n    defaultTo,\n    last,\n    lensIndex,\n    lensProp,\n    over,\n    pipe,\n    sort,\n    sum\n} from \"ramda\";\nimport {firstBy} from \"thenby\";\nimport EloRank from \"elo-rank\";\n// eslint-disable-next-line no-unused-vars\nimport {WHITE, BLACK, DUMMY_ID} from \"./constants\";\nimport {\n    isNotBye,\n    getMatchesByPlayer,\n    playerScoreList,\n    removeFirstAndLast,\n    isNotDummy,\n    getAllPlayers,\n    areScoresEqual,\n    playerMatchColor,\n    switchColor,\n    getPlayerById,\n    getPlayerAvoidList\n} from \"./helpers\";\n\n/**\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\n * @typedef {import(\"./\").PlayerStats} PlayerStats\n * @typedef {import(\"./\").Standing} Standing\n * @typedef {import(\"../factory-types\").Match} Match\n * @typedef {import(\"../factory-types\").Player} Player\n */\n\nconst tieBreakMethods = [\n    {\n        name: \"Modified median\",\n        func: modifiedMedian\n    },\n    {\n        name: \"Solkoff\",\n        func: solkoff\n    },\n    {\n        name: \"Cumulative score\",\n        func: playerScoreCum\n    },\n    {\n        name: \"Cumulative of opposition\",\n        func: playerOppScoreCum\n    },\n    {\n        name: \"Most black\",\n        func: playerColorBalance\n    }\n];\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\n/**\n * Create a function to sort the players. This dynamically creates a `thenBy`\n * function based on the desired tiebreak sort methods.\n * @param {typeof tieBreakMethods} tieBreaks\n */\nfunction createTieBreakSorter(tieBreaks) {\n    return tieBreaks.reduce(\n        (acc, ignore, index) => (\n            acc.thenBy(\n                /** @param {Standing} standing */\n                (standing) => standing.tieBreaks[index], -1\n            )\n        ),\n        firstBy(\n            /** @param {Standing} standing */\n            (standing) => standing.score, -1\n        )\n    );\n}\n\n/**\n * TODO: Maybe merge this with the other function?\n */\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nfunction playerScoreListNoByes(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotBye\n    ).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {boolean}\n */\nexport function hasHadBye(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).includes(DUMMY_ID);\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nexport function getPlayersByOpponent(opponentId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        opponentId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).filter(\n        (playerId) => playerId !== opponentId\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerScore(playerId, roundList, roundId = null) {\n    const scoreList = playerScoreList(playerId, roundList, roundId);\n    return sum(scoreList);\n}\n\n/**\n * The player's cumulative score.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerScoreCum(playerId, roundList, roundId = null) {\n    const scoreList = playerScoreListNoByes(\n        playerId,\n        roundList,\n        roundId\n    ).reduce( // turn the regular score list into a \"running\" score list\n        (acc, score) => acc.concat([last(acc) + score]),\n        [0]\n    );\n    return sum(scoreList);\n}\n\n/**\n * Calculate a player's color balance. A negative number means they played as\n * white more. A positive number means they played as black more.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerColorBalance(playerId, roundList, roundId = null) {\n    const colorList = getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotBye\n    ).reduce(\n        (acc, match) => (\n            (match.players[WHITE] === playerId)\n            ? acc.concat(-1) // White = -1\n            : acc.concat(1) // Black = +1\n        ),\n        [0]\n    );\n    return sum(colorList);\n}\n\n/**\n * Used for `modifiedMedian` and `solkoff`.\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nfunction opponentScores(pId, roundList, roundId) {\n    const scores = getPlayersByOpponent(\n        pId,\n        roundList,\n        roundId\n    ).filter(\n        isNotDummy\n    ).map(\n        (opponent) => playerScore(opponent, roundList, roundId)\n    );\n    return sort((a, b) => a - b, scores);\n}\n\n/**\n * Gets the modified median factor defined in USCF § 34E1\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction modifiedMedian(playerId, roundList, roundId = null) {\n    const scores = opponentScores(playerId, roundList, roundId);\n    const scoresMinusFirstAndLast = removeFirstAndLast(scores);\n    return sum(scoresMinusFirstAndLast);\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction solkoff(playerId, roundList, roundId = null) {\n    const scoreList = opponentScores(playerId, roundList, roundId);\n    return sum(scoreList);\n}\n\n/**\n * Get the cumulative scores of a player's opponents.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerOppScoreCum(playerId, roundList, roundId = null) {\n    const oppScores = getPlayersByOpponent(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        isNotDummy\n    ).map(\n        (p) => playerScoreCum(p, roundList, roundId)\n    );\n    return sum(oppScores);\n}\n\n\n/**\n * Sort the standings by score, see USCF tie-break rules from § 34.\n * @param {number[]} methods\n * @param {Match[][]} roundList\n * @param {number} [roundId]\n * @returns {[Standing[], string[]]} The standings and the list of method used\n */\nexport function createStandingList(methods, roundList, roundId) {\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\n    const tieBreakNames = selectedTieBreaks.map((m) => m.name);\n    // Get a flat list of all of the players and their scores.\n    const standings = getAllPlayers(\n        roundList\n    ).filter(\n        (id) => id !== DUMMY_ID\n    ).map(\n        (id) => ({\n            id,\n            score: playerScore(id, roundList, roundId),\n            tieBreaks: selectedTieBreaks.map(\n                (method) => method.func(id, roundList, roundId)\n            )\n        })\n    );\n    const sortFunc = createTieBreakSorter(selectedTieBreaks);\n    const standingsSorted = sort(sortFunc, standings);\n    return [standingsSorted, tieBreakNames];\n}\n\n/**\n * Sort the standings by score, see USCF tie-break rules from § 34.\n * example: `[[Dale, Audrey], [Pete], [Bob]]`\n * Dale and Audrey are tied for first, Pete is 2nd, Bob is 3rd.\n * @param {number[]} methods\n * @param {Match[][]} roundList\n * @param {number} [roundId]\n * @returns {[Standing[][], string[]]} The standings and the list of method used\n */\nexport function createStandingTree(methods, roundList, roundId = null) {\n    const [\n        standingsFlat,\n        tieBreakNames\n    ] = createStandingList(methods, roundList, roundId);\n    const standingsTree = standingsFlat.reduce(\n        /** @param {Standing[][]} acc*/\n        function (acc, standing, i, orig) {\n            const prevStanding = orig[i - 1];\n            const isNewRank = (\n                (i === 0)\n                ? true // Always make a new rank for the first player\n                : !areScoresEqual(standing, prevStanding)\n            );\n            if (isNewRank) {\n                return append([standing], acc);\n            }\n            // If this player has the same score as the last, list them together\n            return over(lensIndex(acc.length - 1), append(standing), acc);\n        },\n        []\n    );\n    return [standingsTree, tieBreakNames];\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {typeof WHITE | typeof BLACK?}\n */\nfunction dueColor(playerId, roundList, roundId = null) {\n    const match = (\n        (roundId === null)\n        ? last(roundList)\n        : roundList[roundId - 1]\n    );\n    if (!match) {\n        return null;\n    }\n    const prevColor = playerMatchColor(playerId, match);\n    return switchColor(prevColor);\n}\n\n/**\n * @param {number} playerId\n * @param {Match[][]} roundList\n * @param {number} roundId\n * @param {Player[]} playerList\n * @param {number[][]} avoidList\n * @returns {PlayerStats}\n */\nexport function createPlayerStats(\n    playerId,\n    playerList,\n    avoidList,\n    roundList,\n    roundId\n) {\n    const player = getPlayerById(playerList, playerId);\n    return {\n        profile: player,\n        rating: player.rating, // is this shortcut necessary?\n        id: playerId, // is this shortcut necessary?\n        score: playerScore(playerId, roundList, roundId),\n        dueColor: dueColor(playerId, roundList, roundId),\n        colorBalance: playerColorBalance(playerId, roundList, roundId),\n        opponentHistory: getPlayersByOpponent(playerId, roundList, roundId),\n        upperHalf: false,\n        avoidList: getPlayerAvoidList(playerId, avoidList),\n        hasHadBye: hasHadBye(playerId, roundList, roundId),\n        isDueBye: false\n    };\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {Object.<string, number>} {opponentId: result}\n */\nexport function getResultsByOpponent(playerId, roundList, roundId = null) {\n    const matches = getMatchesByPlayer(playerId, roundList, roundId);\n    return matches.reduce(\n        /** @param {Object.<string, number>} acc*/\n        function (acc, match) {\n            const opponent = match.players.filter((id) => id !== playerId)[0];\n            const color = match.players.indexOf(playerId);\n            const result = match.result[color];\n            // This sets a default result of 0 and then adds the existing\n            // result. Most of the time, this would be the same as using `set()`\n            // with the result, but if two players play each other multiple\n            // times then the total results will be displayed.\n            return over(\n                lensProp(String(opponent)),\n                pipe(defaultTo(0), add(result)),\n                acc\n            );\n        },\n        {}\n    );\n}\n\n/** @type {ScoreCalculator} */\nexport function getPerformanceRatings(playerId, roundList, roundId = null) {\n    const matches = getMatchesByPlayer(playerId, roundList, roundId);\n    // TODO: This could be Don't-Repeat-Yourself'd a bit\n    const firstMatch = matches[0];\n    const firstColor = firstMatch.players.indexOf(playerId);\n    const firstRating = firstMatch.origRating[firstColor];\n    const lastMatch = last(matches);\n    const lastColor = lastMatch.players.indexOf(playerId);\n    const lastRating = lastMatch.newRating[lastColor];\n    return [firstRating, lastRating];\n}\n\n\n/**\n * @param {number} matchCount\n */\nexport function kFactor(matchCount) {\n    const ne = matchCount || 1;\n    return (800 / ne);\n}\n\n/**\n * @param {[number, number]} origRatings\n * @param {[number, number]} matchCounts\n * @param {[number, number]} result\n * @returns {[number, number]}\n */\nexport function calcNewRatings(origRatings, matchCounts, result) {\n    const whiteElo = new EloRank(kFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(kFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    /** @type {[number, number]} */\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    // @ts-ignore\n    return newRating.map(\n        (rating) => (\n            rating < FLOOR\n            ? FLOOR\n            : rating\n        )\n    );\n}\n","import {firstBy} from \"thenby\";\nimport {\n    add,\n    assoc,\n    filter,\n    findLastIndex,\n    lensIndex,\n    map,\n    pipe,\n    over,\n    reverse,\n    splitAt,\n    sort,\n    T,\n    view\n} from \"ramda\";\nimport blossom from \"edmonds-blossom\";\nimport {createPlayerStats} from \"./scoring\";\nimport {DUMMY_ID} from \"./constants\";\n/**\n * @typedef {import(\"./\").PlayerStats} PlayerStats\n */\n/** @type {(value: number) => (condition: boolean) => number} */\nconst priority = (value) => (condition) => condition ? value : 0;\n/** @type {(value: number) => (divider: number) => number} */\nconst divisiblePriority = (value) => (divider) => value / divider;\n\n/**\n * TODO: These probably need to be tweaked a lot.\n */\n/**\n * @constant avoidMeetingTwicePriority The weight given to avoid players\n * meeting twice. This same weight is given to avoid matching players on each\n * other's \"avoid\" list. This is the highest priority. (USCF § 27A1)\n */\nconst avoidMeetingTwice = priority(20);\n/**\n * @constant sameScoresPriority The weight given to match players with\n * equal scores. This gets divided against the difference between each players'\n * scores, plus one. For example, players with scores `1` and `3` would have\n * this priority divided by `3`. Players with scores `0` and `3` would have this\n * priority divided by `4`. Players with equal scores would divide it by `1`, or\n * leaving it unchanged. (USCF § 27A2)\n */\nconst sameScores = divisiblePriority(16);\n\n/**\n * @constant differentHalfPriority The weight given to match players in lower\n * versus upper halves. This is only applied to players being matched within\n * the same score group. (USCF § 27A3)\n */\nconst differentHalf = priority(2);\n/**\n * @constant differentDueColorPriority The weight given to match players with\n * opposite due colors. (USCF § 27A4 and § 27A5)\n */\nconst differentDueColor = priority(1);\n\nconst maxPriority = pipe(\n    add(differentHalf(false)),    // TODO: this is temporarily false until the\n    add(differentDueColor(true)), // different-half calculator can be refactored\n    add(sameScores(1)),\n    add(avoidMeetingTwice(true))\n)(0);\nexport {maxPriority};\n\n/**\n * @param {PlayerStats} player1\n * @param {PlayerStats} player2\n * @returns {number}\n */\nexport function calcPairIdeal(player1, player2) {\n    const metBefore = player1.opponentHistory.includes(player2.id);\n    const mustAvoid = player1.avoidList.includes(player2.id);\n    return pipe(\n        add(differentHalf(\n            player1.upperHalf !== player2.upperHalf\n            && player1.score === player2.score\n        )),\n        add(differentDueColor(\n            player1.dueColor === null\n            || player1.dueColor !== player2.dueColor\n        )),\n        add(sameScores(Math.abs(player1.score - player2.score) + 1)),\n        add(avoidMeetingTwice(!metBefore && !mustAvoid))\n    )(0);\n}\n\n/**\n * Determine which players are in the upper and lower halves of their score\n * groups.\n * @param {PlayerStats[]} playerStatsList\n */\nfunction setUpperHalves(playerStatsList) {\n    /** @param {any[]} list */\n    const splitInHalf = (list) => splitAt(list.length / 2, list);\n    return playerStatsList.reduce(\n        /** @param {typeof playerStatsList} acc */\n        function (acc, player, ignore, src) {\n            const upperHalfIds = pipe(\n                // @ts-ignore\n                filter((a) => a.score === player.score),\n                sort((a, b) => b.rating - a.rating),\n                splitInHalf,\n                view(lensIndex(0)),\n                map((a) => a.id)\n            )(src);\n            if (upperHalfIds.includes(player.id)) {\n                return acc.concat([assoc(\"upperHalf\", true, player)]);\n            } else {\n                return acc.concat([assoc(\"upperHalf\", false, player)]);\n            }\n        },\n        []\n    );\n}\n\n/**\n * @param {PlayerStats[]} playerStatsList\n */\nfunction setByePlayer(playerStatsList) {\n    // if the list is even, just return it.\n    if (playerStatsList.length % 2 === 0) {\n        return playerStatsList;\n    }\n    // Assign a bye to the lowest-rated player in the lowest score group.\n    // Because the list is sorted, the last player is the lowest.\n    // (USCF § 29L2.)\n    const indexOfDueBye = findLastIndex((p) => !p.hasHadBye, playerStatsList);\n    // In the impossible situation that *everyone* has played a bye round\n    // previously, then just pick the last player.\n    const index = (\n        (indexOfDueBye === -1)\n        ? findLastIndex(T, playerStatsList)\n        : indexOfDueBye\n    );\n    return over(\n        lensIndex(index),\n        assoc(\"isDueBye\", true),\n        playerStatsList\n    );\n}\n\n/**\n * Creates pairings according to the rules specified in USCF § 27, § 28,\n * and § 29. This is a work in progress and does not account for all of the\n * rules yet.\n * @param {object[][]} roundList\n * @param {number} roundId\n * @param {number[]} players\n * @param {object[]} playerList\n * @param {number[][]} avoidList\n */\nexport default function pairPlayers(\n    players,\n    roundId,\n    roundList,\n    playerList,\n    avoidList\n) {\n    const playerStatsList = pipe(\n        map((id) => (\n            createPlayerStats(id, playerList, avoidList, roundList, roundId)\n        )),\n        // Sort the data so matchups default to order by score and rating.\n        sort(\n            firstBy(\n                (a, b) => b.score - a.score\n            ).thenBy(\n                (a, b) => b.rating - a.rating\n            )\n        ),\n        setUpperHalves,\n        setByePlayer\n    )(players);\n    // Turn the data into blossom-compatible input.\n    const potentialMatches = playerStatsList.filter(\n        (p) => !p.isDueBye\n    ).reduce(\n        /** @param {number[][]} acc */\n        function (acc, player1, ignore, src) {\n            const playerMatches = src.filter(\n                (player) => player !== player1\n            ).map(\n                (player2) => [\n                    player1.id,\n                    player2.id,\n                    calcPairIdeal(player1, player2)\n                ]\n            );\n            return acc.concat(playerMatches);\n        },\n        []\n    );\n    // Feed all of the potential matches to Edmonds-blossom and let the\n    // algorithm work its magic. This returns an array where each index is the\n    // ID of one player and each value is the ID of the matched player.\n    const blossomResults = blossom(potentialMatches);\n    // Translate those IDs into actual pairs of players.\n    /** @type {[PlayerStats, PlayerStats, number][]} */\n    const reducedResults = blossomResults.reduce(\n        function (acc, p1Id, p2Id) {\n            // Filter out unmatched players. Blossom will automatically include\n            // their missing IDs in its results.\n            if (p1Id !== -1) {\n                const p1 = playerStatsList.filter((p) => p.id === p1Id)[0];\n                const p2 = playerStatsList.filter((p) => p.id === p2Id)[0];\n                const ideal = potentialMatches.filter(\n                    (pair) => pair[0] === p1Id && pair[1] === p2Id\n                )[0][2];\n                // Blossom returns a lot of redundant matches. Check that this\n                // matchup wasn't already added.\n                const matched = acc.map((pair) => pair[0]);\n                if (!matched.includes(p1) && !matched.includes(p2)) {\n                    return acc.concat([[p1, p2, ideal]]);\n                }\n            }\n            return acc;\n        },\n        []\n    );\n    // Sort by net score and rating for board placement.\n    const sortedResults = sort(\n        firstBy(\n            (pair) => pair[0].score + pair[1].score,\n            -1\n        ).thenBy(\n            (pair) => pair[0].rating + pair[1].rating,\n            -1\n        ),\n        reducedResults\n    );\n    // Turn the results into new match objects.\n    const matches = sortedResults.map(\n        function (pair) {\n            const player1 = pair[0];\n            const player2 = pair[1];\n            // const ideal = pair[2];\n            const match = [player1.id, player2.id];\n            if (player1.colorBalance < player2.colorBalance) {\n                // match.reverse();\n                return reverse(match);\n            }\n            return match;\n        }\n    );\n    // The bye match always gets added last so the the numbering isn't affected.\n    const byePlayer = playerStatsList.filter((p) => p.isDueBye)[0];\n    if (byePlayer) {\n        return matches.concat([[byePlayer.id, DUMMY_ID]]);\n    }\n    return matches;\n}\n","import {curry} from \"ramda\";\nimport {BLACK, WHITE} from \"../pairing-scoring/constants\";\nimport {createMatch, dummyPlayer} from \"../factories\";\nimport {getPlayerById} from \"../pairing-scoring/helpers\";\nimport {hasHadBye} from \"../pairing-scoring/scoring\";\nimport pairPlayers from \"../pairing-scoring/pairing\";\n/**\n * @typedef {import(\"../factory-types\").Player} Player\n * @typedef {import(\"../factory-types\").Tournament} Tournament\n*/\n\n/**\n * @param {Tournament} tourney\n * @param {number} roundId\n * @param {import(\"./dispatch\").PlayerState} playerState\n * @param {number[]} unPairedPlayers\n * @param {number} byeValue\n */\nexport function autoPair(\n    tourney,\n    playerState,\n    roundId,\n    unPairedPlayers,\n    byeValue\n) {\n    const roundList = tourney.roundList;\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    const nextBye = tourney.byeQueue.filter(\n        (pId) => !hasHadBye(pId, roundList)\n    )[0];\n    let byeMatch = null;\n    if (nextBye >= 0) {\n        byeMatch = createMatch({\n            id: nextBye + \"-\" + dummyPlayer.id,\n            players: [nextBye, dummyPlayer.id],\n            origRating: [\n                getPlayer(nextBye).rating,\n                dummyPlayer.rating\n            ],\n            newRating: [\n                getPlayer(nextBye).rating,\n                dummyPlayer.rating\n            ]\n        });\n        unPairedPlayers = unPairedPlayers.filter((pId) => pId !== nextBye);\n    }\n    const pairs = pairPlayers(\n        unPairedPlayers,\n        roundId,\n        roundList,\n        playerState.players,\n        playerState.avoid\n    );\n    const newMatchList = pairs.map(\n        (pair) => createMatch({\n            id: pair.join(\"-\"),\n            players: [pair[WHITE], pair[BLACK]],\n            origRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ],\n            newRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ]\n        })\n    );\n    if (byeMatch) {\n        newMatchList.push(byeMatch);\n    }\n    // this covers manual bye matches and auto-paired bye matches\n    newMatchList.forEach(function (match) {\n        const dummy = match.players.indexOf(dummyPlayer.id);\n        if (dummy === BLACK) {\n            match.result[WHITE] = byeValue;\n        }\n        if (dummy === WHITE) {\n            match.result[BLACK] = byeValue;\n        }\n    });\n    return newMatchList;\n}\n\n/**\n * @param {Player[]} players\n * @param {number[]} pair\n * @param {number} byeValue\n */\nexport function manualPair(players, pair, byeValue) {\n    const getPlayer = curry(getPlayerById)(players);\n    const match = createMatch({\n        id: pair.join(\"-\"),\n        players: [pair[WHITE], pair[BLACK]],\n        origRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ],\n        newRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ]\n    });\n    if (pair[WHITE] === dummyPlayer.id) {\n        match.result = [0, byeValue];\n    }\n    if (pair[BLACK] === dummyPlayer.id) {\n        match.result = [byeValue, 0];\n    }\n    return match;\n}\n","import {\n    createContext,\n    createElement,\n    useContext,\n    useReducer,\n    useEffect\n} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    __,\n    append,\n    concat,\n    difference,\n    lensPath,\n    mergeRight,\n    filter,\n    findIndex,\n    move,\n    over,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport {localStorageOrDefault} from \"./helpers\";\nimport defaultTourneyList from \"./demo-tourney.json\";\nimport {autoPair, manualPair} from \"./match-functions\";\nimport {createTournament} from \"../factories\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../factory-types\").Tournament} Tournament\n */\n\n/** @type {Tournament[]} */\n// @ts-ignore\nconst defaultData = defaultTourneyList;\n\n/**\n * @param {Tournament[]} state\n * @param {Action} action\n * @returns {Tournament[]}\n */\nfunction tourneysReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_TOURNEY\":\n        return append(createTournament({name: action.name}), state);\n    case \"DEL_TOURNEY\":\n        return state.filter((ignore, i) => i !== action.index);\n    case \"ADD_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        return set(\n            lensPath([action.tourneyId, \"players\"]),\n            action.players,\n            state\n        );\n    case \"SET_BYE_QUEUE\":\n        return set(\n            lensPath([action.tourneyId, \"byeQueue\"]),\n            action.byeQueue,\n            state\n        );\n    case \"AUTO_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            concat(\n                // @ts-ignore\n                __,\n                autoPair(\n                    state[action.tourneyId],\n                    action.playerState,\n                    action.roundId,\n                    action.unpairedPlayers,\n                    action.byeValue\n                )\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            append(manualPair(action.players, action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_MATCH_RESULT\":\n        return set(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                ),\n                \"result\"\n            ]),\n            action.result,\n            set(\n                lensPath([\n                    action.tourneyId,\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state[action.tourneyId].roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n                state\n            )\n        );\n    case \"DEL_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        return over(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    result: reverse(match.result),\n                    players: reverse(match.players),\n                    origRating: reverse(match.origRating),\n                    newRating: reverse(match.newRating)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n\n/** @type {[Tournament[], React.Dispatch<Action>]} */\nconst defaultContext = null;\nconst TournamentContext = createContext(defaultContext);\n\nexport function useTournaments() {\n    return useContext(TournamentContext);\n}\n\n/**\n * @param {number} [tourneyId]\n * @returns {[Tournament, React.Dispatch<Action>]}\n */\nexport function useTournament(tourneyId) {\n    const [tourneys, dispatch] = useContext(TournamentContext);\n    return [tourneys[tourneyId], dispatch];\n}\n\n/**\n * @param {number} tourneyId\n * @param {number} roundId\n */\nexport function useRound(tourneyId, roundId) {\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const matchList = tourney.roundList[roundId];\n    const matched = matchList.reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    const unmatched = difference(tourney.players, matched);\n    return {tourney, dispatch, unmatched, matchList};\n}\n\n/**\n * @param {Object} props\n */\nexport function TournamentProvider(props) {\n    const loadedData = localStorageOrDefault(\"tourneys\", defaultData);\n    const [state, dispatch] = useReducer(tourneysReducer, loadedData);\n    useEffect(\n        function () {\n            localStorage.setItem(\"tourneys\", JSON.stringify(state));\n        },\n        [state]\n    );\n    return (\n        createElement(\n            TournamentContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import {\n    createContext,\n    createElement,\n    useContext,\n    useReducer,\n    useEffect\n} from \"react\";\nimport {assoc} from \"ramda\";\nimport {localStorageOrDefault} from \"./helpers\";\nimport defaultOptions from \"./demo-options.json\";\n/**\n * @typedef {import(\"./dispatch\").OptionAction} OptionAction\n */\n\n/**\n * @param {typeof defaultOptions} state\n * @param {OptionAction} action\n */\nfunction reducer(state, action) {\n    switch (action.type) {\n    case \"SET_BYE_VALUE\":\n        return assoc(\"byeValue\", action.byeValue, state);\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n/** @type {[typeof defaultOptions, React.Dispatch<OptionAction>]} */\nconst defaultContext = null;\nconst OptionsContext = createContext(defaultContext);\n\nexport function useOptions() {\n    return useContext(OptionsContext);\n}\n\n/**\n * @param {Object} props\n */\nexport function OptionsProvider(props) {\n    const loadedData = localStorageOrDefault(\"options\", defaultOptions);\n    const [state, dispatch] = useReducer(reducer, loadedData);\n    useEffect(\n        function () {\n            localStorage.setItem(\"options\", JSON.stringify(state));\n        },\n        [state]\n    );\n    return (\n        createElement(\n            OptionsContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import React, {useEffect, useMemo} from \"react\";\nimport Tooltip from \"@reach/tooltip\";\nimport {Link} from \"@reach/router\";\nimport last from \"ramda/src/last\";\nimport Check from \"react-feather/dist/icons/check-circle\";\nimport Alert from \"react-feather/dist/icons/alert-circle\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {calcNumOfRounds} from \"../../pairing-scoring/helpers\";\nimport {DUMMY_ID} from \"../../pairing-scoring/constants\";\nimport \"@reach/tabs/styles.css\";\nimport \"@reach/tooltip/styles.css\";\nimport styles from \"./tournament.module.css\";\n\n/**\n * @param {Object} props\n */\nexport default function Tournament({tourneyId, children, navigate}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const {name, players, roundList} = tourney;\n    const {playerState, getPlayer, playerDispatch} = usePlayers();\n    // This isn't expensive, but why not memoize it?\n    const isNewRoundReady = useMemo(\n        function () {\n            const lastRound = last(roundList);\n            if (!lastRound) {\n                return true;\n            }\n            const matchedPlayers = lastRound.reduce(\n                /** @param {number[]} acc */\n                (acc, match) => acc.concat(match.players),\n                []\n            );\n            const unMatchedPlayers = players.filter(\n                (pId) => !matchedPlayers.includes(pId)\n            );\n            const results = lastRound.map(\n                (match) => match.result[0] + match.result[1]\n            );\n            return (unMatchedPlayers.length === 0 && !results.includes(0));\n        },\n        [players, roundList]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = name;\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [name]\n    );\n    const isItOver = roundList.length >= calcNumOfRounds(players.length);\n    /** @type {[string, boolean]} */\n    const [tooltipText, tooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"You must complete the last round before beginning a new one.\",\n                true\n            ];\n        } else if (isItOver) {\n            return [\"All necessary rounds have completed.\", true];\n        } else {\n            return [\"Ready to begin a new round.\", false];\n        }\n    }());\n    function newRound() {\n        const confirmText = (\n            \"All rounds have completed. Are you sure you want to begin a new \"\n            + \"one?\"\n        );\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        dispatch({type: \"ADD_ROUND\", tourneyId});\n        return;\n    }\n    async function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            await navigate(\".\");\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.players.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playerDispatch({\n                        type: \"SET_PLAYER_MATCHCOUNT\",\n                        id: pId,\n                        matchCount: matchCount - 1\n                    });\n                    playerDispatch({\n                        type: \"SET_PLAYER_RATING\",\n                        id: pId,\n                        rating: match.origRating[color]\n                    });\n                });\n            });\n            dispatch({\n                type: \"DEL_LAST_ROUND\",\n                players: playerState.players,\n                tourneyId\n            });\n        }\n    }\n    return (\n        <div className={styles.tournament}>\n            <div className={styles.header}>\n                <nav>\n                    <Link to=\"/\">\n                        <ChevronLeft/> Back\n                    </Link>\n                </nav>\n                <h2>{name}</h2>\n            </div>\n            <div className={styles.sidebar}>\n                <nav>\n                    <ul>\n                        <li><Link to=\".\">Players</Link></li>\n                        <li><Link to=\"crosstable\">Crosstable</Link></li>\n                        <li><Link to=\"scores\">Score detail</Link></li>\n                    </ul>\n                    <hr />\n                    <ul>\n                        {Object.keys(roundList).map((id) => (\n                            <li key={id}>\n                                <Link to={`${id}`}>\n                                    Round {Number(id) + 1}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </nav>\n                <hr />\n                <ul>\n                    <li>\n                        <button\n                            onClick={newRound}\n                            disabled={!isNewRoundReady}\n                        >\n                            <Plus/> New round\n                        </button>{\" \"}\n                        <Tooltip label={tooltipText}>\n                            <span className=\"helpIcon\">\n                                {(tooltipWarn)\n                                    // @ts-ignore\n                                    ? <Alert className=\"status-alert\" />\n                                    // @ts-ignore\n                                    : <Check className=\"status-ok\" />\n                                }\n                            </span>\n                        </Tooltip>\n                    </li>\n                    <li>\n                        <button\n                            className={\"danger \" + styles.toolbarItem}\n                            onClick={delLastRound}\n                            disabled={roundList.length === 0}\n                        >\n                            <Trash /> Remove last round\n                        </button>\n                    </li>\n                    <li>\n                        Round progress: {roundList.length}/\n                        {calcNumOfRounds(players.length)}{\" \"}\n                    </li>\n                </ul>\n            </div>\n            <div className={styles.content}>\n                {children}\n            </div>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {Link} from \"@reach/router\";\nimport {useTournaments} from \"../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function TournamentList(props) {\n    const [tourneys, dispatch] = useTournaments();\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({\n            type: \"ADD_TOURNEY\",\n            name: newTourneyName\n        });\n        setNewTourneyName(\"\");\n    }\n    return (\n        <div>\n            {(tourneys.length > 0) &&\n                <h2>Tournament list</h2>\n            }\n            {(tourneys.length > 0)\n                ?\n                <ol>\n                    {tourneys.map((tourney, i) =>\n                        <li key={i}>\n                            <Link to={String(i)}>\n                                {tourney.name}\n                            </Link>{\" \"}\n                            <button\n                                title={`Delete “${tourney.name}”`}\n                                aria-label={`Delete “${tourney.name}”`}\n                                className=\"danger iconButton\"\n                                onClick={\n                                    () => dispatch({\n                                        type: \"DEL_TOURNEY\",\n                                        index: i\n                                    })\n                                }>\n                                <Trash />\n                            </button>\n                        </li>\n                    )}\n                </ol>\n                : <p>No tournaments added yet.</p>\n            }\n            <form onSubmit={makeTournament}>\n                <fieldset>\n                    <legend>Make a new tournament</legend>\n                    <label>Name:{\" \"}\n                        <input\n                            type=\"text\"\n                            placeholder=\"tournament name\"\n                            value={newTourneyName}\n                            onChange={updateNewName}\n                            required={true}\n                        />\n                    </label>\n                    <input type=\"submit\" value=\"Create\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./list\";\n\n/**\n * @param {Object} props\n */\nconst TournamentIndex = (props) => (\n    <div>\n        {props.children}\n    </div>\n);\n\nexport default TournamentIndex;\nexport {Tournament, TournamentList};\n","import React, {useMemo, useState, useEffect} from \"react\";\nimport numeral from \"numeral\";\n// import {Link} from \"@reach/router\";\n// import ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {getPlayerAvoidList} from \"../../pairing-scoring/helpers\";\nimport {kFactor} from \"../../pairing-scoring/scoring\";\nimport {usePlayers} from \"../../state\";\n\n/**\n * @param {Object} props\n * @param {string | number} [props.playerId]\n * @param {string} [props.path]\n */\nexport default function PlayerInfoBox(props) {\n    const playerId = Number(props.playerId);\n    const {playerState, playerDispatch, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const [singAvoidList, setSingAvoidList] = useState(\n        getPlayerAvoidList(playerId, avoid)\n    );\n    const unAvoided = useMemo(\n        () => (\n            players.map(\n                (player) => player.id\n            ).filter(\n                (pId) => !singAvoidList.includes(pId) && pId !== playerId\n            )\n        ),\n        [players, playerId, singAvoidList]\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function avoidAdd(event) {\n        event.preventDefault();\n        playerDispatch({\n            type: \"ADD_AVOID_PAIR\",\n            pair: [playerId, Number(selectedAvoider)]\n        });\n    }\n    useEffect(\n        function () {\n            setSingAvoidList(getPlayerAvoidList(playerId, avoid));\n        },\n        [avoid, playerId]\n    );\n    useEffect(\n        function () {\n            setSelectedAvoider(unAvoided[0]);\n        },\n        [setSelectedAvoider, unAvoided]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = (\n                getPlayer(playerId).firstName\n                + \" \" + getPlayer(playerId).lastName\n            );\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [playerId, getPlayer]\n    );\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playerDispatch({\n            type: \"SET_PLAYER\",\n            id: playerId,\n            firstName: firstName.value,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value)\n        });\n    }\n    return (\n        <div>\n            <h2>\n                Profile for{\" \"}\n                {getPlayer(playerId).firstName} {getPlayer(playerId).lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label>\n                    First name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            defaultValue={getPlayer(playerId).firstName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Last name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            defaultValue={getPlayer(playerId).lastName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Matches played{\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"matchCount\"\n                            defaultValue={\n                                String(getPlayer(playerId).matchCount)\n                            }\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Rating\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            defaultValue={String(getPlayer(playerId).rating)}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    K factor\n                        <input\n                            type=\"number\"\n                            readOnly\n                            value={(\n                                numeral(\n                                    kFactor(getPlayer(playerId).matchCount)\n                                ).format(\"00\")\n                            )}\n                        />\n                    </label>\n                </p>\n            </form>\n            <ul>\n                <h3>Players to avoid</h3>\n                {singAvoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName}{\" \"}\n                        {getPlayer(pId).lastName}{\" \"}\n                        <button\n                            className=\"danger iconButton\"\n                            onClick={() =>\n                                playerDispatch({\n                                    type: \"DEL_AVOID_PAIR\",\n                                    pair: [playerId, pId]\n                                })\n                            }\n                            title={`Remove ${getPlayer(pId).firstName} \n${getPlayer(pId).lastName}`}\n                            arial-label={`Remove \n${getPlayer(pId).firstName} ${getPlayer(pId).lastName} from avoid list.`}\n                        >\n                            <Trash />\n                        </button>\n                    </li>\n                ))}\n                {avoid.length === 0 && <li>None</li>}\n            </ul>\n            <form onSubmit={(event) => avoidAdd(event)}>\n                <fieldset>\n                    <legend>Add player to avoid</legend>\n                    <select\n                        onBlur={(event) =>\n                            setSelectedAvoider(Number(event.target.value))\n                        }\n                    >\n                        {unAvoided.map((pId) => (\n                            <option key={pId} value={pId}>\n                                {getPlayer(pId).firstName}{\" \"}\n                                {getPlayer(pId).lastName}\n                            </option>\n                        ))}\n                    </select>{\" \"}\n                    <input type=\"submit\" value=\"Add\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport {usePlayers} from \"../state\";\nimport styles from \"./utility.module.css\";\nimport {DUMMY_ID} from \"../pairing-scoring/constants\";\n\n/**\n * @typedef {(event: React.MouseEvent | React.KeyboardEvent) => void} Action\n */\n\n/** @param {{children: JSX.Element | string, action: Action}} props */\nexport const Button = ({children, action}) => (\n    <button onClick={action}>\n        {children}\n    </button>\n);\n\n/** @param {{action: Action}} action */\nexport const BackButton = ({action}) => (\n    <Button action={action}>&lt; Back</Button>\n);\n\n/** @param {{action: Action}} action */\nexport const OpenButton = ({action}) => (\n    <Button action={action}>Open &gt;</Button>\n);\n\n/**\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.CSSProperties} [props.style]\n */\nexport function Panel({children, style}) {\n    return (\n        <div style={{...style}} className={styles.panel}>\n            {children}\n        </div>\n    );\n}\n\n/**\n *\n * @param {object} props\n */\nexport function PanelContainer(props) {\n    return (\n        <div {...props} className={styles.panels}>\n            {React.Children.map(props.children, (child) => child)}\n        </div>\n    );\n}\n\n/**\n * @param {Object} props\n */\nexport function PlayerLink({id, firstName, lastName}) {\n    const {getPlayer} = usePlayers();\n    if (id === DUMMY_ID) {\n        return ( // there's no bye player profile\n            <span>\n                {firstName && getPlayer(id).firstName}{\" \"}\n                {lastName && getPlayer(id).lastName}\n            </span>\n        );\n    }\n    return (\n        <Link to={\"/players/\" + id}>\n            {firstName && getPlayer(id).firstName}{\" \"}\n            {lastName && getPlayer(id).lastName}\n        </Link>\n    );\n}\n","import React, {useState} from \"react\";\nimport {usePlayers} from \"../../state\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer() {\n    const {playerDispatch} = usePlayers();\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        playerDispatch({type: \"ADD_PLAYER\", firstName, lastName, rating});\n    };\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label>\n                        First name{\" \"}\n                        <input type=\"text\" name=\"firstName\"\n                            onChange={updateField}\n                            value={newPlayerData.firstName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Last name{\" \"}\n                        <input type=\"text\" name=\"lastName\"\n                            onChange={updateField}\n                            value={newPlayerData.lastName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Rating {\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            onChange={updateField}\n                            value={newPlayerData.rating}\n                            required />\n                    </label>\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {usePlayers} from \"../../state\";\nimport {PlayerLink} from \"../utility\";\nimport NewPlayer from \"./new-player\";\n\n/**\n * @param {Object} props\n */\nexport default function PlayerList(props) {\n    const {playerState, playerDispatch} = usePlayers();\n    /**\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\n     * @param {number} id\n     */\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        playerDispatch({type: \"DEL_PLAYER\", id});\n    };\n    return (\n        <div>\n            <table>\n                <caption>Demo Roster</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Rating</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>{playerState.players.map((player) =>\n                    <tr key={player.id}>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} firstName />\n                        </td>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} lastName />\n                        </td>\n                        <td className=\"table__number\">{player.rating}</td>\n                        <td>\n                            <button\n                                className=\"danger iconButton\"\n                                onClick={(event) =>\n                                    delPlayer(event, player.id)\n                                }\n                                // eslint-disable-next-line max-len\n                                title={`Delete ${player.firstName} ${player.lastName}`}\n                                // eslint-disable-next-line max-len\n                                aria-label={`Delete ${player.firstName} ${player.lastName}`}\n                            >\n                                <Trash />\n                            </button>\n                        </td>\n                        <td>\n                            <Link to={String(player.id)}>\n                            Open\n                                <VisuallyHidden>\n                                    {\" \"}{player.firstName} {player.lastName}\n                                </VisuallyHidden>\n                                {\" \"}<ChevronRight />\n                            </Link>\n                        </td>\n                    </tr>\n                )}</tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\n","import React from \"react\";\nimport PlayerInfo from \"./info-box\";\nimport PlayerList from \"./list\";\n\n/**\n * @param {Object} props\n */\nexport default function Players(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\n\nexport {PlayerInfo, PlayerList};\n","import React, {useState} from \"react\";\nimport numeral from \"numeral\";\nimport dashify from \"dashify\";\nimport {defaultTo} from \"ramda\";\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {\n    createStandingTree,\n    tieBreakMethods\n} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n */\nfunction ScoreTable({tourneyId}) {\n    const [{tieBreaks, roundList}] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [standingTree, tbMethods] = createStandingTree(tieBreaks, roundList);\n    return (\n        <table className={style.table}>\n            <caption>Score detail</caption>\n            <tbody>\n                <tr className={style.topHeader}>\n                    <th scope=\"col\">Rank</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Score</th>\n                    {tbMethods.map((name, i) => (\n                        <th key={i} scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.map((standing, j, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {j === 0 && ( // Only display the rank once\n                                <th\n                                    scope=\"row\"\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                >\n                                    {numeral(rank + 1).format(\"0o\")}\n                                </th>\n                            )}\n                            <th\n                                scope=\"row\"\n                                className={style.playerName}\n                                data-testid={rank}\n                            >\n                                {getPlayer(standing.id).firstName}&nbsp;\n                                {getPlayer(standing.id).lastName}\n                            </th>\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {standing.tieBreaks.map((score, i) => (\n                                <td\n                                    key={i}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tbMethods[i]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n */\nfunction SelectTieBreaks({tourneyId}) {\n    const [{tieBreaks}, dispatch] = useTournament(tourneyId);\n    const [selectedTb, setSelectedTb] = useState(null);\n    /** @param {number} [id] */\n    function toggleTb(id = null) {\n        /** @type {(id: number) => number} */\n        const defaultId = defaultTo(selectedTb);\n        if (tieBreaks.includes(defaultId(id))) {\n            dispatch({type: \"DEL_TIEBREAK\", id: defaultId(id), tourneyId});\n            setSelectedTb(null);\n        } else {\n            dispatch({type: \"ADD_TIEBREAK\", id: defaultId(id), tourneyId});\n        }\n    }\n    /** @param {number} direction */\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        dispatch({\n            type: \"MOVE_TIEBREAK\",\n            oldIndex: index,\n            newIndex: index + direction,\n            tourneyId\n        });\n    }\n    return (\n        <div>\n            <h3>Selected tiebreak methods</h3>\n            <div className=\"toolbar\">\n                <button\n                    onClick={() => toggleTb()}\n                    disabled={selectedTb === null}\n                >\n                    Toggle\n                </button>\n                <button\n                    onClick={() => moveTb(-1)}\n                    disabled={selectedTb === null}\n                >\n                    Move up\n                </button>\n                <button\n                    onClick={() => moveTb(1)}\n                    disabled={selectedTb === null}\n                >\n                    Move down\n                </button>\n                <button\n                    onClick={() => setSelectedTb(null)}\n                    disabled={selectedTb === null}\n                >\n                    Done\n                </button>\n            </div>\n            <ol>\n                {tieBreaks.map((id) => (\n                    <li\n                        key={id}\n                        className={selectedTb === id ? \"selected\" : \"\"}\n                    >\n                        {tieBreakMethods[id].name}\n                        <button\n                            onClick={() =>\n                                selectedTb === id\n                                    ? setSelectedTb(null)\n                                    : setSelectedTb(id)\n                            }\n                            disabled={\n                                selectedTb !== null && selectedTb !== id\n                            }\n                        >\n                            {selectedTb === id ? \"Done\" : \"Edit\"}\n                        </button>\n                    </li>\n                ))}\n            </ol>\n            <h3>Available tiebreak methods</h3>\n            <ol>\n                {tieBreakMethods.map((method, id) => (\n                    <li key={id}>\n                        <span\n                            className={\n                                tieBreaks.includes(id)\n                                    ? \"enabled\"\n                                    : \"disabled\"\n                            }\n                        >\n                            {method.name}\n                        </span>\n                        {!tieBreaks.includes(id) && (\n                            <button onClick={() => toggleTb(id)}>\n                                Add\n                            </button>\n                        )}\n                    </li>\n                ))}\n            </ol>\n        </div>\n    );\n}\n\n/**\n * @param {Object} props\n */\nconst Scores = ({tourneyId}) => (\n    <Tabs>\n        <TabList>\n            <Tab>Scores</Tab>\n            <Tab>Edit tiebreak rules</Tab>\n        </TabList>\n        <TabPanels>\n            <TabPanel>\n                <ScoreTable tourneyId={Number(tourneyId)}/>\n            </TabPanel>\n            <TabPanel>\n                <SelectTieBreaks tourneyId={Number(tourneyId)} />\n            </TabPanel>\n        </TabPanels>\n    </Tabs>\n);\n\nexport default Scores;\n","import React from \"react\";\nimport NewPlayer from \"../../players/new-player\";\nimport {useTournament, usePlayers} from \"../../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function Selecting({tourneyId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId);\n    const [{players}, dispatch] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function togglePlayer(event) {\n        const id = Number(event.target.value);\n        if (event.target.checked) {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.concat([id]),\n                tourneyId\n            });\n        } else {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.filter((pId) => pId !== id),\n                tourneyId\n            });\n        }\n    }\n    return (\n        <div>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: playerState.players.map(\n                            (p) => p.id\n                        ),\n                        tourneyId\n                    })\n                }\n            >\n                Select all\n            </button>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: [],\n                        tourneyId\n                    })\n                }\n            >\n                Select none\n            </button>\n            {/* <button onClick={() => setIsSelecting(false)}>\n                Done\n            </button> */}\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {playerState.players.map(({id}) => (\n                        <tr key={id}>\n                            <td>{getPlayer(id).firstName}</td>\n                            <td>{getPlayer(id).lastName}</td>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    value={id}\n                                    checked={players.includes(id)}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Selecting from \"./selecting\";\nimport {useTournament, usePlayers} from \"../../../state\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {hasHadBye} from \"../../../pairing-scoring/scoring\";\n\n/**\n * @param {Object} props\n */\nexport default function PlayerSelect({tourneyId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId);\n    const [{players, byeQueue, roundList}, dispatch] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [isSelecting, setIsSelecting] = useState(players.length === 0);\n    return (\n        <PanelContainer>\n            <Panel>\n                <button onClick={() => setIsSelecting(true)}>\n                    Edit player roster\n                </button>\n                <table>\n                    <caption>Current roster</caption>\n                    <thead>\n                        <tr>\n                            <th>First name</th>\n                            <th>Last name</th>\n                            <th>Options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {players.map((pId) => (\n                            <tr\n                                key={pId}\n                                className={getPlayer(pId).type + \" player\"}\n                            >\n                                <td>{getPlayer(pId).firstName}</td>\n                                <td>{getPlayer(pId).lastName}</td>\n                                <td>\n                                    <button\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"SET_BYE_QUEUE\",\n                                                byeQueue: byeQueue.concat(\n                                                    [pId]\n                                                ),\n                                                tourneyId\n                                            })\n                                        }\n                                        disabled={byeQueue.includes(\n                                            pId\n                                        )}\n                                    >\n                                        Bye signup\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <h3>Bye queue</h3>\n                {(byeQueue.length === 0) &&\n                    <p>No players have signed up for a bye round.</p>\n                }\n                <ol>\n                    {byeQueue.map((pId) => (\n                        <li\n                            key={pId}\n                            className={\n                                hasHadBye(pId, roundList)\n                                    ? \"disabled\"\n                                    : \"\"\n                            }\n                        >\n                            {getPlayer(pId).firstName}{\" \"}\n                            {getPlayer(pId).lastName}\n                            <button\n                                onClick={() =>\n                                    dispatch({\n                                        type: \"SET_BYE_QUEUE\",\n                                        byeQueue: byeQueue.filter(\n                                            (id) => pId !== id\n                                        ),\n                                        tourneyId\n                                    })\n                                }\n                            >\n                                Remove\n                            </button>\n                        </li>\n                    ))}\n                </ol>\n            </Panel>\n            <Dialog isOpen={isSelecting}>\n                <button onClick={() => setIsSelecting(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </PanelContainer>\n    );\n}\n","// TODO: This component is in need of a major cleanup. I made this way too\n// complex and fragile.\nimport React, {useMemo} from \"react\";\nimport numeral from \"numeral\";\nimport {assoc} from \"ramda\";\nimport X from \"react-feather/dist/icons/x\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {\n    createStandingList,\n    getResultsByOpponent,\n    getPerformanceRatings\n} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n/**\n * @typedef {import(\"../../pairing-scoring\").Standing} Standing\n */\n\n/**\n * @param {Object} props\n */\nexport default function Crosstable({tourneyId}) {\n    const [{tieBreaks, roundList}] = useTournament(Number(tourneyId));\n    const {getPlayer} = usePlayers();\n    const [standings, opponentScores] = useMemo(\n        function () {\n            const [standingsFlat] = createStandingList(tieBreaks, roundList);\n            /** @type {Object.<string, Object.<string, number>>} */\n            const opponentResults = standingsFlat.reduce(\n                /** @param {Object.<string, Object.<string, number>>} acc */\n                (acc, standing) => (\n                    assoc(\n                        String(standing.id),\n                        getResultsByOpponent(standing.id, roundList),\n                        acc\n                    )\n                ),\n                {}\n            );\n            return [standingsFlat, opponentResults];\n        },\n        [roundList, tieBreaks]\n    );\n    /**\n     * @param {number} player1Id\n     * @param {number} player2Id\n     */\n    function getXScore(player1Id, player2Id) {\n        if (player1Id === player2Id) {\n            return <X/>;\n        }\n        const result = opponentScores[String(player1Id)][player2Id];\n        if (result === undefined) {\n            return null;\n        }\n        return numeral(result).format(\"1/2\");\n    }\n    /** @param {number} playerId */\n    function getRatingChange(playerId) {\n        const [\n            firstRating,\n            lastRating\n        ] = getPerformanceRatings(playerId, roundList);\n        const change = numeral(lastRating - firstRating).format(\"+0\");\n        return `${lastRating}\\xA0(${change})`; // \\xA0 = &nsbp;\n    }\n    return (\n        <table className={style.table}>\n            <caption>Crosstable</caption>\n            <tbody>\n                <tr>\n                    <th>Rank</th>\n                    <th>Name</th>\n                    {standings.map((ignore, index) =>\n                        <th key={index}>\n                            {index + 1}\n                        </th>\n                    )}\n                    <th>Score</th>\n                    <th>Rating</th>\n                </tr>\n                {standings.map((standing, index)=>\n                    <tr key={index} className={style.row}>\n                        <th scope=\"col\">\n                            {index + 1}\n                        </th>\n                        <th\n                            scope=\"row\"\n                            className={style.playerName}\n                        >\n                            {getPlayer(standing.id).firstName}&nbsp;\n                            {getPlayer(standing.id).lastName}\n                        </th>\n                        {standings.map((opponent, index2) =>\n                            <td\n                                key={index2}\n                                className=\"table__number\"\n                            >\n                                {getXScore(standing.id, opponent.id)}\n                            </td>\n                        )}\n                        <td\n                            className=\"table__number\"\n                        >\n                            {numeral(standing.score).format(\"1/2\")}\n                        </td>\n                        <td className=\"table__number\">\n                            {getRatingChange(standing.id)}\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport {createPlayerStats} from \"../../../pairing-scoring/scoring\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport {getById} from \"../../../pairing-scoring/helpers\";\n\n/**\n * @typedef {import(\"../../..\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {string} props.matchId\n * @param {number} props.color\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PlayerMatchInfo({matchId, color, tourneyId, roundId}) {\n    const {tourney, matchList} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const match = getById(matchList, matchId);\n    const playerData = createPlayerStats(\n        match.players[color],\n        playerState.players,\n        playerState.avoid,\n        tourney.roundList,\n        roundId\n    );\n    const colorBalance = playerData.colorBalance;\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {playerData.profile.firstName} {playerData.profile.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{playerData.score}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerData.id}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{playerData.hasHadBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {playerData.opponentHistory.map((opId) => (\n                        <li key={opId}>\n                            {getPlayer(opId).firstName}{\" \"}\n                            {getPlayer(opId).lastName}\n                        </li>\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Info from \"react-feather/dist/icons/info\";\nimport Check from \"react-feather/dist/icons/check\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {calcNewRatings} from \"../../../pairing-scoring/scoring\";\nimport {BLACK, WHITE, DUMMY_ID} from \"../../../pairing-scoring/constants\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport PlayerMatchInfo from \"./player-match-info\";\n// @ts-ignore\nimport {winnerSelect} from \"./round.module.css\";\nimport \"@reach/dialog/styles.css\";\n\n/**\n * @typedef {import(\"../../../factory-types\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {number} props.pos\n * @param {Match} props.match\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {string} props.selectedMatch\n * @param {React.Dispatch<React.SetStateAction<string>>} props.setSelectedMatch\n */\nexport default function MatchRow({\n    pos,\n    match,\n    tourneyId,\n    roundId,\n    selectedMatch,\n    setSelectedMatch\n}) {\n    const {tourney, dispatch} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whiteName = (\n        getPlayer(match.players[0]).firstName\n        + \" \"\n        + getPlayer(match.players[0]).lastName\n    );\n    const blackName = (\n        getPlayer(match.players[1]).firstName\n        + \" \"\n        + getPlayer(match.players[1]).lastName\n    );\n    /**\n     * @param {React.FocusEvent<HTMLSelectElement>} event\n     */\n    function setMatchResult(event) {\n        /** @type {[number, number]} */\n        const result = (function () {\n            switch (event.currentTarget.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        const white = getPlayer(match.players[WHITE]);\n        const black = getPlayer(match.players[BLACK]);\n        const newRating = (\n            (event.currentTarget.value === \"NOTSET\")\n            ? match.origRating\n            : calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: white.id,\n            rating: newRating[WHITE]\n        });\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: black.id,\n            rating: newRating[BLACK]\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (match.result.reduce((a, b) => a + b) === 0) {\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: white.id,\n                matchCount: white.matchCount + 1\n            });\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: black.id,\n                matchCount: black.matchCount + 1\n            });\n        }\n        dispatch({\n            type: \"SET_MATCH_RESULT\",\n            tourneyId,\n            roundId,\n            matchId: match.id,\n            result,\n            newRating\n        });\n    }\n    return (\n        <tr className={match.id === selectedMatch ? \"selected\" : \"\"}>\n            <th className=\"table__number row__id\" scope=\"row\">{pos + 1}</th>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}{\" \"}\n                {resultCode === \"WHITE\" && (\n                    <span role=\"img\" aria-label=\"Winner\">\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}{\" \"}\n                {resultCode === \"BLACK\" && (\n                    <span role=\"img\" aria-label=\"Winner\">\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td className=\"data__input row__controls\">\n                <select\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                    disabled={match.players.includes(DUMMY_ID)}\n                    value={resultCode}\n                    className={winnerSelect}\n                >\n                    <option value=\"NOTSET\">\n                        Select a winner\n                    </option>\n                    <option value=\"WHITE\">\n                        {whiteName} won\n                    </option>\n                    <option value=\"BLACK\">\n                        {blackName} won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            <td className=\"data__input row__controls\">\n                {(selectedMatch !== match.id)\n                ? (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(match.id)}\n                        title=\"Edit match\"\n                    >\n                        <Edit />\n                    </button>\n                ) : (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(null)}\n                        title=\"End editing match\"\n                    >\n                        <Check />\n                    </button>\n                )}\n                <button\n                    className=\"iconButton\"\n                    onClick={() => setOpenModal(true)}\n                    title=\"Open match information.\"\n                >\n                    <Info />\n                    <Hidden>\n                        View information for match:{\" \"}\n                        {whiteName} versus {blackName}\n                    </Hidden>\n                </button>\n                <Dialog isOpen={openModal}>\n                    <button onClick={() => setOpenModal(false)}>\n                        close\n                    </button>\n                    <p>{tourney.name}</p>\n                    <p>Round {roundId + 1}, match {pos + 1}</p>\n                    <PanelContainer>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={0}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={1}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                    </PanelContainer>\n                </Dialog>\n            </td>\n        </tr>\n    );\n}\n","import React, {useState} from \"react\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport MatchRow from \"./match-row\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {getById, getIndexById} from \"../../../pairing-scoring/helpers\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport style from \"./round.module.css\";\n\n/**\n * @param {Object} props\n * @param {number} props.roundId\n * @param {number} props.tourneyId\n */\nexport default function Round({roundId, tourneyId}) {\n    const {matchList, dispatch} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    /** @type {string} */\n    const defaultMatch = null;\n    const [selectedMatch, setSelectedMatch] = useState(defaultMatch);\n    if (!matchList) {\n        throw new Error(\"Round \" + roundId + \" does not exist.\");\n    }\n    /** @param {string} matchId */\n    function unMatch(matchId) {\n        const match = getById(matchList, matchId);\n        if (match.result.reduce((a, b) => a + b) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.players.forEach(function (pId, color) {\n                playerDispatch({\n                    type: \"SET_PLAYER_MATCHCOUNT\",\n                    id: pId,\n                    matchCount: getPlayer(pId).matchCount - 1\n                });\n                playerDispatch({\n                    type: \"SET_PLAYER_RATING\",\n                    id: pId,\n                    rating: match.origRating[color]\n                });\n            });\n        }\n        dispatch({type: \"DEL_MATCH\", tourneyId, roundId, matchId});\n        setSelectedMatch(null);\n    }\n    /** @param {string} matchId */\n    function swapColors(matchId) {\n        dispatch({type: \"SWAP_COLORS\", tourneyId, roundId, matchId});\n    }\n    /**\n     * @param {string} matchId\n     * @param {number} direction\n     */\n    function moveMatch(matchId, direction) {\n        const oldIndex = getIndexById(matchList, matchId);\n        const newIndex = (\n            (oldIndex + direction >= 0)\n            ? oldIndex + direction\n            : 0\n        );\n        dispatch({type: \"MOVE_MATCH\", tourneyId, roundId, oldIndex, newIndex});\n    }\n    return (\n        <PanelContainer data-testid={\"round-\" + roundId}>\n            <Panel>\n                <div className={style.toolbar}>\n                    <button\n                        className=\"danger iconButton\"\n                        onClick={() => unMatch(selectedMatch)}\n                        disabled={selectedMatch === null}\n                    >\n                        <Trash /> Unmatch\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => swapColors(selectedMatch)}\n                        disabled={selectedMatch === null}\n                    >\n                        <Repeat /> Swap colors\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => moveMatch(selectedMatch, -1)}\n                        disabled={selectedMatch === null}\n                    >\n                        <ArrowUp /> Move up\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => moveMatch(selectedMatch, 1)}\n                        disabled={selectedMatch === null}\n                    >\n                        <ArrowDown/> Move down\n                    </button>\n                </div>\n                {(matchList.length === 0) &&\n                    <p>No players matched yet.</p>\n                }\n                <table className={style.table}>\n                    {(matchList.length > 0) &&\n                        <caption>Round {roundId + 1} results</caption>\n                    }\n                    <tbody>\n                        {(matchList.length > 0) &&\n                            <tr>\n                                <th className=\"row__id\" scope=\"col\">\n                                    #\n                                </th>\n                                <th className=\"row__player\" scope=\"col\">\n                                    White\n                                </th>\n                                <th className=\"row__player\" scope=\"col\">\n                                    Black\n                                </th>\n                                <th className=\"row__result\" scope=\"col\">\n                                    Result\n                                </th>\n                                <th className=\"row__controls\" scope=\"col\">\n                                    Controls\n                                </th>\n                            </tr>\n                        }\n                        {matchList.map((match, pos) => (\n                            <MatchRow\n                                key={match.id}\n                                pos={pos}\n                                match={match}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                                selectedMatch={selectedMatch}\n                                setSelectedMatch={setSelectedMatch}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n            </Panel>\n        </PanelContainer>\n    );\n}\n","import React, {useState} from \"react\";\nimport {set, lensIndex, append} from \"ramda\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Selecting from \"../player-select/selecting\";\nimport {useRound, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK, DUMMY_ID} from \"../../../pairing-scoring/constants\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {[number, number]} props.stagedPlayers\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\n */\nexport default function PairPicker({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {dispatch, unmatched} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const [{byeValue}] = useOptions();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    /** @param {number} id */\n    function selectPlayer(id) {\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(WHITE), id, prevState)\n            );\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(BLACK), id, prevState)\n            );\n        }\n        // else... nothing happens\n    }\n    // make a new list so as not to affect auto-pairing\n    const unmatchedWithDummy = (\n        (unmatched.length % 2 !== 0)\n        ? append(DUMMY_ID, unmatched)\n        : unmatched\n    );\n    if (unmatched.length === 0) {\n        return null;\n    }\n    return (\n        <div>\n            <button\n                onClick={() => dispatch({\n                    type: \"AUTO_PAIR\",\n                    unpairedPlayers: unmatched,\n                    tourneyId,\n                    roundId,\n                    playerState,\n                    byeValue\n                })}\n                disabled={unmatched.length === 0}\n            >\n                Auto-pair unmatched players\n            </button><br/>\n            <button onClick={() => setIsModalOpen(true)}>\n                Add or remove players from the roster.\n            </button>\n            <ul>\n                {unmatchedWithDummy.map((pId) => (\n                    <li key={pId}>\n                        {stagedPlayers.includes(pId)\n                        ? <button disabled>Selected</button>\n                        : (\n                            <button\n                                disabled={!stagedPlayers.includes(null)}\n                                onClick={() => selectPlayer(pId)}\n                            >\n                                <UserPlus/>\n                                <Hidden>\n                                    Select {getPlayer(pId).firstName}{\" \"}\n                                    {getPlayer(pId).lastName}\n                                </Hidden>\n                            </button>\n                        )}{\" \"}\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ul>\n            <Dialog isOpen={isModalOpen}>\n                <button onClick={() => setIsModalOpen(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </div>\n    );\n}\n","import React, {Fragment} from \"react\";\nimport {set, lensIndex} from \"ramda\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Check from \"react-feather/dist/icons/check\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport {useTournament, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK} from \"../../../pairing-scoring/constants\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {[number, number]} props.stagedPlayers\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\n */\nexport default function Stage({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {playerState, getPlayer} = usePlayers();\n    const {players} = playerState;\n    const dispatch = useTournament(tourneyId)[1];\n    const [{byeValue}] = useOptions();\n    const [white, black] = stagedPlayers;\n    /** @param {typeof WHITE | typeof BLACK} color */\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n    function match() {\n        dispatch({\n            type: \"MANUAL_PAIR\",\n            pair: [white, black],\n            tourneyId,\n            roundId,\n            byeValue,\n            players\n        });\n        setStagedPlayers([null, null]);\n    }\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <p>\n                White:{\" \"}\n                {white !== null &&\n                    <Fragment>\n                        {getPlayer(white).firstName}{\" \"}\n                        {getPlayer(white).lastName}{\" \"}\n                        <button onClick={() => unstage(WHITE)}>\n                            <UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <p>\n                Black:{\" \"}\n                {black !== null &&\n                    <Fragment>\n                        {getPlayer(black).firstName}{\" \"}\n                        {getPlayer(black).lastName}{\" \"}\n                        <button onClick={() => unstage(BLACK)}>\n                            <UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <button\n                onClick={() => setStagedPlayers(\n                    (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                )}\n                disabled={\n                    stagedPlayers.every((id) => id === null)\n                }\n            >\n                <Repeat/> Swap colors\n            </button>{\" \"}\n            <button\n                onClick={match}\n                disabled={stagedPlayers.includes(null)}\n            >\n                <Check/> Match selected\n            </button>{\" \"}\n        </div>\n    );\n}\n","// this component should eventually replace player-match-info.jsx\nimport React from \"react\";\nimport {createPlayerStats} from \"../../../pairing-scoring/scoring\";\nimport {useTournament, usePlayers} from \"../../../state\";\n\n/**\n * @typedef {import(\"../../../factory-types\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {number} props.playerId\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PlayerInfo({playerId, tourneyId, roundId}) {\n    const [{roundList}] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const {\n        profile,\n        rating,\n        score,\n        colorBalance,\n        hasHadBye,\n        opponentHistory,\n        avoidList\n    } = createPlayerStats(playerId, players, avoid, roundList, roundId);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {profile.firstName} {profile.lastName}\n            </h3>\n            <p>Score: {score}</p>\n            <p>Rating: {rating}</p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasHadBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {opponentHistory.map((opId) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\n","import React, {useState} from \"react\";\nimport numeral from \"numeral\";\nimport SelectList  from \"./pair-picker\";\nimport Stage from \"./stage\";\nimport PlayerInfo from \"./player-info\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {createPlayerStats} from \"../../../pairing-scoring/scoring\";\nimport {usePlayers, useTournament} from \"../../../state\";\nimport {calcPairIdeal, maxPriority} from \"../../../pairing-scoring/pairing\";\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PairPicker({tourneyId, roundId}) {\n    /** @type {[number, number]} */\n    const defaultPlayers = [null, null];\n    const [stagedPlayers, setStagedPlayers] = useState(defaultPlayers);\n    const {playerState} = usePlayers();\n    const [tourney] = useTournament(tourneyId);\n    const matchIdeal = React.useMemo(\n        function () {\n            if (stagedPlayers.includes(null)) {\n                return null;\n            }\n            /** @param {number} player */\n            const makeStats = (player) => createPlayerStats(\n                player,\n                playerState.players,\n                playerState.avoid,\n                tourney.roundList,\n                roundId\n            );\n            const player0stats = makeStats(stagedPlayers[0]);\n            const player1stats = makeStats(stagedPlayers[1]);\n            const ideal = calcPairIdeal(player0stats, player1stats);\n            return numeral(ideal / maxPriority).format(\"%\");\n        },\n        [\n            playerState.avoid,\n            playerState.players,\n            roundId,\n            tourney.roundList,\n            stagedPlayers\n        ]\n    );\n    return (\n        <PanelContainer>\n            <Panel>\n                <SelectList\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n            </Panel>\n            <Panel>\n                <Stage\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n                <PanelContainer>\n                    {stagedPlayers.map((id) =>\n                        id !== null && (\n                            <Panel key={id}>\n                                <PlayerInfo\n                                    playerId={id}\n                                    tourneyId={tourneyId}\n                                    roundId={roundId}\n                                />\n                            </Panel>\n                        )\n                    )}\n                </PanelContainer>\n                Match ideal: {matchIdeal}\n            </Panel>\n        </PanelContainer>\n    );\n}\n","import React, {useState, useEffect} from \"react\";\nimport {Tab, Tabs, TabList, TabPanel, TabPanels} from \"@reach/tabs\";\nimport List from \"react-feather/dist/icons/list\";\nimport Users from \"react-feather/dist/icons/users\";\nimport Round from \"./round\";\nimport PairPicker from \"../pair-picker\";\nimport {useRound} from \"../../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function Index({tourneyId, roundId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead\n    // eslint-disable-next-line fp/no-mutation\n    roundId = Number(roundId); // reach router passes a string instead\n    const {unmatched} = useRound(tourneyId, roundId);\n    const [openTab, setOpenTab] = useState(0);\n    useEffect(\n        function () {\n            if (unmatched.length > 0) {\n                setOpenTab(1);\n            } else {\n                setOpenTab(0);\n            }\n        },\n        [unmatched.length]\n    );\n    return (\n        <Tabs index={openTab} onChange={(index) => setOpenTab(index)}>\n            <TabList>\n                <Tab><List/> Matches</Tab>\n                <Tab disabled={unmatched.length === 0}>\n                    <Users/> Unmatched players\n                </Tab>\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <Round\n                        tourneyId={tourneyId}\n                        roundId={roundId}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <PairPicker\n                        tourneyId={tourneyId}\n                        roundId={roundId}\n                    />\n                </TabPanel>\n            </TabPanels>\n        </Tabs>\n    );\n}\n","import React, {useState, useEffect, useMemo} from \"react\";\nimport {useTournaments, useOptions, usePlayers} from \"../state\";\nimport {createPlayer} from \"../factories\";\nimport defaultPlayers from \"../state/demo-players.json\";\nimport defaultOptions from \"../state/demo-options.json\";\nimport defaultTourneys from \"../state/demo-tourney.json\";\n\n/**\n * @param {Object} props\n */\nexport function Options(props) {\n    const [tourneys, tourneysDispatch] = useTournaments();\n    const [options, optionsDispatch] = useOptions();\n    const {playerState, playerDispatch} = usePlayers();\n    const [text, setText] = useState(\"\");\n    // memoize this so the `useEffect` hook syncs with the correct state\n    const exportData = useMemo(\n        () => ({options, tourneys, playerState}),\n        [options, tourneys, playerState]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    /** @param {typeof exportData} data */\n    function loadData(data) {\n        tourneysDispatch({type: \"LOAD_STATE\", state: data.tourneys});\n        optionsDispatch({type: \"LOAD_STATE\", state: data.options});\n        playerDispatch({type: \"LOAD_STATE\", state: data.playerState});\n        window.alert(\"Data loaded!\");\n    }\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function handleText(event) {\n        event.preventDefault();\n        /** @type {typeof exportData} */\n        const importData = JSON.parse(text);\n        loadData(importData);\n    }\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        // eslint-disable-next-line fp/no-mutation\n        reader.onload = function (ev) {\n            /** @type {string} */\n            // @ts-ignore\n            const data = ev.target.result;\n            /** @type {typeof exportData} */\n            const importData = JSON.parse(data);\n            loadData(importData);\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    /** @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event */\n    function reloadDemoData(event) {\n        event.preventDefault();\n        loadData({\n            options: defaultOptions,\n            playerState: {\n                players: defaultPlayers.playerList.map((p) => createPlayer(p)),\n                avoid: defaultPlayers.avoidList\n            },\n            // @ts-ignore\n            tourneys: defaultTourneys\n        });\n    }\n    return (\n        <div>\n            <form>\n                <fieldset>\n                    <legend>Bye options</legend>\n                    Select how many points a bye is worth:{\" \"}\n                    <label>\n                        1\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 1}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 1\n                            })}\n                        />\n                    </label>{\" \"}\n                    <label>\n                        ½\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 0.5}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 0.5\n                            })}\n                        />\n                    </label>\n                </fieldset>\n            </form>\n            <fieldset>\n                <legend>Manage data</legend>\n                <p>\n                    <a\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                        download=\"chessahoochee.json\"\n                    >\n                        Download all data\n                    </a>\n                </p>\n                <label>\n                    Load data file:{\" \"}\n                    <input type=\"file\" id=\"file\" onChange={handleFile}/>\n                </label>\n            </fieldset>\n            <fieldset>\n                <legend>Reset all changes</legend>\n                <button onClick={reloadDemoData}>Reload demo data</button>\n            </fieldset>\n            <form onSubmit={handleText}>\n                <fieldset>\n                    <legend>\n                        Advanced: manually edit data\n                    </legend>\n                    <textarea\n                        className=\"json\"\n                        rows={25}\n                        cols={50}\n                        value={text}\n                        name=\"playerdata\"\n                        onChange={(event) => setText(event.currentTarget.value)}\n                        spellCheck={false}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport styles from \"./index.module.css\";\n\nconst Caution = () => (\n    <div className={styles.caution}>\n        <p className={styles.caution__text}>\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            &nbsp;\n            This is an unstable demo build.\n            &nbsp;\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            {\" \"}\n            Want to help make it better? Head to the\n            {\" \"}\n            <span role=\"img\" aria-label=\"finger pointing right\">👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href=\"https://github.com/johnridesabike/chessahoochee\">\n                Git repository\n            </a>.\n        </p>\n    </div>\n);\n\nexport default Caution;\n","import numeral from \"numeral\";\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"half\", {\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    // @ts-ignore\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        /** @type {number | string} */\n        let whole = Math.floor(value);\n        /** @type {number | string} */\n        let remainder = value - whole;\n        if (remainder === 0.5) {\n            remainder = \"½\";\n        } else if (remainder === 0) {\n            remainder = \"\";\n        }\n        if (whole === 0 && remainder) {\n            whole = \"\";\n        }\n        // let output = numeral._.numberToFormat(value, format, roundingFunction);\n        // return output;\n        return String(whole) + remainder;\n    },\n    /** @param {string} value */\n    unformat: function (value) {\n        return Number(value); // doesn't work... todo?\n    }\n});\n","import React from \"react\";\nimport {\n    Router,\n    Link,\n    LocationProvider,\n    createHistory,\n    Redirect\n} from \"@reach/router\";\nimport createHashSource from \"hash-source\";\nimport About from \"./components/about\";\nimport NotFound from \"./components/404\";\nimport TournamentIndex from \"./components/tournament\";\nimport {TournamentList, Tournament} from \"./components/tournament\";\nimport Players, {PlayerList, PlayerInfo} from \"./components/players\";\nimport Scores from \"./components/tournament/scores\";\nimport PlayerSelect from \"./components/tournament/player-select\";\nimport Crosstable from \"./components/tournament/crosstable\";\nimport Round from \"./components/tournament/round\";\nimport {Options} from \"./components/options\";\nimport Caution from \"./components/caution\";\nimport {OptionsProvider, TournamentProvider, PlayersProvider} from \"./state\";\nimport \"side-effects\";\nimport \"./global.css\";\n// @ts-ignore\nimport {link} from \"./App.module.css\";\n// These are just for deploying to GitHub pages.\nlet source = createHashSource();\n// @ts-ignore\nlet history = createHistory(source);\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Caution />\n            <LocationProvider history={history}>\n                <nav className=\"header\">\n                    <Link to=\"tourneys\" className={link}>\n                        Tournaments\n                    </Link>\n                    <Link to=\"players\" className={link}>\n                        Players\n                    </Link>\n                    <Link to=\"options\" className={link}>\n                        Options\n                    </Link>\n                    <Link to=\"about\" className={link}>\n                        About\n                    </Link>\n                </nav>\n                <main className=\"content\">\n                    {/* Lots of nested contexts. Is there a better way? */}\n                    <OptionsProvider>\n                        <PlayersProvider>\n                            <TournamentProvider>\n                                <Router>\n                                    <TournamentIndex path=\"tourneys\">\n                                        <TournamentList path=\"/\" />\n                                        <Tournament path=\":tourneyId\">\n                                            <PlayerSelect path=\"/\" />\n                                            <Crosstable path=\"crosstable\" />\n                                            <Scores path=\"scores\" />\n                                            <Round path=\":roundId\" />\n                                        </Tournament>\n                                    </TournamentIndex>\n                                    <Players path=\"players\">\n                                        <PlayerList path=\"/\"/>\n                                        <PlayerInfo path=\":playerId\" />\n                                    </Players>\n                                    <Options path=\"options\" />\n                                    <About path=\"about\" />\n                                    <NotFound default />\n                                    <Redirect from=\"/\" to=\"tourneys\" noThrow />\n                                </Router>\n                            </TournamentProvider>\n                        </PlayersProvider>\n                    </OptionsProvider>\n                </main>\n            </LocationProvider>\n        </div>\n    );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {StrictMode} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"scores_table__22BFZ\",\"topHeader\":\"scores_topHeader__2RVRR\",\"row\":\"scores_row__bmBzX\",\"playerName\":\"scores_playerName__3ghv9\",\"rank\":\"scores_rank__3AxBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__2nSxH\",\"header\":\"tournament_header__9nZzI\",\"sidebar\":\"tournament_sidebar__21G-s\",\"content\":\"tournament_content__1mdG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"round_table__2JmnE\",\"winnerSelect\":\"round_winnerSelect__317oT\",\"toolbar\":\"round_toolbar__3CWVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__TB6Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}