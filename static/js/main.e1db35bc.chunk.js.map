{"version":3,"sources":["components/about.jsx","components/404.jsx","data/constants.js","data/factories.js","data/player.js","state/player-state.js","pairing-scoring/scoring.js","pairing-scoring/pairing.js","state/match-functions.js","state/tourneys-state.js","state/options-state.js","components/utility.jsx","data/utility.js","components/tournament/round/player-match-info.jsx","components/tournament/round/match-row.jsx","components/tournament/round/round.jsx","components/players/new-player.jsx","components/tournament/player-select/selecting.jsx","components/tournament/pair-picker/pair-picker.jsx","components/tournament/pair-picker/stage.jsx","components/tournament/pair-picker/player-info.jsx","components/tournament/pair-picker/index.jsx","components/tournament/round/index.jsx","components/tournament/scores.jsx","components/tournament/status.jsx","components/tournament/player-select/index.jsx","components/tournament/tournament.jsx","components/tournament/list.jsx","components/tournament/index.jsx","components/players/info-box.jsx","components/players/list.jsx","components/players/index.jsx","components/options.jsx","components/caution/index.jsx","App.jsx","serviceWorker.js","index.jsx","components/tournament/scores.module.css","components/tournament/round/round.module.css","components/tournament/tournament.module.css","App.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["About","props","react_default","a","createElement","data-testid","href","NotFound","BLACK","WHITE","DUMMY_ID","createMatch","importObj","id","players","result","origRating","newRating","createPlayer","arguments","length","undefined","type","firstName","lastName","rating","matchCount","dummyPlayer","getPlayerById","playerList","player","filter","p","getPlayerAvoidList","playerId","avoidList","pair","includes","reduce","accumulator","concat","kFactor","Object","freeze","defaultPlayers","demoPlayers","map","avoid","playersReducer","state","action","getNextId","pipe","sort","b","head","inc","over","lensPath","append","assoc","lensIndex","findIndex","propEq","mergeLeft","set","Error","PlayerContext","createContext","usePlayers","_useContext","useContext","_useContext2","slicedToArray","playerState","playerDispatch","getPlayer","curry","PlayersProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","value","children","isBye","match","getMatchesByPlayer","roundList","roundId","slice","acc","round","hasHadBye","getPlayersByOpponent","opponentId","playerScore","scoreList","indexOf","playerScoreList","playerScoreCum","runningScore","cumScores","playerScoreListNoByes","forEach","score","push","playerColorBalance","num","modifiedMedian","pId","isSolkoff","scores","opponent","pop","shift","tieBreakMethods","name","func","oppScores","calcStandings","methods","tieBreaks","m","standingsFlat","allPlayers","Array","from","Set","getAllPlayers","method","sortFunc","firstBy","standing","ignore","index","thenBy","standingsTree","runningRank","i","orig","prevPlayer","standing2","standing1","dueColor","matchList","playerMatchColor","genPlayerData","profile","colorBalance","opponentHistory","upperHalf","avoidMeetingTwicePriority","sameScoresPriority","differentHalfPriority","differentDueColorPriority","calcPairIdeal","player1","player2","scoreDiff","priority","metBefore","mustAvoid","Math","abs","ceil","autoPair","tourney","unPairedPlayers","byeValue","nextBye","byeQueue","byeMatch","newMatchList","playerData","byePlayerData","last","playersWithScore","pd","reverse","splitAt","playerDatum","potentialMatches","src","playerMatches","reducedResults","blossom","p1Id","p2Id","p1","p2","ideal","matched","matches","pairPlayers","join","dummy","defaultData","defaultTourneyList","tourneysReducer","tourneyId","remove","move","oldIndex","newIndex","__","unpairedPlayers","manualPair","matchId","mergeRight","TournamentContext","useTournaments","useTournament","tourneys","useRound","_useTournament","_useTournament2","unmatched","difference","TournamentProvider","reducer","OptionsContext","useOptions","OptionsProvider","defaultOptions","data","Panel","_ref4","style","objectSpread","className","styles","panel","PanelContainer","assign","panels","React","Children","child","PlayerLink","_ref5","es","to","calcNumOfRounds","playerCount","rounds","log2","Number","isFinite","getById","list","x","PlayerMatchInfo","_ref","color","_useRound","_usePlayers","prettyBalance","numeral","format","opId","key","register","regexps","unformat","roundingFunction","whole","floor","remainder","String","MatchRow","pos","selectedMatch","setSelectedMatch","_useState","useState","_useState2","openModal","setOpenModal","resultCode","every","whiteName","blackName","setMatchResult","event","currentTarget","white","black","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","calcNewRatings","selected","scope","role","aria-label","onBlur","onChange","disabled","winnerSelect","onClick","title","edit_default","check_default","info_default","visually_hidden_es","dialog_es","isOpen","Round","setIsPickView","moveMatch","direction","toolbar","users_default","unMatch","trash_2_default","repeat_default","arrow_up_default","arrow_down_default","table","NewPlayer","newPlayerDefault","newPlayerData","setNewPlayerdata","updateField","preventDefault","_event$currentTarget","prevState","onSubmit","required","Selecting","togglePlayer","target","checked","_ref2","PairPicker","stagedPlayers","setStagedPlayers","_useOptions","isModalOpen","setIsModalOpen","unmatchedWithDummy","user_plus_default","Stage","_stagedPlayers","unstage","react","user_minus_default","PlayerInfo","_genPlayerData","list_default","Index","isPickView","useEffect","pair_picker_PairPicker","ScoreList","_useTournament2$","_calcStandings","_calcStandings2","standingTree","tbMethods","topHeader","rank","j","row","rowSpan","playerName","dashify","SelectTieBreaks","_useTournament3","_useTournament4","selectedTb","setSelectedTb","toggleTb","moveTb","Scores","_ref3","Status","PlayerSelect","isSelecting","setIsSelecting","Tournament","openTab","setOpenTab","isNewRoundReady","useMemo","lastRound","matchedPlayers","unMatchedPlayers","results","origTitle","document","isItOver","tooltipText","tooltipWarn","tabs_es","chevron_left_default","topToolbar","toolbarItem","window","confirm","plus_default","tooltip_es","label","alert_circle_default","check_circle_default","keys","tournament_scores","TournamentList","_useTournaments","_useTournaments2","newTourneyName","setNewTourneyName","placeholder","TournamentIndex","PlayerInfoBox","singAvoidList","setSingAvoidList","unAvoided","_useState3","_useState4","selectedAvoider","setSelectedAvoider","handleChange","defaultValue","readOnly","arial-label","avoidAdd","PlayerList","delPlayer","chevron_right_default","Players","Options","tourneysDispatch","_useOptions2","options","optionsDispatch","text","setText","exportData","loadData","alert","JSON","stringify","encodeURIComponent","download","reader","FileReader","onload","ev","parse","readAsText","files","rows","cols","Caution","caution","caution__text","caution__link","source","createHashSource","history","createHistory","App","link","tournament","path","about","_404","default","noThrow","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e1db35bc.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * @param {Object} props\n */\nconst About = (props) => (\n    <p data-testid=\"about\">\n        This is an early, proof-of-concept, demo of a\n        chess tournament manager.{\" \"}\n        <a href=\"https://github.com/johnridesabike/chessahoochee\">\n        You can find out more here.</a>\n    </p>\n);\n\nexport default About;\n","import React from \"react\";\n\n/**\n * @param {Object} props\n */\nconst NotFound = (props) => (\n    <div data-testid=\"404\">\n        <p>Page not found.</p>\n    </div>\n);\n\nexport default NotFound;\n","const BLACK = 1;\nexport {BLACK};\nconst WHITE = 0;\nexport {WHITE};\nconst DUMMY_ID = -1;\nexport {DUMMY_ID};\n","/**\n * @typedef {import(\"./index\").Match} Match\n * @typedef {import(\"./index\").Tournament} Tournament\n * @typedef {import(\"./index\").Player} Player\n */\n\n/**\n *\n * @param {object} importObj\n * @returns {Match}\n */\nexport function createMatch(importObj) {\n    return {\n        id: importObj.id,\n        players: importObj.players,\n        result: importObj.result || [0, 0],\n        origRating: importObj.origRating,\n        newRating: importObj.newRating\n    };\n}\n\n/**\n * @param {Object} importObj\n * @returns {Player}\n */\nexport function createPlayer(importObj = {}) {\n    return {\n        id: importObj.id || 0,\n        type: importObj.type || \"person\", // used for CSS styling etc.\n        firstName: importObj.firstName || \"\",\n        lastName: importObj.lastName || \"\",\n        rating: importObj.rating || 0,\n        matchCount: importObj.matchCount || 0\n    };\n}\n\n/**\n * @param {Object} importObj\n * @returns {Tournament}\n */\nexport function createTournament(importObj) {\n    return {\n        name: importObj.name || \"\",\n        tieBreaks: importObj.tieBreaks || [0, 1, 2, 3],\n        byeQueue: importObj.byeQueue || [],\n        players: importObj.players || [],\n        roundList: importObj.roundList || []\n    };\n}\n","import EloRank from \"elo-rank\";\nimport {WHITE, BLACK, DUMMY_ID} from \"./constants\";\nimport {createPlayer} from \"./factories\";\n/**\n * @typedef {import(\"./index\").Player} Player\n*/\n\nconst dummyPlayer = createPlayer({\n    id: -1,\n    firstName: \"Bye\",\n    lastName: \"Player\",\n    type: \"dummy\"\n});\nObject.freeze(dummyPlayer);\nexport {dummyPlayer};\n\n\n/**\n * @param {Player[]} playerList\n * @param {number} id\n * @returns {Player}\n */\nexport function getPlayerById(playerList, id) {\n    if (id === DUMMY_ID) {\n        return dummyPlayer;\n    }\n    const player = playerList.filter((p) => p.id === id)[0];\n    return (\n        (player)\n        ? player\n        : createPlayer({\n            id: id,\n            firstName: \"Anonymous\",\n            type: \"missing\"\n        })\n    );\n}\n\n/**\n * @param {number} playerId\n * @param {number[][]} avoidList\n * @returns {number[]}\n */\nexport function getPlayerAvoidList(playerId, avoidList) {\n    return avoidList.filter( // get pairings with the player\n        (pair) => pair.includes(playerId)\n    ).reduce( // Flatten the array\n        (accumulator, pair) => pair.concat(accumulator),\n        []\n    ).filter( // filter out the player's id\n        (id) => id !== playerId\n    );\n}\n\n/**\n * @param {number[][]} avoidList\n * @param {Player[]} playerList\n */\nexport function cleanAvoidList(avoidList, playerList) {\n    const ids = playerList.map((p) => p.id);\n    return avoidList.filter(\n        (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\n    );\n}\n\n/**\n * @param {number} matchCount\n */\nexport function kFactor(matchCount) {\n    const ne = matchCount || 1;\n    return (800 / ne);\n}\n\n/**\n * @param {[number, number]} origRatings\n * @param {[number, number]} matchCounts\n * @param {[number, number]} result\n * @returns {[number, number]}\n */\nexport function calcNewRatings(origRatings, matchCounts, result) {\n    const whiteElo = new EloRank(kFactor(matchCounts[WHITE]));\n    const blackElo = new EloRank(kFactor(matchCounts[BLACK]));\n    const FLOOR = 100;\n    const scoreExpected = [\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\n    ];\n    /** @type {[number, number]} */\n    const newRating = [\n        whiteElo.updateRating(\n            scoreExpected[WHITE],\n            result[WHITE],\n            origRatings[WHITE]\n        ),\n        blackElo.updateRating(\n            scoreExpected[BLACK],\n            result[BLACK],\n            origRatings[BLACK]\n        )\n    ];\n    // @ts-ignore\n    return newRating.map(\n        (rating) => (\n            rating < FLOOR\n            ? FLOOR\n            : rating\n        )\n    );\n}\n","import {createContext, createElement, useContext, useReducer} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    append,\n    assoc,\n    curry,\n    head,\n    inc,\n    lensPath,\n    lensIndex,\n    filter,\n    findIndex,\n    map,\n    mergeLeft,\n    over,\n    pipe,\n    propEq,\n    set,\n    sort\n} from \"ramda\";\nimport {getPlayerById} from \"../data/player\";\nimport {createPlayer} from \"../data/factories\";\nimport demoPlayers from \"./demo-players.json\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../data/index\").Player} Player\n * @typedef {import(\"./dispatch\").PlayerAction} PlayerAction\n */\n\nconst defaultPlayers = {\n    players: demoPlayers.playerList.map((p) => createPlayer(p)),\n    avoid: demoPlayers.avoidList\n};\n\n/**\n * @param {typeof defaultPlayers} state\n * @param {PlayerAction} action\n */\nfunction playersReducer(state, action ) {\n    // @ts-ignore\n    const getNextId = pipe(map((p) => p.id), sort((a, b) => b - a), head, inc);\n    switch (action.type) {\n    case \"ADD_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            append(createPlayer({\n                firstName: action.firstName,\n                lastName: action.lastName,\n                rating: action.rating,\n                id: getNextId(state.players)\n            })),\n            state\n        );\n    case \"SET_PLAYER\":\n        return assoc(\n            \"players\",\n            over(\n                lensIndex(findIndex(propEq(\"id\", action.id), state.players)),\n                mergeLeft(\n                    {\n                        firstName: action.firstName,\n                        lastName: action.lastName,\n                        rating: action.rating,\n                        matchCount: action.matchCount\n                    }\n                ),\n                state.players\n            ),\n            state\n        );\n    case \"DEL_PLAYER\":\n        return over(\n            lensPath([\"players\"]),\n            filter((p) => p.id !== action.id),\n            set(\n                lensPath([\"avoid\"]),\n                filter((pair) => !pair.includes(action.id)),\n                state\n            )\n        );\n    case \"SET_PLAYER_MATCHCOUNT\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"matchCount\"\n            ]),\n            action.matchCount,\n            state\n        );\n    case \"SET_PLAYER_RATING\":\n        return set(\n            lensPath([\n                \"players\",\n                findIndex(propEq(\"id\", action.id), state.players),\n                \"rating\"\n            ]),\n            action.rating,\n            state\n        );\n    // Avoid\n    case \"ADD_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            append(action.pair),\n            state\n        );\n    case \"DEL_AVOID_PAIR\":\n        return over(\n            lensPath([\"avoid\"]),\n            filter((pair) => !(\n                pair.includes(action.pair[0])\n                && pair.includes(action.pair[1])\n            )),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type\");\n    }\n}\n\n/** @type {[typeof defaultPlayers, React.Dispatch<PlayerAction>]} */\nconst defaultContext = null;\nconst PlayerContext = createContext(defaultContext);\n\nexport function usePlayers() {\n    const [playerState, playerDispatch] = useContext(PlayerContext);\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    return {playerState, playerDispatch, getPlayer};\n}\n\n/**\n * @param {Object} props\n */\nexport function PlayersProvider(props) {\n    const [state, dispatch] = useReducer(playersReducer, defaultPlayers);\n    return (\n        createElement(\n            PlayerContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import {firstBy} from \"thenby\";\nimport {getPlayerById, getPlayerAvoidList} from \"../data/player\";\nimport {WHITE, BLACK, DUMMY_ID} from \"../data/constants\";\n\n/**\n * @typedef {import(\"./\").ScoreCalculator} ScoreCalculator\n * @typedef {import(\"./\").PlayerData} PlayerData\n * @typedef {import(\"./\").Standing} Standing\n * @typedef {import(\"../data\").Match} Match\n * @typedef {import(\"../data\").Player} Player\n */\n\n/**\n *\n * @param {Match} match\n * @returns {boolean}\n */\nfunction isBye(match) {\n    return match.players.includes(DUMMY_ID);\n}\n\n/**\n * @param {number} playerId\n * @param {object[]} matchList\n * @returns {typeof WHITE | typeof BLACK?}\n */\nexport function playerMatchColor(playerId, matchList) {\n    const match = matchList.filter((m) => m.players.includes(playerId))[0];\n    return (\n        (match)\n        ? match.players.indexOf(playerId)\n        : null\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {Match[]}\n */\nfunction getMatchesByPlayer(playerId, roundList, roundId = null) {\n    const rounds = (\n        (roundId === null)\n        ? roundList\n        : roundList.slice(0, roundId + 1)\n    );\n    return rounds.reduce( // flatten the rounds to just the matches\n        (acc, round) => acc.concat(round),\n        []\n    ).filter(\n        (match) => match.players.includes(playerId)\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {boolean}\n */\nexport function hasHadBye(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).includes(DUMMY_ID);\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nexport function getPlayersByOpponent(opponentId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        opponentId,\n        roundList,\n        roundId\n    ).reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    ).filter(\n        (playerId) => playerId !== opponentId\n    );\n}\n\n/**\n * Get a list of all of a player's scores from each match.\n * @type {ScoreCalculator}\n * @returns {number[]} the list of scores\n */\nfunction playerScoreList(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(playerId, roundList, roundId).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/**\n * TODO: Maybe merge this with the other function?\n */\n/**\n * @type {ScoreCalculator}\n * @returns {number[]}\n */\nfunction playerScoreListNoByes(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        (match) => !isBye(match)\n    ).map(\n        (match) => match.result[match.players.indexOf(playerId)]\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerScore(playerId, roundList, roundId = null) {\n    const scoreList = playerScoreList(playerId, roundList, roundId);\n    return (\n        (scoreList.length > 0)\n        ? scoreList.reduce((a, b) => a + b)\n        : 0\n    );\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerScoreCum(playerId, roundList, roundId = null) {\n    let runningScore = 0;\n    /** @type {number[]} */\n    let cumScores = [];\n    let scores = playerScoreListNoByes(playerId, roundList, roundId);\n    scores.forEach(function (score) {\n        runningScore += score;\n        cumScores.push(runningScore);\n    });\n    return (\n        (cumScores.length !== 0)\n        ? cumScores.reduce((a, b) => a + b)\n        : 0\n    );\n}\n\n/**\n * Calculate a player's color balance. A negative number means they played as\n * white more. A positive number means they played as black more.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nexport function playerColorBalance(playerId, roundList, roundId = null) {\n    return getMatchesByPlayer(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        (match) => !isBye(match)\n    ).reduce(\n        function (acc, match) {\n            return (\n                (match.players[WHITE] === playerId)\n                ? acc.concat(-1) // White = -1\n                : acc.concat(1) // Black = +1\n            );\n        },\n        []\n    ).reduce(\n        (acc, num) => acc + num,\n        0\n    );\n}\n\n/**\n * Gets the modified median factor defined in USCF § 34E1\n * @type {ScoreCalculator}\n * @param {boolean} [isSolkoff]\n * @returns {number}\n */\nfunction modifiedMedian(pId, roundList, roundId = null, isSolkoff = false) {\n    // get all of the opponent's scores\n    let scores = getPlayersByOpponent(\n        pId,\n        roundList,\n        roundId\n    ).filter(\n        (opponent) => opponent !== DUMMY_ID\n    ).map(\n        (opponent) => playerScore(opponent, roundList, roundId)\n    );\n    //sort them, then remove the first and last items\n    scores.sort();\n    if (!isSolkoff) {\n        scores.pop();\n        scores.shift();\n    }\n    return (\n        (scores.length > 0)\n        ? scores.reduce((a, b) => a + b)\n        : 0\n    );\n}\n\n/**\n * A shortcut for passing the `isSolkoff` variable to `modifiedMedian`.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction solkoff(playerId, roundList, roundId = null) {\n    return modifiedMedian(playerId, roundList, roundId, true);\n}\n\n/**\n * Get the cumulative scores of a player's opponents.\n * @type {ScoreCalculator}\n * @returns {number}\n */\nfunction playerOppScoreCum(playerId, roundList, roundId = null) {\n    const opponents = getPlayersByOpponent(\n        playerId,\n        roundList,\n        roundId\n    ).filter(\n        (opponent) => opponent !== DUMMY_ID\n    );\n    let oppScores = opponents.map((p) => playerScoreCum(p, roundList, roundId));\n    return (\n        (oppScores.length !== 0)\n        ? oppScores.reduce((a, b) => a + b)\n        : 0\n    );\n}\n\nconst tieBreakMethods = [\n    {\n        name: \"Modified median\",\n        func: modifiedMedian\n    },\n    {\n        name: \"Solkoff\",\n        func: solkoff\n    },\n    {\n        name: \"Cumulative score\",\n        func: playerScoreCum\n    },\n    {\n        name: \"Cumulative of opposition\",\n        func: playerOppScoreCum\n    },\n    {\n        name: \"Most black\",\n        func: playerColorBalance\n    }\n];\n\nObject.freeze(tieBreakMethods);\nexport {tieBreakMethods};\n\n/**\n * @param {Standing} standing1\n * @param {Standing} standing2\n * @returns {boolean}\n */\nfunction areScoresEqual(standing1, standing2) {\n    // Check if any of them aren't equal\n    if (standing1.score !== standing2.score) {\n        return false;\n    }\n    // Check if any values are not equal\n    return !(\n        standing1.tieBreaks.reduce(\n            /** @param {boolean[]} acc */\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\n            []\n        ).includes(true)\n    );\n}\n\n/**\n * @param {Match[][]} roundList\n * @returns {number[]}\n */\nfunction getAllPlayers(roundList) {\n    const allPlayers = roundList.reduce( // flatten the rounds\n        (acc, round) => acc.concat(round),\n        []\n    ).reduce( // flaten the players\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    return Array.from(new Set(allPlayers));\n}\n\n/**\n * Sort the standings by score, see USCF tie-break rules from § 34.\n * @param {number[]} methods\n * @param {Match[][]} roundList\n * @param {number} [roundId]\n * @returns {[Standing[][], string[]]} The standings and the list of method used\n */\nexport function calcStandings(methods, roundList, roundId = null) {\n    const tieBreaks = methods.map((m) => tieBreakMethods[m]);\n    // Get a flat list of all of the players and their scores.\n    const standingsFlat = getAllPlayers(roundList).map(function (pId) {\n        /** @type {Standing} */\n        const standing = {\n            id: pId,\n            score: playerScore(pId, roundList, roundId),\n            tieBreaks: tieBreaks.map((method) => (\n                method.func(pId, roundList, roundId)\n            ))\n        };\n        return standing;\n    });\n    // Create a function to sort the players\n    let sortFunc = firstBy((standing) => standing.score, -1);\n    // For each tiebreak method, chain another `thenBy` to the function.\n    tieBreaks.forEach(function (ignore, index) {\n        sortFunc = sortFunc.thenBy((standing) => standing.tieBreaks[index], -1);\n    });\n    // Finally, sort the players.\n    standingsFlat.sort(sortFunc);\n    /** @type {Standing[][]} */\n    const standingsTree = [];\n    let runningRank = 0;\n    standingsFlat.forEach(function (standing, i, orig) {\n        if (i !== 0) { // we can't compare the first player with a previous one\n            const prevPlayer = orig[i - 1];\n            if (!areScoresEqual(standing, prevPlayer)) {\n                runningRank += 1;\n            }\n        }\n        if (!standingsTree[runningRank]) {\n            standingsTree[runningRank] = [];\n        }\n        standingsTree[runningRank].push(standing);\n    });\n    return [standingsTree, tieBreaks.map((m) => m.name)];\n}\n\n/**\n * @type {ScoreCalculator}\n * @returns {typeof WHITE | typeof BLACK?}\n */\nfunction dueColor(playerId, roundList, roundId = null) {\n    if (!roundList[roundId - 1]) {\n        return null;\n    }\n    let prevColor = playerMatchColor(\n        playerId,\n        roundList[roundId - 1]\n    );\n    return ( // return the opposite color\n        (prevColor === WHITE)\n        ? BLACK\n        : WHITE\n    );\n}\n\n/**\n * @param {number} playerId\n * @param {Match[][]} roundList\n * @param {number} roundId\n * @param {Player[]} playerList\n * @param {number[][]} avoidList\n * @returns {PlayerData}\n */\nexport function genPlayerData(\n    playerId,\n    playerList,\n    avoidList,\n    roundList,\n    roundId\n) {\n    const player = getPlayerById(playerList, playerId);\n    return {\n        profile: player,\n        rating: player.rating,\n        id: playerId,\n        score: playerScore(playerId, roundList, roundId),\n        dueColor: dueColor(playerId, roundList, roundId),\n        colorBalance: playerColorBalance(playerId, roundList, roundId),\n        opponentHistory: getPlayersByOpponent(playerId, roundList, roundId),\n        upperHalf: false,\n        avoidList: getPlayerAvoidList(playerId, avoidList),\n        hasHadBye: hasHadBye(playerId, roundList, roundId)\n    };\n}\n","import {firstBy} from \"thenby\";\nimport splitAt from \"ramda/src/splitAt\";\nimport last from \"ramda/src/last\";\nimport blossom from \"edmonds-blossom\";\nimport {genPlayerData} from \"./scoring\";\nimport {DUMMY_ID} from \"../data/constants\";\n/**\n * @typedef {import(\"./\").PlayerData} PlayerData\n */\n\n/**\n * TODO: These probably need to be tweaked a lot.\n */\n/**\n * @constant avoidMeetingTwicePriority The weight given to avoid players\n * meeting twice. This same weight is given to avoid matching players on each\n * other's \"avoid\" list. This is the highest priority. (USCF § 27A1)\n * @type {number}\n */\nconst avoidMeetingTwicePriority = 20;\n/**\n * @constant sameScoresPriority The weight given to match players with\n * equal scores. This gets muliplied against a ratio taken from the distance\n * between each player's score. For example, if the tournament has players\n * scoring 0, 1, 2, and 3, and if a player scoring 1 gets compared with a\n * player scoring 3, then their `sameScoresPriority` will be reduced by 50%.\n * (`(3 - 1) / 4 = 0.5`) (USCF § 27A2)\n * @type {number}\n */\nconst sameScoresPriority = 16;\n/**\n * @constant differentHalfPriority The weight given to match players in lower\n * versus upper halves. This is only applied to players being matched within\n * the same score group. (USCF § 27A3)\n * @type {number}\n */\nconst differentHalfPriority = 2;\n/**\n * @constant differentDueColorPriority The weight given to match players with\n * opposite due colors. (USCF § 27A4 and § 27A5)\n * @type {number}\n */\nconst differentDueColorPriority = 1;\n// /** @type {number} */\n// const maxPriority = (\n//     avoidMeetingTwicePriority\n//     + sameScoresPriority\n//     + differentHalfPriority\n//     + differentDueColorPriority\n// );\n\n\n/**\n * Create an array of blossom-compatible weighted matchups. This returns\n * an array of each potential match, formatted like so: [idOfPlayer1,\n * idOfPlayer2, priority]. A higher priority means a more likely matchup.\n * @param {PlayerData} player1\n * @param {PlayerData} player2\n * @param {number[]} scoreList\n * @returns {number}\n */\nexport function calcPairIdeal(player1, player2, scoreList) {\n    let priority = 0;\n    let scoreDiff;\n    const metBefore = player1.opponentHistory.includes(player2.id);\n    const mustAvoid = player1.avoidList.includes(player2.id);\n    if (!metBefore && !mustAvoid) {\n        priority += avoidMeetingTwicePriority;\n    }\n    // Calculate the \"distance\" between their scores and multiply that\n    // against the `sameScoresPriority` constant.\n    scoreDiff = Math.abs(\n        scoreList.indexOf(player1.score)\n        - scoreList.indexOf(player2.score)\n    );\n    scoreDiff = (scoreList.length - scoreDiff) / scoreList.length;\n    priority += sameScoresPriority * scoreDiff;\n    // Only include `differentHalfPriority` if they're in the same\n    // score group.\n    if (player1.score === player2.score) {\n        if (player1.upperHalf !== player2.upperHalf) {\n            priority += differentHalfPriority;\n        }\n    }\n    if (player1.dueColor === null) {\n        priority += differentDueColorPriority;\n    } else if (player1.dueColor !== player2.dueColor) {\n        priority += differentDueColorPriority;\n    }\n    return Math.ceil(priority);\n}\n\n/**\n * Creates pairings according to the rules specified in USCF § 27, § 28,\n * and § 29. This is a work in progress and does not account for all of the\n * rules yet.\n * @param {object[][]} roundList\n * @param {number} roundId\n * @param {number[]} players\n * @param {object[]} playerList\n * @param {number[][]} avoidList\n */\nexport default function pairPlayers(\n    players,\n    roundId,\n    roundList,\n    playerList,\n    avoidList\n) {\n    /** @type {[number, number]} */\n    let byeMatch;\n    let playerData = players.map((playerId) => (\n        genPlayerData(playerId, playerList, avoidList, roundList, roundId)\n    ));\n    const scoreList = Array.from(new Set(playerData.map((p) => p.score)));\n    scoreList.sort();\n    // Sort the data so matchups default to order by score and rating.\n    playerData.sort(\n        firstBy((p) => p.score, -1).thenBy((p) => p.rating, -1)\n    );\n    // If there's an odd number of players, time to assign a bye.\n    if (playerData.length % 2 !== 0) {\n        // Assign a bye to the lowest-rated player in the lowest score group.\n        // (USCF § 29L2.)\n        // filter out players who have had a bye already.\n        let byePlayerData = last(playerData.filter((p) => !p.hasHadBye));\n        // In the impossible situation that *everyone* has played a bye round\n        // previously, then just pick the last player.\n        if (!byePlayerData) {\n            byePlayerData = last(playerData);\n        }\n        byeMatch = [byePlayerData.id, DUMMY_ID];\n        // Remove the bye'd player from the list so they won't be matched again.\n        playerData = playerData.filter((p) => p !== byePlayerData);\n    }\n    // Determine which players are in the upper and lower halves of their score\n    // groups.\n    scoreList.forEach(function (score) {\n        let playersWithScore = playerData.filter((pd) => pd.score === score);\n        playersWithScore.sort((pd) => pd.rating).reverse();\n        if (playersWithScore.length > 1) {\n            splitAt(\n                playersWithScore.length / 2,\n                playersWithScore\n            )[0].forEach(function (playerDatum) {\n                playerDatum.upperHalf = true;\n            });\n        }\n    });\n    // Turn the data into blossom-compatible input.\n    const potentialMatches = playerData.reduce(\n        function (acc, player1, ignore, src) {\n            const playerMatches = src.filter(\n                (player) => player !== player1\n            ).map(\n                (player2) => [\n                    player1.id,\n                    player2.id,\n                    calcPairIdeal(player1, player2, scoreList)\n                ]\n            );\n            return acc.concat(playerMatches);\n        },\n        []\n    );\n    // Feed all of the potential matches to Edmonds-blossom and let the\n    // algorithm work its magic. This returns an array where each index is the\n    // ID of one player and each value is the ID of the matched player.\n    const blossomResults = blossom(potentialMatches);\n    // Translate those IDs into actual pairs of players.\n    /** @type {[PlayerData, PlayerData, number][]} */\n    const reducedResults = blossomResults.reduce(\n        function (acc, p1Id, p2Id) {\n            // Filter out unmatched players. Even though we removed the byes\n            // from the list, blossom will automatically include their missing\n            // IDs in its results.\n            if (p1Id !== -1) {\n                const p1 = playerData.filter((p) => p.id === p1Id)[0];\n                const p2 = playerData.filter((p) => p.id === p2Id)[0];\n                const ideal = potentialMatches.filter(\n                    (pair) => pair[0] === p1Id && pair[1] === p2Id\n                )[0][2];\n                const matched = acc.map((pair) => pair[0]);\n                // Blossom returns a lot of redundant matches. Check that this\n                // matchup wasn't already added.\n                if (!matched.includes(p1) && !matched.includes(p2)) {\n                    acc.push([p1, p2, ideal]);\n                }\n            }\n            return acc;\n        },\n        []\n    );\n    // Sort by net score and rating for board placement.\n    reducedResults.sort(\n        firstBy(\n            /** @param {[PlayerData, PlayerData, number]} pair */\n            (pair) => pair[0].score + pair[1].score,\n            -1\n        ).thenBy(\n            /** @param {[PlayerData, PlayerData, number]} pair */\n            (pair) => pair[0].rating + pair[1].rating,\n            -1\n        )\n    );\n    // Turn the results into new match objects.\n    const matches = reducedResults.map(\n        function (pair) {\n            const player1 = pair[0];\n            const player2 = pair[1];\n            // const ideal = pair[2];\n            const match = [player1.id, player2.id];\n            if (player1.colorBalance < player2.colorBalance) {\n                match.reverse();\n            }\n            return match;\n        }\n    );\n    // The bye match always gets added last so as not to affect the numbering.\n    if (byeMatch) {\n        matches.push(byeMatch);\n    }\n    return matches;\n}\n","import {curry} from \"ramda\";\nimport {BLACK, WHITE} from \"../data/constants\";\nimport {createMatch} from \"../data/factories\";\nimport {dummyPlayer, getPlayerById} from \"../data/player\";\nimport {hasHadBye} from \"../pairing-scoring/scoring\";\nimport pairPlayers from \"../pairing-scoring/pairing\";\n/**\n * @typedef {import(\"../data/index\").Player} Player\n * @typedef {import(\"../data/index\").Tournament} Tournament\n*/\n\n/**\n * @param {Tournament} tourney\n * @param {number} roundId\n * @param {import(\"./dispatch\").PlayerState} playerState\n * @param {number[]} unPairedPlayers\n * @param {number} byeValue\n */\nexport function autoPair(\n    tourney,\n    playerState,\n    roundId,\n    unPairedPlayers,\n    byeValue\n) {\n    const roundList = tourney.roundList;\n    const getPlayer = curry(getPlayerById)(playerState.players);\n    const nextBye = tourney.byeQueue.filter(\n        (pId) => !hasHadBye(pId, roundList)\n    )[0];\n    let byeMatch = null;\n    if (nextBye >= 0) {\n        byeMatch = createMatch({\n            id: nextBye + \"-\" + dummyPlayer.id,\n            players: [nextBye, dummyPlayer.id],\n            origRating: [\n                getPlayer(nextBye).rating,\n                dummyPlayer.rating\n            ],\n            newRating: [\n                getPlayer(nextBye).rating,\n                dummyPlayer.rating\n            ]\n        });\n        unPairedPlayers = unPairedPlayers.filter((pId) => pId !== nextBye);\n    }\n    const pairs = pairPlayers(\n        unPairedPlayers,\n        roundId,\n        roundList,\n        playerState.players,\n        playerState.avoid\n    );\n    const newMatchList = pairs.map(\n        (pair) => createMatch({\n            id: pair.join(\"-\"),\n            players: [pair[WHITE], pair[BLACK]],\n            origRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ],\n            newRating: [\n                getPlayer(pair[WHITE]).rating,\n                getPlayer(pair[BLACK]).rating\n            ]\n        })\n    );\n    if (byeMatch) {\n        newMatchList.push(byeMatch);\n    }\n    // this covers manual bye matches and auto-paired bye matches\n    newMatchList.forEach(function (match) {\n        const dummy = match.players.indexOf(dummyPlayer.id);\n        if (dummy === BLACK) {\n            match.result[WHITE] = byeValue;\n        }\n        if (dummy === WHITE) {\n            match.result[BLACK] = byeValue;\n        }\n    });\n    return newMatchList;\n}\n\n/**\n * @param {Player[]} players\n * @param {number[]} pair\n * @param {number} byeValue\n */\nexport function manualPair(players, pair, byeValue) {\n    const getPlayer = curry(getPlayerById)(players);\n    const match = createMatch({\n        id: pair.join(\"-\"),\n        players: [pair[WHITE], pair[BLACK]],\n        origRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ],\n        newRating: [\n            getPlayer(pair[WHITE]).rating,\n            getPlayer(pair[BLACK]).rating\n        ]\n    });\n    if (pair[WHITE] === dummyPlayer.id) {\n        match.result = [0, byeValue];\n    }\n    if (pair[BLACK] === dummyPlayer.id) {\n        match.result = [byeValue, 0];\n    }\n    return match;\n}\n","import {createContext, createElement, useContext, useReducer} from \"react\";\n// This will cause Webpack to import the entire Ramda library, but we're using\n// so much of it that cherry-picking individual files has virtually no benefit.\nimport {\n    __,\n    append,\n    concat,\n    difference,\n    lensPath,\n    mergeRight,\n    filter,\n    findIndex,\n    move,\n    over,\n    propEq,\n    remove,\n    reverse,\n    set\n} from \"ramda\";\nimport defaultTourneyList from \"./demo-tourney.json\";\nimport {autoPair, manualPair} from \"./match-functions\";\nimport {createTournament} from \"../data/factories\";\n/**\n * @typedef {import(\"./dispatch\").Action} Action\n * @typedef {import(\"../data/index\").Tournament} Tournament\n */\n\n/** @type {Tournament[]} */\n// @ts-ignore\nconst defaultData = defaultTourneyList;\n\n/**\n * @param {Tournament[]} state\n * @param {Action} action\n * @returns {Tournament[]}\n */\nfunction tourneysReducer(state, action) {\n    switch (action.type) {\n    case \"ADD_TOURNEY\":\n        return append(createTournament({name: action.name}), state);\n    case \"DEL_TOURNEY\":\n        return state.filter((ignore, i) => i !== action.index);\n    case \"ADD_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            append([]),\n            state\n        );\n    case \"DEL_LAST_ROUND\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\"]),\n            remove(-1, 1),\n            state\n        );\n    case \"ADD_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            append(action.id),\n            state\n        );\n    case \"DEL_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            filter((id) => id !== action.id),\n            state\n        );\n    case \"MOVE_TIEBREAK\":\n        return over(\n            lensPath([action.tourneyId, \"tieBreaks\"]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"SET_TOURNEY_PLAYERS\":\n        return set(\n            lensPath([action.tourneyId, \"players\"]),\n            action.players,\n            state\n        );\n    case \"SET_BYE_QUEUE\":\n        return set(\n            lensPath([action.tourneyId, \"byeQueue\"]),\n            action.byeQueue,\n            state\n        );\n    case \"AUTO_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            concat(\n                // @ts-ignore\n                __,\n                autoPair(\n                    state[action.tourneyId],\n                    action.playerState,\n                    action.roundId,\n                    action.unpairedPlayers,\n                    action.byeValue\n                )\n            ),\n            state\n        );\n    case \"MANUAL_PAIR\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            append(manualPair(action.players, action.pair, action.byeValue)),\n            state\n        );\n    case \"SET_MATCH_RESULT\":\n        return set(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                ),\n                \"result\"\n            ]),\n            action.result,\n            set(\n                lensPath([\n                    action.tourneyId,\n                    \"roundList\",\n                    action.roundId,\n                    findIndex(\n                        propEq(\"id\", action.matchId),\n                        state[action.tourneyId].roundList[action.roundId]\n                    ),\n                    \"newRating\"\n                ]),\n                action.newRating,\n                state\n            )\n        );\n    case \"DEL_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            filter((match) => match.id !== action.matchId),\n            state\n        );\n    case \"SWAP_COLORS\":\n        return over(\n            lensPath([\n                action.tourneyId,\n                \"roundList\",\n                action.roundId,\n                findIndex(\n                    propEq(\"id\", action.matchId),\n                    state[action.tourneyId].roundList[action.roundId]\n                )\n            ]),\n            (match) => mergeRight(\n                match,\n                {\n                    result: reverse(match.result),\n                    players: reverse(match.players),\n                    origRating: reverse(match.origRating),\n                    newRating: reverse(match.newRating)\n                }\n            ),\n            state\n        );\n    case \"MOVE_MATCH\":\n        return over(\n            lensPath([action.tourneyId, \"roundList\", action.roundId]),\n            move(action.oldIndex, action.newIndex),\n            state\n        );\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type \" + action.type);\n    }\n}\n\n/** @type {[Tournament[], React.Dispatch<Action>]} */\nconst defaultContext = null;\nconst TournamentContext = createContext(defaultContext);\n\nexport function useTournaments() {\n    return useContext(TournamentContext);\n}\n\n/**\n * @param {number} [tourneyId]\n * @returns {[Tournament, React.Dispatch<Action>]}\n */\nexport function useTournament(tourneyId) {\n    const [tourneys, dispatch] = useContext(TournamentContext);\n    return [tourneys[tourneyId], dispatch];\n}\n\n/**\n * @param {number} tourneyId\n * @param {number} roundId\n */\nexport function useRound(tourneyId, roundId) {\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const matchList = tourney.roundList[roundId];\n    const matched = matchList.reduce(\n        (acc, match) => acc.concat(match.players),\n        []\n    );\n    const unmatched = difference(tourney.players, matched);\n    return {tourney, dispatch, unmatched, matchList};\n}\n\n/**\n * @param {Object} props\n */\nexport function TournamentProvider(props) {\n    const [state, dispatch] = useReducer(tourneysReducer, defaultData);\n    return (\n        createElement(\n            TournamentContext.Provider,\n            {value: [state, dispatch]},\n            props.children\n        )\n    );\n}\n","import {createContext, createElement, useContext, useReducer} from \"react\";\nimport {assoc} from \"ramda\";\nimport defaultOptions from \"./demo-options.json\";\n/**\n * @typedef {import(\"./dispatch\").OptionAction} OptionAction\n */\n\n/**\n * @param {typeof defaultOptions} state\n * @param {OptionAction} action\n */\nfunction reducer(state, action) {\n    switch (action.type) {\n    case \"SET_BYE_VALUE\":\n        return assoc(\"byeValue\", action.byeValue, state);\n    case \"LOAD_STATE\":\n        return action.state;\n    default:\n        throw new Error(\"Unexpected action type.\");\n    }\n}\n\n/** @type {[typeof defaultOptions, React.Dispatch<OptionAction>]} */\nconst defaultContext = null;\nconst OptionsContext = createContext(defaultContext);\n\nexport function useOptions() {\n    return useContext(OptionsContext);\n}\n\n/**\n * @param {Object} props\n */\nexport function OptionsProvider(props) {\n    const [data, dispatch] = useReducer(reducer, defaultOptions);\n    return (\n        createElement(\n            OptionsContext.Provider,\n            {value: [data, dispatch]},\n            props.children\n        )\n    );\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport numeral from \"numeral\";\nimport {usePlayers} from \"../state\";\nimport styles from \"./utility.module.css\";\nimport {DUMMY_ID} from \"../data/constants\";\n\n/**\n * @typedef {(event: React.MouseEvent | React.KeyboardEvent) => void} Action\n */\n\n/** @param {{children: JSX.Element | string, action: Action}} props */\nexport const Button = ({children, action}) => (\n    <button onClick={action}>\n        {children}\n    </button>\n);\n\n/** @param {{action: Action}} action */\nexport const BackButton = ({action}) => (\n    <Button action={action}>&lt; Back</Button>\n);\n\n/** @param {{action: Action}} action */\nexport const OpenButton = ({action}) => (\n    <Button action={action}>Open &gt;</Button>\n);\n\n/**\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.CSSProperties} [props.style]\n */\nexport function Panel({children, style}) {\n    return (\n        <div style={{...style}} className={styles.panel}>\n            {children}\n        </div>\n    );\n}\n\n/**\n *\n * @param {object} props\n */\nexport function PanelContainer(props) {\n    return (\n        <div {...props} className={styles.panels}>\n            {React.Children.map(props.children, (child) => child)}\n        </div>\n    );\n}\n\n/**\n * @param {Object} props\n */\nexport function PlayerLink({id, firstName, lastName}) {\n    const {getPlayer} = usePlayers();\n    if (id === DUMMY_ID) {\n        return ( // there's no bye player profile\n            <span>\n                {firstName && getPlayer(id).firstName}{\" \"}\n                {lastName && getPlayer(id).lastName}\n            </span>\n        );\n    }\n    return (\n        <Link to={\"/players/\" + id}>\n            {firstName && getPlayer(id).firstName}{\" \"}\n            {lastName && getPlayer(id).lastName}\n        </Link>\n    );\n}\n\n// let's make a custom numeral format. I don't really know how this works.\nnumeral.register(\"format\", \"half\", {\n    regexps: {\n        format: /(1\\/2)/,\n        unformat: /(1\\/2)/\n    },\n    // @ts-ignore\n    // eslint-disable-next-line no-unused-vars\n    format: function (value, format, roundingFunction) {\n        /** @type {number | string} */\n        let whole = Math.floor(value);\n        /** @type {number | string} */\n        let remainder = value - whole;\n        if (remainder === 0.5) {\n            remainder = \"½\";\n        } else if (remainder === 0) {\n            remainder = \"\";\n        }\n        if (whole === 0 && remainder) {\n            whole = \"\";\n        }\n        // let output = numeral._.numberToFormat(value, format, roundingFunction);\n        // return output;\n        return String(whole) + remainder;\n    },\n    /** @param {string} value */\n    unformat: function (value) {\n        return Number(value); // doesn't work... todo?\n    }\n});\n","/**\n * @param {number} playerCount\n */\nexport function calcNumOfRounds(playerCount) {\n    const rounds = Math.ceil(Math.log2(playerCount));\n    return (\n        (Number.isFinite(rounds))\n        ? rounds\n        : 0\n    );\n}\n\n/**\n * @template {object} T\n * @param {T[]} list\n * @param {number | string} id\n * @returns {T}\n */\nexport function getById(list, id) {\n    return list.filter((x) => x.id === id)[0];\n}\n\n/**\n * @param {Object[]} list\n * @param {number | string} id\n */\nexport function getIndexById(list, id) {\n    return list.indexOf(getById(list, id));\n}\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport {genPlayerData} from \"../../../pairing-scoring/scoring\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport {getById} from \"../../../data/utility\";\n\n/**\n * @typedef {import(\"../../../data\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {string} props.matchId\n * @param {number} props.color\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PlayerMatchInfo({matchId, color, tourneyId, roundId}) {\n    const {tourney, matchList} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const match = getById(matchList, matchId);\n    const playerData = genPlayerData(\n        match.players[color],\n        playerState.players,\n        playerState.avoid,\n        tourney.roundList,\n        roundId\n    );\n    const colorBalance = playerData.colorBalance;\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {playerData.profile.firstName} {playerData.profile.lastName}\n            </h3>\n            <dt>Score</dt>\n            <dd>{playerData.score}</dd>\n            <dt>Rating</dt>\n            <dd data-testid={`rating-${playerData.id}`}>\n                {match.origRating[color]} (\n                {numeral(\n                    match.newRating[color] - match.origRating[color]\n                ).format(\"+0\")}\n                )\n            </dd>\n            <dt>Color balance</dt>\n            <dd>{prettyBalance}</dd>\n            <dt>Has had a bye round</dt>\n            <dd>{playerData.hasHadBye ? \"Yes\" : \"No\"}</dd>\n            <dt>Opponent history</dt>\n            <dd>\n                <ol>\n                    {playerData.opponentHistory.map((opId) => (\n                        <li key={opId}>\n                            {getPlayer(opId).firstName}{\" \"}\n                            {getPlayer(opId).lastName}\n                        </li>\n                    ))}\n                </ol>\n            </dd>\n        </dl>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport Edit from \"react-feather/dist/icons/edit\";\nimport Info from \"react-feather/dist/icons/info\";\nimport Check from \"react-feather/dist/icons/check\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {calcNewRatings} from \"../../../data/player\";\nimport {BLACK, WHITE, DUMMY_ID} from \"../../../data/constants\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport PlayerMatchInfo from \"./player-match-info\";\n// @ts-ignore\nimport {winnerSelect, selected} from \"./round.module.css\";\nimport \"@reach/dialog/styles.css\";\n\n/**\n * @typedef {import(\"../../../data\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {number} props.pos\n * @param {Match} props.match\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {string} props.selectedMatch\n * @param {React.Dispatch<React.SetStateAction<string>>} props.setSelectedMatch\n */\nexport default function MatchRow({\n    pos,\n    match,\n    tourneyId,\n    roundId,\n    selectedMatch,\n    setSelectedMatch\n}) {\n    const {tourney, dispatch} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    const [openModal, setOpenModal] = useState(false);\n    const resultCode = (function () {\n        if (match.result[0] > match.result[1]) {\n            return \"WHITE\";\n        } else if (match.result[1] > match.result[0]) {\n            return \"BLACK\";\n        } else if (match.result.every((x) => x === 0.5)) {\n            return \"DRAW\";\n        } else {\n            return \"NOTSET\";\n        }\n    }());\n    const whiteName = (\n        getPlayer(match.players[0]).firstName\n        + \" \"\n        + getPlayer(match.players[0]).lastName\n    );\n    const blackName = (\n        getPlayer(match.players[1]).firstName\n        + \" \"\n        + getPlayer(match.players[1]).lastName\n    );\n    /**\n     * @param {React.FocusEvent<HTMLSelectElement>} event\n     */\n    function setMatchResult(event) {\n        /** @type {[number, number]} */\n        const result = (function () {\n            switch (event.currentTarget.value) {\n            case \"WHITE\":\n                return [1, 0];\n            case \"BLACK\":\n                return [0, 1];\n            case \"DRAW\":\n                return [0.5, 0.5];\n            case \"NOTSET\":\n                return [0, 0];\n            default:\n                throw new Error();\n            }\n        }());\n        const white = getPlayer(match.players[WHITE]);\n        const black = getPlayer(match.players[BLACK]);\n        const newRating = (\n            (event.currentTarget.value === \"NOTSET\")\n            ? match.origRating\n            : calcNewRatings(\n                match.origRating,\n                [white.matchCount, black.matchCount],\n                result\n            )\n        );\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: white.id,\n            rating: newRating[WHITE]\n        });\n        playerDispatch({\n            type: \"SET_PLAYER_RATING\",\n            id: black.id,\n            rating: newRating[BLACK]\n        });\n        // if the result hasn't been scored yet, increment the matchCount\n        if (match.result.reduce((a, b) => a + b) === 0) {\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: white.id,\n                matchCount: white.matchCount + 1\n            });\n            playerDispatch({\n                type: \"SET_PLAYER_MATCHCOUNT\",\n                id: black.id,\n                matchCount: black.matchCount + 1\n            });\n        }\n        dispatch({\n            type: \"SET_MATCH_RESULT\",\n            tourneyId,\n            roundId,\n            matchId: match.id,\n            result,\n            newRating\n        });\n    }\n    return (\n        <tr className={match.id === selectedMatch ? selected : \"\"}>\n            <th className=\"table__number row__id\" scope=\"row\">{pos + 1}</th>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-white`}\n            >\n                {whiteName}{\" \"}\n                {resultCode === \"WHITE\" && (\n                    <span role=\"img\" aria-label=\"Winner\">\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td\n                className=\"table__player row__player\"\n                data-testid={`match-${pos}-black`}\n            >\n                {blackName}{\" \"}\n                {resultCode === \"BLACK\" && (\n                    <span role=\"img\" aria-label=\"Winner\">\n                        🏆\n                    </span>\n                )}\n            </td>\n            <td className=\"data__input row__controls\">\n                <select\n                    onBlur={setMatchResult}\n                    onChange={setMatchResult}\n                    disabled={match.players.includes(DUMMY_ID)}\n                    value={resultCode}\n                    className={winnerSelect}\n                >\n                    <option value=\"NOTSET\">\n                        Select a winner\n                    </option>\n                    <option value=\"WHITE\">\n                        {whiteName} won\n                    </option>\n                    <option value=\"BLACK\">\n                        {blackName} won\n                    </option>\n                    <option value=\"DRAW\">\n                        Draw\n                    </option>\n                </select>\n            </td>\n            <td className=\"data__input row__controls\">\n                {(selectedMatch !== match.id)\n                ? (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(match.id)}\n                        title=\"Edit match\"\n                    >\n                        <Edit />\n                    </button>\n                ) : (\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setSelectedMatch(null)}\n                        title=\"End editing match\"\n                    >\n                        <Check />\n                    </button>\n                )}\n                <button\n                    className=\"iconButton\"\n                    onClick={() => setOpenModal(true)}\n                    title=\"Open match information.\"\n                >\n                    <Info />\n                    <Hidden>\n                        View information for match:{\" \"}\n                        {whiteName} versus {blackName}\n                    </Hidden>\n                </button>\n                <Dialog isOpen={openModal}>\n                    <button onClick={() => setOpenModal(false)}>\n                        close\n                    </button>\n                    <p>{tourney.name}</p>\n                    <p>Round {roundId + 1}, match {pos + 1}</p>\n                    <PanelContainer>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={0}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                        <Panel>\n                            <PlayerMatchInfo\n                                matchId={match.id}\n                                color={1}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                            />\n                        </Panel>\n                    </PanelContainer>\n                </Dialog>\n            </td>\n        </tr>\n    );\n}\n","import React, {useState} from \"react\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\nimport Users from \"react-feather/dist/icons/users\";\nimport MatchRow from \"./match-row\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {getById, getIndexById} from \"../../../data/utility\";\nimport {useRound, usePlayers} from \"../../../state\";\nimport style from \"./round.module.css\";\n\n/**\n * @param {Object} props\n * @param {number} props.roundId\n * @param {number} props.tourneyId\n * @param {React.Dispatch<React.SetStateAction<boolean>>} props.setIsPickView\n */\nexport default function Round({roundId, tourneyId, setIsPickView}) {\n    const {matchList, dispatch, unmatched} = useRound(tourneyId, roundId);\n    const {playerDispatch, getPlayer} = usePlayers();\n    /** @type {string} */\n    const defaultMatch = null;\n    const [selectedMatch, setSelectedMatch] = useState(defaultMatch);\n    if (!matchList) {\n        throw new Error(\"Round \" + roundId + \" does not exist.\");\n    }\n    /** @param {string} matchId */\n    function unMatch(matchId) {\n        const match = getById(matchList, matchId);\n        if (match.result.reduce((a, b) => a + b) !== 0) {\n            // checks if the match has been scored yet & resets the players'\n            // records\n            match.players.forEach(function (pId, color) {\n                playerDispatch({\n                    type: \"SET_PLAYER_MATCHCOUNT\",\n                    id: pId,\n                    matchCount: getPlayer(pId).matchCount - 1\n                });\n                playerDispatch({\n                    type: \"SET_PLAYER_RATING\",\n                    id: pId,\n                    rating: match.origRating[color]\n                });\n            });\n        }\n        dispatch({type: \"DEL_MATCH\", tourneyId, roundId, matchId});\n        setSelectedMatch(null);\n    }\n    /** @param {string} matchId */\n    function swapColors(matchId) {\n        dispatch({type: \"SWAP_COLORS\", tourneyId, roundId, matchId});\n    }\n    /**\n     * @param {string} matchId\n     * @param {number} direction\n     */\n    function moveMatch(matchId, direction) {\n        const oldIndex = getIndexById(matchList, matchId);\n        const newIndex = (\n            (oldIndex + direction >= 0)\n            ? oldIndex + direction\n            : 0\n        );\n        dispatch({type: \"MOVE_MATCH\", tourneyId, roundId, oldIndex, newIndex});\n    }\n    return (\n        <PanelContainer data-testid={\"round-\" + roundId}>\n            <Panel>\n                <div className={style.toolbar}>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => setIsPickView(true)}\n                        disabled={unmatched.length === 0}\n                        title=\"View unmatched players.\"\n                    >\n                        <Users /> View unmatched players{\" \"}\n                        {unmatched.length > 0 && `(${unmatched.length})`}\n                    </button>\n                    <button\n                        className=\"danger iconButton\"\n                        onClick={() => unMatch(selectedMatch)}\n                        disabled={selectedMatch === null}\n                    >\n                        <Trash /> Unmatch\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => swapColors(selectedMatch)}\n                        disabled={selectedMatch === null}\n                    >\n                        <Repeat /> Swap colors\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => moveMatch(selectedMatch, -1)}\n                        disabled={selectedMatch === null}\n                    >\n                        <ArrowUp /> Move up\n                    </button>\n                    <button\n                        className=\"iconButton\"\n                        onClick={() => moveMatch(selectedMatch, 1)}\n                        disabled={selectedMatch === null}\n                    >\n                        <ArrowDown/> Move down\n                    </button>\n                </div>\n                {(matchList.length === 0) &&\n                    <p>No players matched yet.</p>\n                }\n                <table className={style.table}>\n                    {(matchList.length > 0) &&\n                        <caption>Round {roundId + 1} results</caption>\n                    }\n                    <tbody>\n                        {(matchList.length > 0) &&\n                            <tr>\n                                <th className=\"row__id\" scope=\"col\">\n                                    #\n                                </th>\n                                <th className=\"row__player\" scope=\"col\">\n                                    White\n                                </th>\n                                <th className=\"row__player\" scope=\"col\">\n                                    Black\n                                </th>\n                                <th className=\"row__result\" scope=\"col\">\n                                    Result\n                                </th>\n                                <th className=\"row__controls\" scope=\"col\">\n                                    Controls\n                                </th>\n                            </tr>\n                        }\n                        {matchList.map((match, pos) => (\n                            <MatchRow\n                                key={match.id}\n                                pos={pos}\n                                match={match}\n                                tourneyId={tourneyId}\n                                roundId={roundId}\n                                selectedMatch={selectedMatch}\n                                setSelectedMatch={setSelectedMatch}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n            </Panel>\n        </PanelContainer>\n    );\n}\n","import React, {useState} from \"react\";\nimport {usePlayers} from \"../../state\";\nimport {assoc} from \"ramda\";\n\nexport default function NewPlayer() {\n    const {playerDispatch} = usePlayers();\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        const {firstName, lastName, rating} = newPlayerData;\n        setNewPlayerdata(newPlayerDefault);\n        playerDispatch({type: \"ADD_PLAYER\", firstName, lastName, rating});\n    };\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    const updateField = function (event) {\n        event.preventDefault();\n        const {name, value} = event.currentTarget;\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <legend>Register a new player</legend>\n                <p>\n                    <label>\n                        First name{\" \"}\n                        <input type=\"text\" name=\"firstName\"\n                            onChange={updateField}\n                            value={newPlayerData.firstName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Last name{\" \"}\n                        <input type=\"text\" name=\"lastName\"\n                            onChange={updateField}\n                            value={newPlayerData.lastName} required />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                        Rating {\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            onChange={updateField}\n                            value={newPlayerData.rating}\n                            required />\n                    </label>\n                </p>\n                <p>\n                    <input type=\"submit\" value=\"Add\"/>\n                </p>\n            </fieldset>\n        </form>\n    );\n}\n","import React from \"react\";\nimport NewPlayer from \"../../players/new-player\";\nimport {useTournament, usePlayers} from \"../../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function Selecting({tourneyId}) {\n    const [{players}, dispatch] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function togglePlayer(event) {\n        const id = Number(event.target.value);\n        if (event.target.checked) {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.concat([id]),\n                tourneyId\n            });\n        } else {\n            dispatch({\n                type: \"SET_TOURNEY_PLAYERS\",\n                players: players.filter((pId) => pId !== id),\n                tourneyId\n            });\n        }\n    }\n    return (\n        <div>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: playerState.players.map(\n                            (p) => p.id\n                        ),\n                        tourneyId\n                    })\n                }\n            >\n                Select all\n            </button>\n            <button\n                onClick={() =>\n                    dispatch({\n                        type: \"SET_TOURNEY_PLAYERS\",\n                        players: [],\n                        tourneyId\n                    })\n                }\n            >\n                Select none\n            </button>\n            {/* <button onClick={() => setIsSelecting(false)}>\n                Done\n            </button> */}\n            <table>\n                <caption>Select players</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Select</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {playerState.players.map(({id}) => (\n                        <tr key={id}>\n                            <td>{getPlayer(id).firstName}</td>\n                            <td>{getPlayer(id).lastName}</td>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    value={id}\n                                    checked={players.includes(id)}\n                                    onChange={togglePlayer}\n                                />\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport {set, lensIndex, append} from \"ramda\";\nimport {Dialog} from \"@reach/dialog\";\nimport Hidden from \"@reach/visually-hidden\";\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\nimport Selecting from \"../player-select/selecting\";\nimport {useRound, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK, DUMMY_ID} from \"../../../data/constants\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {[number, number]} props.stagedPlayers\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\n */\nexport default function PairPicker({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {dispatch, unmatched} = useRound(tourneyId, roundId);\n    const {playerState, getPlayer} = usePlayers();\n    const [{byeValue}] = useOptions();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    /** @param {number} id */\n    function selectPlayer(id) {\n        if (stagedPlayers[WHITE] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(WHITE), id, prevState)\n            );\n        } else if (stagedPlayers[BLACK] === null) {\n            setStagedPlayers(\n                (prevState) => set(lensIndex(BLACK), id, prevState)\n            );\n        }\n        // else... nothing happens\n    }\n    // make a new list so as not to affect auto-pairing\n    const unmatchedWithDummy = (\n        (unmatched.length % 2 !== 0)\n        ? append(DUMMY_ID, unmatched)\n        : unmatched\n    );\n    if (unmatched.length === 0) {\n        return null;\n    }\n    return (\n        <div>\n            <h3>Unmatched players</h3>\n            <button\n                onClick={() => dispatch({\n                    type: \"AUTO_PAIR\",\n                    unpairedPlayers: unmatched,\n                    tourneyId,\n                    roundId,\n                    playerState,\n                    byeValue\n                })}\n                disabled={unmatched.length === 0}\n            >\n                Auto-pair unmatched players\n            </button><br/>\n            <button onClick={() => setIsModalOpen(true)}>\n                Add or remove players from the roster.\n            </button>\n            <ul>\n                {unmatchedWithDummy.map((pId) => (\n                    <li key={pId}>\n                        {stagedPlayers.includes(pId)\n                        ? <button disabled>Selected</button>\n                        : (\n                            <button\n                                disabled={!stagedPlayers.includes(null)}\n                                onClick={() => selectPlayer(pId)}\n                            >\n                                <UserPlus/>\n                                <Hidden>\n                                    Select {getPlayer(pId).firstName}{\" \"}\n                                    {getPlayer(pId).lastName}\n                                </Hidden>\n                            </button>\n                        )}{\" \"}\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ul>\n            <Dialog isOpen={isModalOpen}>\n                <button onClick={() => setIsModalOpen(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </div>\n    );\n}\n","import React, {Fragment} from \"react\";\nimport {set, lensIndex} from \"ramda\";\nimport Repeat from \"react-feather/dist/icons/repeat\";\nimport Check from \"react-feather/dist/icons/check\";\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\nimport {useTournament, usePlayers, useOptions} from \"../../../state\";\nimport {WHITE, BLACK} from \"../../../data/constants\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {[number, number]} props.stagedPlayers\n * @param {React.Dispatch<React.SetStateAction<[number, number]>>} props.setStagedPlayers\n */\nexport default function Stage({\n    tourneyId,\n    roundId,\n    stagedPlayers,\n    setStagedPlayers\n}) {\n    const {playerState, getPlayer} = usePlayers();\n    const {players} = playerState;\n    const dispatch = useTournament(tourneyId)[1];\n    const [{byeValue}] = useOptions();\n    const [white, black] = stagedPlayers;\n    /** @param {typeof WHITE | typeof BLACK} color */\n    function unstage(color) {\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\n    }\n    function match() {\n        dispatch({\n            type: \"MANUAL_PAIR\",\n            pair: [white, black],\n            tourneyId,\n            roundId,\n            byeValue,\n            players\n        });\n        setStagedPlayers([null, null]);\n    }\n    return (\n        <div>\n            <h2>Selected for matching:</h2>\n            <p>\n                White:{\" \"}\n                {white !== null &&\n                    <Fragment>\n                        {getPlayer(white).firstName}{\" \"}\n                        {getPlayer(white).lastName}{\" \"}\n                        <button onClick={() => unstage(WHITE)}>\n                            <UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <p>\n                Black:{\" \"}\n                {black !== null &&\n                    <Fragment>\n                        {getPlayer(black).firstName}{\" \"}\n                        {getPlayer(black).lastName}{\" \"}\n                        <button onClick={() => unstage(BLACK)}>\n                            <UserMinus /> Remove\n                        </button>\n                    </Fragment>\n                }\n            </p>\n            <button\n                onClick={() => setStagedPlayers(\n                    (prevState) => ([prevState[BLACK], prevState[WHITE]])\n                )}\n                disabled={\n                    stagedPlayers.every((id) => id === null)\n                }\n            >\n                <Repeat/> Swap colors\n            </button>{\" \"}\n            <button\n                onClick={match}\n                disabled={stagedPlayers.includes(null)}\n            >\n                <Check/> Match selected\n            </button>{\" \"}\n        </div>\n    );\n}\n","// this component should eventually replace player-match-info.jsx\nimport React from \"react\";\nimport {genPlayerData} from \"../../../pairing-scoring/scoring\";\nimport {useTournament, usePlayers} from \"../../../state\";\n\n/**\n * @typedef {import(\"../../../data\").Match} Match\n */\n\n/**\n * @param {Object} props\n * @param {number} props.playerId\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n */\nexport default function PlayerInfo({playerId, tourneyId, roundId}) {\n    const [{roundList}] = useTournament(tourneyId);\n    const {playerState, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const {\n        profile,\n        rating,\n        score,\n        colorBalance,\n        hasHadBye,\n        opponentHistory,\n        avoidList\n    } = genPlayerData(playerId, players, avoid, roundList, roundId);\n    const prettyBalance = (function () {\n        if (colorBalance < 0) {\n            return \"White +\" + Math.abs(colorBalance);\n        } else if (colorBalance > 0) {\n            return \"Black +\" + colorBalance;\n        } else {\n            return \"Even\";\n        }\n    }());\n    return (\n        <dl className=\"player-card\">\n            <h3>\n                {profile.firstName} {profile.lastName}\n            </h3>\n            <p>Score: {score}</p>\n            <p>Rating: {rating}</p>\n            <p>Color balance: {prettyBalance}</p>\n            <p>Has had a bye round: {hasHadBye ? \"Yes\" : \"No\"}</p>\n            <p>Opponent history:</p>\n            <ol>\n                {opponentHistory.map((opId) => (\n                    <li key={opId}>\n                        {getPlayer(opId).firstName}{\" \"}\n                        {getPlayer(opId).lastName}\n                    </li>\n                ))}\n            </ol>\n            <p>\n                Players to avoid:\n            </p>\n            <ol>\n                {avoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\n                    </li>\n                ))}\n            </ol>\n        </dl>\n    );\n}\n","import React, {useState} from \"react\";\nimport List from \"react-feather/dist/icons/list\";\nimport SelectList  from \"./pair-picker\";\nimport Stage from \"./stage\";\nimport PlayerInfo from \"./player-info\";\nimport {useRound} from \"../../../state\";\nimport {PanelContainer, Panel} from \"../../utility\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n * @param {number} props.roundId\n * @param {React.Dispatch<React.SetStateAction<boolean>>} props.setIsPickView\n */\nexport default function PairPicker({tourneyId, roundId, setIsPickView}) {\n    /** @type {[number, number]} */\n    const defaultPlayers = [null, null];\n    const [stagedPlayers, setStagedPlayers] = useState(defaultPlayers);\n    const {matchList} = useRound(tourneyId, roundId);\n    return (\n        <PanelContainer>\n            <Panel>\n                <button onClick={() => setIsPickView(false)}>\n                    <List/> View matches ({matchList.length})\n                </button>\n                <SelectList\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n            </Panel>\n            <Panel>\n                <Stage\n                    tourneyId={tourneyId}\n                    roundId={roundId}\n                    stagedPlayers={stagedPlayers}\n                    setStagedPlayers={setStagedPlayers}\n                />\n                <PanelContainer>\n                    {stagedPlayers.map((id) =>\n                        id !== null && (\n                            <Panel key={id}>\n                                <PlayerInfo\n                                    playerId={id}\n                                    tourneyId={tourneyId}\n                                    roundId={roundId}\n                                />\n                            </Panel>\n                        )\n                    )}\n                </PanelContainer>\n            </Panel>\n        </PanelContainer>\n    );\n}\n","import React, {useState, useEffect} from \"react\";\nimport Round from \"./round\";\nimport PairPicker from \"../pair-picker\";\nimport {useRound} from \"../../../state\";\n\n/**\n * @param {Object} props\n * @param {number} props.roundId\n * @param {number} props.tourneyId\n */\nexport default function Index({tourneyId, roundId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead\n    const {unmatched} = useRound(tourneyId, roundId);\n    const [isPickView, setIsPickView] = useState(unmatched.length > 0);\n    useEffect(\n        function () {\n            setIsPickView(unmatched.length > 0);\n        },\n        [unmatched.length]\n    );\n    if (isPickView) {\n        return (\n            <PairPicker\n                tourneyId={tourneyId}\n                roundId={roundId}\n                setIsPickView={setIsPickView}\n            />\n        );\n    } else {\n        return (\n            <Round\n                tourneyId={tourneyId}\n                roundId={roundId}\n                setIsPickView={setIsPickView}\n            />\n        );\n    }\n}\n","import React, {useState} from \"react\";\nimport numeral from \"numeral\";\nimport dashify from \"dashify\";\nimport {PanelContainer, Panel} from \"../utility\";\nimport {DUMMY_ID} from \"../../data/constants\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {calcStandings, tieBreakMethods} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n */\nfunction ScoreList({tourneyId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\n    const [{tieBreaks, roundList}] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [standingTree, tbMethods] = calcStandings(tieBreaks, roundList);\n    return (\n        <table className={style.table}>\n            <caption>Standings</caption>\n            <tbody>\n                <tr className={style.topHeader}>\n                    <th scope=\"col\">Rank</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Score</th>\n                    {tbMethods.map((name, i) => (\n                        <th key={i} scope=\"col\">\n                            {name}\n                        </th>\n                    ))}\n                </tr>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.filter(\n                        (p) => p.id !== DUMMY_ID\n                    ).map((standing, j, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {j === 0 && ( // Only display the rank once\n                                <th\n                                    scope=\"row\"\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                >\n                                    {numeral(rank + 1).format(\"0o\")}\n                                </th>\n                            )}\n                            <th\n                                scope=\"row\"\n                                className={style.playerName}\n                                data-testid={rank}\n                            >\n                                {getPlayer(standing.id).firstName}&nbsp;\n                                {getPlayer(standing.id).lastName}\n                            </th>\n                            <td\n                                className=\"table__number\"\n                                data-testid={dashify(\n                                    getPlayer(standing.id).firstName\n                                    + getPlayer(standing.id).lastName\n                                    + \" score\"\n                                )}\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            {standing.tieBreaks.map((score, i) => (\n                                <td\n                                    key={i}\n                                    className=\"table__number\"\n                                    data-testid={dashify(\n                                        getPlayer(standing.id).firstName\n                                        + getPlayer(standing.id).lastName\n                                        + tbMethods[i]\n                                    )}\n                                >\n                                    {numeral(score).format(\"1/2\")}\n                                </td>\n                            ))}\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n */\nfunction SelectTieBreaks({tourneyId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\n    const [{tieBreaks}, dispatch] = useTournament(tourneyId);\n    const [selectedTb, setSelectedTb] = useState(null);\n    /** @param {number} [id] */\n    function toggleTb(id = null) {\n        if (!id) {\n            id = selectedTb;\n        }\n        if (tieBreaks.includes(id)) {\n            dispatch({type: \"DEL_TIEBREAK\", id, tourneyId});\n        } else {\n            dispatch({type: \"ADD_TIEBREAK\", id, tourneyId});\n        }\n    }\n    /** @param {number} direction */\n    function moveTb(direction) {\n        const index = tieBreaks.indexOf(selectedTb);\n        dispatch({\n            type: \"MOVE_TIEBREAK\",\n            oldIndex: index,\n            newIndex: index + direction,\n            tourneyId\n        });\n    }\n    return (\n        <div>\n            <h3>Selected tiebreak methods</h3>\n            <div className=\"toolbar\">\n                <button\n                    onClick={() => toggleTb()}\n                    disabled={selectedTb === null}\n                >\n                    Toggle\n                </button>\n                <button\n                    onClick={() => moveTb(-1)}\n                    disabled={selectedTb === null}\n                >\n                    Move up\n                </button>\n                <button\n                    onClick={() => moveTb(1)}\n                    disabled={selectedTb === null}\n                >\n                    Move down\n                </button>\n                <button\n                    onClick={() => setSelectedTb(null)}\n                    disabled={selectedTb === null}\n                >\n                    Done\n                </button>\n            </div>\n            <ol>\n                {tieBreaks.map((id) => (\n                    <li key={id}>\n                        {tieBreakMethods[id].name}\n                        <button\n                            onClick={() =>\n                                selectedTb === id\n                                    ? setSelectedTb(null)\n                                    : setSelectedTb(id)\n                            }\n                            disabled={\n                                selectedTb !== null && selectedTb !== id\n                            }\n                        >\n                            {selectedTb === id ? \"Done\" : \"Edit\"}\n                        </button>\n                    </li>\n                ))}\n            </ol>\n            <h3>Available tiebreak methods</h3>\n            <ol>\n                {tieBreakMethods.map((method, i) => (\n                    <li key={i}>\n                        <span\n                            className={\n                                tieBreaks.includes(i)\n                                    ? \"enabled\"\n                                    : \"disabled\"\n                            }\n                        >\n                            {method.name}\n                        </span>\n                        {!tieBreaks.includes(i) && (\n                            <button onClick={() => toggleTb(i)}>\n                                Add\n                            </button>\n                        )}\n                    </li>\n                ))}\n            </ol>\n        </div>\n    );\n}\n\n/**\n * @param {Object} props\n * @param {number} props.tourneyId\n */\nconst Scores = ({tourneyId}) => (\n    <PanelContainer>\n        <Panel>\n            <ScoreList tourneyId={tourneyId}/>\n        </Panel>\n        <Panel>\n            <SelectTieBreaks tourneyId={tourneyId}/>\n        </Panel>\n    </PanelContainer>\n);\n\nexport default Scores;\n","// This will probably get merged with scores.jsx at some point\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport {DUMMY_ID} from \"../../data/constants\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {calcStandings} from \"../../pairing-scoring/scoring\";\nimport style from \"./scores.module.css\";\n/**\n * @param {Object} props\n */\nexport default function Status({tourneyId}) {\n    const [{tieBreaks, roundList}] = useTournament(Number(tourneyId));\n    const {getPlayer} = usePlayers();\n    const [standingTree] = calcStandings(tieBreaks, roundList);\n    return (\n        <table className={style.table}>\n            <caption>Tournament Status</caption>\n            <tbody>\n                <tr>\n                    <th>Rank</th>\n                    <th>Name</th>\n                    <th>Score</th>\n                    <th>Rating</th>\n                </tr>\n                {standingTree.map((standingsFlat, rank) =>\n                    standingsFlat.filter(\n                        (p) => p.id !== DUMMY_ID\n                    ).map((standing, j, src) => (\n                        <tr key={standing.id} className={style.row}>\n                            {j === 0 && ( // Only display the rank once\n                                <th\n                                    scope=\"row\"\n                                    className={\"table__number \" + style.rank}\n                                    rowSpan={src.length}\n                                >\n                                    {numeral(rank + 1).format(\"0o\")}\n                                </th>\n                            )}\n                            <th\n                                scope=\"row\"\n                                className={style.playerName}\n                                data-testid={rank}\n                            >\n                                {getPlayer(standing.id).firstName}&nbsp;\n                                {getPlayer(standing.id).lastName}\n                            </th>\n                            <td\n                                className=\"table__number\"\n                            >\n                                {numeral(standing.score).format(\"1/2\")}\n                            </td>\n                            <td className=\"table__number\">\n                                {getPlayer(standing.id).rating}\n                            </td>\n                        </tr>\n                    ))\n                )}\n            </tbody>\n        </table>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Dialog} from \"@reach/dialog\";\nimport Selecting from \"./selecting\";\nimport {useTournament, usePlayers} from \"../../../state\";\nimport {PanelContainer, Panel} from \"../../utility\";\nimport {hasHadBye} from \"../../../pairing-scoring/scoring\";\n\n/**\n * @param {Object} props\n */\nexport default function PlayerSelect({tourneyId}) {\n    const [{players, byeQueue, roundList}, dispatch] = useTournament(tourneyId);\n    const {getPlayer} = usePlayers();\n    const [isSelecting, setIsSelecting] = useState(players.length === 0);\n    return (\n        <PanelContainer>\n            <Panel>\n                <button onClick={() => setIsSelecting(true)}>\n                    Edit player roster\n                </button>\n                <table>\n                    <caption>Current roster</caption>\n                    <thead>\n                        <tr>\n                            <th>First name</th>\n                            <th>Last name</th>\n                            <th>Options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {players.map((pId) => (\n                            <tr\n                                key={pId}\n                                className={getPlayer(pId).type + \" player\"}\n                            >\n                                <td>{getPlayer(pId).firstName}</td>\n                                <td>{getPlayer(pId).lastName}</td>\n                                <td>\n                                    <button\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"SET_BYE_QUEUE\",\n                                                byeQueue: byeQueue.concat(\n                                                    [pId]\n                                                ),\n                                                tourneyId\n                                            })\n                                        }\n                                        disabled={byeQueue.includes(\n                                            pId\n                                        )}\n                                    >\n                                        Bye signup\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </Panel>\n            <Panel>\n                <h3>Bye queue</h3>\n                {(byeQueue.length === 0) &&\n                    <p>No players have signed up for a bye round.</p>\n                }\n                <ol>\n                    {byeQueue.map((pId) => (\n                        <li\n                            key={pId}\n                            className={\n                                hasHadBye(pId, roundList)\n                                    ? \"disabled\"\n                                    : \"\"\n                            }\n                        >\n                            {getPlayer(pId).firstName}{\" \"}\n                            {getPlayer(pId).lastName}\n                            <button\n                                onClick={() =>\n                                    dispatch({\n                                        type: \"SET_BYE_QUEUE\",\n                                        byeQueue: byeQueue.filter(\n                                            (id) => pId !== id\n                                        ),\n                                        tourneyId\n                                    })\n                                }\n                            >\n                                Remove\n                            </button>\n                        </li>\n                    ))}\n                </ol>\n            </Panel>\n            <Dialog isOpen={isSelecting}>\n                <button onClick={() => setIsSelecting(false)}>Done</button>\n                <Selecting tourneyId={tourneyId} />\n            </Dialog>\n        </PanelContainer>\n    );\n}\n","import React, {useState, useEffect, useMemo} from \"react\";\nimport {Tabs, TabList, Tab, TabPanels, TabPanel} from \"@reach/tabs\";\nimport Tooltip from \"@reach/tooltip\";\nimport {Link} from \"@reach/router\";\nimport last from \"ramda/src/last\";\nimport Check from \"react-feather/dist/icons/check-circle\";\nimport Alert from \"react-feather/dist/icons/alert-circle\";\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport Plus from \"react-feather/dist/icons/plus\";\nimport Round from \"./round/\";\nimport Scores from \"./scores\";\nimport Status from \"./status\";\nimport PlayerSelect from \"./player-select/index\";\nimport {useTournament, usePlayers} from \"../../state\";\nimport {calcNumOfRounds} from \"../../data/utility\";\nimport {DUMMY_ID} from \"../../data/constants\";\nimport \"@reach/tabs/styles.css\";\nimport \"@reach/tooltip/styles.css\";\nimport styles from \"./tournament.module.css\";\n\n/**\n * @param {Object} props\n * @param {string} [props.path]\n * @param {number} [props.tourneyId]\n */\nexport default function Tournament({tourneyId}) {\n    // eslint-disable-next-line fp/no-mutation\n    tourneyId = Number(tourneyId); // reach router passes a string instead.\n    const [tourney, dispatch] = useTournament(tourneyId);\n    const {name, players, roundList} = tourney;\n    const {playerState, getPlayer, playerDispatch} = usePlayers();\n    const [openTab, setOpenTab] = useState(0);\n    // This isn't expensive, but why not memoize it?\n    const isNewRoundReady = useMemo(\n        function () {\n            const lastRound = last(roundList);\n            if (!lastRound) {\n                return true;\n            }\n            const matchedPlayers = lastRound.reduce(\n                /** @param {number[]} acc */\n                (acc, match) => acc.concat(match.players),\n                []\n            );\n            const unMatchedPlayers = players.filter(\n                (pId) => !matchedPlayers.includes(pId)\n            );\n            const results = lastRound.map(\n                (match) => match.result[0] + match.result[1]\n            );\n            return (unMatchedPlayers.length === 0 && !results.includes(0));\n        },\n        [players, roundList]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = name;\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [name]\n    );\n    useEffect(\n        function () {\n            if (roundList.length === 0) {\n                setOpenTab(0); // go to the first tab\n            } else {\n                setOpenTab(roundList.length + 2); // go to the most recent round\n            }\n        },\n        [roundList.length]\n    );\n    const isItOver = roundList.length >= calcNumOfRounds(players.length);\n    /** @type {[string, boolean]} */\n    const [tooltipText, tooltipWarn] = (function () {\n        if (!isNewRoundReady) {\n            return [\n                \"You must complete the last round before beginning a new one.\",\n                true\n            ];\n        } else if (isItOver) {\n            return [\"All necessary rounds have completed.\", true];\n        } else {\n            return [\"Ready to begin a new round.\", false];\n        }\n    }());\n    function newRound() {\n        const confirmText = (\n            \"All rounds have completed. Are you sure you want to begin a new \"\n            + \"one?\"\n        );\n        if (isItOver) {\n            if (!window.confirm(confirmText)) {\n                return;\n            }\n        }\n        dispatch({type: \"ADD_ROUND\", tourneyId});\n        setOpenTab(roundList.length + 2);\n        return;\n    }\n    function delLastRound() {\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\n            // If a match has been scored, then reset it.\n            // Should this logic be somewhere else?\n            last(roundList).forEach(function (match) {\n                if (match.result[0] + match.result[1] === 0) {\n                    return; // Don't change players who haven't scored.\n                }\n                match.players.forEach(function (pId, color) {\n                    if (pId === DUMMY_ID) {\n                        return; // Don't try to set the dummy.\n                    }\n                    const {matchCount} = getPlayer(pId);\n                    playerDispatch({\n                        type: \"SET_PLAYER_MATCHCOUNT\",\n                        id: pId,\n                        matchCount: matchCount - 1\n                    });\n                    playerDispatch({\n                        type: \"SET_PLAYER_RATING\",\n                        id: pId,\n                        rating: match.origRating[color]\n                    });\n                });\n            });\n            dispatch({\n                type: \"DEL_LAST_ROUND\",\n                players: playerState.players,\n                tourneyId\n            });\n        }\n    }\n    return (\n        <Tabs index={openTab} onChange={(index) => setOpenTab(index)}>\n            <div>\n                <Link to=\"/\">\n                    <ChevronLeft/> Back\n                </Link>\n                <h2>{name}</h2>\n                <div className={styles.topToolbar}>\n                    <span className={styles.toolbarItem}>\n                        Round progress: {roundList.length}/\n                        {calcNumOfRounds(players.length)}{\" \"}\n                    </span>\n                    <span className={styles.toolbarItem}>\n                        <button\n                            onClick={newRound}\n                            disabled={!isNewRoundReady}\n                        >\n                            <Plus/> New round\n                        </button>{\" \"}\n                        <Tooltip label={tooltipText}>\n                            <span className=\"helpIcon\">\n                                {(tooltipWarn)\n                                    // @ts-ignore\n                                    ? <Alert className=\"status-alert\" />\n                                    // @ts-ignore\n                                    : <Check className=\"status-ok\" />\n                                }\n                            </span>\n                        </Tooltip>\n                    </span>\n                    <button\n                        className={\"danger \" + styles.toolbarItem}\n                        onClick={delLastRound}\n                        disabled={roundList.length === 0}\n                    >\n                        <Trash /> Remove last round\n                    </button>\n                </div>\n            </div>\n            <TabList>\n                <Tab>Players</Tab>\n                <Tab>Tournament status</Tab>\n                <Tab>Score detail</Tab>\n                {Object.keys(roundList).map((id) => (\n                    <Tab key={id}>Round {Number(id) + 1}</Tab>\n                ))}\n            </TabList>\n            <TabPanels>\n                <TabPanel>\n                    <PlayerSelect tourneyId={tourneyId} />\n                </TabPanel>\n                <TabPanel>\n                    <Status tourneyId={tourneyId} />\n                </TabPanel>\n                <TabPanel>\n                    <Scores tourneyId={tourneyId} />\n                </TabPanel>\n                {Object.keys(roundList).map((id) => (\n                    <TabPanel key={id}>\n                        <Round roundId={Number(id)} tourneyId={tourneyId} />\n                    </TabPanel>\n                ))}\n            </TabPanels>\n        </Tabs>\n    );\n}\n","import React, {useState} from \"react\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {Link} from \"@reach/router\";\nimport {useTournaments} from \"../../state\";\n\n/**\n * @param {Object} props\n */\nexport default function TournamentList(props) {\n    const [tourneys, dispatch] = useTournaments();\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function updateNewName(event) {\n        setNewTourneyName(event.target.value);\n    }\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function makeTournament(event) {\n        event.preventDefault();\n        dispatch({\n            type: \"ADD_TOURNEY\",\n            name: newTourneyName\n        });\n        setNewTourneyName(\"\");\n    }\n    return (\n        <div>\n            {(tourneys.length > 0) &&\n                <h2>Tournament list</h2>\n            }\n            {(tourneys.length > 0)\n                ?\n                <ol>\n                    {tourneys.map((tourney, i) =>\n                        <li key={i}>\n                            <Link to={String(i)}>\n                                {tourney.name}\n                            </Link>{\" \"}\n                            <button\n                                title={`Delete “${tourney.name}”`}\n                                aria-label={`Delete “${tourney.name}”`}\n                                className=\"danger iconButton\"\n                                onClick={\n                                    () => dispatch({\n                                        type: \"DEL_TOURNEY\",\n                                        index: i\n                                    })\n                                }>\n                                <Trash />\n                            </button>\n                        </li>\n                    )}\n                </ol>\n                : <p>No tournaments added yet.</p>\n            }\n            <form onSubmit={makeTournament}>\n                <fieldset>\n                    <legend>Make a new tournament</legend>\n                    <label>Name:{\" \"}\n                        <input\n                            type=\"text\"\n                            placeholder=\"tournament name\"\n                            value={newTourneyName}\n                            onChange={updateNewName}\n                            required={true}\n                        />\n                    </label>\n                    <input type=\"submit\" value=\"Create\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Tournament from \"./tournament\";\nimport TournamentList from \"./list\";\n\n/**\n * @param {Object} props\n */\nconst TournamentIndex = (props) => (\n    <div>\n        {props.children}\n    </div>\n);\n\nexport default TournamentIndex;\nexport {Tournament, TournamentList};\n","import React, {useMemo, useState, useEffect} from \"react\";\nimport numeral from \"numeral\";\n// import {Link} from \"@reach/router\";\n// import ChevronLeft from \"react-feather/dist/icons/chevron-left\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {getPlayerAvoidList, kFactor} from \"../../data/player\";\nimport {usePlayers} from \"../../state\";\n\n/**\n * @param {Object} props\n * @param {string | number} [props.playerId]\n * @param {string} [props.path]\n */\nexport default function PlayerInfoBox(props) {\n    const playerId = Number(props.playerId);\n    const {playerState, playerDispatch, getPlayer} = usePlayers();\n    const {players, avoid} = playerState;\n    const [singAvoidList, setSingAvoidList] = useState(\n        getPlayerAvoidList(playerId, avoid)\n    );\n    const unAvoided = useMemo(\n        () => (\n            players.map(\n                (player) => player.id\n            ).filter(\n                (pId) => !singAvoidList.includes(pId) && pId !== playerId\n            )\n        ),\n        [players, playerId, singAvoidList]\n    );\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function avoidAdd(event) {\n        event.preventDefault();\n        playerDispatch({\n            type: \"ADD_AVOID_PAIR\",\n            pair: [playerId, Number(selectedAvoider)]\n        });\n    }\n    useEffect(\n        function () {\n            setSingAvoidList(getPlayerAvoidList(playerId, avoid));\n        },\n        [avoid, playerId]\n    );\n    useEffect(\n        function () {\n            setSelectedAvoider(unAvoided[0]);\n        },\n        [setSelectedAvoider, unAvoided]\n    );\n    useEffect(\n        function () {\n            const origTitle = document.title;\n            document.title = (\n                getPlayer(playerId).firstName\n                + \" \" + getPlayer(playerId).lastName\n            );\n            return function () {\n                document.title = origTitle;\n            };\n        },\n        [playerId, getPlayer]\n    );\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function handleChange(event) {\n        event.preventDefault();\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\n        playerDispatch({\n            type: \"SET_PLAYER\",\n            id: playerId,\n            firstName: firstName.value,\n            lastName: lastName.value,\n            matchCount: Number(matchCount.value),\n            rating: Number(rating.value)\n        });\n    }\n    return (\n        <div>\n            <h2>\n                Profile for{\" \"}\n                {getPlayer(playerId).firstName} {getPlayer(playerId).lastName}\n            </h2>\n            <form onChange={handleChange} onSubmit={handleChange}>\n                <p>\n                    <label>\n                    First name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            defaultValue={getPlayer(playerId).firstName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Last name{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            defaultValue={getPlayer(playerId).lastName}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Matches played{\" \"}\n                        <input\n                            type=\"number\"\n                            name=\"matchCount\"\n                            defaultValue={\n                                String(getPlayer(playerId).matchCount)\n                            }\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    Rating\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            defaultValue={String(getPlayer(playerId).rating)}\n                        />\n                    </label>\n                </p>\n                <p>\n                    <label>\n                    K factor\n                        <input\n                            type=\"number\"\n                            readOnly\n                            value={(\n                                numeral(\n                                    kFactor(getPlayer(playerId).matchCount)\n                                ).format(\"00\")\n                            )}\n                        />\n                    </label>\n                </p>\n            </form>\n            <ul>\n                <h3>Players to avoid</h3>\n                {singAvoidList.map((pId) => (\n                    <li key={pId}>\n                        {getPlayer(pId).firstName}{\" \"}\n                        {getPlayer(pId).lastName}{\" \"}\n                        <button\n                            className=\"danger iconButton\"\n                            onClick={() =>\n                                playerDispatch({\n                                    type: \"DEL_AVOID_PAIR\",\n                                    pair: [playerId, pId]\n                                })\n                            }\n                            title={`Remove ${getPlayer(pId).firstName} \n${getPlayer(pId).lastName}`}\n                            arial-label={`Remove \n${getPlayer(pId).firstName} ${getPlayer(pId).lastName} from avoid list.`}\n                        >\n                            <Trash />\n                        </button>\n                    </li>\n                ))}\n                {avoid.length === 0 && <li>None</li>}\n            </ul>\n            <form onSubmit={(event) => avoidAdd(event)}>\n                <fieldset>\n                    <legend>Add player to avoid</legend>\n                    <select\n                        onBlur={(event) =>\n                            setSelectedAvoider(Number(event.target.value))\n                        }\n                    >\n                        {unAvoided.map((pId) => (\n                            <option key={pId} value={pId}>\n                                {getPlayer(pId).firstName}{\" \"}\n                                {getPlayer(pId).lastName}\n                            </option>\n                        ))}\n                    </select>{\" \"}\n                    <input type=\"submit\" value=\"Add\" />\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\nimport Trash from \"react-feather/dist/icons/trash-2\";\nimport {usePlayers} from \"../../state\";\nimport {PlayerLink} from \"../utility\";\nimport NewPlayer from \"./new-player\";\n\n/**\n * @param {Object} props\n */\nexport default function PlayerList(props) {\n    const {playerState, playerDispatch} = usePlayers();\n    /**\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\n     * @param {number} id\n     */\n    const delPlayer = function (event, id) {\n        event.preventDefault();\n        playerDispatch({type: \"DEL_PLAYER\", id});\n    };\n    return (\n        <div>\n            <table>\n                <caption>Demo Roster</caption>\n                <thead>\n                    <tr>\n                        <th>First name</th>\n                        <th>Last name</th>\n                        <th>Rating</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>{playerState.players.map((player) =>\n                    <tr key={player.id}>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} firstName />\n                        </td>\n                        <td className=\"table__player\">\n                            <PlayerLink id={player.id} lastName />\n                        </td>\n                        <td className=\"table__number\">{player.rating}</td>\n                        <td>\n                            <button\n                                className=\"danger iconButton\"\n                                onClick={(event) =>\n                                    delPlayer(event, player.id)\n                                }\n                                // eslint-disable-next-line max-len\n                                title={`Delete ${player.firstName} ${player.lastName}`}\n                                // eslint-disable-next-line max-len\n                                aria-label={`Delete ${player.firstName} ${player.lastName}`}\n                            >\n                                <Trash />\n                            </button>\n                        </td>\n                        <td>\n                            <Link to={String(player.id)}>\n                            Open\n                                <VisuallyHidden>\n                                    {\" \"}{player.firstName} {player.lastName}\n                                </VisuallyHidden>\n                                {\" \"}<ChevronRight />\n                            </Link>\n                        </td>\n                    </tr>\n                )}</tbody>\n            </table>\n            <NewPlayer />\n        </div>\n    );\n}\n","import React from \"react\";\nimport PlayerInfo from \"./info-box\";\nimport PlayerList from \"./list\";\n\n/**\n * @param {Object} props\n */\nexport default function Players(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\n\nexport {PlayerInfo, PlayerList};\n","import React, {useState, useEffect, useMemo} from \"react\";\nimport {useTournaments, useOptions, usePlayers} from \"../state\";\n\n/**\n * @param {Object} props\n */\nexport function Options(props) {\n    const [tourneys, tourneysDispatch] = useTournaments();\n    const [options, optionsDispatch] = useOptions();\n    const {playerState, playerDispatch} = usePlayers();\n    const [text, setText] = useState(\"\");\n    // memoize this so the `useEffect` hook syncs with the correct state\n    const exportData = useMemo(\n        () => ({options, tourneys, playerState}),\n        [options, tourneys, playerState]\n    );\n    useEffect(\n        function () {\n            setText(JSON.stringify(exportData, null, 4));\n        },\n        [exportData]\n    );\n    /** @param {typeof exportData} data */\n    function loadData(data) {\n        tourneysDispatch({type: \"LOAD_STATE\", state: data.tourneys});\n        optionsDispatch({type: \"LOAD_STATE\", state: data.options});\n        playerDispatch({type: \"LOAD_STATE\", state: data.playerState});\n        window.alert(\"Data loaded!\");\n    }\n    /** @param {React.FormEvent<HTMLFormElement>} event */\n    function handleText(event) {\n        event.preventDefault();\n        /** @type {typeof exportData} */\n        const importData = JSON.parse(text);\n        loadData(importData);\n    }\n    /** @param {React.ChangeEvent<HTMLInputElement>} event */\n    function handleFile(event) {\n        event.preventDefault();\n        const reader = new FileReader();\n        // eslint-disable-next-line fp/no-mutation\n        reader.onload = function (ev) {\n            /** @type {string} */\n            // @ts-ignore\n            const data = ev.target.result;\n            /** @type {typeof exportData} */\n            const importData = JSON.parse(data);\n            loadData(importData);\n        };\n        reader.readAsText(event.currentTarget.files[0]);\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\n    }\n    return (\n        <div>\n            <form>\n                <fieldset>\n                    <legend>Bye options</legend>\n                    Select how many points a bye is worth:{\" \"}\n                    <label>\n                        1\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 1}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 1\n                            })}\n                        />\n                    </label>{\" \"}\n                    <label>\n                        ½\n                        <input\n                            type=\"radio\"\n                            checked={options.byeValue === 0.5}\n                            onChange={() => optionsDispatch({\n                                type: \"SET_BYE_VALUE\",\n                                byeValue: 0.5\n                            })}\n                        />\n                    </label>\n                </fieldset>\n            </form>\n            <fieldset>\n                <legend>Manage data</legend>\n                <p>\n                    <a\n                        href={\n                            \"data:application/json,\"\n                            + encodeURIComponent(JSON.stringify(exportData))\n                        }\n                        download=\"chessahoochee.json\"\n                    >\n                        Download all data\n                    </a>\n                </p>\n                <label>\n                    Load data file:{\" \"}\n                    <input type=\"file\" id=\"file\" onChange={handleFile}/>\n                </label>\n            </fieldset>\n            <form onSubmit={handleText}>\n                <fieldset>\n                    <legend>\n                        Advanced: manually edit data\n                    </legend>\n                    <textarea\n                        className=\"json\"\n                        rows={25}\n                        cols={50}\n                        value={text}\n                        name=\"playerdata\"\n                        onChange={(event) => setText(event.currentTarget.value)}\n                    />\n                    <p>\n                        <input type=\"submit\" value=\"Load\" />\n                    </p>\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport styles from \"./index.module.css\";\n\nconst Caution = () => (\n    <div className={styles.caution}>\n        <p className={styles.caution__text}>\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            &nbsp;\n            This is an unstable demo build.\n            &nbsp;\n            <span role=\"img\" aria-label=\"warning\">⚠️</span>\n            {\" \"}\n            Want to help make it better? Head to the\n            {\" \"}\n            <span role=\"img\" aria-label=\"finger pointing right\">👉</span>\n            &nbsp;\n            <a\n                className={styles.caution__link}\n                href=\"https://github.com/johnridesabike/chessahoochee\">\n                Git repository\n            </a>.\n        </p>\n    </div>\n);\n\nexport default Caution;\n","import React from \"react\";\nimport {\n    Router,\n    Link,\n    LocationProvider,\n    createHistory,\n    Redirect\n} from \"@reach/router\";\nimport createHashSource from \"hash-source\";\nimport About from \"./components/about\";\nimport NotFound from \"./components/404\";\nimport TournamentIndex from \"./components/tournament\";\nimport {TournamentList, Tournament} from \"./components/tournament\";\nimport Players, {PlayerList, PlayerInfo} from \"./components/players\";\nimport {Options} from \"./components/options\";\nimport Caution from \"./components/caution\";\nimport {OptionsProvider, TournamentProvider, PlayersProvider} from \"./state\";\nimport \"./global.css\";\n// @ts-ignore\nimport {link} from \"./App.module.css\";\n// These are just for deploying to GitHub pages.\nlet source = createHashSource();\n// @ts-ignore\nlet history = createHistory(source);\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Caution />\n            <LocationProvider history={history}>\n                <nav className=\"header\">\n                    <Link to=\"tourneys\" className={link}>\n                        Tournaments\n                    </Link>\n                    <Link to=\"players\" className={link}>\n                        Players\n                    </Link>\n                    <Link to=\"options\" className={link}>\n                        Options\n                    </Link>\n                    <Link to=\"about\" className={link}>\n                        About\n                    </Link>\n                </nav>\n                <main className=\"content\">\n                    {/* Lots of nested contexts. Is there a better way? */}\n                    <OptionsProvider>\n                        <PlayersProvider>\n                            <TournamentProvider>\n                                <Router>\n                                    <TournamentIndex path=\"tourneys\">\n                                        <TournamentList path=\"/\" />\n                                        <Tournament path=\":tourneyId\" />\n                                    </TournamentIndex>\n                                    <Players path=\"players\">\n                                        <PlayerList path=\"/\"/>\n                                        <PlayerInfo path=\":playerId\" />\n                                    </Players>\n                                    <Options path=\"options\" />\n                                    <About path=\"about\" />\n                                    <NotFound default />\n                                    <Redirect from=\"/\" to=\"tourneys\" noThrow />\n                                </Router>\n                            </TournamentProvider>\n                        </PlayersProvider>\n                    </OptionsProvider>\n                </main>\n            </LocationProvider>\n        </div>\n    );\n}\n\nexport default App;\n","/*jslint browser*/\n/*global process fetch*/\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {StrictMode} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <StrictMode><App /></StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"scores_table__22BFZ\",\"topHeader\":\"scores_topHeader__2RVRR\",\"row\":\"scores_row__bmBzX\",\"playerName\":\"scores_playerName__3ghv9\",\"rank\":\"scores_rank__3AxBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"round_table__2JmnE\",\"winnerSelect\":\"round_winnerSelect__317oT\",\"toolbar\":\"round_toolbar__3CWVM\",\"selected\":\"round_selected__bLYhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topToolbar\":\"tournament_topToolbar__11IoE\",\"toolbarItem\":\"tournament_toolbarItem__1pUz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__TB6Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__17Bbq\",\"caution__text\":\"caution_caution__text__2ptRS\",\"caution__link\":\"caution_caution__link__X_K5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__LN75I\",\"panel\":\"utility_panel__2GOiH\"};"],"sourceRoot":""}