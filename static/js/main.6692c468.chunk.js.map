{"version":3,"sources":["pages/tournament/index.module.css","serviceWorker.js","side-effects.js","data-types/constants.js","data-types/types.js","data-types/factories.js","data-types/helpers.js","pairing-scoring/types.js","pairing-scoring/scoring.js","pairing-scoring/factories.js","pairing-scoring/converters.js","pairing-scoring/pairing.js","pairing-scoring/ratings.js","components/logo.jsx","components/icons.jsx","hooks/reducers/generic-db-reducer.js","hooks/reducers/options-reducer.js","hooks/reducers/players-reducer.js","hooks/reducers/match-functions.js","hooks/reducers/tournament-reducer.js","demo-data/index.js","hooks/hooks.js","hooks/db.js","hooks/tournament-provider.jsx","pages/tournament/crosstable.jsx","components/utility.jsx","components/new-player.jsx","pages/tournament/player-select/selecting.jsx","pages/tournament/player-select/index.jsx","pages/tournament/pair-picker/player-info.jsx","pages/tournament/pair-picker/select-list.jsx","pages/tournament/pair-picker/stage.jsx","pages/tournament/pair-picker/index.jsx","components/404.jsx","pages/tournament/round/player-match-info.jsx","pages/tournament/round/match-row.jsx","pages/tournament/round/round-table.jsx","pages/tournament/round/round.jsx","pages/tournament/round/index.jsx","pages/tournament/round/round-panels.jsx","pages/tournament/scores.jsx","pages/tournament/header.jsx","pages/tournament/options.jsx","pages/tournament/sidebar.jsx","pages/tournament/status.jsx","pages/tournament/tournament.jsx","components/sidebar-default.jsx","pages/tournament/tournament-list.jsx","pages/tournament/index.jsx","electron-utils.js","components/caution/index.jsx","pages/options.jsx","pages/players/player-list.jsx","pages/players/player-profile.jsx","pages/players/index.jsx","pages/splash.jsx","components/windows-controls.jsx","App.jsx","index.jsx","pages/tournament/round/round.module.css","pages/splash.module.css","components/windows-controls.module.css","pages/players/index.module.css","components/caution/index.module.css","components/utility.module.css"],"names":["module","exports","tournament","header","contentFrame","table","topHeader","row","compact","playerName","rank","Boolean","window","location","hostname","match","numeral","register","format","value","roundingFunction","whole","Math","floor","remainder","fraction","String","regexps","unformat","Number","WHITE","BLACK","DUMMY_ID","Id","t","refinement","id","test","Color","num","AvoidPair","tuple","Player","interface","firstName","lastName","matchCount","rating","type","Match","newRating","origRating","playerIds","result","RoundList","list","Tournament","byeQueue","date","Date","name","roundList","tieBreaks","Object","freeze","createMatch","importObj","types","assign","nanoid","createPlayer","isDummyId","playerId","isDummyObj","playerObj","dummyPlayer","createMissingPlayer","getPlayerMaybe","playerDict","undefined","bind","player","dict","rounds2Matches","lastRound","arguments","length","slice","reduce","acc","round","concat","getUnmatched","players","roundId","matchedIds","values","includes","assoc","ColorScore","ScoreData","colorScores","colors","isDummy","opponentResults","ratings","results","resultsNoByes","PairingData","avoidIds","isUpperHalf","opponents","score","ScoreCalculator","func","Standing","BLACKVALUE","WHITEVALUE","getOpponentScores","scoreData","keys","filter","oppId","map","getPlayerScore","sum","getCumulativeScore","scoreList","last","tieBreakMethods","0","of","scores","pipe","sort","ascend","init","tail","1","2","3","4","getTieBreakNames","idList","i","createBlankScoreData","createStandingList","methods","selectedTieBreaks","standings","_ref","sortFuncList","key","descend","path","prop","sortWith","createStandingTree","standingList","standing","orig","standing1","standing2","prevStanding","append","over","lensIndex","match2ScoreDataReducer","_map","color","origData","lensProp","defaultTo","scoreTypes","color2Score","lensPath","add","_map2","slicedToArray","p1Data","p2Data","matches2ScoreData","matchList","data","avoidPairReducer","pair","createPairingData","playerData","avoidPairs","avoidDict","pairingData","playerStats","pairData","priority","condition","avoidMeetingTwice","sameScores","divider","differentHalf","differentDueColor","maxPriority","calcPairIdeal","player1","player2","metBefore","mustAvoid","p1LastColor","p2LastColor","abs","sortDataForPairing","splitInHalf","splitAt","upperHalfReducer","ignore","src","p2","view","p","setUpperHalves","netScoreDescend","pair1","pair2","pluck","netRatingDescend","PDataList","getkFactor","calcNewRatings","origRatings","matchCounts","whiteElo","EloRank","blackElo","scoreExpected","getExpected","updateRating","SvgComponent","props","react_default","a","createElement","width","height","viewBox","clipPathUnits","r","cy","cx","fill","fillRule","strokeWidth","strokeLinejoin","paintOrder","clipPath","d","clipRule","imageRendering","shapeRendering","textRendering","simpleIcon","icon","dangerouslySetInnerHTML","__html","svg","aria-label","title","role","style","hex","icons","Activity","Alert","ArrowDown","ArrowLeft","ArrowUp","Award","Check","CheckCircle","ChevronDown","ChevronLeft","ChevronRight","ChevronUp","Circle","Download","Edit","Help","Info","Javascript","Layers","List","Logo","Plus","React","ReactIcon","Repeat","Settings","Sidebar","Trash","UserMinus","UserPlus","Users","X","genericDbReducer","state","action","nextId","console","warn","item","dissoc","mergeLeft","Error","optionsReducer","option","union","playersReducer","set","autoPair","avoidList","byeValue","tourney","rounds","_setByePlayer","dummyId","hasNotHadBye2","playersWithoutByes","nextByeSignup","indexOfDueBye","findLastIndex","index","byeData","setByePlayer","_setByePlayer2","pairDataNoByes","byePlayerData","pairs","playerIdArray","potentialMatches","accArr","srcArr","playerMatches","indexOf","reducedResults","blossom","p1Index","p2Index","p1Id","p2Id","p1","matched","_pair","pairPlayers","pairsWithBye","getPlayer","idsPair","tournamentReducer","remove","newIndex","oldIndex","move","__","manualPair","matchId","findIndex","propEq","mergeRight","reverse","log","demo_data","options","tournaments","fromJSON","useSortedTable","origTable","defaultKey","defaultDescend","_useState","useState","_useState2","setTable","_useState3","_useState4","setKey","_useState5","_useState6","isDescending","setIsDescending","useEffect","direction","toggleDirection","useDocumentTitle","origTitle","document","useLoadingCursor","isLoaded","body","cursor","setItemsPrototype","localForage","removeItemsPrototype","optionsStore","createInstance","storeName","playerStore","tourneyStore","_callee","regenerator_default","wrap","_context","prev","next","setItems","demoData","stop","useAllItemsFromDb","store","_useReducer","useReducer","_useReducer2","items","dispatch","setIsLoaded","getItems","then","_config","cleanResults","is","catch","error","deleted","difference","removeItems","useAllPlayersDb","useAllTournamentsDb","useOptionsDb","_useReducer3","defaultOptions","_useReducer4","iterate","TournamentContext","createContext","useTournament","useContext","TournamentProvider","children","tourneyId","tourneyDispatch","playersDispatch","isTourneyLoaded","setIsTourneyLoaded","isPlayersLoaded","setIsPlayersLoaded","isDbError","setIsDbError","getItem","allTheIds","allPlayers","Array","from","Set","getAllPlayerIdsFromMatches","unChangedPlayers","symmetricDifference","setItem","activePlayers","Provider","Crosstable","_useTournament","className","colSpan","scope","opponent","index2","player1Id","player2Id","getXScore","firstRating","lastRating","change","Fragment","getRatingChangeTds","Panel","_ref4","styles","panel","objectSpread","PanelContainer","panels","DateFormat","dateFormat","Intl","DateTimeFormat","day","month","year","cleanProps","omit","dateTime","toISOString","Notification","_ref5","success","warning","_ref6","tooltip","PlaceholderButton","aria-hidden","disabled","SortLabel","_ref7","label","sortKey","utility_PlaceholderButton","onClick","findById","x","NewPlayer","newPlayerDefault","newPlayerData","setNewPlayerdata","updateField","event","preventDefault","_event$currentTarget","currentTarget","prevState","onSubmit","htmlFor","required","onChange","Selecting","_useAllPlayersDb","_useAllPlayersDb2","allPlayersDispatch","togglePlayer","target","checked","pId","visually_hidden_es","PlayerList","PlayerSelect","isSelecting","setIsSelecting","matches","flexShrink","dialog_es","isOpen","PlayerInfo","_useOptionsDb","colorBalance","hasBye","prettyBalance","data-testid","entries","_ref2","_ref3","opId","SelectList","stagedPlayers","setStagedPlayers","unmatched","unmatchedCount","unmatchedWithDummy","selectPlayer","Stage","_stagedPlayers","white","black","unstage","react","every","PairPicker","isModalOpen","setIsModalOpen","_React$useMemo","useMemo","_scoreData","_React$useMemo2","matchIdeal","player0stats","player1stats","ideal","flexGrow","NotFound","PlayerMatchInfo","_scoreData$match$play","MatchRow","pos","selectedMatch","setSelectedMatch","openModal","setOpenModal","resultCode","whitePlayer","blackPlayer","whiteName","blackName","ResultDisplay","setMatchResult","b","rowId","playerResult","matchResult","winnerSelect","onBlur","controls","RoundTable","tbody","Round","_404","moveMatch","forEach","unMatch","RoundPanels","activePlayersCount","openTab","setOpenTab","tabs_es","ScoreTable","tieBreakNames","standingTree","obj","standingsFlat","rowSpan","dashify","j","SelectTieBreaks","_useTournament2","selectedTb","setSelectedTb","toggleTb","defaultId","moveTb","marginTop","Scores","Header","isEditingName","setIsEditingName","isEditingDate","setIsEditingDate","dateInput","getFullYear","getMonth","getDate","_event$currentTarget$","split","_event$currentTarget$2","rawYear","rawMonth","rawDay","Options","alert","es","to","isComplete","isRoundComplete","isNewRoundReady","roundCount","playerCount","ceil","log2","isFinite","calcNumOfRounds","isItOver","tooltipText","tooltipWarn","_delLastRound","asyncToGenerator","mark","confirm","navigate","apply","this","Status","lastRoundId","textAlign","justifyContent","sidebar","tournament_scores","default","HasSidebar","sidebar_default_Sidebar","TournamentList","_useAllTournamentsDb","_useAllTournamentsDb2","tourneys","sorted","newTourneyName","setNewTourneyName","isFormOpen","setIsFormOpen","message","deleteTournament","placeholder","TournamentIndex","electron","require","ifElectron","fn","macOSDoubleClick","doubleClickAction","remote","systemPreferences","getUserDefault","win","getCurrentWindow","minimize","isMaximized","unmaximize","maximize","toggleMaximize","Caution","caution","caution__text","caution__link","href","tourneysDispatch","text","setText","_useOptionsDb2","optionsDispatch","exportData","loadData","JSON","stringify","download","encodeURIComponent","reader","FileReader","onload","ev","parse","readAsText","files","cols","rows","spellCheck","delPlayer","PlayerProfile","getAvoidList","getPlayerAvoidList","accumulator","singAvoidList","setSingAvoidList","unAvoided","selectedAvoider","setSelectedAvoider","handleChange","playerInfo","defaultValue","readOnly","arial-label","PlayerProfileWrapper","Players","childProps","basepath","player_list_PlayerList","Splash","splash","hint","_loadDemoDB","loadDemoDB","titleIcon","titleText","subtitle","footer","fontSize","Close","xmlns","Maximize","Minimize","Restore","Controls","setIsMaximized","on","container","winButton","windows_controls_Minimize","windows_controls_Restore","windows_controls_Maximize","close","windows_controls_Close","source","createHashSource","history","createHistory","isWindowsAndElectron","navigator","appVersion","App","isSidebarOpen","setIsSidebarOpen","isFullScreen","setIsFullScreen","isWindowBlur","setIsWindowBlur","isFocused","classNames","open-sidebar","closed-sidebar","window-blur","isWindows","isElectron","traffic-light-padding","onDoubleClick","alignItems","display","marginRight","pathname","left","marginLeft","position","right","tournament_Tournament","options_Options","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,WAAA,+BAAAC,OAAA,2BAAAC,aAAA,iCAAAC,MAAA,0BAAAC,UAAA,8BAAAC,IAAA,wBAAAC,QAAA,4BAAAC,WAAA,+BAAAC,KAAA,inQCYEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uGChBNC,IAAQC,SAAS,SAAU,WAAY,CAEnCC,OAAQ,SAAUC,EAAOD,EAAQE,GAC7B,IAAMC,EAAQC,KAAKC,MAAMJ,GACnBK,EAAYL,EAAQE,EACpBI,EAAY,WACd,OAAQD,GACR,IAAK,IACD,MAAO,OACX,IAAK,GACD,MAAO,OACX,IAAK,IACD,MAAO,OACX,QACI,MAAO,IATG,GAiBlB,OAJe,IAAVH,GAAeG,EACd,GACAE,OAAOL,IAEUI,GAE3BE,QAAS,CACLT,OAAQ,SACRU,SAAU,UAEdA,SAAU,SAAUT,GAEhB,OAAOU,OAAOV,iBC/BhBW,EAAQ,EACRC,EAAQ,EAKRC,EAAW,iECLXC,EAAKC,IAAEC,WACTD,IAAER,OACF,SAACU,GAAD,MAAQ,sBAAsBC,KAAKD,IACnC,UAGEE,EAAQJ,IAAEC,WACZD,IAAEL,OACF,SAACU,GAAD,OAASA,IAAQR,GAASQ,IAAQT,GAClC,SAGEU,EAAYN,IAAEO,MAAM,CAACR,EAAIA,GAAK,aAE9BS,EAASR,IAAES,UACb,CACIC,UAAWV,IAAER,OACbU,GAAIH,EACJY,SAAUX,IAAER,OACZoB,WAAYZ,IAAEL,OACdkB,OAAQb,IAAEL,OACVmB,KAAMd,IAAER,QAEZ,UAGEuB,EAAQf,IAAES,UACZ,CACIP,GAAIH,EACJiB,UAAWhB,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,SAChCsB,WAAYjB,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,SACjCuB,UAAWlB,IAAEO,MAAM,CAACR,EAAIA,IACxBoB,OAAQnB,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,UAEjC,SAGEyB,EAAYpB,IAAEqB,KAAKrB,IAAEqB,KAAKN,GAAQ,aAElCO,EAAatB,IAAES,UACjB,CACIc,SAAUvB,IAAEqB,KAAKrB,IAAER,QACnBgC,KAAMC,KACNvB,GAAIH,EACJ2B,KAAM1B,IAAER,OACR0B,UAAWlB,IAAEqB,KAAKrB,IAAER,QACpBmC,UAAWP,EACXQ,UAAW5B,IAAEqB,KAAKrB,IAAEL,SAExB,cAGWkC,SAAOC,OAAO,CACzBxB,YACAF,QACAL,KACAgB,QACAP,SACAY,YACAE,eC1DG,SAASS,EAAYC,GACxB,OAAOC,EAAMlB,MACTc,OAAOK,OACH,CACIhC,GAAIiC,MACJhB,OAAQ,CAAC,EAAG,IAEhBa,IAKL,SAASI,EAAaJ,GACzB,OAAOC,EAAMzB,OACTqB,OAAOK,OACH,CACIhC,GAAIiC,MACJvB,WAAY,EACZC,OAAQ,EACRC,KAAM,UAEVkB,ICfZ,IAAMK,EAAY,SAACC,GAAD,OAAcL,EAAMlC,GAAGuC,KAAcxC,GAGjDyC,EAAa,SAACC,GAAD,OAAeP,EAAMlC,GAAGyC,EAAUtC,MAAQJ,GAIvD2C,EAAcL,EAAa,CAC7B1B,UAAW,MACXR,GAAIJ,EACJa,SAAU,SACVG,KAAM,UAKJ4B,EAAsB,SAACxC,GAAD,OAAQkC,EAAa,CAC7C1B,UAAW,YACXR,GAAIA,EACJS,SAAU,SACVG,KAAM,aAOH,SAAS6B,EAAeC,EAAY1C,GACvC,QAAW2C,IAAP3C,EACA,OAAOyC,EAAeG,KAAK,KAAMF,GAErC,GAAI1C,IAAOJ,EACP,OAAO2C,EAEX,IAAMM,EAAS/C,IAAEgD,KAAKf,EAAMlC,GAAIkC,EAAMzB,OAAvBR,CAA+B4C,GAAY1C,GAC1D,OAAQ6C,GAAmBL,EAAoBxC,GAgB5C,SAAS+C,EAAetB,GAA6B,IAAlBuB,EAAkBC,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAN,KAIlD,OAH8B,OAAdD,EACVvB,EACAA,EAAU0B,MAAM,EAAGH,EAAY,IACvBI,OAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAIE,OAAOD,IAAQ,IAKrD,SAASE,EAAa/B,EAAWgC,EAASC,GAC7C,IACMC,GADY5B,EAAMb,UAAUO,GAAW3B,IAAEL,OAAOiE,KAAa,IACtCN,OACzB,SAACC,EAAK1E,GAAN,OAAgB0E,EAAIE,OAAO5E,EAAMqC,YACjC,IAWJ,OATmBlB,IAAEqB,KAAKY,EAAMzB,OAAbR,CAAqB6B,OAAOiC,OAAOH,IACzBL,OACzB,SAACC,EAAKR,GAAN,OACKc,EAAWE,SAAShB,EAAO7C,IAC1BqD,EACAS,YAAMjB,EAAO7C,GAAI6C,EAAQQ,IAE/B,qKC1EFU,EAAajE,IAAEC,WACjBD,IAAEL,OACF,SAACU,GAAD,OAJe,IAINA,IAHM,IAGgBA,GAC/B,cAEE6D,EAAYlE,IAAES,UAChB,CACI0D,YAAanE,IAAEqB,KAAK4C,GACpBG,OAAQpE,IAAEqB,KAAKY,EAAM7B,OACrBF,GAAI+B,EAAMlC,GACVsE,QAASrE,IAAEvB,QACX6F,gBAAiBtE,IAAEgD,KAAKf,EAAMlC,GAAIC,IAAEL,QACpC4E,QAASvE,IAAEqB,KAAKrB,IAAEL,QAClB6E,QAASxE,IAAEqB,KAAKrB,IAAEL,QAClB8E,cAAezE,IAAEqB,KAAKrB,IAAEL,SAE5B,aAEE+E,GAAc1E,IAAES,UAClB,CACIkE,SAAU3E,IAAEqB,KAAKY,EAAMlC,IACvBoE,YAAanE,IAAEqB,KAAK4C,GACpBG,OAAQpE,IAAEqB,KAAKY,EAAM7B,OACrBF,GAAI+B,EAAMlC,GAEV6E,YAAa5E,IAAEvB,QACfoG,UAAW7E,IAAEqB,KAAKY,EAAMlC,IACxBc,OAAQb,IAAEL,OACVmF,MAAO9E,IAAEL,QAEb,eAEEoF,GAAkB/E,IAAEgF,KACtB,CAAChF,IAAEgD,KAAKhD,IAAER,OAAQ0E,GAAYjC,EAAMlC,IACpCC,IAAEL,OACF,kBAEEsF,GAAWjF,IAAES,UACf,CACIP,GAAI+B,EAAMlC,GACV+E,MAAO9E,IAAEL,OACTiC,UAAW5B,IAAEqB,KAAKrB,IAAEL,SAExB,YAGWkC,UAAOC,OAAO,CACzBoD,WAjDe,EAkDfR,eACAK,mBACAb,YACAe,YACAE,YArDe,ICOnB,SAASC,GAAkBC,EAAWnF,GAElC,OADoB2B,OAAOyD,KAAKD,EAAUnF,GAAIoE,iBAC3BiB,OACf,SAACC,GAAD,OAAYH,EAAUG,GAAOnB,UAC/BoB,IACE,SAACD,GAAD,OAAWE,GAAeL,EAAWG,KAO7C,SAASE,GAAeL,EAAWnF,GAC/B,OAAOyF,YAAIN,EAAUnF,GAAIsE,SAqB7B,SAASoB,GAAmBP,EAAWnF,GACnC,IAAM2F,EAAYR,EAAUnF,GAAIuE,cAAcnB,OAE1C,SAACC,EAAKuB,GAAN,OAAgBvB,EAAIE,OAAO,CAACqC,YAAKvC,GAAOuB,KACxC,CAAC,IAEL,OAAOa,YAAIE,OAmBRd,GAAmB9C,GAAnB8C,gBACDgB,GAAkB,CACpBC,EAAG,CACChB,KAAMD,GAAgBkB,GA3C9B,SAAgCZ,EAAWnF,GACvC,IAAMgG,EAASd,GAAkBC,EAAWnF,GAC5C,OAAOiG,YACHC,YAAKC,KACLC,IACAC,IACAZ,IAJGQ,CAKLD,KAqCEhG,GAAI,EACJwB,KAAM,mBAEV8E,EAAG,CACCxB,KAAMD,GAAgBkB,GArC9B,SAAyBZ,EAAWnF,GAChC,OAAOyF,YAAIP,GAAkBC,EAAWnF,MAqCpCA,GAAI,EACJwB,KAAM,WAEV+E,EAAG,CACCzB,KAAMD,GAAgBkB,GAAGL,IACzB1F,GAAI,EACJwB,KAAM,oBAEVgF,EAAG,CACC1B,KAAMD,GAAgBkB,GAjC9B,SAAsCZ,EAAWnF,GAC7C,IACM2F,EADchE,OAAOyD,KAAKD,EAAUnF,GAAIoE,iBAChBiB,OAC1B,SAACC,GAAD,OAAYH,EAAUG,GAAOnB,UAC/BoB,IAEE,SAACD,GAAD,OAAWI,GAAmBP,EAAWG,KAE7C,OAAOG,YAAIE,KA0BP3F,GAAI,EACJwB,KAAM,4BAEViF,EAAG,CACC3B,KAAMD,GAAgBkB,GA3B9B,SAA8BZ,EAAWnF,GACrC,OAAOyF,YAAIN,EAAUnF,GAAIiE,eA2BrBjE,GAAI,EACJwB,KAAM,eAGdG,OAAOC,OAAOiE,IAId,IAAMa,GAAmB,SAACC,GAAD,OACrB7G,IAAEqB,KAAKrB,IAAEL,OAATK,CAAiB6G,GAAQpB,IAAI,SAACqB,GAAD,OAAOf,GAAgBe,GAAGpF,QCzFrDqF,GAAuB,SAAC7G,GAAD,OAAQ+B,GAAMiC,UAAU,CACjDC,YAAa,GACbC,OAAQ,GACRlE,KACAmE,SAAS,EACTC,gBAAiB,GACjBC,QAAS,GACTC,QAAS,GACTC,cAAe,MAQZ,SAASuC,GAAmBC,EAAS5B,GACxC,IAAM6B,EAAoBD,EAAQxB,IAAI,SAACqB,GAAD,OAAOf,GAAgBe,KAEvDK,EAAYtF,OAAOyD,KAAKD,GAAWI,IACrC,SAACvF,GAAD,OAAQ+B,GAAMgD,SAAS,CACnB/E,KACA4E,MAAOY,GAAeL,EAAWnF,GACjC0B,UAAWsF,EAAkBzB,IAAI,SAAA2B,GAAA,OAAYpC,EAAZoC,EAAEpC,MAAeK,EAAWnF,SAK/DmH,EAAexF,OAAOyD,KAAK4B,GAAmB5D,OAChD,SAACC,EAAK+D,GAAN,OAAc/D,EAAIE,OAAO,CAAC8D,YAAQC,YAAK,CAAC,YAAaF,QACrD,CAACC,YAAQE,YAAK,YAGlB,OADwBC,YAASL,EAAcF,GAqB5C,SAASQ,GAAmBC,GAmB/B,OAlBsB5H,IAAEqB,KAAKY,GAAMgD,SAAbjF,CAAuB4H,GAActE,OACvD,SAA+BC,EAAKsE,EAAUf,EAAGgB,GAC7C,IApBYC,EAAWC,EAoBjBC,EAAeH,EAAKhB,EAAI,GAM9B,OAJyB,IAANA,IAtBIkB,EAyBSC,KAzBpBF,EAyBUF,GAvBhB/C,QAAUkD,EAAUlD,QAK9BiD,EAAUnG,UAAU0B,OAChB,SAACC,EAAKtE,EAAO6H,GAAb,OAAmBvD,EAAIE,OAAOxE,IAAU+I,EAAUpG,UAAUkF,KAC5D,IACF/C,UAAS,KAmBDmE,YAAO,CAACL,GAAWtE,GAGnB4E,YAAKC,YAAU7E,EAAIH,OAAS,GAAI8E,YAAOL,GAAWtE,IAE5D,IC3DR,SAAS8E,GAAuB9E,EAAK1E,GAAO,IACjCqC,EAA4CrC,EAA5CqC,UAAWC,EAAiCtC,EAAjCsC,OAAQH,EAAyBnC,EAAzBmC,UAAWC,EAAcpC,EAAdoC,WADGqH,EAEf,CAAC1I,EAAOC,GAAO4F,IAAI,SAAU8C,GAClD,IAAMrI,EAAKgB,EAAUqH,GAEf/C,EAAQtE,EADIqH,IAAU3I,EAASC,EAAQD,GAKvC4I,EAAWjF,EAAIrD,IAAO,CAACA,KAAIqE,QAAS,CAACtD,EAAWsH,KACtD,OAAOpC,YACHgC,YAAKM,YAAS,WAAYP,YAAO/G,EAAOoH,KACxCJ,YACIM,YAAS,iBACRpG,EAAUmD,GAAUkD,YAAU,IAAMR,YAAO/G,EAAOoH,KAEvDJ,YAAKM,YAAS,UAAWP,YAAOK,IAChCJ,YAAKM,YAAS,eAAgBP,YAvB1C,SAAqBK,GACjB,OAAQtG,EAAM7B,MAAMmI,KAAW1I,EACzB8I,GAAWzD,WACXyD,GAAWxD,WAoB4ByD,CAAYL,KACjDJ,YACIU,YAAS,CAAC,kBAAmBrD,IAC7BW,YAAKuC,YAAU,GAAII,YAAI3H,EAAOoH,MAElCJ,YAAKM,YAAS,WAAYP,YAAOlH,EAAUuH,KAC3CvE,YAAM,UAAW3B,EAAUnC,IAbxBiG,CAcLqC,KAxBkCO,EAAAlH,OAAAmH,EAAA,EAAAnH,CAAAyG,EAAA,GAEjCW,EAFiCF,EAAA,GAEzBG,EAFyBH,EAAA,GA0BxC,OAAO5C,YACHnC,YAAMiF,EAAO/I,GAAI+I,GACjBjF,YAAMkF,EAAOhJ,GAAIgJ,GAFd/C,CAGL5C,GAGC,SAAS4F,GAAkBC,GAC9B,IAAMC,EAAOD,EAAU9F,OAAO+E,GAAwB,IAEtD,OAAOrI,IAAEgD,KAAKf,EAAMlC,GAAI4I,GAAWzE,UAA5BlE,CAAuCqJ,GAK3C,SAASC,GAAiB/F,EAAKgG,GAClC,OAAOpD,YACHgC,YAAKM,YAASc,EAAK,IAAKrB,YAAOqB,EAAK,KACpCpB,YAAKM,YAASc,EAAK,IAAKrB,YAAOqB,EAAK,KAFjCpD,CAGLnG,IAAEgD,KAAKf,EAAMlC,GAAIC,IAAEqB,KAAKY,EAAMlC,IAA9BC,CAAmCuD,IAIlC,SAASiG,GAAkBC,EAAYC,EAAYrE,GACtD,QAAmBxC,IAAf6G,EACA,OAAOF,GAAkB1G,KAAK,KAAM2G,GACjC,QAAkB5G,IAAdwC,EACP,OAAOmE,GAAkB1G,KAAK,KAAM2G,EAAYC,GAEpD,IAAMC,EAAYD,EAAWpG,OAAOgG,GAAkB,IAChDM,EAAc/H,OAAOiC,OAAO2F,GAAYnG,OAC1C,SAA4BC,EAAK8F,GAE7B,IAAMQ,EAAexE,EAAUgE,EAAKnJ,IAC9BmF,EAAUgE,EAAKnJ,IACf6G,GAAqBsC,EAAKnJ,IAG1B4J,EAAW,CACbnF,SAAUgF,EAAUN,EAAKnJ,KAAO,GAChCiE,YAAa0F,EAAY1F,YACzBC,OAAQyF,EAAYzF,OACpBlE,GAAImJ,EAAKnJ,GAET0E,aAAa,EACbC,UAAWhD,OAAOyD,KAAKuE,EAAYvF,iBACnCzD,OAAQwI,EAAKxI,OAGbiE,MAAOa,YAAIkE,EAAYrF,UAE3B,OAAOjB,EAAIE,OAAO,CAACqG,KAEvB,IAGJ,OAAO9J,IAAEqB,KAAKsH,GAAWjE,YAAlB1E,CAA+B4J,OCtFf3K,kFADrB8K,GAAW,SAAC9K,GAAD,OAAW,SAAC+K,GAAD,OAAeA,EAAY/K,EAAQ,IAQzDgL,GAAoBF,GAAS,IAQ7BG,IAfqBjL,GAeU,GAfA,SAACkL,GAAD,OAAalL,GAAQkL,IAmBpDC,GAAgBL,GAAS,GAIzBM,GAAoBN,GAAS,GAE7BO,GAAcnE,YAChB2C,YAAIsB,IAAc,IAClBtB,YAAIuB,IAAkB,IACtBvB,YAAIoB,GAAW,IACfpB,YAAImB,IAAkB,IAJN9D,CAKlB,GAwBK,SAASoE,GAAcC,EAASC,GACnC,GAAID,EAAQtK,KAAOuK,EAAQvK,GACvB,OAAO,EAEX,IAAMwK,EAAYF,EAAQ3F,UAAUd,SAAS0G,EAAQvK,IAC/CyK,EAAYH,EAAQ7F,SAASZ,SAAS0G,EAAQvK,IAC9C0K,EAAc9E,YAAK0E,EAAQpG,QAC3ByG,EAAc/E,YAAK2E,EAAQrG,QACjC,OAAO+B,YACH2C,YAAIsB,GACAI,EAAQ5F,cAAgB6F,EAAQ7F,aAC7B4F,EAAQ1F,QAAU2F,EAAQ3F,QAEjCgE,YAAIuB,QACiBxH,IAAhB+H,GAA+BA,IAAgBC,IAEpD/B,YAAIoB,GAAW9K,KAAK0L,IAAIN,EAAQ1F,MAAQ2F,EAAQ3F,OAAS,IACzDgE,YAAImB,IAAmBS,IAAcC,IATlCxE,CAUL,GAMC,SAAS4E,GAAmB1B,GAC/B,OAAO3B,YACH,CAACH,YAAQE,YAAK,UAAWF,YAAQE,YAAK,YACtC4B,GAIR,IAAM2B,GAAc,SAAC3J,GAAD,OAAU4J,aAAQ5J,EAAK+B,OAAS,EAAG/B,IAKvD,SAAS6J,GAAiB3H,EAAKkG,EAAY0B,EAAQC,GAC/C,IAQMxG,EAReuB,YACjBZ,aAAO,SAAC8F,GAAD,OAAQA,EAAGvG,QAAU2E,EAAW3E,QAEvCsB,YAAKmB,YAAQE,YAAK,YAClBuD,GACAM,aAAKlD,YAAU,IACf3C,aAAI,SAAC8F,GAAD,OAAOA,EAAErL,KANIiG,CAOnBiF,GAC+BrH,SAAS0F,EAAWvJ,IACrD,OAAOqD,EAAIE,OAAO,CAACO,YAAM,cAAeY,EAAa6E,KAElD,SAAS+B,GAAenC,GAC3B,OAAOA,EAAK/F,OAAO4H,GAAkB,IAmCzC,IAAMO,GAAkB,SAACC,EAAOC,GAAR,OACpBhG,YAAIiG,aAAM,QAASD,IAAUhG,YAAIiG,aAAM,QAASF,KAE9CG,GAAmB,SAACH,EAAOC,GAAR,OACrBhG,YAAIiG,aAAM,SAAUD,IAAUhG,YAAIiG,aAAM,SAAUF,KAGhDI,GAAY9L,IAAEqB,KAAKY,GAAMyC,qCCrK/B,SAASqH,GAAWnL,GAEhB,OAAQ,KADGZ,IAAEL,OAAOiB,IAAe,GA8BxBiB,cAAOC,OAAO,CACzBkK,eA3BJ,SAAwBC,EAAaC,EAAa/K,GAC9CnB,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,QAArBK,CAA8BiM,GAC9BjM,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,QAArBK,CAA8BkM,GAC9BlM,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,QAArBK,CAA8BmB,GAC9B,IAAMgL,EAAW,IAAIC,KAAQL,GAAWG,EAAYtM,KAC9CyM,EAAW,IAAID,KAAQL,GAAWG,EAAYrM,KAE9CyM,EAAgB,CAClBH,EAASI,YAAYN,EAAYrM,GAAQqM,EAAYpM,IACrDwM,EAASE,YAAYN,EAAYpM,GAAQoM,EAAYrM,KAczD,MAZkB,CACduM,EAASK,aACLF,EAAc1M,GACduB,EAAOvB,GACPqM,EAAYrM,IAEhByM,EAASG,aACLF,EAAczM,GACdsB,EAAOtB,GACPoM,EAAYpM,KAGH4F,IAAI,SAAC5E,GAAD,OAAaA,EAjBpB,QAiB8CA,KAK5DkL,mbC6FWU,GAhIM,SAACC,GAAD,OACjBC,EAAAC,EAAAC,cAAA,MAAAhL,OAAAK,OAAA,CAAK4K,MAAM,MAAMC,OAAO,MAAMC,QAAQ,iBAAoBN,GACtDC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,YAAUI,cAAc,iBAAiB/M,GAAG,aACxCyM,EAAAC,EAAAC,cAAA,UACIK,EAAG,IACHC,GAAI,IACJC,GAAI,IACJC,KAAK,UACLC,SAAS,UACTC,YAAa,OACbC,eAAe,QACfC,WAAW,yBAGnBd,EAAAC,EAAAC,cAAA,YAAUI,cAAc,iBAAiB/M,GAAG,aACxCyM,EAAAC,EAAAC,cAAA,UACIK,EAAG,IACHC,GAAI,IACJC,GAAI,IACJC,KAAK,UACLC,SAAS,UACTC,YAAa,OACbC,eAAe,QACfC,WAAW,yBAGnBd,EAAAC,EAAAC,cAAA,YAAUI,cAAc,iBAAiB/M,GAAG,aACxCyM,EAAAC,EAAAC,cAAA,UACIK,EAAG,IACHC,GAAI,IACJC,GAAI,IACJC,KAAK,UACLC,SAAS,UACTC,YAAa,OACbC,eAAe,QACfC,WAAW,yBAGnBd,EAAAC,EAAAC,cAAA,YAAUI,cAAc,iBAAiB/M,GAAG,aACxCyM,EAAAC,EAAAC,cAAA,UACIO,GAAI,IACJD,GAAI,IACJD,EAAG,IACHG,KAAK,UACLC,SAAS,UACTC,YAAa,OACbC,eAAe,QACfC,WAAW,0BAIvBd,EAAAC,EAAAC,cAAA,QACIa,SAAS,kBACTL,KAAK,UACLC,SAAS,UACTG,WAAW,sBACXE,EAAE,sBAENhB,EAAAC,EAAAC,cAAA,QACIc,EAAE,wHACFD,SAAS,kBACTL,KAAK,UACLI,WAAW,wBAEfd,EAAAC,EAAAC,cAAA,KACIe,SAAS,UACTN,SAAS,UACTO,eAAe,kBACfC,eAAe,qBACfC,cAAc,sBAEdpB,EAAAC,EAAAC,cAAA,QACIc,EAAE,ghDACFN,KAAK,YAETV,EAAAC,EAAAC,cAAA,QACIc,EAAE,y3GACFN,KAAK,aAGbV,EAAAC,EAAAC,cAAA,QACIc,EAAE,sFACFD,SAAS,kBACTL,KAAK,UACLI,WAAW,wBAEfd,EAAAC,EAAAC,cAAA,KACIe,SAAS,UACTN,SAAS,UACTO,eAAe,kBACfC,eAAe,qBACfC,cAAc,sBAEdpB,EAAAC,EAAAC,cAAA,QACIc,EAAE,mhDACFN,KAAK,YAETV,EAAAC,EAAAC,cAAA,QACIc,EAAE,g4GACFN,KAAK,aAGbV,EAAAC,EAAAC,cAAA,QACIc,EAAE,sFACFD,SAAS,kBACTL,KAAK,UACLI,WAAW,wBAEfd,EAAAC,EAAAC,cAAA,KACIe,SAAS,UACTN,SAAS,UACTO,eAAe,kBACfC,eAAe,qBACfC,cAAc,sBAEdpB,EAAAC,EAAAC,cAAA,QACIc,EAAE,mhDACFN,KAAK,YAETV,EAAAC,EAAAC,cAAA,QACIc,EAAE,i4GACFN,KAAK,iOC1FfW,GAAa,SAACC,GAAD,OAAU,SAACvB,GAAD,OACzBC,EAAAC,EAAAC,cAAA,OAAAhL,OAAAK,OAAA,CACIgM,wBAAyB,CAACC,OAAQF,EAAKG,KACvCC,aAAYJ,EAAKK,MACjBC,KAAK,MACLC,MAAO,CAACnB,KAAM,IAAMY,EAAKQ,MACrB/B,MAIGgC,GAAA,CACXC,cACAC,WACAC,eACAC,eACAC,aACAC,WACAC,WACAC,iBACAC,iBACAC,iBACAC,kBACAC,eACAC,YACAC,cACAC,UACAC,UACAC,UACAC,WAAY5B,GAAW4B,MACvBC,YACAC,UACAC,QACAC,UACAC,MAAOjC,GAAWkC,MAClBC,YACAC,cACAC,aACAC,WACAC,eACAC,cACAC,WACAC,yGC/DW,SAASC,GAAiBC,EAAOC,GAC5C,IViB6B7O,EUjBvB8O,EAAS3O,MACf,OAAQ0O,EAAO/P,MACf,IAAK,WAED,OADAiQ,QAAQC,KAAK,+CACNhN,YAAM8M,EAAQD,EAAOI,KAAML,GACtC,IAAK,cAED,OADA5Q,IAAES,UAAU,CAACiB,KAAM1B,IAAER,QAArBQ,CAA8B6Q,GACvB7M,YACH8M,GVSqB9O,EURJ,CAAC9B,GAAI4Q,EAAQpP,KAAMmP,EAAOnP,MVS5CO,EAAMX,WACTO,OAAOK,OACH,CACIX,SAAU,GACVC,KAAM,IAAIC,KACVvB,GAAIiC,MACJjB,UAAW,GACXS,UAAW,GACXC,UAAW,CAAC,EAAG,EAAG,EAAG,IAEzBI,KUlBA4O,GAER,IAAK,aAMD,OALA5Q,IAAES,UAAU,CACRC,UAAWV,IAAER,OACbmB,SAAUX,IAAER,OACZqB,OAAQb,IAAEL,QAHdK,CAIG6Q,GACI7M,YACH8M,EACA1O,EAAa,CACT1B,UAAWmQ,EAAOnQ,UAClBR,GAAI4Q,EACJnQ,SAAUkQ,EAAOlQ,SACjBE,OAAQgQ,EAAOhQ,SAEnB+P,GAER,IAAK,WAGD,OADA5Q,IAAES,UAAU,CAACP,GAAIF,IAAER,QAAnBQ,CAA4B6Q,GACrBK,aAAOL,EAAO3Q,GAAI0Q,GAC7B,IAAK,aAUD,OAPA5Q,IAAES,UAAU,CACRC,UAAWV,IAAER,OACbU,GAAI+B,EAAMlC,GACVY,SAAUX,IAAER,OACZoB,WAAYZ,IAAEL,OACdkB,OAAQb,IAAEL,QALdK,CAMG6Q,GACI1I,YACHM,YAASoI,EAAO3Q,IAChBiR,aACI,CACIzQ,UAAWmQ,EAAOnQ,UAClBC,SAAUkQ,EAAOlQ,SACjBC,WAAYiQ,EAAOjQ,WACnBC,OAAQgQ,EAAOhQ,SAGvB+P,GAER,IAAK,aACD,OAAOC,EAAOD,MAClB,QACI,MAAM,IAAIQ,MAAM,2BCjET,SAASC,GAAeT,EAAOC,GAC1C,OAAQA,EAAO/P,MACf,IAAK,iBAED,OADAd,IAAES,UAAU,CAAC8I,KAAMtH,EAAM3B,WAAzBN,CAAqC6Q,GAC9B1I,YACHM,YAAS,cACTP,YAAO2I,EAAOtH,MACdqH,GAER,IAAK,iBAED,OADA5Q,IAAES,UAAU,CAAC8I,KAAMtH,EAAM3B,WAAzBN,CAAqC6Q,GAC9B1I,YACHM,YAAS,cACTlD,aAAO,SAACgE,GAAD,QACHA,EAAKxF,SAAS8M,EAAOtH,KAAK,KAAOA,EAAKxF,SAAS8M,EAAOtH,KAAK,OAE/DqH,GAER,IAAK,mBAID,OAHA5Q,IAAES,UAAU,CAACP,GAAI+B,EAAMlC,IAAvBC,CAA4B6Q,GAGrB1I,YACHM,YAAS,cACTlD,aAAO,SAACgE,GAAD,OAAWA,EAAKxF,SAAS8M,EAAO3Q,MACvC0Q,GAER,IAAK,aAQD,OAPA5Q,IAAES,UAAU,CACR6Q,OAAQtR,IAAER,OACVP,MAAOe,IAAEuR,MAAM,CACXvR,IAAEL,OACFK,IAAEqB,KAAKY,EAAM3B,cAJrBN,CAMG6Q,GACI7M,YACH6M,EAAOS,OACPT,EAAO5R,MACP2R,GAER,IAAK,aACD,OAAOC,EAAOD,MAClB,QACI,MAAM,IAAIQ,MAAM,0CClCT,SAASI,GAAeZ,EAAOC,GAC1C,IAAMC,EAAS3O,MACf,OAAQ0O,EAAO/P,MACf,IAAK,aAMD,OALAd,IAAES,UAAU,CACRC,UAAWV,IAAER,OACbmB,SAAUX,IAAER,OACZqB,OAAQb,IAAEL,QAHdK,CAIG6Q,GACI7M,YACH8M,EACA1O,EAAa,CACT1B,UAAWmQ,EAAOnQ,UAClBR,GAAI4Q,EACJnQ,SAAUkQ,EAAOlQ,SACjBE,OAAQgQ,EAAOhQ,SAEnB+P,GAER,IAAK,aAQD,OAPA5Q,IAAES,UAAU,CACRC,UAAWV,IAAER,OACbU,GAAI+B,EAAMlC,GACVY,SAAUX,IAAER,OACZoB,WAAYZ,IAAEL,OACdkB,OAAQb,IAAEL,QALdK,CAMG6Q,GACI1I,YACHM,YAASoI,EAAO3Q,IAChBiR,aACI,CACIzQ,UAAWmQ,EAAOnQ,UAClBC,SAAUkQ,EAAOlQ,SACjBC,WAAYiQ,EAAOjQ,WACnBC,OAAQgQ,EAAOhQ,SAGvB+P,GAER,IAAK,aAGD,OADA5Q,IAAES,UAAU,CAACP,GAAI+B,EAAMlC,IAAvBC,CAA4B6Q,GACrBK,aACHrI,YAASgI,EAAO3Q,IAChB0Q,GAER,IAAK,wBAKD,OAJA5Q,IAAES,UAAU,CACRP,GAAI+B,EAAMlC,GACVa,WAAYZ,IAAEL,QAFlBK,CAGG6Q,GACIY,aACH5I,YAAS,CAACgI,EAAO3Q,GAAI,eACrB2Q,EAAOjQ,WACPgQ,GAER,IAAK,oBAED,OADA5Q,IAAES,UAAU,CAACP,GAAI+B,EAAMlC,GAAIc,OAAQb,IAAEL,QAArCK,CAA8C6Q,GACvCY,aACH5I,YAAS,CAACgI,EAAO3Q,GAAI,WACrB2Q,EAAOhQ,OACP+P,GAER,IAAK,aACD,OAAOC,EAAOD,MAClB,QACI,MAAM,IAAIQ,MAAM,+GC3DjB,SAASM,GAATtK,GAMJ,IALCuK,EAKDvK,EALCuK,UACAC,EAIDxK,EAJCwK,SACAjO,EAGDyD,EAHCzD,QACAC,EAEDwD,EAFCxD,QACAiO,EACDzK,EADCyK,QAEM/H,EAAW3D,YACb,SAAC2L,GAAD,OAAY7O,EAAe6O,EAAQlO,IACnCuF,GACAK,GAAkB7F,EAASgO,GAC3B5G,GACAS,GALarF,CAMf0L,EAAQlQ,WAPXoQ,EP4GI,SAAsBxQ,EAAUyQ,EAAS3I,GAC5C,IAAM4I,EAAgB,SAAC1G,GAAD,OAAQA,EAAE1G,UAAUd,SAAS/D,IAAER,OAAOwS,KAE5D,GAAI3I,EAAKjG,OAAS,IAAM,EACpB,MAAO,CAACiG,EAAM,MAElB,IAAM6I,EAAqB7I,EAAK9D,OAAO0M,GAAexM,IAAI,SAAC8F,GAAD,OAAOA,EAAErL,KAC7DiS,EAAgBnS,IAAEqB,KAAKrB,IAAER,OAATQ,CAAiBuB,GAAUgE,OAC7C,SAACrF,GAAD,OAAQgS,EAAmBnO,SAAS7D,KACtC,GACIkS,EAAiBD,EAEjBE,aAAc,SAAC9G,GAAD,OAAOA,EAAErL,KAAOiS,GAAe9I,GAI7CgJ,aAAcJ,EAAe5I,GAG7BiJ,GAA4B,IAAnBF,EACT/I,EAAKjG,OAAS,EACdgP,EACAG,EAAUlJ,EAAKiJ,GAErB,MAAO,CADgBjJ,EAAK9D,OAAO,SAAC4F,EAAQrE,GAAT,OAAeA,IAAMwL,IAChCC,GOzHpBC,CAAaX,EAAQtQ,SAAUzB,EAAUgK,GAX9C2I,EAAA5Q,OAAAmH,EAAA,EAAAnH,CAAAkQ,EAAA,GASKW,EATLD,EAAA,GAUKE,EAVLF,EAAA,GAYOG,EPuIH,SAAqBhJ,GAGxB,IAAMiJ,EAAgB/G,GAAUlC,GAAanE,IAAI,SAAC8F,GAAD,OAAOA,EAAErL,KAapD4S,EAAmBlJ,EAAYtG,OAXrC,SAA0ByP,EAAQvI,EAAS8H,EAAOU,GAE9C,IAAMC,EAAgBD,EAAO3P,MAAMiP,EAAQ,GAAG7M,IAC1C,SAACgF,GAAD,MAAa,CACToI,EAAcK,QAAQ1I,EAAQtK,IAC9B2S,EAAcK,QAAQzI,EAAQvK,IAC9BqK,GAAcC,EAASC,MAG/B,OAAOsI,EAAOtP,OAAOwP,IAEqC,IAMxDE,EAFiBC,KAAQN,GAEOxP,OAClC,SAAUC,EAAK8P,EAASC,GAGpB,IAAiB,IAAbD,EAAgB,CAEhB,IAAME,EAAOV,EAAcQ,GACrBG,EAAOX,EAAcS,GACrBG,EAAK7J,EAAYrE,OAAO,SAACgG,GAAD,OAAOA,EAAErL,KAAOqT,IAAM,GAC9ClI,EAAKzB,EAAYrE,OAAO,SAACgG,GAAD,OAAOA,EAAErL,KAAOsT,IAAM,GAW9CE,EAAUnQ,EAAIkC,IAAI,SAAC8D,GAAD,OAAUA,EAAK,KACvC,IAAKmK,EAAQ3P,SAAS0P,KAAQC,EAAQ3P,SAASsH,GAC3C,OAAO9H,EAAIE,OAAO,CAAC,CAACgQ,EAAIpI,KAGhC,OAAO9H,GAEX,IAqBJ,OAlBsBmE,YAClB,CAAC+D,GAAiBI,IAClBsH,GAE0B1N,IAC1B,SAAU8D,GAAM,IAAAoK,EAAA9R,OAAAmH,EAAA,EAAAnH,CACe0H,EADf,GACLiB,EADKmJ,EAAA,GACIlJ,EADJkJ,EAAA,GAKZ,OAAQhO,YAAI6E,EAAQrG,aAAewB,YAAI8E,EAAQtG,aAEzC,CAACsG,EAAQvK,GAAIsK,EAAQtK,IAGrB,CAACsK,EAAQtK,GAAIuK,EAAQvK,MO1MrB0T,CAAYlB,GACpBmB,EAAgBlB,EAChBC,EAAMnP,OAAO,CAAC,CAACkP,EAAczS,GAAIJ,KACjC8S,EACAkB,EAAYnR,EAAegB,GAgBjC,OAfqBkQ,EAAapO,IAC9B,SAACsO,GAAD,OACIhS,EAAY,CACRf,UAAW,CACP8S,EAAUC,EAAQnU,IAAQiB,OAC1BiT,EAAUC,EAAQlU,IAAQgB,QAE9BI,WAAY,CACR6S,EAAUC,EAAQnU,IAAQiB,OAC1BiT,EAAUC,EAAQlU,IAAQgB,QAE9BK,UAAW,CAAC6S,EAAQnU,GAAQmU,EAAQlU,QAI5ByD,OAEhB,SAAUC,EAAK1E,GACX,OAAIA,EAAMqC,UAAUtB,KAAWE,EACpByD,EAAIE,OAAO,CAACO,YAAM,SAAU,CAAC,EAAG4N,GAAW/S,KAElDA,EAAMqC,UAAUrB,KAAWC,EACpByD,EAAIE,OAAO,CAACO,YAAM,SAAU,CAAC4N,EAAU,GAAI/S,KAE/C0E,EAAIE,OAAO,CAAC5E,KAEvB,IC9CO,SAASmV,GAAkBpD,EAAOC,GAC7C,OAAQA,EAAO/P,MACf,IAAK,YACD,OAAOqH,YACHM,YAAS,aACTP,YAAO,IACP0I,GAER,IAAK,iBACD,OAAOzI,YACHM,YAAS,aACTwL,cAAQ,EAAG,GACXrD,GAER,IAAK,eAED,OADA5Q,IAAES,UAAU,CAACP,GAAIF,IAAEL,QAAnBK,CAA4B6Q,GACrB1I,YACHM,YAAS,aACTP,YAAO2I,EAAO3Q,IACd0Q,GAER,IAAK,eAED,OADA5Q,IAAES,UAAU,CAACP,GAAIF,IAAEL,QAAnBK,CAA4B6Q,GACrB1I,YACHM,YAAS,aACTlD,aAAO,SAACrF,GAAD,OAAQA,IAAO2Q,EAAO3Q,KAC7B0Q,GAER,IAAK,gBAKD,OAJA5Q,IAAES,UAAU,CACRyT,SAAUlU,IAAEL,OACZwU,SAAUnU,IAAEL,QAFhBK,CAGG6Q,GACI1I,YACHM,YAAS,aACT2L,aAAKvD,EAAOsD,SAAUtD,EAAOqD,UAC7BtD,GAER,IAAK,sBAED,OADA5Q,IAAES,UAAU,CAACS,UAAWlB,IAAEqB,KAAKY,EAAMlC,KAArCC,CAA2C6Q,GACpC7M,YAAM,YAAa6M,EAAO3P,UAAW0P,GAChD,IAAK,gBAED,OADA5Q,IAAES,UAAU,CAACc,SAAUvB,IAAEqB,KAAKY,EAAMlC,KAApCC,CAA0C6Q,GACnC7M,YAAM,WAAY6M,EAAOtP,SAAUqP,GAC9C,IAAK,WAED,OADA5Q,IAAES,UAAU,CAACiB,KAAM1B,IAAER,QAArBQ,CAA8B6Q,GACvB7M,YAAM,OAAQ6M,EAAOnP,KAAMkP,GACtC,IAAK,YAOD,OANA5Q,IAAES,UAAU,CACRkR,UAAW3R,IAAEqB,KAAKY,EAAM3B,WACxBsR,SAAU5R,IAAEL,OACZgE,QAAS3D,IAAEgD,KAAKf,EAAMlC,GAAIkC,EAAMzB,QAChCoD,QAAS5D,IAAEL,QAJfK,CAKG6Q,GACI1I,YACHU,YAAS,CAAC,YAAagI,EAAOjN,UAC9BH,aACI4Q,KACA3C,GAAS,CACLC,UAAWd,EAAOc,UAClBC,SAAUf,EAAOe,SACjBjO,QAASkN,EAAOlN,QAChBC,QAASiN,EAAOjN,QAChBiO,QAASjB,KAGjBA,GAER,IAAK,cAMD,OALA5Q,IAAES,UAAU,CACRmR,SAAU5R,IAAEL,OACZ4J,KAAMvJ,IAAEO,MAAM,CAAC0B,EAAMzB,OAAQyB,EAAMzB,SACnCoD,QAAS5D,IAAEL,QAHfK,CAIG6Q,GACI1I,YACHU,YAAS,CAAC,YAAagI,EAAOjN,UAC9BsE,YD1BL,SAAoBqB,EAAMqI,GAC7B5R,IAAEO,MAAM,CAAC0B,EAAMzB,OAAQyB,EAAMzB,QAA7BR,CAAsCuJ,GACtC,IAAM1K,EAAQkD,EAAY,CACtBf,UAAW,CAACuI,EAAK3J,GAAOiB,OAAQ0I,EAAK1J,GAAOgB,QAC5CI,WAAY,CAACsI,EAAK3J,GAAOiB,OAAQ0I,EAAK1J,GAAOgB,QAC7CK,UAAW,CAACqI,EAAK3J,GAAOM,GAAIqJ,EAAK1J,GAAOK,MAE5C,OAAIqJ,EAAK3J,GAAOM,KAAOJ,EACZkE,YAAM,SAAU,CAAC,EAAG4N,GAAW/S,GAEtC0K,EAAK1J,GAAOK,KAAOJ,EACZkE,YAAM,SAAU,CAAC4N,EAAU,GAAI/S,GAEnCA,ECaQyV,CAAWzD,EAAOtH,KAAMsH,EAAOe,WACtChB,GAER,IAAK,WAED,OADA5Q,IAAES,UAAU,CAACe,KAAMC,MAAnBzB,CAA0B6Q,GACnB7M,YAAM,OAAQ6M,EAAOrP,KAAMoP,GACtC,IAAK,mBAOD,OANA5Q,IAAES,UAAU,CACR8T,QAASvU,IAAER,OACXwB,UAAWhB,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,SAChCwB,OAAQnB,IAAEO,MAAM,CAACP,IAAEL,OAAQK,IAAEL,SAC7BiE,QAAS5D,IAAEL,QAJfK,CAKG6Q,GACI1K,YACHsL,aACI5I,YAAS,CACL,YACAgI,EAAOjN,QACP4Q,aACIC,aAAO,KAAM5D,EAAO0D,SACpB3D,EAAMjP,UAAUkP,EAAOjN,UAE3B,WAEJiN,EAAO1P,QAEXsQ,aACI5I,YAAS,CACL,YACAgI,EAAOjN,QACP4Q,aACIC,aAAO,KAAM5D,EAAO0D,SACpB3D,EAAMjP,UAAUkP,EAAOjN,UAE3B,cAEJiN,EAAO7P,WAvBRmF,CAyBLyK,GACN,IAAK,YAED,OADA5Q,IAAES,UAAU,CAAC8T,QAAStS,EAAMlC,GAAI6D,QAAS5D,IAAEL,QAA3CK,CAAoD6Q,GAC7C1I,YACHU,YAAS,CAAC,YAAagI,EAAOjN,UAC9B2B,aAAO,SAAC1G,GAAD,OAAWA,EAAMqB,KAAO2Q,EAAO0D,UACtC3D,GAER,IAAK,cAED,OADA5Q,IAAES,UAAU,CAAC8T,QAAStS,EAAMlC,GAAI6D,QAAS5D,IAAEL,QAA3CK,CAAoD6Q,GAC7C1I,YACHU,YAAS,CACL,YACAgI,EAAOjN,QACP4Q,aACIC,aAAO,KAAM5D,EAAO0D,SACpB3D,EAAMjP,UAAUkP,EAAOjN,YAG/B,SAAC/E,GAAD,OAAW6V,aACP7V,EACA,CACImC,UAAW2T,aAAQ9V,EAAMmC,WACzBC,WAAY0T,aAAQ9V,EAAMoC,YAC1BC,UAAWyT,aAAQ9V,EAAMqC,WACzBC,OAAQwT,aAAQ9V,EAAMsC,WAG9ByP,GAER,IAAK,aAMD,OALA5Q,IAAES,UAAU,CACRyT,SAAUlU,IAAEL,OACZwU,SAAUnU,IAAEL,OACZiE,QAAS5D,IAAEL,QAHfK,CAIG6Q,GACI1I,YACHU,YAAS,CAAC,YAAagI,EAAOjN,UAC9BwQ,aAAKvD,EAAOsD,SAAUtD,EAAOqD,UAC7BtD,GAER,IAAK,oBAED,OADA5Q,IAAES,UAAU,CAACxB,MAAOe,IAAEL,QAAtBK,CAA+B6Q,GACxB7M,YACH,YACAyB,aACIA,aACI,SAAU5G,GACN,OAAIA,EAAMqC,UAAUtB,KAAWE,EACpBkE,YAAM,SAAU,CAAC,EAAG6M,EAAO5R,OAAQJ,GACnCA,EAAMqC,UAAUrB,KAAWC,EAC3BkE,YAAM,SAAU,CAAC6M,EAAO5R,MAAO,GAAIJ,GAEnCA,IAInB+R,EAAMjP,WAEViP,GAER,IAAK,YAED,OADAG,QAAQ6D,IAAI,iBAAkB/D,EAAOD,OAC9BC,EAAOD,MAClB,QACI,MAAM,IAAIQ,MAAM,0BAA4BP,EAAO/P,wECpM5C+T,GAAA,CACXC,WACAnR,QAAS3D,IAAEgD,KAAKf,EAAMlC,GAAIkC,EAAMzB,OAAvBR,CAA+B2D,IACxCoR,YAAaC,KAASD,GAAa/U,IAAEgD,KAAKf,EAAMlC,GAAIkC,EAAMX,sDCNvD,SAAS2T,GAAeC,EAAWC,GAAmC,IAAvBC,IAAuBjS,UAAAC,OAAA,QAAAP,IAAAM,UAAA,KAAAA,UAAA,GAAAkS,EAC/CC,mBAASJ,GADsCK,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAClElX,EADkEoX,EAAA,GAC3DC,EAD2DD,EAAA,GAAAE,EAEnDH,mBAASH,GAF0CO,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAElEnO,EAFkEoO,EAAA,GAE7DC,EAF6DD,EAAA,GAAAE,EAGjCN,mBAASF,GAHwBS,EAAAhU,OAAAmH,EAAA,EAAAnH,CAAA+T,EAAA,GAGlEE,EAHkED,EAAA,GAGpDE,EAHoDF,EAAA,GAczE,OAPAG,oBACI,WACI,IAAMC,EAAaH,EAAgBvO,IAAUlB,IAC7CmP,EAASpP,YAAK6P,EAAUxO,YAAKH,IAAO4N,KAExC,CAACA,EAAW5N,EAAKwO,IAEd,CACHA,eACAxO,MACAyO,kBACAJ,SACAH,WACArX,QACA+X,gBAjBJ,WACIH,GAAiBD,KAoBlB,SAASK,GAAiB7H,GAC7B0H,oBACI,WACI,IAAMI,EAAYC,SAAS/H,MAE3B,OADA+H,SAAS/H,MAAQ,kBAAoBA,EAC9B,WACH+H,SAAS/H,MAAQ8H,IAGzB,CAAC9H,IAIF,SAASgI,GAAiBC,GAC7BP,oBACI,WAOI,OANIhW,IAAEvB,QAAQ8X,GACVF,SAASG,KAAKhI,MAAMiI,OAAS,OAE7BJ,SAASG,KAAKhI,MAAMiI,OAAS,OAG1B,WACHJ,SAASG,KAAKhI,MAAMiI,OAAS,SAGrC,CAACF,ICxCTG,2BAAkBC,MAClBC,2BAAqBD,MACrB,IACME,GAAeF,KAAYG,eAAe,CAC5CpV,KAFkB,gBAGlBqV,UAAW,YAETC,GAAcL,KAAYG,eAAe,CAC3CpV,KANkB,gBAOlBqV,UAAW,YAETE,GAAeN,KAAYG,eAAe,CAC5CpV,KAVkB,gBAWlBqV,UAAW,+DAKR,SAAAG,IAAA,OAAAC,GAAAvK,EAAAwK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHlB,SAASG,KAAKhI,MAAMiI,OAAS,OAD1BY,EAAAE,KAAA,EAEGV,GAAaW,SAASC,GAAS3C,SAFlC,cAAAuC,EAAAE,KAAA,EAGGP,GAAYQ,SAASC,GAAS9T,SAHjC,cAAA0T,EAAAE,KAAA,EAIGN,GAAaO,SAASC,GAAS1C,aAJlC,OAQHsB,SAASG,KAAKhI,MAAMiI,OAAS,OAR1B,wBAAAY,EAAAK,SAAAR,6BAcP,SAASS,GAAkBC,EAAO9W,GAAM,IAAA+W,EACVC,qBAAWnH,GAAkB,IADnBoH,EAAAlW,OAAAmH,EAAA,EAAAnH,CAAAgW,EAAA,GAC7BG,EAD6BD,EAAA,GACtBE,EADsBF,EAAA,GAAA1C,EAEJC,oBAAS,GAFLC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAE7BkB,EAF6BhB,EAAA,GAEnB2C,EAFmB3C,EAAA,GA4CpC,OAzCAe,GAAiBC,GACjBP,oBACI,WACI4B,EAAMO,WAAWC,KAAK,SAAU5T,GAC5BuM,QAAQ6D,IAAI,oBAAqBgD,EAAMS,QAAQtB,WAM/C,IAAMuB,EAAgB/S,aAAOzE,EAAKyX,GAAI/T,GACtCyT,EAAS,CAACrH,MAAO0H,EAAcxX,KAAM,eACrCoX,GAAY,KACbM,MAAM,WACLzH,QAAQ0H,MACJ,2BACAb,EAAMS,QAAQtB,cAI1B,CAACa,EAAO9W,IAEZkV,oBACI,WACSO,IAGLqB,EAAMJ,SAASQ,GAAOI,KAAK,WACvBrH,QAAQ6D,IAAI,iBAAkBgD,EAAMS,QAAQtB,aAEhDa,EAAMtS,OAAO8S,KAAK,SAAU9S,GACxB,IAAMoT,EAAUC,aAAWrT,EAAMzD,OAAOyD,KAAK0S,IACzCU,EAAQtV,OAAS,GACjBwU,EAAMgB,YAAYF,GAASN,KAAK,WAC5BrH,QAAQ6D,IAAI,WAAa8D,EAAQtV,OAAS,iBAK1D,CAACwU,EAAOI,EAAOzB,IAEZ,CAACyB,EAAOC,GAMZ,SAASY,KACZ,OAAOlB,GAAkBX,GAAa/U,EAAMzB,QAGzC,SAASsY,KACZ,OAAOnB,GAAkBV,GAAchV,EAAMX,YAM1C,SAASyX,KAAe,IAAAC,EACClB,qBAAWzG,GAAgB4H,IAD5BC,EAAArX,OAAAmH,EAAA,EAAAnH,CAAAmX,EAAA,GACpBlE,EADoBoE,EAAA,GACXjB,EADWiB,EAAA,GAAAzD,EAEKH,oBAAS,GAFdI,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAEpBc,EAFoBb,EAAA,GAEVwC,EAFUxC,EAAA,GAuB3B,OApBAM,oBACI,WAEIa,GAAasC,QAAQ,SAAUla,EAAOqI,GAClC2Q,EAAS,CAAC3G,OAAQhK,EAAKxG,KAAM,aAAc7B,MAAOA,MACnDmZ,KAAK,WACJF,GAAY,MAGpB,IAEJlC,oBACI,WACSO,GAGLM,GAAaW,SAAS1C,IAE1B,CAACA,EAASyB,IAEP,CAACzB,EAASmD,GCjHrB,IAAMmB,GAAoBC,wBAAc,MAEjC,SAASC,KAEZ,OADcC,qBAAWH,IAItB,SAASI,GAATpS,GAAmD,IAAtBqS,EAAsBrS,EAAtBqS,SAAUC,EAAYtS,EAAZsS,UAAY7B,EACnBC,qBAAW9D,GAAmB,IADX+D,EAAAlW,OAAAmH,EAAA,EAAAnH,CAAAgW,EAAA,GAC/ChG,EAD+CkG,EAAA,GACtC4B,EADsC5B,EAAA,GAAAiB,EAEnBlB,qBAAWtG,GAAgB,IAFR0H,EAAArX,OAAAmH,EAAA,EAAAnH,CAAAmX,EAAA,GAE/CrV,EAF+CuV,EAAA,GAEtCU,EAFsCV,EAAA,GAAA7D,EAGRC,oBAAS,GAHDC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAG/CwE,EAH+CtE,EAAA,GAG9BuE,EAH8BvE,EAAA,GAAAE,EAIRH,oBAAS,GAJDI,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAI/CsE,EAJ+CrE,EAAA,GAI9BsE,EAJ8BtE,EAAA,GAAAE,EAKpBN,oBAAS,GALWO,EAAAhU,OAAAmH,EAAA,EAAAnH,CAAA+T,EAAA,GAK/CqE,EAL+CpE,EAAA,GAKpCqE,EALoCrE,EAAA,GAMtDS,GAAiByD,GAAmBF,GACpC7D,oBACI,WACIiB,GAAakD,QAAQT,GAAWtB,KAAK,SAAUnZ,GAC3C8R,QAAQ6D,IAAI,UAAW8E,GAClBza,GACDib,GAAa,GAEjBP,EAAgB,CAAC/I,MAAO3R,GAAS,GAAI6B,KAAM,cAC3CgZ,GAAmB,KACpBtB,MAAM,WACL0B,GAAa,MAGrB,CAACR,IAEL1D,oBACI,WACI,GAAKnE,EAAQlQ,WAAckQ,EAAQ3Q,UAAnC,CAKA,IAAMkZ,EjBkEX,SAAoChR,GACvC,IAAMiR,EAAara,IAAEqB,KAAKY,EAAMlB,MAAbf,CAAoBoJ,GAAW9F,OAC9C,SAACC,EAAK1E,GAAN,OAAgB0E,EAAIE,OAAO5E,EAAMqC,YACjC,IAEJ,OAAOoZ,MAAMC,KAAK,IAAIC,IAAIH,IiBvEAI,CACdxX,EAAe4O,EAAQlQ,YACzB8B,OACEoO,EAAQ3Q,WAGZ,GAAyB,IAArBkZ,EAAUhX,OAMV,OAJoC,IAAhCvB,OAAOyD,KAAK3B,GAASP,QACrBwW,EAAgB,CAAChJ,MAAO,GAAI9P,KAAM,oBAEtCkZ,GAAmB,GAGvBhD,GAAYmB,SAASiC,GAAWhC,KAAK,SAAUtU,GAK3C,IAAM4W,EAAmBC,aACrB9Y,OAAOyD,KAAKxB,GACZjC,OAAOyD,KAAK3B,IAEhBoN,QAAQ6D,IAAI,qBAAsB8F,GACF,IAA5BA,EAAiBtX,SACjB2N,QAAQ6D,IAAI,wBACZgF,EAAgB,CAAChJ,MAAO9M,EAAQhD,KAAM,gBAE1CkZ,GAAmB,KACpBxB,MAAM,SAAUC,GACf1H,QAAQ0H,MAAM,qBAAsB2B,GACpCrJ,QAAQ0H,MAAMA,OAGtB,CAAC5G,EAAQlQ,UAAWgC,EAASkO,EAAQ3Q,YAEzC8U,oBACI,WAES6D,GAEkC,IAAhChY,OAAOyD,KAAKuM,GAASzO,QAErBsW,IAAc7H,EAAQ3R,IAI7B+W,GAAa2D,QAAQlB,EAAW7H,GAAS2G,MAAM,SAAUC,GACrD1H,QAAQ6D,IAAI,wBAAyB8E,EAAWjB,MAGxD,CAACiB,EAAW7H,EAASgI,IAEzB7D,oBACI,WACS+D,GAGL/C,GAAYQ,SAAS7T,GAASyU,KAAK,SAAUtU,GACzCiN,QAAQ6D,IAAI,8BAA+B9Q,KAC5C0U,MAAM,SAAUC,GACf1H,QAAQ6D,IAAI,+BAAgC6D,MAGpD,CAAC9U,EAASoW,IAEd,IAAMjG,EAAYnR,EAAegB,GAG3BkX,EAAgBtV,aAClB,SAACgG,GAAD,OAAOsG,EAAQ3Q,UAAU6C,SAASwH,EAAErL,KACpCyD,GAEJ,OAAIsW,EACOtN,EAAAC,EAAAC,cAAA,2CAENgN,GAAoBE,EAIrBpN,EAAAC,EAAAC,cAACuM,GAAkB0B,SAAnB,CACI7b,MAAO,CACH4b,gBACA/G,YACAnQ,UACAiW,kBACA/H,UACA8H,oBAGHF,GAbE9M,EAAAC,EAAAC,cAAA,yBCtHA,SAASkO,GAAWrO,GAAO,IAAAsO,EACT1B,KAAtBzH,EAD+BmJ,EAC/BnJ,QAASiC,EADsBkH,EACtBlH,UACTlS,EAAwBiQ,EAAxBjQ,UACDyD,EAAY8D,GAAkBlG,EADL4O,EAAblQ,YAEZwF,EAAYH,GAAmBpF,EAAWyD,GA6BhD,OACIsH,EAAAC,EAAAC,cAAA,SAAOoO,UAAWzM,KAAMrQ,OACpBwO,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,kBAEChL,OAAOyD,KAAK6B,GAAW1B,IAAI,SAACjH,GAAD,OACxBmO,EAAAC,EAAAC,cAAA,MAAIvF,IAAK9I,GACJmB,OAAOnB,GAAQ,KAGxBmO,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIqO,QAAS,GAAb,YAGRvO,EAAAC,EAAAC,cAAA,aAEK1F,EAAU1B,IAAI,SAACoC,EAAUyK,GAAX,OACX3F,EAAAC,EAAAC,cAAA,MAAIvF,IAAKgL,EAAO2I,UAAWzM,KAAMnQ,KAC7BsO,EAAAC,EAAAC,cAAA,MAAIoO,UAAWzM,KAAMhQ,KAAM2c,MAAM,OAC5B7I,EAAQ,GAEb3F,EAAAC,EAAAC,cAAA,MAAIoO,UAAWzM,KAAMjQ,WAAY4c,MAAM,OAClCrH,EAAUjM,EAAS3H,IAAIQ,UAD5B,OAEKoT,EAAUjM,EAAS3H,IAAIS,UAG3BwG,EAAU1B,IAAI,SAAC2V,EAAUC,GAAX,OACX1O,EAAAC,EAAAC,cAAA,MACIvF,IAAK+T,EACLJ,UAAU,iBA3DtC,SAAmBK,EAAWC,GAC1B,GAAID,IAAcC,EACd,OAAO5O,EAAAC,EAAAC,cAAC6B,GAAMgC,EAAP,CAASuK,UAAU,aAE9B,IAAM9Z,EAASkE,EAAUiW,GAAWhX,gBAAgBiX,GACpD,YAAe1Y,IAAX1B,EACO,KAEJrC,IAAQqC,GAAQnC,OAAO,OAqDLwc,CAAU3T,EAAS3H,GAAIkb,EAASlb,OAIzCyM,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,iBACTnc,IAAQ+I,EAAS/C,OAAO9F,OAAO,QAvDxD,SAA4BsD,GACxB,IAAMmZ,EAAcpW,EAAU/C,GAAUiC,QAAQ,GAC1CmX,EAAa5V,YAAKT,EAAU/C,GAAUiC,SACtCoX,EAAS7c,IAAQ4c,EAAaD,GAAazc,OAAO,MACxD,OACI2N,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACAjP,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,iBACTS,GAEL/O,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,yBAAd,IACMU,EADN,MAgDaE,CAAmBhU,EAAS3H,qDCxD9C,SAAS4b,GAATC,GAAkC,IAAlBtC,EAAkBsC,EAAlBtC,SAAUjL,EAAQuN,EAARvN,MAC7B,OACI7B,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAOC,MAAOzN,MAAK3M,OAAAqa,GAAA,EAAAra,CAAA,GAAM2M,IACpCiL,GASN,SAAS0C,GAAezP,GAC3B,OACIC,EAAAC,EAAAC,cAAA,MAAAhL,OAAAK,OAAA,GAASwK,EAAT,CAAgBuO,UAAWe,KAAOI,OAAS,IAAM1P,EAAMuO,YAClDvO,EAAM+M,UAUZ,SAAS4C,GAAW3P,GACvB,IAAM4P,EAAa,IAAIC,KAAKC,eACxB,QACA,CACIC,IAAK,UACLC,MAAO,QACPC,KAAM,YAGRC,EAAaC,aAAK,CAAC,QAASnQ,GAClC,OACIC,EAAAC,EAAAC,cAAA,OAAAhL,OAAAK,OAAA,CAAM4a,SAAUpQ,EAAMlL,KAAKub,eAAmBH,GACzCN,EAAWtd,OAAO0N,EAAMlL,OAQ9B,SAASwb,GAAatQ,GAAO,IAAAuQ,EAExBvQ,EAAMwQ,QACC,CAACvQ,EAAAC,EAAAC,cAAC6B,GAAMO,MAAP,MAAiB,yBAClBvC,EAAMyQ,QACN,CAACxQ,EAAAC,EAAAC,cAAC6B,GAAME,MAAP,MAAiB,yBAClBlC,EAAM+L,MACN,CAAC9L,EAAAC,EAAAC,cAAC6B,GAAMgC,EAAP,MAAa,uBAEd,CAAC/D,EAAAC,EAAAC,cAAC6B,GAAMiB,KAAP,MAAgB,yBATAyN,EAAAvb,OAAAmH,EAAA,EAAAnH,CAAAob,EAAA,GACzBhP,EADyBmP,EAAA,GACnBnC,EADmBmC,EAAA,GAY1BR,EAAaC,aAAK,CAAC,UAAW,QAAS,UAAW,WAAYnQ,GACpE,OACIC,EAAAC,EAAAC,cAAA,MAAAhL,OAAAK,OAAA,GACQ0a,EADR,CAEI3B,UAAW,gBAAkBA,EAAY,IAAMvO,EAAMuO,YAErDtO,EAAAC,EAAAC,cAAA,OACIwB,aAAY3B,EAAM2Q,QAClBpC,UAAU,qBACV3M,MAAO5B,EAAM2Q,SAEZpP,GAELtB,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,sBACVvO,EAAM+M,WAkBvB,IAAM6D,GAAoB,kBACtB3Q,EAAAC,EAAAC,cAAA,UACIoO,UAAU,2BACVsC,eAAA,EACAC,UAAQ,KAKT,SAASC,GAATC,GAA2C,IAAvBC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,QAASvU,EAAOqU,EAAPrU,KAYvC,OACIsD,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,oBACZtO,EAAAC,EAAAC,cAACgR,GAAD,MACAlR,EAAAC,EAAAC,cAAA,UACIoO,UAAU,oDACV6C,QAZZ,WACQzU,EAAK/B,MAAQsW,EACbvU,EAAK6M,kBAEL7M,EAAKsM,OAAOiI,KAUPD,GAELhR,EAAAC,EAAAC,cAAA,UACIoO,UACK5R,EAAK/B,MAAQsW,EACZ,yBACA,eACNE,QAzBZ,WACIzU,EAAKsM,OAAOiI,GACZvU,EAAK6M,oBAyBK7M,EAAKyM,aACDnJ,EAAAC,EAAAC,cAAC6B,GAAMY,UAAP,MACA3C,EAAAC,EAAAC,cAAC6B,GAAMS,YAAP,QAcf,SAAS4O,GAAS7d,EAAImB,GACzB,OAAOA,EAAKkE,OAAO,SAACyY,GAAD,OAAOA,EAAE9d,KAAOA,IAAI,gBC1K5B,SAAS+d,GAAT7W,GAA+B,IAAX6Q,EAAW7Q,EAAX6Q,SACzBiG,EAAmB,CAACxd,UAAW,GAAIC,SAAU,GAAIE,OAAQ,MADrBwU,EAEAC,mBAAS4I,GAFT3I,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAEnC8I,EAFmC5I,EAAA,GAEpB6I,EAFoB7I,EAAA,GAgBpC8I,EAAc,SAAUC,GAC1BA,EAAMC,iBAD2B,IAAAC,EAEXF,EAAMG,cAArB/c,EAF0B8c,EAE1B9c,KAAMzC,EAFoBuf,EAEpBvf,MACbmf,EAAiB,SAACM,GAAD,OAAe1a,YAAMtC,EAAMzC,EAAOyf,MAGvD,OACI/R,EAAAC,EAAAC,cAAA,QAAM8R,SAnBW,SAAUL,GAC3BA,EAAMC,iBAD4B,IAE3B7d,EAA+Byd,EAA/Bzd,UAAWC,EAAoBwd,EAApBxd,SAAUE,EAAUsd,EAAVtd,OAC5Bud,EAAiBF,GACjBjG,EAAS,CACLvX,YACAC,WACAE,OAAQlB,OAAOkB,GACfC,KAAM,iBAYN6L,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,aAAf,cACAjS,EAAAC,EAAAC,cAAA,SACInL,KAAK,YACLZ,KAAK,OACL7B,MAAOkf,EAAczd,UACrBme,UAAQ,EACRC,SAAUT,KAGlB1R,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,YAAf,aACAjS,EAAAC,EAAAC,cAAA,SACInL,KAAK,WACLZ,KAAK,OACL7B,MAAOkf,EAAcxd,SACrBke,UAAQ,EACRC,SAAUT,KAGlB1R,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,UAAf,UACAjS,EAAAC,EAAAC,cAAA,SACInL,KAAK,SACLZ,KAAK,SACL7B,MAAOkf,EAActd,OACrBge,UAAQ,EACRC,SAAUT,KAGlB1R,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO/L,KAAK,SAAS7B,MAAM,uBCxDhC,SAAS8f,GAAUrS,GAAO,IAAAsO,EACF1B,KAA5BzH,EAD8BmJ,EAC9BnJ,QAAS8H,EADqBqB,EACrBrB,gBADqBqF,EAECnG,KAFDoG,EAAApd,OAAAmH,EAAA,EAAAnH,CAAAmd,EAAA,GAE9Brb,EAF8Bsb,EAAA,GAErBC,EAFqBD,EAAA,GAIrC,SAASE,EAAab,GAClB,IAAMpe,EAAKoe,EAAMc,OAAOngB,MACpBqf,EAAMc,OAAOC,QACb1F,EAAgB,CACZzY,UAAW2Q,EAAQ3Q,UAAUuC,OAAO,CAACvD,IACrCY,KAAM,wBAGV6Y,EAAgB,CACZzY,UAAW2Q,EAAQ3Q,UAAUqE,OAAO,SAAC+Z,GAAD,OAASA,IAAQpf,IACrDY,KAAM,wBAKlB,OACI6L,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WACXtO,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMnE,EAAgB,CAC3BzY,UAAWW,OAAOyD,KAAK3B,GACvB7C,KAAM,0BAJd,cASA6L,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMnE,EAAgB,CAC3BzY,UAAW,GACXJ,KAAM,0BAJd,gBAUJ6L,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aACKhL,OAAOiC,OAAOH,GAAS8B,IAAI,SAAA2B,GAAA,IAAElH,EAAFkH,EAAElH,GAAIQ,EAAN0G,EAAM1G,UAAWC,EAAjByG,EAAiBzG,SAAjB,OACxBgM,EAAAC,EAAAC,cAAA,MAAIvF,IAAKpH,GACLyM,EAAAC,EAAAC,cAAA,UAAKnM,GACLiM,EAAAC,EAAAC,cAAA,UAAKlM,GACLgM,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,KACI5S,EAAAC,EAAAC,cAAA,SAAO+R,QAAS,UAAY1e,GAA5B,UACYQ,EADZ,IACwBC,IAG5BgM,EAAAC,EAAAC,cAAA,SACIwS,QAASxN,EAAQ3Q,UAAU6C,SAAS7D,GACpCY,KAAK,WACL7B,MAAOiB,EACPA,GAAI,UAAYA,EAChB4e,SAAUK,UAOlCxS,EAAAC,EAAAC,cAACoR,GAAD,CAAWhG,SAAUiH,KCrEjC,SAASM,GAATpY,GAAmD,IAA9BzD,EAA8ByD,EAA9BzD,QAASsU,EAAqB7Q,EAArB6Q,SAAU1W,EAAW6F,EAAX7F,SACpC,OACIoL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACC/Z,OAAOiC,OAAOH,GAAS8B,IAAI,SAAC8F,GAAD,OACxBoB,EAAAC,EAAAC,cAAA,MAAIvF,IAAKiE,EAAErL,GAAI+a,UAAW1P,EAAEzK,KAAO,WAC/B6L,EAAAC,EAAAC,cAAA,UAAKtB,EAAE7K,WACPiM,EAAAC,EAAAC,cAAA,UAAKtB,EAAE5K,UACPgM,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAAUjc,EAASwC,SAASwH,EAAErL,IAC9B4d,QAAS,kBACL7F,EAAS,CACL1W,SACIA,EAASkC,OAAO,CAAC8H,EAAErL,KACvBY,KAAM,oBAPlB,mBA0BL,SAAS2e,GAAa/S,GAAO,IAAAsO,EACU1B,KAA3CzH,EADiCmJ,EACjCnJ,QAAS8H,EADwBqB,EACxBrB,gBAAiBkB,EADOG,EACPH,cAC1B3Z,EAAkC2Q,EAAlC3Q,UAAWS,EAAuBkQ,EAAvBlQ,UAAWJ,EAAYsQ,EAAZtQ,SACvB0W,EAAW0B,EAHuBtE,EAIFC,mBAA8B,IAArBpU,EAAUkC,QAJjBmS,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAIjCqK,EAJiCnK,EAAA,GAIpBoK,EAJoBpK,EAAA,GAKlCqK,EAAU3c,EAAetB,GAC/B,OACIgL,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,gBACXtO,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WACXtO,EAAAC,EAAAC,cAAA,UAAQiR,QAAS,kBAAM6B,GAAe,KAClChT,EAAAC,EAAAC,cAAC6B,GAAMe,KAAP,MADJ,wBAIJ9C,EAAAC,EAAAC,cAACsP,GAAD,KACIxP,EAAAC,EAAAC,cAACiP,GAAD,CAAOtN,MAAO,CAACqR,WAAY,MACvBlT,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqO,QAAS,GAAb,QACAvO,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAAA,SAAOoO,UAAU,WACbtO,EAAAC,EAAAC,cAAC2S,GAAD,CACIje,SAAUA,EACV0W,SAAUA,EACVtU,QAASkX,OAKzBlO,EAAAC,EAAAC,cAACiP,GAAD,KACInP,EAAAC,EAAAC,cAAA,uBACqB,IAApBtL,EAAS6B,QACNuJ,EAAAC,EAAAC,cAAA,uDAEJF,EAAAC,EAAAC,cAAA,UACKtL,EAASkE,IAAI,SAAC6Z,GAAD,OACV3S,EAAAC,EAAAC,cAAA,MACIvF,IAAKgY,EACLrE,WtB2BN7R,EsB1BqBwW,EtB0BVtd,EsB1BmBgd,EtB2B7Ctf,IAAEqB,KAAKY,EAAMlB,MAAbf,CAAoBoJ,GAAW7D,OAClC,SAAC1G,GAAD,OAAWA,EAAMqC,UAAU6C,SAASzB,KACtCgB,OACE,SAACC,EAAK1E,GAAN,OAAgB0E,EAAIE,OAAO5E,EAAMqC,YACjC,IACF6C,SAASjE,GsB/BuB,4BACA,qBAGL+a,EAAcyE,GAAK5e,UAAW,IAC9Bma,EAAcyE,GAAK3e,SAAU,IAC9BgM,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBACL7F,EAAS,CACL1W,SAAUA,EAASgE,OACf,SAACrF,GAAD,OAAQof,IAAQpf,IAEpBY,KAAM,oBAPlB,WtBmBzB,IAAmBsI,EAAW9G,MsBFrBqK,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAQC,OAAQL,GACZ/S,EAAAC,EAAAC,cAAA,UACIoO,UAAU,8BACV6C,QAAS,kBAAM6B,GAAe,KAFlC,QAMAhT,EAAAC,EAAAC,cAACkS,GAAD,sBCzGL,SAASiB,GAAT5Y,GAA2C,IAAtB9E,EAAsB8E,EAAtB9E,SAAU+C,EAAY+B,EAAZ/B,UACnCyO,EAAawF,KAAbxF,UAD+CmM,EAEpClH,KACZpP,EAHgD9H,OAAAmH,EAAA,EAAAnH,CAAAoe,EAAA,MAG5BvW,WAAWpG,OAAOgG,GAAkB,IACxDG,EAAapE,EAAU/C,IAAayE,GAAqBzE,GAE3D6B,EAGAsF,EAHAtF,YACAG,EAEAmF,EAFAnF,gBACAE,EACAiF,EADAjF,QAEE0b,EAAeva,YAAIxB,GACnBpB,EAAS+Q,EAAUxR,GACnB6d,EAASte,OAAOyD,KAAKhB,GAAiBP,SAASjE,GAC/C6R,EAAYhI,EAAUrH,IAAa,GACnC8d,EACEF,EAAe,EACR,UAAY9gB,KAAK0L,IAAIoV,GACrBA,EAAe,EACf,UAAYA,EAEZ,OAGf,OACIvT,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,eACVtO,EAAAC,EAAAC,cAAA,UACK9J,EAAOrC,UADZ,IACwBqC,EAAOpC,UAE/BgM,EAAAC,EAAAC,cAAA,mBAAWlH,YAAInB,IACfmI,EAAAC,EAAAC,cAAA,KAAGwT,cAAa,UAAYtd,EAAO7C,IAAnC,WACa6C,EAAOlC,QAEpB8L,EAAAC,EAAAC,cAAA,2BAAmBuT,GACnBzT,EAAAC,EAAAC,cAAA,iCAAyBsT,EAAS,MAAQ,MAC1CxT,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACKhL,OAAOye,QAAQhc,GAAiBmB,IAAI,SAAA8a,GAAA,IAAAC,EAAA3e,OAAAmH,EAAA,EAAAnH,CAAA0e,EAAA,GAAEE,EAAFD,EAAA,GAAQrf,EAARqf,EAAA,UACjC7T,EAAAC,EAAAC,cAAA,MAAIvF,IAAKmZ,GACJ3M,EAAU2M,GAAM/f,UAAW,IAC3BoT,EAAU2M,GAAM9f,SAAU,IAF/B,IAGM,IACU,IAAXQ,GAAgB,OACL,IAAXA,GAAgB,MACL,KAAXA,GAAkB,WAI/BwL,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAA,UACK8E,EAAUlM,IAAI,SAAC6Z,GAAD,OACX3S,EAAAC,EAAAC,cAAA,MAAIvF,IAAKgY,GACJxL,EAAUwL,GAAK5e,UADpB,IACgCoT,EAAUwL,GAAK3e,cCnDpD,SAAS+f,GAATtZ,GAAgE,IAA3CxD,EAA2CwD,EAA3CxD,QAAS+c,EAAkCvZ,EAAlCuZ,cAAeC,EAAmBxZ,EAAnBwZ,iBAAmB5F,EAC/B1B,KAArCzH,EADoEmJ,EACpEnJ,QAASgJ,EAD2DG,EAC3DH,cAAe/G,EAD4CkH,EAC5ClH,UAEzB+M,EAAajd,IAAYiO,EAAQlQ,UAAUyB,OAAS,EACpDM,EAAamO,EAAQlQ,UAAWkZ,EAAejX,GAC/C,GAeN,IAAMkd,EAAiBjf,OAAOyD,KAAKub,GAAWzd,OAGxC2d,EACDD,EAAiB,IAAM,EACtB9c,YAAMlE,EAAUgU,EAAUhU,GAAW+gB,GACrCA,EAEN,OAAuB,IAAnBC,EACO,KAGPnU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,sBACTpZ,OAAOiC,OAAOid,GAAoBtb,IAC/B,SAAA8a,GAAA,IAAErgB,EAAFqgB,EAAErgB,GAAIQ,EAAN6f,EAAM7f,UAAWC,EAAjB4f,EAAiB5f,SAAjB,OACIgM,EAAAC,EAAAC,cAAA,MAAIvF,IAAKpH,GACLyM,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,UACKmD,EAAc5c,SAAS,OACrB4c,EAAc5c,SAAS7D,GAE9B4d,QAAS,kBApCrC,SAAsB5d,GACW,OAAzBygB,EAAc/gB,GACdghB,EACI,SAAClC,GAAD,OAAejN,aAAIrJ,YAAUxI,GAAQM,EAAIwe,KAEb,OAAzBiC,EAAc9gB,IACrB+gB,EACI,SAAClC,GAAD,OAAejN,aAAIrJ,YAAUvI,GAAQK,EAAIwe,KA6BVsC,CAAa9gB,KAE5ByM,EAAAC,EAAAC,cAAC6B,GAAM8B,SAAP,MACA7D,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,eACY7e,EADZ,IACwBC,IAG3B,IACAD,EAfL,IAeiBC,OCzD1B,SAASsgB,GAAT7Z,GAIZ,IAHCxD,EAGDwD,EAHCxD,QACA+c,EAEDvZ,EAFCuZ,cACAC,EACDxZ,EADCwZ,iBACD5F,EACsC1B,KAA9BK,EADRqB,EACQrB,gBAAiB7F,EADzBkH,EACyBlH,UAClBmE,EAAW0B,EAFlBsG,EAGmBlH,KAAXjE,EAHRjT,OAAAmH,EAAA,EAAAnH,CAAAoe,EAAA,MAAAiB,EAAArf,OAAAmH,EAAA,EAAAnH,CAIwB8e,EAJxB,GAIQQ,EAJRD,EAAA,GAIeE,EAJfF,EAAA,GAMC,SAASG,EAAQ9Y,GACbqY,EAAiB,SAAClC,GAAD,OAAejN,aAAIrJ,YAAUG,GAAQ,KAAMmW,KAahE,OACI/R,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WACXtO,EAAAC,EAAAC,cAAA,kBACW,IACI,OAAVsU,GACGxU,EAAAC,EAAAC,cAACyU,EAAA,SAAD,KACKxN,EAAUqN,GAAOzgB,UAAW,IAC5BoT,EAAUqN,GAAOxgB,SAAU,IAC5BgM,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMuD,EAAQzhB,KAEvB+M,EAAAC,EAAAC,cAAC6B,GAAM6B,UAAP,MAJJ,aASZ5D,EAAAC,EAAAC,cAAA,kBACW,IACI,OAAVuU,GACGzU,EAAAC,EAAAC,cAACyU,EAAA,SAAD,KACKxN,EAAUsN,GAAO1gB,UAAW,IAC5BoT,EAAUsN,GAAOzgB,SAAU,IAC5BgM,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMuD,EAAQxhB,KAEvB8M,EAAAC,EAAAC,cAAC6B,GAAM6B,UAAP,MAJJ,cAUhB5D,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WACXtO,EAAAC,EAAAC,cAAA,UACI2Q,SACImD,EAAcY,MAAM,SAACrhB,GAAD,OAAe,OAAPA,IAEhC4d,QAAS,kBAAM8C,EACX,SAAClC,GAAD,MAAgB,CAACA,EAAU7e,GAAQ6e,EAAU9e,QAGjD+M,EAAAC,EAAAC,cAAC6B,GAAMyB,OAAP,MARJ,gBASU,IACVxD,EAAAC,EAAAC,cAAA,UACIoO,UAAU,iBACVuC,SAAUmD,EAAc5c,SAAS,MACjC+Z,QA3DhB,WACI7F,EAAS,CACLrG,SAAUkD,EAAQlD,SAClBrI,KAAM,CAACuK,EAAUqN,GAAQrN,EAAUsN,IACnCxd,UACA9C,KAAM,gBAEV8f,EAAiB,CAAC,KAAM,SAsDZjU,EAAAC,EAAAC,cAAC6B,GAAMO,MAAP,MALJ,qBCpDD,SAASuS,GAATpa,GAA+B,IAAVxD,EAAUwD,EAAVxD,QAAUyR,EACAC,mBAAS,CAAC,KAAM,OADhBC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GACnCsL,EADmCpL,EAAA,GACpBqL,EADoBrL,EAAA,GAAA0K,EAExBlH,KAAXjE,EAFmCjT,OAAAmH,EAAA,EAAAnH,CAAAoe,EAAA,MAAAjF,EAGQ1B,KAA3CzH,EAHmCmJ,EAGnCnJ,QAASgJ,EAH0BG,EAG1BH,cAAelB,EAHWqB,EAGXrB,gBAHWlE,EAIJH,oBAAS,GAJLI,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAInCgM,EAJmC/L,EAAA,GAItBgM,EAJsBhM,EAAA,GAAAiM,EAKZ1R,IAAM2R,QAChC,WACI,IACMC,EAAa1Y,GADHlG,EAAe4O,EAAQlQ,UAAWiC,IAOlD,MAAO,CAACie,EALU1b,YACdqD,GAAkBqR,EAAe/F,EAAQpL,YACzCqB,GACAS,GAHcrF,CAIhB0b,KAGN,CAAChQ,EAAQlQ,UAAWkZ,EAAejX,EAASkR,EAAQpL,aAhBdoY,EAAAjgB,OAAAmH,EAAA,EAAAnH,CAAA8f,EAAA,GAKnCtc,EALmCyc,EAAA,GAKxBhY,EALwBgY,EAAA,GAkB1C7R,IAAM+F,UACF,WAAuC,IAAAkL,EAAArf,OAAAmH,EAAA,EAAAnH,CAClB8e,EADkB,GAC5BlN,EAD4ByN,EAAA,GACxB7V,EADwB6V,EAAA,GAE9BrG,EAAcpH,IAAc,OAAPA,GACtBmN,EAAiB,SAACrX,GAAD,MAAU,CAAC,KAAMA,EAAK,MAEtCsR,EAAcxP,IAAc,OAAPA,GACtBuV,EAAiB,SAACrX,GAAD,MAAU,CAACA,EAAK,GAAI,SAG7C,CAACsR,EAAe8F,IAEpB,IAAMoB,EAAc,WAChB,GAAIpB,EAAc5c,SAAS,MACvB,OAAO,KAEX,IAAMie,EAAejE,GAAS4C,EAAc,GAAI7W,GAC1CmY,EAAelE,GAAS4C,EAAc,GAAI7W,GAChD,IAAKkY,IAAiBC,EAClB,OAAO,KAEX,IAAMC,EAAQ3X,GAAcyX,EAAcC,GAC1C,OAAOnjB,IAAQojB,EAAQ5X,IAAatL,OAAO,KAV3B,GAYd6hB,EAAajd,IAAYiO,EAAQlQ,UAAUyB,OAAS,EACpDM,EAAamO,EAAQlQ,UAAWkZ,EAAejX,GAC/C,GACAkd,EAAiBjf,OAAOyD,KAAKub,GAAWzd,OAC9C,OACIuJ,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,gBACXtO,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WACXtO,EAAAC,EAAAC,cAAA,UACIoO,UAAU,iBACVuC,SAA6B,IAAnBsD,EACVhD,QAAS,kBAAMnE,EAAgB,CAC3BhI,UAAWmD,EAAQpL,WACnBkI,SAAUkD,EAAQlD,SAClBjO,QAASkd,EACTjd,UACA9C,KAAM,gBARd,+BAYU,IACV6L,EAAAC,EAAAC,cAAA,UAAQiR,QAAS,kBAAM4D,GAAe,KAAtC,2CAIJ/U,EAAAC,EAAAC,cAACsP,GAAD,KACIxP,EAAAC,EAAAC,cAACiP,GAAD,KACInP,EAAAC,EAAAC,cAAC6T,GAAD,CACI9c,QAASA,EACTgd,iBAAkBA,EAClBD,cAAeA,KAGvBhU,EAAAC,EAAAC,cAACiP,GAAD,CAAOtN,MAAO,CAAC2T,SAAU,MACrBxV,EAAAC,EAAAC,cAACoU,GAAD,CACIrd,QAASA,EACTgd,iBAAkBA,EAClBD,cAAeA,IAEnBhU,EAAAC,EAAAC,cAACsP,GAAD,KACKwE,EAAclb,IAAI,SAACvF,GAAD,OACR,OAAPA,GACIyM,EAAAC,EAAAC,cAACiP,GAAD,CAAOxU,IAAKpH,GACRyM,EAAAC,EAAAC,cAACmT,GAAD,CACI1d,SAAUpC,EACV0D,QAASA,EACTyB,UAAWA,SAM7Bsb,EAAc5c,SAAS,OACrB4I,EAAAC,EAAAC,cAAA,4BAAoBkV,KAIhCpV,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAQC,OAAQ0B,GACZ9U,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAM4D,GAAe,KAFlC,QAMA/U,EAAAC,EAAAC,cAACkS,GAAD,QChIhB,IAMeqD,GANE,SAAC1V,GAAD,OACbC,EAAAC,EAAAC,cAAA,OAAKwT,cAAY,OACb1T,EAAAC,EAAAC,cAAA,qCCQO,SAASwV,GAATjb,GAA+D,IAArCmN,EAAqCnN,EAArCmN,QAAShM,EAA4BnB,EAA5BmB,MAAO3E,EAAqBwD,EAArBxD,QAASyB,EAAY+B,EAAZ/B,UAAY2V,EAC7C1B,KAAtBzH,EADmEmJ,EACnEnJ,QAASiC,EAD0DkH,EAC1DlH,UAEVjV,EAAQkf,GAASxJ,EADL1C,EAAQlQ,UAAUiC,IAE9BtB,EAAWzD,EAAMqC,UAAUqH,GAC3BxF,EAAS+Q,EAAUxR,GALiDggB,EAUtEjd,EAAUxG,EAAMqC,UAAUqH,IAH1BpE,EAPsEme,EAOtEne,YACAG,EARsEge,EAQtEhe,gBACAE,EATsE8d,EAStE9d,QAEE0b,EAAeva,YAAIxB,GACnBgc,EAASte,OAAOyD,KAAKhB,GAAiBP,SAASjE,GAC/CsgB,EACEF,EAAe,EACR,UAAY9gB,KAAK0L,IAAIoV,GACrBA,EAAe,EACf,UAAYA,EAEZ,OAGf,OACIvT,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,eACVtO,EAAAC,EAAAC,cAAA,UACK9J,EAAOrC,UADZ,IACwBqC,EAAOpC,UAE/BgM,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAKlH,YAAInB,IACTmI,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,MAAIwT,cAAA,UAAA5c,OAAuBnB,IACtBzD,EAAMoC,WAAWsH,GADtB,KAEKzJ,IACGD,EAAMmC,UAAUuH,GAAS1J,EAAMoC,WAAWsH,IAC5CvJ,OAAO,MAJb,KAOA2N,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAKuT,GACLzT,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,UAAKsT,EAAS,MAAQ,MACtBxT,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACKhL,OAAOye,QACJhc,GACFmB,IAAI,SAAA8a,EAAiBzZ,EAAGsE,GAApB,IAAAoV,EAAA3e,OAAAmH,EAAA,EAAAnH,CAAA0e,EAAA,GAAEE,EAAFD,EAAA,GAAQrf,EAARqf,EAAA,UAEF1Z,EAAIsE,EAAIhI,OAAS,GACbuJ,EAAAC,EAAAC,cAAA,MAAIvF,IAAKmZ,GACJ3M,EAAU2M,GAAM/f,UAAW,IAC3BoT,EAAU2M,GAAM9f,SAAU,IAF/B,IAGM,IACU,IAAXQ,GAAgB,OACL,IAAXA,GAAgB,MACL,KAAXA,GAAkB,qCCrDpC,SAASohB,GAATnb,GAQZ,IAPC9I,EAOD8I,EAPC9I,QACAkkB,EAMDpb,EANCob,IACA3jB,EAKDuI,EALCvI,MACA+E,EAIDwD,EAJCxD,QACA6e,EAGDrb,EAHCqb,cACAC,EAEDtb,EAFCsb,iBACArd,EACD+B,EADC/B,UACD2V,EAOK1B,KALAzH,EAFLmJ,EAEKnJ,QACA8H,EAHLqB,EAGKrB,gBACAhW,EAJLqX,EAIKrX,QACAmQ,EALLkH,EAKKlH,UACA8F,EANLoB,EAMKpB,gBAEE3B,EAAW0B,EARlBtE,EASmCC,oBAAS,GAT5CC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GASQsN,EATRpN,EAAA,GASmBqN,EATnBrN,EAAA,GAUOsN,EACEhkB,EAAMsC,OAAO,GAAKtC,EAAMsC,OAAO,GACxB,QACAtC,EAAMsC,OAAO,GAAKtC,EAAMsC,OAAO,GAC/B,QACAtC,EAAMsC,OAAOogB,MAAM,SAACvD,GAAD,MAAa,KAANA,IAC1B,OAEA,SAGT8E,EAAchP,EAAUjV,EAAMqC,UAAUtB,IACxCmjB,EAAcjP,EAAUjV,EAAMqC,UAAUrB,IACxCmjB,EAAYF,EAAYpiB,UAAY,IAAMoiB,EAAYniB,SACtDsiB,EAAYF,EAAYriB,UAAY,IAAMqiB,EAAYpiB,SAE5D,SAASuiB,EAAc3a,GACnB,MAAmB,WAAfsa,EACOlW,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,gBACe,SAAfsD,EAIHlW,EAAAC,EAAAC,cAAA,QACIwB,aAAW,OACXE,KAAK,MACLC,MAAO,CAACjJ,OAAQ,oBAHpB,gBAQGsd,IAAeta,EACfoE,EAAAC,EAAAC,cAAC6B,GAAMM,MAAP,CAAcX,aAAW,QAEzB1B,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,aAIf,SAAS4D,EAAe7E,GACpB,IAAMnd,EAAU,WACZ,OAAQmd,EAAMc,OAAOngB,OACrB,IAAK,QACD,MAAO,CAAC,EAAG,GACf,IAAK,QACD,MAAO,CAAC,EAAG,GACf,IAAK,OACD,MAAO,CAAC,GAAK,IACjB,IAAK,SACD,MAAO,CAAC,EAAG,GACf,QACI,MAAM,IAAImS,OAXF,GAcV+P,EAAQxd,EAAQ9E,EAAMqC,UAAUtB,IAChCwhB,EAAQzd,EAAQ9E,EAAMqC,UAAUrB,IAChCmB,EAC6B,WAA9Bsd,EAAMG,cAAcxf,MACnBJ,EAAMoC,WACNsD,GAAQyH,eACNnN,EAAMoC,WACN,CAACkgB,EAAMvgB,WAAYwgB,EAAMxgB,YACzBO,GAGRyY,EAAgB,CACZ1Z,GAAIihB,EAAMjhB,GACVW,OAAQG,EAAUpB,GAClBkB,KAAM,sBAEV8Y,EAAgB,CACZ1Z,GAAIkhB,EAAMlhB,GACVW,OAAQG,EAAUnB,GAClBiB,KAAM,sBAGmC,IAAzCjC,EAAMsC,OAAOmC,OAAO,SAACsJ,EAAGwW,GAAJ,OAAUxW,EAAIwW,MAClCxJ,EAAgB,CACZ1Z,GAAIihB,EAAMjhB,GACVU,WAAYugB,EAAMvgB,WAAa,EAC/BE,KAAM,0BAEV8Y,EAAgB,CACZ1Z,GAAIkhB,EAAMlhB,GACVU,WAAYwgB,EAAMxgB,WAAa,EAC/BE,KAAM,2BAGdmX,EAAS,CACL1D,QAAS1V,EAAMqB,GACfc,YACAG,SACAyC,UACA9C,KAAM,qBAId,OACI6L,EAAAC,EAAAC,cAAA,MACIoO,UACKpc,EAAMqB,KAAOuiB,EACZ,WACA,oBAGN9V,EAAAC,EAAAC,cAAA,MAAIoO,UAAW,iBAAmBe,KAAOqH,MAAOlI,MAAM,OACjDqH,EAAM,GAEX7V,EAAAC,EAAAC,cAAA,MAAIoO,UAAWe,KAAOsH,cACjBJ,EAAc,UAEnBvW,EAAAC,EAAAC,cAAA,MACIoO,UAAW,6BAA+B6H,EAAYhiB,KACtDuf,cAAA,SAAA5c,OAAsB+e,EAAtB,WAECQ,GAELrW,EAAAC,EAAAC,cAAA,MAAIoO,UAAWe,KAAOsH,cACjBJ,EAAc,UAEnBvW,EAAAC,EAAAC,cAAA,MACIoO,UAAW,6BAA+B8H,EAAYjiB,KACtDuf,cAAA,SAAA5c,OAAsB+e,EAAtB,WAECS,GAELtW,EAAAC,EAAAC,cAAA,MAAIoO,UAAWe,KAAOuH,YAAc,8BAChC5W,EAAAC,EAAAC,cAAA,UACIoO,UAAWe,KAAOwH,aAClBhG,SAAU3e,EAAMqC,UAAU6C,SAASjE,GACnCb,MAAO4jB,EACPY,OAAQN,EACRrE,SAAUqE,GAEVxW,EAAAC,EAAAC,cAAA,UAAQ5N,MAAM,UAAd,iBAGA0N,EAAAC,EAAAC,cAAA,UAAQ5N,MAAM,SAAd,aAGA0N,EAAAC,EAAAC,cAAA,UAAQ5N,MAAM,SAAd,aAGA0N,EAAAC,EAAAC,cAAA,UAAQ5N,MAAM,QAAd,WAKNX,GACEqO,EAAAC,EAAAC,cAAA,MAAIoO,UAAWe,KAAO0H,SAAW,gBAC3BjB,IAAkB5jB,EAAMqB,GAEtByM,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV3M,MAAM,aACNwP,QAAS,kBAAM4E,EAAiB7jB,EAAMqB,MAEtCyM,EAAAC,EAAAC,cAAC6B,GAAMa,OAAP,MACA5C,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,uBACoByD,EADpB,WACuCC,IAI3CtW,EAAAC,EAAAC,cAAA,UACIoO,UAAU,8BACV3M,MAAM,oBACNwP,QAAS,kBAAM4E,EAAiB,QAEhC/V,EAAAC,EAAAC,cAAC6B,GAAMQ,YAAP,OAGRvC,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV3M,MAAM,0BACNwP,QAAS,kBAAM8E,GAAa,KAE5BjW,EAAAC,EAAAC,cAAC6B,GAAMiB,KAAP,MACAhD,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,mCACgC,IAC3ByD,EAFL,WAEwBC,IAG5BtW,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAQC,OAAQ4C,GACZhW,EAAAC,EAAAC,cAAA,UACIoO,UAAU,8BACV6C,QAAS,kBAAM8E,GAAa,KAFhC,SAMAjW,EAAAC,EAAAC,cAAA,SAAIgF,EAAQnQ,MACZiL,EAAAC,EAAAC,cAAA,kBAAUjJ,EAAU,EAApB,WAA+B4e,EAAM,GACrC7V,EAAAC,EAAAC,cAACsP,GAAD,KACIxP,EAAAC,EAAAC,cAACiP,GAAD,KACInP,EAAAC,EAAAC,cAACwV,GAAD,CACI9Z,MAAO,EACPgM,QAAS1V,EAAMqB,GACf0D,QAASA,EACTyB,UAAWA,KAGnBsH,EAAAC,EAAAC,cAACiP,GAAD,KACInP,EAAAC,EAAAC,cAACwV,GAAD,CACI9Z,MAAO,EACPgM,QAAS1V,EAAMqB,GACf0D,QAASA,EACTyB,UAAWA,SCnOhC,SAASse,GAATvc,GAKZ,IAJC9I,EAID8I,EAJC9I,QACAsF,EAGDwD,EAHCxD,QACA6e,EAEDrb,EAFCqb,cACAC,EACDtb,EADCsb,iBAEO7Q,EAAWyH,KAAXzH,QACDzI,EAAYyI,EAAQlQ,UAAUiC,GAC9ByB,EAAY8D,GAAkBlG,EAAe4O,EAAQlQ,YAC3D,OACIgL,EAAAC,EAAAC,cAAA,SAAOoO,UAAWzM,KAAMrQ,OACnBiL,EAAUhG,OAAS,GAChBuJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACAjP,EAAAC,EAAAC,cAAA,WACIoO,UAAY3c,EAAW,WAAa,YADxC,SAGWsF,EAAU,EAHrB,YAKA+I,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIoO,UAAWzM,KAAM6U,MAAOlI,MAAM,OAAlC,KAGAxO,EAAAC,EAAAC,cAAA,MAAIsO,MAAM,OACNxO,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,sBAEJ5S,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,cAAcE,MAAM,OAAlC,SAGAxO,EAAAC,EAAAC,cAAA,MAAIsO,MAAM,OACNxO,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,sBAEJ5S,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,cAAcE,MAAM,OAAlC,SAGAxO,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,cAAcE,MAAM,OAAlC,iBAGE7c,GACEqO,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,gBAAgBE,MAAM,OAChCxO,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,qBAOpB5S,EAAAC,EAAAC,cAAA,SAAOoO,UAAWzM,KAAMoV,MAAQ,YAC3Bxa,EAAU3D,IAAI,SAAC5G,EAAO2jB,GAAR,OACX7V,EAAAC,EAAAC,cAAC0V,GAAD,CACIjb,IAAKzI,EAAMqB,GACX5B,QAASA,EACTO,MAAOA,EACP2jB,IAAKA,EACL5e,QAASA,EACT6e,cAAeA,EACfC,iBAAkBA,EAClBrd,UAAWA,QC1DpB,SAASwe,GAATzc,GAA0B,IAAVxD,EAAUwD,EAAVxD,QAAUoX,EAMjC1B,KAJAzH,EAFiCmJ,EAEjCnJ,QACAlO,EAHiCqX,EAGjCrX,QACAgW,EAJiCqB,EAIjCrB,gBACAC,EALiCoB,EAKjCpB,gBAEExQ,EAAYyI,EAAQlQ,UAAUiC,GAPCyR,EAQKC,mBAAS,MARdC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAQ9BoN,EAR8BlN,EAAA,GAQfmN,EARenN,EAAA,GASrC,IAAKnM,EACD,OAAOuD,EAAAC,EAAAC,cAACiX,GAAD,MAmCX,SAASC,EAAUxP,EAAS0B,GACxB,IZ2HsB/V,EAAImB,EY3HpB8S,GZ2HgBjU,EY3HSqU,GZ2HLlT,EY3Hc+H,GZ4HhC8J,QAAQ6K,GAAS7d,EAAImB,KY1H7BsY,EAAgB,CAACzF,SADCC,EAAW8B,GAAa,EAAK9B,EAAW8B,EAAY,EAC3C9B,WAAUvQ,UAAS9C,KAAM,eAGxD,OACI6L,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,gBACXtO,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WACXtO,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAA4B,OAAlBiF,EACV3E,QAAS,kBA7CzB,SAAiBvJ,GACb,IAAM1V,EAAQkf,GAASxJ,EAASnL,GACa,IAAzCvK,EAAMsC,OAAOmC,OAAO,SAACsJ,EAAGwW,GAAJ,OAAUxW,EAAIwW,KAGlCvkB,EAAMqC,UAAU8iB,QAAQ,SAAU1E,EAAK/W,GAG9B5E,EAAQ2b,KAIb1F,EAAgB,CACZ1Z,GAAIof,EACJ1e,WAAY+C,EAAQ2b,GAAK1e,WAAa,EACtCE,KAAM,0BAGV8Y,EAAgB,CACZ1Z,GAAIof,EACJze,OAAQhC,EAAMoC,WAAWsH,GACzBzH,KAAM,yBAIlB6Y,EAAgB,CAACpF,UAAS3Q,UAAS9C,KAAM,cACzC4hB,EAAiB,MAmBUuB,CAAQxB,KAEvB9V,EAAAC,EAAAC,cAAC6B,GAAM4B,MAAP,MALJ,YAMU,IACV3D,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAA4B,OAAlBiF,EACV3E,QAAS,WAtBrBnE,EAAgB,CAACpF,QAsBqBkO,EAtBZ7e,UAAS9C,KAAM,kBAwB7B6L,EAAAC,EAAAC,cAAC6B,GAAMyB,OAAP,MALJ,gBAMU,IACVxD,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAA4B,OAAlBiF,EACV3E,QAAS,kBAAMiG,EAAUtB,GAAgB,KAEzC9V,EAAAC,EAAAC,cAAC6B,GAAMK,QAAP,MALJ,YAMU,IACVpC,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAA4B,OAAlBiF,EACV3E,QAAS,kBAAMiG,EAAUtB,EAAe,KAExC9V,EAAAC,EAAAC,cAAC6B,GAAMG,UAAP,MALJ,eAQkB,IAArBzF,EAAUhG,QACPuJ,EAAAC,EAAAC,cAAA,oCAEJF,EAAAC,EAAAC,cAAC8W,GAAD,CACI/f,QAASA,EACT6e,cAAeA,EACfC,iBAAkBA,KChGnBwB,OCQA,SAAqBxX,GAChC,IAAM9I,EAAUjE,OAAO+M,EAAM9I,SADUoX,EAEN1B,KAA1BzH,EAFgCmJ,EAEhCnJ,QAASgJ,EAFuBG,EAEvBH,cAEVgG,EAAajd,IAAYiO,EAAQlQ,UAAUyB,OAAS,EACpDM,EAAamO,EAAQlQ,UAAWkZ,EAAejX,GAC/C,GACAkd,EAAiBjf,OAAOyD,KAAKub,GAAWzd,OACxC+gB,EAAqBtiB,OAAOyD,KAAKuV,GAAezX,OARfiS,EASTC,mBAAS,GATAC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAShC+O,EATgC7O,EAAA,GASvB8O,EATuB9O,EAAA,GAyBvC,OAfAS,oBACI,WACoB,IAAZoO,GAIMC,EADLvD,IAAmBqD,EACH,EACA,GAEL,IAAZC,GAAoC,IAAnBtD,GACjBuD,EAAW,IAGnB,CAACvD,EAAgBqD,EAAoBC,IAGrCzX,EAAAC,EAAAC,cAACyX,GAAA,EAAD,CAAMhS,MAAO8R,EAAStF,SAAUuF,GAC5B1X,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAACyX,GAAA,EAAD,CAAK9G,SAAUsD,IAAmBqD,GAC9BxX,EAAAC,EAAAC,cAAC6B,GAAMoB,KAAP,MADJ,YAGAnD,EAAAC,EAAAC,cAACyX,GAAA,EAAD,CAAK9G,SAA6B,IAAnBsD,GACXnU,EAAAC,EAAAC,cAAC6B,GAAM+B,MAAP,MADJ,uBAIJ9D,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAACgX,GAAD,CAAOjgB,QAASA,KAEpB+I,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAAC2U,GAAD,CAAY5d,QAASA,4BC7BlC,SAAS2gB,GAATnd,GAAsC,IAAjB9I,EAAiB8I,EAAjB9I,QAASgQ,EAAQlH,EAARkH,MAAQ0M,EACZ1B,KAAtBzH,EADkCmJ,EAClCnJ,QAASiC,EADyBkH,EACzBlH,UACTlS,EAAwBiQ,EAAxBjQ,UAAWD,EAAakQ,EAAblQ,UACZ6iB,EAAgB5d,GAAiBhF,GACjC6iB,EAAete,YACjBlD,EACAkG,GACA,SAACE,GAAD,OAAUrC,GAAmBpF,EAAWyH,IACxC9D,aAAO,SAACmf,GAAD,OAAUniB,EAAWmiB,KAC5B/c,GALiBxB,CAMnBxE,GACF,OACIgL,EAAAC,EAAAC,cAAA,SACIoO,UACK3c,EACCkQ,KAAMlQ,QAAU,IAAMkQ,KAAMrQ,MAC5BqQ,KAAMrQ,OAGZwO,EAAAC,EAAAC,cAAA,WACIoO,UAAY3c,EAAW,WAAa,YAEnCgQ,GAEL3B,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIoO,UAAWzM,KAAMpQ,WACjBuO,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,WAAWE,MAAM,OAA/B,QACAxO,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,WAAWE,MAAM,OAA/B,QACAxO,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,WAAWE,MAAM,OAA/B,UACE7c,GAAWkmB,EAAc/e,IAAI,SAAC/D,EAAMoF,GAAP,OAC3B6F,EAAAC,EAAAC,cAAA,MAAIvF,IAAKR,EAAGmU,UAAU,WAAWE,MAAM,OAClCzZ,OAKjBiL,EAAAC,EAAAC,cAAA,aACK4X,EAAahf,IAAI,SAACkf,EAAenmB,GAAhB,OACdmmB,EAAclf,IAAI,SAACoC,EAAUf,EAAGsE,GAAd,OACduB,EAAAC,EAAAC,cAAA,MAAIvF,IAAKO,EAAS3H,GAAI+a,UAAWzM,KAAMnQ,KAC5B,IAANyI,GACG6F,EAAAC,EAAAC,cAAA,MACIoO,UAAW,iBAAmBzM,KAAMhQ,KACpComB,QAASxZ,EAAIhI,OACb+X,MAAM,OAEL3c,EAAO,GAGdF,EAEEqO,EAAAC,EAAAC,cAAA,MAAIoO,UAAWzM,KAAMjQ,YAChBuV,EAAUjM,EAAS3H,IAAIQ,UAD5B,OAEKoT,EAAUjM,EAAS3H,IAAIS,UAG5BgM,EAAAC,EAAAC,cAAA,MACIoO,UAAWzM,KAAMjQ,WACjB8hB,cAAa7hB,EACb2c,MAAM,OAELrH,EAAUjM,EAAS3H,IAAIQ,UAL5B,OAMKoT,EAAUjM,EAAS3H,IAAIS,UAGhCgM,EAAAC,EAAAC,cAAA,MACIoO,UAAU,gBACVoF,cAAawE,KACT/Q,EAAUjM,EAAS3H,IAAIQ,UACrBoT,EAAUjM,EAAS3H,IAAIS,SACvB,WAGL7B,IAAQ+I,EAAS/C,OAAO9F,OAAO,SAElCV,GAAWuJ,EAASjG,UAAU6D,IAAI,SAACX,EAAOggB,GAAR,OAChCnY,EAAAC,EAAAC,cAAA,MACIvF,IAAKwd,EACL7J,UAAU,gBACVoF,cAAawE,KACT/Q,EAAUjM,EAAS3H,IAAIQ,UACrBoT,EAAUjM,EAAS3H,IAAIS,SACvB6jB,EAAcM,KAGnBhmB,IAAQgG,GAAO9F,OAAO,iBAe3D,SAAS+lB,GAAgBrY,GAAO,IAAAsY,EACO1L,KAA5BzH,EADqBmT,EACrBnT,QACDoG,EAFsB+M,EACZrL,gBAET/X,EAAaiQ,EAAbjQ,UAHqByT,EAIQC,mBAAS,MAJjBC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAIrB4P,EAJqB1P,EAAA,GAIT2P,EAJS3P,EAAA,GAM5B,SAAS4P,IAAoB,IAAXjlB,EAAWiD,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAN,KACbiiB,EAAY1c,YAAUuc,GACxBrjB,EAAUmC,SAASqhB,EAAUllB,KAC7B+X,EAAS,CAAC/X,GAAIklB,EAAUllB,GAAKY,KAAM,iBACnCokB,EAAc,OAEdjN,EAAS,CAAC/X,GAAIklB,EAAUllB,GAAKY,KAAM,iBAI3C,SAASukB,EAAOpP,GACZ,IAAM3D,EAAQ1Q,EAAUsR,QAAQ+R,GAChChN,EAAS,CACL/D,SAAU5B,EAAQ2D,EAClB9B,SAAU7B,EACVxR,KAAM,kBAId,OACI6L,EAAAC,EAAAC,cAACsP,GAAD,CAAgBlB,UAAU,gBACtBtO,EAAAC,EAAAC,cAACiP,GAAD,KACInP,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WACXtO,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAAyB,OAAfyH,EACVnH,QAAS,kBAAMqH,MAHnB,UAOAxY,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAAyB,OAAfyH,EACVnH,QAAS,kBAAMuH,GAAQ,KAEvB1Y,EAAAC,EAAAC,cAAC6B,GAAMK,QAAP,MALJ,YAOApC,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAAyB,OAAfyH,EACVnH,QAAS,kBAAMuH,EAAO,KAEtB1Y,EAAAC,EAAAC,cAAC6B,GAAMG,UAAP,MALJ,cAOAlC,EAAAC,EAAAC,cAAA,UACIoO,UACoB,OAAfgK,EACC,8BACA,eAENzH,SAAyB,OAAfyH,EACVnH,QAAS,kBAAMoH,EAAc,QAPjC,SAYJvY,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,WAASoO,UAAU,YAAnB,6BAGAtO,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,oBAGZ5S,EAAAC,EAAAC,cAAA,SAAOoO,UAAU,WACZrZ,EAAU6D,IAAI,SAACvF,GAAD,OACXyM,EAAAC,EAAAC,cAAA,MACIvF,IAAKpH,EACL+a,UAAWgK,IAAe/kB,EAAK,WAAa,IAE5CyM,EAAAC,EAAAC,cAAA,UACK9G,GAAgB7F,GAAIwB,MAEzBiL,EAAAC,EAAAC,cAAA,MAAI2B,MAAO,CAAC1B,MAAO,SACfH,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SACmB,OAAfyH,GACGA,IAAe/kB,EAEtB4d,QAAS,kBAECoH,EADND,IAAe/kB,EACK,KACAA,KAGvB+kB,IAAe/kB,EAAK,OAAS,eAQ1DyM,EAAAC,EAAAC,cAACiP,GAAD,KACInP,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,WAAf,QACAtO,EAAAC,EAAAC,cAAA,SAAO2B,MAAO,CAAC8W,UAAW,SACtB3Y,EAAAC,EAAAC,cAAA,WAASoO,UAAU,YAAnB,8BAGAtO,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,oBAGZ5S,EAAAC,EAAAC,cAAA,SAAOoO,UAAU,WACZpZ,OAAOiC,OAAOiC,IAAiBN,IAAI,SAAA8a,GAAA,IAAE7e,EAAF6e,EAAE7e,KAAMxB,EAARqgB,EAAQrgB,GAAR,OAChCyM,EAAAC,EAAAC,cAAA,MAAIvF,IAAKpH,GACLyM,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QACIoO,UACIrZ,EAAUmC,SAAS7D,GACb,WACA,WAGTwB,IAGTiL,EAAAC,EAAAC,cAAA,WACMjL,EAAUmC,SAAS7D,IACjByM,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMqH,EAASjlB,KAF5B,eAkBxC,IAoBeqlB,GApBA,SAAC7Y,GAAD,OACXC,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KAAK3X,EAAAC,EAAAC,cAAC6B,GAAMoB,KAAP,MAAL,WACAnD,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KAAK3X,EAAAC,EAAAC,cAAC6B,GAAM0B,SAAP,MAAL,yBAEJzD,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAAC0X,GAAD,CAAYjW,MAAM,kBAEtB3B,EAAAC,EAAAC,cAACyX,GAAA,EAAD,KACI3X,EAAAC,EAAAC,cAACkY,GAAD,UCjRD,SAASS,GAAO9Y,GAAO,IAAAsO,EACC1B,KAA5BzH,EAD2BmJ,EAC3BnJ,QAAS8H,EADkBqB,EAClBrB,gBADkBtE,EAEQC,oBAAS,GAFjBC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAE3BoQ,EAF2BlQ,EAAA,GAEZmQ,EAFYnQ,EAAA,GAAAE,EAGQH,oBAAS,GAHjBI,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAG3BkQ,EAH2BjQ,EAAA,GAGZkQ,EAHYlQ,EAAA,GAI5BmQ,EACWhU,EAAQrQ,KAAKskB,cAOZ,KANCjU,EAAQrQ,KAAKukB,WAAa,EACnC,KAAOlU,EAAQrQ,KAAKukB,WAAa,GACjClU,EAAQrQ,KAAKukB,WAAa,GAIJ,KAHflU,EAAQrQ,KAAKwkB,UAAY,GAChC,IAAMnU,EAAQrQ,KAAKwkB,UACnBnU,EAAQrQ,KAAKwkB,WAmBvB,OACIrZ,EAAAC,EAAAC,cAAA,OAAKoO,UAAWvO,EAAMuO,WAChBwK,EAEE9Y,EAAAC,EAAAC,cAAA,KAAGoO,UAAU,cACTtO,EAAAC,EAAAC,cAACgR,GAAD,MAAsB,IACtBlR,EAAAC,EAAAC,cAAA,SACIoO,UAAU,aACVna,KAAK,OACL7B,MAAO4S,EAAQnQ,KACfod,SAAU,SAACR,GAAD,OAAW3E,EAAgB,CACjCjY,KAAM4c,EAAMG,cAAcxf,MAC1B6B,KAAM,gBAEX,IACH6L,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAM4H,GAAiB,KAEhC/Y,EAAAC,EAAAC,cAAC6B,GAAMO,MAAP,QAIRtC,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,oBACVtO,EAAAC,EAAAC,cAACgR,GAAD,MAAsB,IACtBlR,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,oBACXpJ,EAAQnQ,MACL,IACRiL,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAM4H,GAAiB,KAEhC/Y,EAAAC,EAAAC,cAAC6B,GAAMe,KAAP,QAIVkW,EAEEhZ,EAAAC,EAAAC,cAAA,KAAGoO,UAAU,cACTtO,EAAAC,EAAAC,cAACgR,GAAD,MAAsB,IACtBlR,EAAAC,EAAAC,cAAA,SACIoO,UAAU,aACVna,KAAK,OACL7B,MAAO4mB,EACP/G,SA3DpB,SAAoBR,GAAO,IAAA2H,EAKnB3H,EAAMG,cAAcxf,MAAMinB,MAAM,KALbC,EAAAtkB,OAAAmH,EAAA,EAAAnH,CAAAokB,EAAA,GAEnBG,EAFmBD,EAAA,GAGnBE,EAHmBF,EAAA,GAInBG,EAJmBH,EAAA,GAMjBxJ,EAAOhd,OAAOymB,GACd1J,EAAQ/c,OAAO0mB,GAAY,EAC3B5J,EAAM9c,OAAO2mB,GACnB3M,EAAgB,CACZnY,KAAM,IAAIC,KAAKkb,EAAMD,EAAOD,GAC5B3b,KAAM,gBAiDK,IACH6L,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAM8H,GAAiB,KAEhCjZ,EAAAC,EAAAC,cAAC6B,GAAMO,MAAP,QAKRtC,EAAAC,EAAAC,cAAA,KAAGoO,UAAU,+BACTtO,EAAAC,EAAAC,cAACgR,GAAD,MAAsB,IACtBlR,EAAAC,EAAAC,cAACwP,GAAD,CAAY7a,KAAMqQ,EAAQrQ,OAAS,IACnCmL,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAM8H,GAAiB,KAEhCjZ,EAAAC,EAAAC,cAAC6B,GAAMe,KAAP,SC9FT,SAAS8W,KAAU,IACvB5M,EAAmBL,KAAnBK,gBAgBP,OAfAxD,GAAiB,sBAgBbxJ,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,gBACXtO,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAQiR,QAjBhB,WACInE,EAAgB,CACZ7Y,KAAM,oBACN7B,MAAO,IAEXP,OAAO8nB,MAAM,6BAYT,eAAmD,IACnD7Z,EAAAC,EAAAC,cAAA,UAAQiR,QAXhB,WACInE,EAAgB,CACZ7Y,KAAM,oBACN7B,MAAO,KAEXP,OAAO8nB,MAAM,gCAMT,kBACA7Z,EAAAC,EAAAC,cAAA,KAAGoO,UAAU,cAAb,sJAG8B,IAC1BtO,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,YAAT,eAJJ,MChBG,SAASrW,GAAQ3D,GAAO,IAAAsO,EAO/B1B,KALAzH,EAF+BmJ,EAE/BnJ,QACAiC,EAH+BkH,EAG/BlH,UACA+G,EAJ+BG,EAI/BH,cACAjB,EAL+BoB,EAK/BpB,gBACAD,EAN+BqB,EAM/BrB,gBAEJxD,GAAiBtE,EAAQnQ,MARU,IAS5BC,EAAakQ,EAAblQ,UACDglB,ErCsEH,SAASC,EAAgB/U,EAASlO,EAASC,GAC9C,QAAgBf,IAAZc,EACA,OAAOijB,EAAgB9jB,KAAK,KAAM+O,GAC/B,QAAgBhP,IAAZe,EACP,OAAOgjB,EAAgB9jB,KAAK,KAAM+O,EAASlO,GAE/C,GAAIC,EAAUiO,EAAQlQ,UAAUyB,OAAS,EAErC,OAAO,EAEX,IAAMyd,EAAYnd,EAAamO,EAAQlQ,UAAWgC,EAASC,GACrDY,EAAUqN,EAAQlQ,UAAUiC,GAAS6B,IACvC,SAAC5G,GAAD,OAAWA,EAAMsC,OAAO,GAAKtC,EAAMsC,OAAO,KAE9C,OAAyC,IAAlCU,OAAOyD,KAAKub,GAAWzd,SAAiBoB,EAAQT,SAAS,GqCpF7C6iB,CAAgB/U,EAASgJ,GAEtCgM,EACuB,IAArBllB,EAAUyB,QAGPujB,EAAWhlB,EAAUyB,OAAS,GAEnC0jB,ErCuBH,SAAyBC,GAC5B,IAAMD,EAAa1nB,KAAK4nB,KAAK5nB,KAAK6nB,KAAKF,IAEvC,OAAQpnB,OAAOunB,SAASJ,GAAeA,EAAa,EqC1BjCK,CAAgBtlB,OAAOyD,KAAKuV,GAAezX,QACxDgkB,EAAWzlB,EAAUyB,QAAU0jB,EAnBF1f,EAqB1Byf,EAKMO,EACA,CAAC,8BAA8B,GAE/B,CAAC,+BAA+B,GAPhC,CACH,sBACA,GAxBuB7G,EAAA1e,OAAAmH,EAAA,EAAAnH,CAAAuF,EAAA,GAoB5BigB,EApB4B9G,EAAA,GAoBf+G,EApBe/G,EAAA,YAAAgH,IAAA,OAAAA,EAAA1lB,OAAA2lB,GAAA,EAAA3lB,CAAAsV,GAAAvK,EAAA6a,KA4CnC,SAAAvQ,IAAA,OAAAC,GAAAvK,EAAAwK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACQ7Y,OAAOgpB,QAAQ,mDADvB,CAAArQ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEc7K,EAAMib,SAAS,KAF7B,OAKQ7hB,YAAKnE,GAAWqiB,QAAQ,SAAUnlB,GAC1BA,EAAMsC,OAAO,GAAKtC,EAAMsC,OAAO,KAAO,GAG1CtC,EAAMqC,UAAU8iB,QAAQ,SAAU1E,EAAK/W,GACnC,GAAI+W,IAAQxf,EAAZ,CAD0C,IAInCc,EAAckT,EAAUwL,GAAxB1e,WACPgZ,EAAgB,CACZ1Z,GAAIof,EACJ1e,WAAYA,EAAa,EACzBE,KAAM,0BAEV8Y,EAAgB,CACZ1Z,GAAIof,EACJze,OAAQhC,EAAMoC,WAAWsH,GACzBzH,KAAM,2BAIlB6Y,EAAgB,CAAC7Y,KAAM,mBACU,IAA7B+Q,EAAQlQ,UAAUyB,QAElBuW,EAAgB,CAAC7Y,KAAM,cA7BnC,wBAAAuW,EAAAK,SAAAR,OA5CmC0Q,MAAAC,KAAA1kB,WA8EnC,OACIwJ,EAAAC,EAAAC,cAAA,OAAKoO,UAAWvO,EAAMuO,WAClBtO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,MACL/Z,EAAAC,EAAAC,cAAC6B,GAAMgC,EAAP,MACA/D,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,gBAMZtO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,KACL/Z,EAAAC,EAAAC,cAAC6B,GAAM+B,MAAP,MACA9D,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,iBAKRtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,UACL/Z,EAAAC,EAAAC,cAAC6B,GAAMC,SAAP,MACAhC,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,gBAKRtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,cACL/Z,EAAAC,EAAAC,cAAC6B,GAAMmB,OAAP,MACAlD,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,oBAKRtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,UACL/Z,EAAAC,EAAAC,cAAC6B,GAAMoB,KAAP,MACAnD,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,uBAMZtO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,0BAAd,UACAtO,EAAAC,EAAAC,cAAA,UACKhL,OAAOyD,KAAK3D,GAAW8D,IAAI,SAACvF,GAAD,OACxByM,EAAAC,EAAAC,cAAA,MAAIvF,IAAKpH,GACLyM,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAE,SAAAjjB,OAAWvD,IACdP,OAAOO,GAAM,EACZymB,EAAWhnB,OAAOO,IAEhByM,EAAAC,EAAAC,cAAA,QACIoO,UACI,qCAFR,mBAKwBtO,EAAAC,EAAAC,cAAC6B,GAAMO,MAAP,OAGxBtC,EAAAC,EAAAC,cAAA,QACIoO,UACI,qCAFR,uBAK4BtO,EAAAC,EAAAC,cAAC6B,GAAME,MAAP,aAQpDjC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,cACVtO,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,2BAAhB,cACgB,KAEftZ,EAAUyB,OAJf,IAIwB0jB,GAExBna,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACmQ,GAAD,CACI/B,UAAU,aACViC,SAAUoK,EACVjK,QAASgK,GAET1a,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BACXoM,MAKjB1a,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIoO,UAAYqM,EAAc,GAAK,iBAC/B9J,UAAWqJ,EACX/I,QArJpB,WAGQsJ,IACK1oB,OAAOgpB,QAHI,yEAOpB/N,EAAgB,CAAC7Y,KAAM,gBA+IP6L,EAAAC,EAAAC,cAAC6B,GAAMsB,KAAP,MACArD,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,mBAKRtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACI2Q,SAA+B,IAArB7b,EAAUyB,OACpB0a,QAjMe,kBAAAyJ,EAAAK,MAAAC,KAAA1kB,aAmMfwJ,EAAAC,EAAAC,cAAC6B,GAAM4B,MAAP,MACA3D,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,4BAMZtO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,WACL/Z,EAAAC,EAAAC,cAAC6B,GAAM0B,SAAP,MACAzD,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,mBCnNT,SAAS6M,KAAS,IACtBjW,EAAWyH,KAAXzH,QACD3O,EAAa,WACf,GAAiC,IAA7B2O,EAAQlQ,UAAUyB,OAClB,OAAOuJ,EAAAC,EAAAC,cAAA,kCAEX,IAAMkb,EAAclW,EAAQlQ,UAAUyB,OAAS,EAC/C,OAA8C,IAA1CyO,EAAQlQ,UAAUomB,GAAa3kB,OACxBuJ,EAAAC,EAAAC,cAAA,gDAGPF,EAAAC,EAAAC,cAAC8W,GAAD,CACI/f,QAASmkB,EACTzpB,SAAO,IAXA,GAenB,OACIqO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACIjP,EAAAC,EAAAC,cAAA,MAAI2B,MAAO,CAACwZ,UAAW,WAAvB,qBACArb,EAAAC,EAAAC,cAACsP,GAAD,CACI3N,MAAO,CAACyZ,eAAgB,WAExBtb,EAAAC,EAAAC,cAACiP,GAAD,KACK5Y,GAELyJ,EAAAC,EAAAC,cAACiP,GAAD,KACInP,EAAAC,EAAAC,cAAC0X,GAAD,CAAYjW,MAAM,WAAWhQ,SAAO,OClBzC,SAASgD,GAAWoL,GAC/B,OACIC,EAAAC,EAAAC,cAAC2M,GAAD,CAAoBE,UAAWhN,EAAMgN,WACjC/M,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAOhe,WAAa,gBAChC2O,EAAAC,EAAAC,cAAC2Y,GAAD,CAAQvK,UAAWe,KAAO/d,SAC1B0O,EAAAC,EAAAC,cAACwD,GAAD,CACI4K,UAAWe,KAAOkM,QAAU,wBAC5BP,SAAUjb,EAAMib,WAEpBhb,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAO9d,aAAe,yBAClCyO,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,KACI9Z,EAAAC,EAAAC,cAAC4S,GAAD,CAAcjY,KAAK,MACnBmF,EAAAC,EAAAC,cAACib,GAAD,CAAQtgB,KAAK,WACbmF,EAAAC,EAAAC,cAACkO,GAAD,CAAYvT,KAAK,eACjBmF,EAAAC,EAAAC,cAACsb,GAAD,CAAQ3gB,KAAK,WACbmF,EAAAC,EAAAC,cAACrJ,GAAD,CAAOgE,KAAK,mBACZmF,EAAAC,EAAAC,cAAC0Z,GAAD,CAAS/e,KAAK,YACdmF,EAAAC,EAAAC,cAACiX,GAAD,CAAUsE,SAAO,QC3BzC,SAAS/X,KACL,OACI1D,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,wBACXtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,aACL/Z,EAAAC,EAAAC,cAAC6B,GAAMM,MAAP,MACArC,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,qBAKRtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,GAAG,YACN/Z,EAAAC,EAAAC,cAAC6B,GAAM+B,MAAP,MACA9D,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,iBAKRtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,YACL/Z,EAAAC,EAAAC,cAAC6B,GAAM0B,SAAP,MACAzD,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,0BAAhB,mBAUT,SAASoN,GAATjhB,GAAgC,IAAXqS,EAAWrS,EAAXqS,SAChC,OACI9M,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,eACXtO,EAAAC,EAAAC,cAACyb,GAAD,MACA3b,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,wBACVxB,IC9BF,SAAS8O,GAAe7b,GAAO,IAAA8b,EACb1P,KADa2P,EAAA5mB,OAAAmH,EAAA,EAAAnH,CAAA2mB,EAAA,GACnCE,EADmCD,EAAA,GACzBxQ,EADyBwQ,EAAA,GAEpCE,EAAS1T,GAAepT,OAAOiC,OAAO4kB,GAAW,QAAQ,GAFrBrT,EAGEC,mBAAS,IAHXC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAGnCuT,EAHmCrT,EAAA,GAGnBsT,EAHmBtT,EAAA,GAAAE,EAINH,oBAAS,GAJHI,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAInCqT,EAJmCpT,EAAA,GAIvBqT,EAJuBrT,EAAA,GA4B1C,OAvBAS,GAAiB,mBAwBbxJ,EAAAC,EAAAC,cAACwb,GAAD,KACI1b,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,gBACXtO,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,yBACXtO,EAAAC,EAAAC,cAAA,UACIiR,QAAS,kBAAMiL,GAAc,KAE7Bpc,EAAAC,EAAAC,cAAC6B,GAAMsB,KAAP,MAHJ,oBAMFnO,OAAOyD,KAAKojB,GAAUtlB,OAAS,EAEjCuJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Q,GAAD,CACIpU,KAAMsf,EACNhL,MAAM,OACNC,QAAQ,UAGhBjR,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Q,GAAD,CACIpU,KAAMsf,EACNhL,MAAM,OACNC,QAAQ,UAGhBjR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,oBAGZ5S,EAAAC,EAAAC,cAAA,SAAOoO,UAAU,WACZ0N,EAAOxqB,MAAMsH,IAAI,SAAA2B,GAAA,IAAE5F,EAAF4F,EAAE5F,KAAMtB,EAARkH,EAAQlH,GAAIwB,EAAZ0F,EAAY1F,KAAZ,OACdiL,EAAAC,EAAAC,cAAA,MAAIvF,IAAKpH,EAAI+a,UAAU,oBACnBtO,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAIxmB,GACLwB,IAGTiL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACwP,GAAD,CAAY7a,KAAMA,KAEtBmL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIwB,aAAA,gBAAA5K,OAAuB/B,EAAvB,UACAuZ,UAAU,sBACV3M,MAAK,gBAAA7K,OAAa/B,EAAb,UACLoc,QACI,kBAzDxC,SAA0B5d,EAAIwB,GAC1B,IAAMsnB,EAAU,yCAAsCtnB,EAAO,UACzDhD,OAAOgpB,QAAQsB,IACf/Q,EAAS,CAAC/X,KAAIY,KAAM,aAsDkBmoB,CAAiB/oB,EAAIwB,KAG/BiL,EAAAC,EAAAC,cAAC6B,GAAM4B,MAAP,aAOtB3D,EAAAC,EAAAC,cAAA,sCAEFF,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAQC,OAAQ+I,GACZnc,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMiL,GAAc,KAFjC,SAMApc,EAAAC,EAAAC,cAAA,QAAM8R,SAtFtB,SAAwBL,GACpBA,EAAMC,iBACNtG,EAAS,CACLvW,KAAMknB,EACN9nB,KAAM,gBAEV+nB,EAAkB,IAClBE,GAAc,KAgFEpc,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,gBAAf,SACAjS,EAAAC,EAAAC,cAAA,SACI3M,GAAG,eACHwB,KAAK,eACLwnB,YAAY,kBACZrK,UAAU,EACV/d,KAAK,OACL7B,MAAO2pB,EACP9J,SArG5B,SAAuBR,GACnBuK,EAAkBvK,EAAMc,OAAOngB,UAqGR,IACH0N,EAAAC,EAAAC,cAAA,SACIoO,UAAU,iBACVna,KAAK,SACL7B,MAAM,gBCrHtC,IASekqB,GATS,SAACzc,GAAD,OACpBC,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,eACVvO,EAAM+M,WCXT2P,KAAY1qB,OAAO2qB,SAAW3qB,OAAO2qB,QAAQ,YAQ5C,SAASC,GAAWC,GACvB,OAAQH,GAAYG,IAAO,KAaxB,SAASC,GAAiBlL,GAC7BgL,GAAW,WACP,GAAKhL,EAAMc,OAAOnE,UAAUlX,UAIvBua,EAAMc,OAAOnE,UAAUlX,SAAS,wBAArC,CAGA,IACM0lB,EADcL,GAASM,OAAOC,kBACEC,eAClC,2BACA,UAEEC,EAAMT,GAASM,OAAOI,mBACF,aAAtBL,EACAI,EAAIE,WACyB,aAAtBN,GA3BnB,SAAwBI,GACfA,EAAIG,cAGLH,EAAII,aAFJJ,EAAIK,WA0BAC,CAAeN,8BCpBZO,GAjBC,kBACZzd,EAAAC,EAAAC,cAAA,SAAOoO,UAAWe,KAAOqO,QAAU,YAC/B1d,EAAAC,EAAAC,cAAA,KAAGoO,UAAWe,KAAOsO,eAArB,oEAEK,IACD3d,EAAAC,EAAAC,cAAA,QAAM0B,KAAK,MAAMgP,eAAA,GAAjB,gBAHJ,OAKI5Q,EAAAC,EAAAC,cAAA,KACIoO,UAAWe,KAAOuO,cAClBC,KAAK,mDAFT,kBALJ,OCMO,SAASjE,GAAQ7Z,GAAO,IAAA8b,EACE1P,KADF2P,EAAA5mB,OAAAmH,EAAA,EAAAnH,CAAA2mB,EAAA,GAC5BE,EAD4BD,EAAA,GAClBgC,EADkBhC,EAAA,GAAAzJ,EAEAnG,KAFAoG,EAAApd,OAAAmH,EAAA,EAAAnH,CAAAmd,EAAA,GAE5Brb,EAF4Bsb,EAAA,GAEnBrF,EAFmBqF,EAAA,GAAA5J,EAGXC,mBAAS,IAHEC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAG5BqV,EAH4BnV,EAAA,GAGtBoV,EAHsBpV,EAAA,GAAA0K,EAIAlH,KAJA6R,EAAA/oB,OAAAmH,EAAA,EAAAnH,CAAAoe,EAAA,GAI5BnL,EAJ4B8V,EAAA,GAInBC,EAJmBD,EAAA,GAKnCzU,GAAiB,WAEjB,IAAM2U,EAAalJ,kBACf,iBAAO,CAAC9M,UAASnR,UAAS+kB,aAC1B,CAAC5T,EAAS4T,EAAU/kB,IAQxB,SAASonB,EAAS1hB,GACdohB,EAAiB,CAAC7Z,MAAOvH,EAAK0L,YAAajU,KAAM,eACjD+pB,EAAgB,CAACja,MAAOvH,EAAKyL,QAAShU,KAAM,eAC5C8Y,EAAgB,CAAChJ,MAAOvH,EAAK1F,QAAS7C,KAAM,eAC5CpC,OAAO8nB,MAAM,gBAuBjB,OAjCAxQ,oBACI,WACI2U,EAAQK,KAAKC,UAAUH,EAAY,KAAM,KAE7C,CAACA,IA8BDne,EAAAC,EAAAC,cAACwb,GAAD,KACI1b,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,gBACXtO,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SAAOoO,UAAU,qBAAjB,IACM,IACFtO,EAAAC,EAAAC,cAAA,SACIwS,QAA8B,IAArBvK,EAAQlD,SACjB9Q,KAAK,QACLge,SAAU,kBAAM+L,EAAgB,CAC5BvZ,OAAQ,WACRxQ,KAAM,aACN7B,MAAO,QAInB0N,EAAAC,EAAAC,cAAA,SAAOoO,UAAU,qBAAjB,OACM,IACFtO,EAAAC,EAAAC,cAAA,SACIwS,QAA8B,KAArBvK,EAAQlD,SACjB9Q,KAAK,QACLge,SAAU,kBAAM+L,EAAgB,CAC5BvZ,OAAQ,WACRxQ,KAAM,aACN7B,MAAO,WAM3B0N,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,KACIqe,SAAS,qBACTV,KACI,yBACEW,mBAAmBH,KAAKC,UAAUH,KAGxCne,EAAAC,EAAAC,cAAC6B,GAAMc,SAAP,MAPJ,qBAUJ7C,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,QAAf,mBACAjS,EAAAC,EAAAC,cAAA,SACI3M,GAAG,OACHwB,KAAK,OACLZ,KAAK,OACLge,SApEpB,SAAoBR,GAChBA,EAAMC,iBACN,IAAM6M,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAUC,GACtB,IAAMliB,EAAOkiB,EAAGnM,OAAOje,OAEvB4pB,EADmBC,KAAKQ,MAAMniB,KAGlC+hB,EAAOK,WAAWnN,EAAMG,cAAciN,MAAM,IAC5CpN,EAAMG,cAAcxf,MAAQ,OA6DpB0N,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,UAAQiR,QA7DxB,SAAwBQ,GACpBA,EAAMC,iBACNwM,EAAStT,MA2DG,qBAEJ9K,EAAAC,EAAAC,cAAA,QAAM8R,SAhFlB,SAAoBL,GAChBA,EAAMC,iBAENwM,EADmBC,KAAKQ,MAAMd,MA+ElB/d,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,8CAGAF,EAAAC,EAAAC,cAAA,YACIoO,UAAU,OACV0Q,KAAM,GACNjqB,KAAK,aACLkqB,KAAM,GACNC,YAAY,EACZ5sB,MAAOyrB,EACP5L,SACI,SAACR,GAAD,OAAWqM,EAAQrM,EAAMG,cAAcxf,UAG/C0N,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO/L,KAAK,SAAS7B,MAAM,sCCxHxC,SAASugB,GAATpY,GAKZ,IAJCuhB,EAIDvhB,EAJCuhB,OACAhlB,EAGDyD,EAHCzD,QACAiW,EAEDxS,EAFCwS,gBACAiR,EACDzjB,EADCyjB,gBACDxV,EACqCC,oBAAS,GAD9CC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GACQyT,EADRvT,EAAA,GACoBwT,EADpBxT,EAAA,GAECY,GAAiB,WAUjB,OACIxJ,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,gBACXtO,EAAAC,EAAAC,cAAA,OAAKoO,UAAU,yBACXtO,EAAAC,EAAAC,cAAA,UAAQiR,QAAS,kBAAMiL,GAAc,KACjCpc,EAAAC,EAAAC,cAAC6B,GAAM8B,SAAP,MADJ,sBAIJ7D,EAAAC,EAAAC,cAAA,SAAOoO,UAAWe,KAAO7d,OACrBwO,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Q,GAAD,CACIpU,KAAMsf,EACNhL,MAAM,OACNC,QAAQ,eAGhBjR,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Q,GAAD,CACIpU,KAAMsf,EACNhL,MAAM,SACNC,QAAQ,YAGhBjR,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4Q,GAAD,CACIpU,KAAMsf,EACNhL,MAAM,UACNC,QAAQ,gBAGhBjR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,oBAGZ5S,EAAAC,EAAAC,cAAA,SAAOoO,UAAU,WACZ0N,EAAOxqB,MAAMsH,IAAI,SAAC1C,GAAD,OACd4J,EAAAC,EAAAC,cAAA,MAAIvF,IAAKvE,EAAO7C,GAAK+a,UAAU,oBAC3BtO,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,iBACVtO,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAI3jB,EAAO7C,IACZ6C,EAAOrC,UADZ,IACwBqC,EAAOpC,WAGnCgM,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,iBACTlY,EAAOlC,QAEZ8L,EAAAC,EAAAC,cAAA,MAAIoO,UAAU,iBACTlY,EAAOnC,YAEZ+L,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIoO,UAAU,sBACV6C,QACI,SAACQ,GAAD,OA9DlB,SAAUA,EAAOpe,GAC/Boe,EAAMC,iBACN,IAAMyK,EAAU,mCACVrlB,EAAQzD,GAAIQ,UAAY,IAAMiD,EAAQzD,GAAIS,SAAW,IACvDjC,OAAOgpB,QAAQsB,KACfpP,EAAgB,CAAC1Z,KAAIY,KAAM,aAC3B+pB,EAAgB,CAAC3qB,KAAIY,KAAM,sBAwDYgrB,CAAUxN,EAAOvb,EAAO7C,MAGvCyM,EAAAC,EAAAC,cAAC6B,GAAM4B,MAAP,MACA3D,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,eACQxc,EAAOrC,UADf,IAC2BqC,EAAOpC,iBAQ1DgM,EAAAC,EAAAC,cAACiT,GAAA,EAAD,CAAQC,OAAQ+I,GACZnc,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMiL,GAAc,KAFjC,SAMApc,EAAAC,EAAAC,cAACoR,GAAD,CAAWhG,SAAU2B,MC3FrC,SAASmS,GAAT3kB,GAMG,IALC9E,EAKD8E,EALC9E,SACAqB,EAIDyD,EAJCzD,QACAiW,EAGDxS,EAHCwS,gBACA9E,EAED1N,EAFC0N,QACA+V,EACDzjB,EADCyjB,gBAEM9nB,EAASY,EAAQrB,GACjB0pB,E/CmHH,SAASC,EAAmBta,EAAWrP,GAC1C,YAAiBO,IAAbP,EACO2pB,EAAmBnpB,KAAK,KAAM6O,GAElC3R,IAAEqB,KAAKY,EAAM3B,UAAbN,CAAwB2R,GAAWpM,OAEtC,SAACgE,GAAD,OAAUA,EAAKxF,SAASzB,KAC1BgB,OACE,SAAC4oB,EAAa3iB,GAAd,OAAuBA,EAAK9F,OAAOyoB,IACnC,IACF3mB,OACE,SAACrF,GAAD,OAAQA,IAAOoC,I+C9HE2pB,CAAmBnX,EAAQpL,YAFjD2L,EAG2CC,mBAAS0W,EAAa1pB,IAHjEiT,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAGQ8W,EAHR5W,EAAA,GAGuB6W,EAHvB7W,EAAA,GAKCY,GAAiB,gBADGpT,EAAUA,EAAOrC,UAAY,IAAMqC,EAAOpC,SAAW,KAGzE,IAAM0rB,EAAYzK,kBACd,kBAAM/f,OAAOyD,KAAK3B,GAAS4B,OACvB,SAACrF,GAAD,OAASisB,EAAcpoB,SAAS7D,IAAOA,IAAOoC,KAElD,CAACqB,EAASrB,EAAU6pB,IAXzB1W,EAa+CH,mBAAS+W,EAAU,IAblE3W,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAaQ6W,EAbR5W,EAAA,GAayB6W,EAbzB7W,EAAA,GAiCC,SAAS8W,EAAalO,GAClBA,EAAMC,iBADmB,IAAAC,EAEyBF,EAAMG,cAAjD/d,EAFkB8d,EAElB9d,UAAWC,EAFO6d,EAEP7d,SAAUC,EAFH4d,EAEG5d,WAAYC,EAFf2d,EAEe3d,OACxC+Y,EAAgB,CACZlZ,UAAWA,EAAUzB,MACrBiB,GAAIoC,EACJ3B,SAAUA,EAAS1B,MACnB2B,WAAYjB,OAAOiB,EAAW3B,OAC9B4B,OAAQlB,OAAOkB,EAAO5B,OACtB6B,KAAM,eAGd,OAxBAkV,oBACI,WACIoW,EAAiBJ,EAAa1pB,KAElC,CAAC0pB,EAAc1pB,IAEnB0T,oBACI,WACIuW,EAAmBF,EAAU,KAEjC,CAACE,EAAoBF,IAcpBtpB,EAID4J,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAOyQ,WAAa,iBAChC9f,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAMC,GAAG,MAAK/Z,EAAAC,EAAAC,cAAC6B,GAAMU,YAAP,MAAd,SACAzC,EAAAC,EAAAC,cAAA,yBACiB9J,EAAOrC,UADxB,IACoCqC,EAAOpC,UAE3CgM,EAAAC,EAAAC,cAAA,QAAMiS,SAAU0N,EAAc7N,SAAU6N,GACpC7f,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,aAAf,cACAjS,EAAAC,EAAAC,cAAA,SACI6f,aAAc3pB,EAAOrC,UACrBgB,KAAK,YACLZ,KAAK,UAGb6L,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,YAAf,aACAjS,EAAAC,EAAAC,cAAA,SACI6f,aAAc3pB,EAAOpC,SACrBe,KAAK,WACLZ,KAAK,UAGb6L,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,cAAf,kBACAjS,EAAAC,EAAAC,cAAA,SACI6f,aAAcltB,OAAOuD,EAAOnC,YAC5Bc,KAAK,aACLZ,KAAK,YAGb6L,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,UAAf,UACAjS,EAAAC,EAAAC,cAAA,SACI6f,aAAcltB,OAAOuD,EAAOlC,QAC5Ba,KAAK,SACLZ,KAAK,YAGb6L,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SAAO+R,QAAQ,WAAf,YACAjS,EAAAC,EAAAC,cAAA,SACInL,KAAK,UACLZ,KAAK,SACL0c,UAAQ,EACRve,MACIH,IACIyF,GAAQwH,WAAWhJ,EAAOnC,aAC5B5B,OAAO,MAEb2tB,UAAQ,MAIpBhgB,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACKsf,EAAc1mB,IAAI,SAAC6Z,GAAD,OACf3S,EAAAC,EAAAC,cAAA,MAAIvF,IAAKgY,GACJ3b,EAAQ2b,GAAK5e,UADlB,IAC8BiD,EAAQ2b,GAAK3e,SACvCgM,EAAAC,EAAAC,cAAA,UACI+f,cAAA,YAAAnpB,OAC1BE,EAAQ2b,GAAK5e,UADa,KAAA+C,OACAE,EAAQ2b,GAAK3e,SADb,qBAEAsa,UAAU,sBACV3M,MAAK,UAAA7K,OAAYE,EAAQ2b,GAAK5e,UAAzB,OAAA+C,OAC/BE,EAAQ2b,GAAK3e,UACamd,QAAS,kBACL+M,EAAgB,CACZthB,KAAM,CAACjH,EAAUgd,GACjBxe,KAAM,qBAId6L,EAAAC,EAAAC,cAAC6B,GAAM4B,MAAP,UAIc,IAAzB6b,EAAc/oB,QACXuJ,EAAAC,EAAAC,cAAA,mBAGRF,EAAAC,EAAAC,cAAA,QAAM8R,SAlHd,SAAkBL,GACdA,EAAMC,iBACNsM,EAAgB,CACZthB,KAAM,CAACjH,EAAUgqB,GACjBxrB,KAAM,qBA+GF6L,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,UACI4W,OAAQ,SAACnF,GAAD,OACJiO,EAAmBjO,EAAMc,OAAOngB,SAGnCotB,EAAU5mB,IAAI,SAAC6Z,GAAD,OACX3S,EAAAC,EAAAC,cAAA,UAAQvF,IAAKgY,EAAKrgB,MAAOqgB,GACpB3b,EAAQ2b,GAAK5e,UADlB,IAC8BiD,EAAQ2b,GAAK3e,aAGzC,IACVgM,EAAAC,EAAAC,cAAA,SAAO/L,KAAK,SAAS7B,MAAM,WAhGhC0N,EAAAC,EAAAC,cAAA,yBA8GA,SAASggB,GAAqBngB,GACzC,OAAKA,EAAM/I,QAAQ+I,EAAMpK,UAGdqK,EAAAC,EAAAC,cAACkf,GAAkBrf,GAFnBC,EAAAC,EAAAC,cAAA,+CCvKA,SAASigB,GAAQpgB,GAAO,IAAAsS,EACAnG,KADAoG,EAAApd,OAAAmH,EAAA,EAAAnH,CAAAmd,EAAA,GAC5Brb,EAD4Bsb,EAAA,GACnBrF,EADmBqF,EAAA,GAE7B0J,EAAS1T,GAAepT,OAAOiC,OAAOH,GAAU,aAAa,GAFhCsc,EAGAlH,KAHA6R,EAAA/oB,OAAAmH,EAAA,EAAAnH,CAAAoe,EAAA,GAI7B8M,EAAa,CAACjY,QAJe8V,EAAA,GAINC,gBAJMD,EAAA,GAIWjnB,UAASiW,mBACvD,OACIjN,EAAAC,EAAAC,cAACwb,GAAD,KACI1b,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAQuG,SAAS,WACbrgB,EAAAC,EAAAC,cAACogB,GAADprB,OAAAK,OAAA,CAAYsF,KAAK,IAAImhB,OAAQA,GAAYoE,IACzCpgB,EAAAC,EAAAC,cAACggB,GAADhrB,OAAAK,OAAA,CAAesF,KAAK,aAAgBulB,8BCiDrCG,GA1DA,SAACxgB,GAAD,OACXC,EAAAC,EAAAC,cAACwb,GAAD,KACI1b,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAOmR,QACnBxgB,EAAAC,EAAAC,cAAA,SAAOoO,UAAWe,KAAOoR,MACrBzgB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIoO,UAAU,iBACV6C,QAAS,kBjCkB9B,WAAP,OAAAuP,GAAAzF,MAAAC,KAAA1kB,WiClB2CmqB,KAFnB,oCAKU,IANd,cASA3gB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC6B,GAAMI,UAAP,MADJ,wBAGAnC,EAAAC,EAAAC,cAAA,+CAIJF,EAAAC,EAAAC,cAACmQ,GAAD,CAAcG,SAAO,GAArB,6CAC8CxQ,EAAAC,EAAAC,cAAA,WAD9C,4CAKJF,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAO1N,OACnB3B,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAOuR,WACnB5gB,EAAAC,EAAAC,cAAC6B,GAAMqB,KAAP,OAEJpD,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAOwR,WACnB7gB,EAAAC,EAAAC,cAAA,2BAGAF,EAAAC,EAAAC,cAAA,KAAGoO,UAAWe,KAAOyR,SAAW,eAAhC,4BAKR9gB,EAAAC,EAAAC,cAAA,UAAQoO,UAAW,WAAae,KAAO0R,QACnC/gB,EAAAC,EAAAC,cAAA,oEAEIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAG2d,KAAK,mDAAR,4DAIJ7d,EAAAC,EAAAC,cAAA,qCAC8B,IAC1BF,EAAAC,EAAAC,cAAA,KAAG2d,KAAK,wBAAR,SAFJ,IAE8C,IAC1C7d,EAAAC,EAAAC,cAAA,QAAM2B,MAAO,CAACmf,SAAU,SACpBhhB,EAAAC,EAAAC,cAAC6B,GAAMkB,WAAP,MADJ,IACyBjD,EAAAC,EAAAC,cAAC6B,GAAMuB,MAAP,gCCnDvC2d,GAAQ,kBACVjhB,EAAAC,EAAAC,cAAA,OACIQ,KAAK,OACLN,OAAO,KACPC,QAAQ,YACRF,MAAM,KACN+gB,MAAM,8BAENlhB,EAAAC,EAAAC,cAAA,QACIc,EAAE,wHACFN,KAAK,WAKXygB,GAAW,kBACbnhB,EAAAC,EAAAC,cAAA,OACIQ,KAAK,OACLN,OAAO,KACPC,QAAQ,YACRF,MAAM,KACN+gB,MAAM,8BAENlhB,EAAAC,EAAAC,cAAA,QAAMc,EAAE,gDAAgDN,KAAK,WAI/D0gB,GAAW,kBACbphB,EAAAC,EAAAC,cAAA,OACIQ,KAAK,OACLN,OAAO,KACPC,QAAQ,YACRF,MAAM,KACN+gB,MAAM,8BAENlhB,EAAAC,EAAAC,cAAA,QAAMc,EAAE,4BAA4BN,KAAK,WAI3C2gB,GAAU,kBACZrhB,EAAAC,EAAAC,cAAA,OACIQ,KAAK,OACLN,OAAO,KACPC,QAAQ,YACRF,MAAM,KACN+gB,MAAM,8BAENlhB,EAAAC,EAAAC,cAAA,QACIc,EAAE,mHACFN,KAAK,WAKF,SAAS4gB,KAAW,IAAA5Y,EACOC,oBAAS,GADhBC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GACxB2U,EADwBzU,EAAA,GACX2Y,EADW3Y,EAAA,GAE/BS,oBACI,WACIsT,GAAW,WACP,IAAMO,EAAMT,GAASM,OAAOI,mBAC5BD,EAAIsE,GAAG,WAAY,kBAAMD,GAAe,KACxCrE,EAAIsE,GAAG,aAAc,kBAAMD,GAAe,KAC1CA,EAAerE,EAAIG,kBAG3B,IAEJ,IAAMH,EAAMT,GAASM,OAAOI,mBAC5B,OACInd,EAAAC,EAAAC,cAAA,OAAKoO,UAAWe,KAAOoS,WACnBzhB,EAAAC,EAAAC,cAAA,UACIoO,UAAWe,KAAOqS,UAAY,gBAC9BvQ,QAAS,kBAAM+L,EAAIE,aAEnBpd,EAAAC,EAAAC,cAACyhB,GAAD,OAEFtE,EAEErd,EAAAC,EAAAC,cAAA,UACIoO,UAAWe,KAAOqS,UAAY,gBAC9BvQ,QAAS,kBAAM+L,EAAII,eAEnBtd,EAAAC,EAAAC,cAAC0hB,GAAD,OAGJ5hB,EAAAC,EAAAC,cAAA,UACIoO,UAAWe,KAAOqS,UAAY,gBAC9BvQ,QAAS,kBAAM+L,EAAIK,aAEnBvd,EAAAC,EAAAC,cAAC2hB,GAAD,OAGR7hB,EAAAC,EAAAC,cAAA,UACIoO,UACIe,KAAOqS,UAAY,IAAMrS,KAAOyS,MAAQ,gBAE5C3Q,QAAS,kBAAM+L,EAAI4E,UAEnB9hB,EAAAC,EAAAC,cAAC6hB,GAAD,0CChFZC,UAASC,KACTC,GAAUC,YAAcH,IAEtBI,GACFC,UAAUC,WAAWlrB,SAAS,YAC3BqlB,GAuHQ8F,OApHf,WACI/Y,GAAiB,0BADN,IAAAd,EAE+BC,oBAAS,GAFxCC,EAAA1T,OAAAmH,EAAA,EAAAnH,CAAAwT,EAAA,GAEJ8Z,EAFI5Z,EAAA,GAEW6Z,EAFX7Z,EAAA,GAAAE,EAG6BH,oBAAS,GAHtCI,EAAA7T,OAAAmH,EAAA,EAAAnH,CAAA4T,EAAA,GAGJ4Z,EAHI3Z,EAAA,GAGU4Z,EAHV5Z,EAAA,GAAAE,EAI6BN,oBAAS,GAJtCO,EAAAhU,OAAAmH,EAAA,EAAAnH,CAAA+T,EAAA,GAIJ2Z,EAJI1Z,EAAA,GAIU2Z,EAJV3Z,EAAA,GAmBX,OAdAG,oBACI,WACIsT,GAAW,WACP,IAAMO,EAAMT,GAASM,OAAOI,mBAC5BD,EAAIsE,GAAG,oBAAqB,kBAAMmB,GAAgB,KAClDzF,EAAIsE,GAAG,oBAAqB,kBAAMmB,GAAgB,KAClDzF,EAAIsE,GAAG,OAAQ,kBAAMqB,GAAgB,KACrC3F,EAAIsE,GAAG,QAAS,kBAAMqB,GAAgB,KACtCF,EAAgBzF,EAAIwF,gBACpBG,GAAiB3F,EAAI4F,gBAG7B,IAGA9iB,EAAAC,EAAAC,cAAA,OACIoO,UAAWyU,KACP,MACA,CAACC,eAAgBR,GACjB,CAACS,kBAAmBT,GACpB,CAACU,cAAeN,GAChB,CAACO,UAAad,UAAUC,WAAWlrB,SAAS,YAC5C,CAACgsB,WAAc3G,MAGnBzc,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAkBoI,QAASA,IACvBliB,EAAAC,EAAAC,cAAA,UACIoO,UAAWyU,KACP,SACA,uBACA,CAACM,wBACGhB,UAAUC,WAAWlrB,SAAS,QAC3BqlB,KACCiG,IAGZY,cAAezG,IAEf7c,EAAAC,EAAAC,cAAA,WACKkiB,IACGpiB,EAAAC,EAAAC,cAAA,QACI2B,MAAO,CACH0hB,WAAY,SACZC,QAAS,cACTC,YAAa,QAGjBzjB,EAAAC,EAAAC,cAAC6B,GAAMqB,KAAP,OAGRpD,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACV6C,QAAS,kBAAMsR,GAAkBD,KAEjCxiB,EAAAC,EAAAC,cAAC6B,GAAM2B,QAAP,MACA1D,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,wBAEJ5S,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,KACK,SAAArf,GAAA,IAAEzI,EAAFyI,EAAEzI,SAAUgpB,EAAZvgB,EAAYugB,SAAZ,OACGhb,EAAAC,EAAAC,cAAA,UACIoO,UAAU,eACVuC,SAAgC,MAAtB7e,EAAS0xB,SACnBvS,QAAS,kBAAM6J,EAAS,OAExBhb,EAAAC,EAAAC,cAAC6B,GAAMgB,KAAP,MACA/C,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,kBAKhB5S,EAAAC,EAAAC,cAAA,OACIoO,UAAWyU,KACP,UACA,uBACA,CAAClS,SAAY+R,IAEjB/gB,MAAO,CACH8hB,KAAM,IACNC,WAAY,OACZH,YAAa,OACbI,SAAU,WACVC,MAAO,IACP3jB,MAAO,UAZf,iBAiBCiiB,IACGpiB,EAAAC,EAAAC,cAACohB,GAAD,OAGRthB,EAAAC,EAAAC,cAAA,QAAMoO,UAAU,QACZtO,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,KACI9Z,EAAAC,EAAAC,cAACsgB,GAAD,CAAQ3lB,KAAK,MACbmF,EAAAC,EAAAC,cAAC7O,GAAD,CAAiBwJ,KAAK,YAClBmF,EAAAC,EAAAC,cAAC0b,GAAD,CAAgB/gB,KAAK,MACrBmF,EAAAC,EAAAC,cAAC6jB,GAAD,CAAYlpB,KAAK,kBAErBmF,EAAAC,EAAAC,cAACigB,GAAD,CAAStlB,KAAK,cACdmF,EAAAC,EAAAC,cAAC8jB,GAAD,CAASnpB,KAAK,YACdmF,EAAAC,EAAAC,cAACiX,GAAD,CAAUsE,SAAO,OAI7Bzb,EAAAC,EAAAC,cAAA,UAAQoO,UAAU,UACdtO,EAAAC,EAAAC,cAACwd,GAAD,0BCzIhBuG,EAASC,OACLlkB,EAAAC,EAAAC,cAACyU,EAAA,WAAD,KAAY3U,EAAAC,EAAAC,cAACikB,GAAD,OACZza,SAAS0a,eAAe,SzD2HtB,kBAAmB/B,WACrBA,UAAUgC,cAAcC,MAAM7Y,KAAK,SAAC8Y,GAClCA,EAAaC,mC0DpInBrzB,EAAAC,QAAA,CAAkBylB,aAAA,4BAAArlB,MAAA,qBAAAylB,MAAA,qBAAAP,MAAA,qBAAAK,SAAA,wBAAAH,YAAA,2BAAAD,aAAA,iDCAlBxlB,EAAAC,QAAA,CAAkBovB,OAAA,uBAAAC,KAAA,qBAAAM,OAAA,uBAAApf,MAAA,sBAAAif,UAAA,0BAAAC,UAAA,0BAAAC,SAAA,8CCAlB3vB,EAAAC,QAAA,CAAkBqwB,UAAA,oCAAAC,UAAA,oCAAAI,MAAA,qDCAlB3wB,EAAAC,QAAA,CAAkBI,MAAA,uBAAAsuB,WAAA,4BAAA/I,SAAA,+CCAlB5lB,EAAAC,QAAA,CAAkBssB,QAAA,yBAAAC,cAAA,+BAAAC,cAAA,oDCAlBzsB,EAAAC,QAAA,CAAkBqe,OAAA,wBAAAH,MAAA","file":"static/js/main.6692c468.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tournament\":\"tournament_tournament__35kZy\",\"header\":\"tournament_header__2ANtT\",\"contentFrame\":\"tournament_contentFrame__IdAQj\",\"table\":\"tournament_table__VvPaZ\",\"topHeader\":\"tournament_topHeader__1SEmz\",\"row\":\"tournament_row__3LfgV\",\"compact\":\"tournament_compact__3lbUH\",\"playerName\":\"tournament_playerName__1H1LG\",\"rank\":\"tournament_rank__2GrEp\"};","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import numeral from \"numeral\";\r\n\r\n// let's make a custom numeral format. I don't really know how this works.\r\nnumeral.register(\"format\", \"fraction\", {\r\n    // eslint-disable-next-line no-unused-vars\r\n    format: function (value, format, roundingFunction) {\r\n        const whole = Math.floor(value);\r\n        const remainder = value - whole;\r\n        const fraction = (function () {\r\n            switch (remainder) {\r\n            case 0.25:\r\n                return \"¼\";\r\n            case 0.5:\r\n                return \"½\";\r\n            case 0.75:\r\n                return \"¾\";\r\n            default:\r\n                return \"\";\r\n            }\r\n        }());\r\n        const stringedWhole = (\r\n            (whole === 0 && remainder)\r\n            ? \"\"\r\n            : String(whole)\r\n        );\r\n        return stringedWhole + fraction;\r\n    },\r\n    regexps: {\r\n        format: /(1\\/2)/,\r\n        unformat: /(1\\/2)/\r\n    },\r\n    unformat: function (value) {\r\n        // TODO: This doesn't do anything currently\r\n        return Number(value);\r\n    }\r\n});\r\n","// These define the array indices used in `Match` objects.\r\n// @example: `[WhitePlayer, BlackPlayer1]`, `[WhiteScore, BlackScore]`\r\nconst WHITE = 0;\r\nconst BLACK = 1;\r\n// This is used in by matches to indicate a dummy player. The\r\n// `getPlayerMaybe()` method returns a special dummy player profile when\r\n// fetching this ID.\r\n// This ID conforms to the NanoID regex.\r\nconst DUMMY_ID = \"________DUMMY________\";\r\n\r\nexport {BLACK, DUMMY_ID, WHITE};\r\n","import {BLACK, WHITE} from \"./constants\";\r\nimport t from \"tcomb\";\r\n\r\nconst Id = t.refinement(\r\n    t.String,\r\n    (id) => /^[A-Za-z0-9_-]{21}$/.test(id),\r\n    \"NanoId\"\r\n);\r\n\r\nconst Color = t.refinement(\r\n    t.Number,\r\n    (num) => num === BLACK || num === WHITE,\r\n    \"Color\"\r\n);\r\n\r\nconst AvoidPair = t.tuple([Id, Id], \"AvoidPair\");\r\n\r\nconst Player = t.interface(\r\n    {\r\n        firstName: t.String,\r\n        id: Id,\r\n        lastName: t.String,\r\n        matchCount: t.Number,\r\n        rating: t.Number,\r\n        type: t.String // used for CSS styling etc\r\n    },\r\n    \"Player\"\r\n);\r\n\r\nconst Match = t.interface(\r\n    {\r\n        id: Id,\r\n        newRating: t.tuple([t.Number, t.Number]),\r\n        origRating: t.tuple([t.Number, t.Number]),\r\n        playerIds: t.tuple([Id, Id]),\r\n        result: t.tuple([t.Number, t.Number])\r\n    },\r\n    \"Match\"\r\n);\r\n\r\nconst RoundList = t.list(t.list(Match), \"RoundList\");\r\n\r\nconst Tournament = t.interface(\r\n    {\r\n        byeQueue: t.list(t.String),\r\n        date: Date,\r\n        id: Id,\r\n        name: t.String,\r\n        playerIds: t.list(t.String),\r\n        roundList: RoundList,\r\n        tieBreaks: t.list(t.Number)\r\n    },\r\n    \"Tournament\"\r\n);\r\n\r\nexport default Object.freeze({\r\n    AvoidPair,\r\n    Color,\r\n    Id,\r\n    Match,\r\n    Player,\r\n    RoundList,\r\n    Tournament\r\n});\r\n","// These factories are mainly useful as a shortcut for default values.\r\nimport nanoid from \"nanoid\";\r\nimport types from \"./types\";\r\n\r\nexport function createMatch(importObj) {\r\n    return types.Match(\r\n        Object.assign(\r\n            {\r\n                id: nanoid(),\r\n                result: [0, 0]\r\n            },\r\n            importObj\r\n        )\r\n    );\r\n}\r\n\r\nexport function createPlayer(importObj) {\r\n    return types.Player(\r\n        Object.assign(\r\n            {\r\n                id: nanoid(),\r\n                matchCount: 0,\r\n                rating: 0,\r\n                type: \"person\" // used for CSS styling etc.\r\n            },\r\n            importObj\r\n        )\r\n    );\r\n}\r\n\r\nexport function createTournament(importObj) {\r\n    return types.Tournament(\r\n        Object.assign(\r\n            {\r\n                byeQueue: [],\r\n                date: new Date(),\r\n                id: nanoid(),\r\n                playerIds: [],\r\n                roundList: [],\r\n                tieBreaks: [0, 1, 2, 3]\r\n            },\r\n            importObj\r\n        )\r\n    );\r\n}\r\n","import {DUMMY_ID} from \"./constants\";\r\nimport {assoc} from \"ramda\";\r\nimport {createPlayer} from \"./factories\";\r\nimport t from \"tcomb\";\r\nimport types from \"./types\";\r\n\r\n/*******************************************************************************\r\n * Player functions\r\n ******************************************************************************/\r\n// These are useful for passing to `filter()` methods.\r\nconst isDummyId = (playerId) => types.Id(playerId) === DUMMY_ID;\r\nexport {isDummyId};\r\n// This can take any object with a compliant `id` property.\r\nconst isDummyObj = (playerObj) => types.Id(playerObj.id) === DUMMY_ID;\r\nexport {isDummyObj};\r\n\r\n// This is the dummy profile that `getPlayerMaybe()` returns for bye rounds.\r\nconst dummyPlayer = createPlayer({\r\n    firstName: \"Bye\",\r\n    id: DUMMY_ID,\r\n    lastName: \"Player\",\r\n    type: \"dummy\"\r\n});\r\n\r\n// If `getPlayerMaybe()` can't find a profile (e.g. if it was deleted) then it\r\n// outputs this instead. The ID will be the same as missing player's ID.\r\nconst createMissingPlayer = (id) => createPlayer({\r\n    firstName: \"Anonymous\",\r\n    id: id,\r\n    lastName: \"Player\",\r\n    type: \"missing\"\r\n});\r\n\r\n// This function should always be used in components that *might* not be able to\r\n// display current player information. This includes bye rounds with \"dummy\"\r\n// players, or scoreboards where a player may have been deleted.\r\n// This automatically curries for easy use across the same context.\r\nexport function getPlayerMaybe(playerDict, id) {\r\n    if (id === undefined) {\r\n        return getPlayerMaybe.bind(null, playerDict);\r\n    }\r\n    if (id === DUMMY_ID) {\r\n        return dummyPlayer;\r\n    }\r\n    const player = t.dict(types.Id, types.Player)(playerDict)[id];\r\n    return (player) ? player : createMissingPlayer(id);\r\n}\r\n\r\n/*******************************************************************************\r\n * Round functions\r\n ******************************************************************************/\r\nexport function calcNumOfRounds(playerCount) {\r\n    const roundCount = Math.ceil(Math.log2(playerCount));\r\n    // If there aren't any players then `roundCount` === `-Infinity`.\r\n    return (Number.isFinite(roundCount)) ? roundCount : 0;\r\n}\r\n\r\n// This flattens a list of rounds to a list of matches.\r\n// The optional `lastRound` parameter will slice the rounds to only the last\r\n// index specified. For example: if you just want to see the scores through\r\n// round 2 and not include round 3.\r\nexport function rounds2Matches(roundList, lastRound = null) {\r\n    const rounds = (lastRound === null)\r\n        ? roundList\r\n        : roundList.slice(0, lastRound + 1);\r\n    return rounds.reduce((acc, round) => acc.concat(round), []);\r\n}\r\n\r\n// This creates a filtered version of `players` with only the players that are\r\n// not matched for the specified round.\r\nexport function getUnmatched(roundList, players, roundId) {\r\n    const matchList = types.RoundList(roundList)[t.Number(roundId)] || [];\r\n    const matchedIds = matchList.reduce(\r\n        (acc, match) => acc.concat(match.playerIds),\r\n        []\r\n    );\r\n    const playerList = t.list(types.Player)(Object.values(players));\r\n    const unmatched = playerList.reduce(\r\n        (acc, player) => (\r\n            (matchedIds.includes(player.id))\r\n            ? acc\r\n            : assoc(player.id, player, acc)\r\n        ),\r\n        {}\r\n    );\r\n    return unmatched;\r\n}\r\n\r\n// Returns a boolean for whether or not a round has completed.\r\n// This automatically curries for easy application across a single component.\r\nexport function isRoundComplete(tourney, players, roundId) {\r\n    if (players === undefined) {\r\n        return isRoundComplete.bind(null, tourney);\r\n    } else if (roundId === undefined) {\r\n        return isRoundComplete.bind(null, tourney, players);\r\n    }\r\n    if (roundId < tourney.roundList.length - 1) {\r\n        // If it's not the last round, it's complete.\r\n        return true;\r\n    }\r\n    const unmatched = getUnmatched(tourney.roundList, players, roundId);\r\n    const results = tourney.roundList[roundId].map(\r\n        (match) => match.result[0] + match.result[1]\r\n    );\r\n    return Object.keys(unmatched).length === 0 && !results.includes(0);\r\n}\r\n\r\n/*******************************************************************************\r\n * Match functions\r\n ******************************************************************************/\r\n// Returns whether or not a player has played a bye round.\r\nexport function hasHadBye(matchList, playerId) {\r\n    return t.list(types.Match)(matchList).filter(\r\n        (match) => match.playerIds.includes(playerId)\r\n    ).reduce(\r\n        (acc, match) => acc.concat(match.playerIds),\r\n        []\r\n    ).includes(DUMMY_ID);\r\n}\r\n\r\nexport function getAllPlayerIdsFromMatches(matchList) {\r\n    const allPlayers = t.list(types.Match)(matchList).reduce(\r\n        (acc, match) => acc.concat(match.playerIds),\r\n        []\r\n    );\r\n    return Array.from(new Set(allPlayers));\r\n}\r\n\r\n/*******************************************************************************\r\n * Avoid list functions\r\n ******************************************************************************/\r\n// Returns a flattened list of all of the player set to avoid a specific player\r\n// ID. This automatically curries for easy reuse across the same component.\r\nexport function getPlayerAvoidList(avoidList, playerId) {\r\n    if (playerId === undefined) {\r\n        return getPlayerAvoidList.bind(null, avoidList);\r\n    }\r\n    return t.list(types.AvoidPair)(avoidList).filter(\r\n        // get pairings with the player\r\n        (pair) => pair.includes(playerId)\r\n    ).reduce( // Flatten the array\r\n        (accumulator, pair) => pair.concat(accumulator),\r\n        []\r\n    ).filter( // filter out the player's own id\r\n        (id) => id !== playerId\r\n    );\r\n}\r\n\r\n// TODO: This isn't currently in use, but it probably should be.\r\n// export function cleanAvoidList(avoidList, playerList) {\r\n//     t.list(types.AvoidPair)(avoidList);\r\n//     t.list(types.Player)(playerList);\r\n//     const ids = playerList.map((p) => p.id);\r\n//     return avoidList.filter(\r\n//         (pairs) => (ids.includes(pairs[0]) && ids.includes(pairs[1]))\r\n//     );\r\n// }\r\n","/**\r\n * This file is a complement to `../data-types/`, except its types are specific\r\n * to the scoring and pairing functions.\r\n */\r\nimport t from \"tcomb\";\r\nimport {types} from \"../data-types\";\r\n\r\nconst BLACKVALUE = 1;\r\nconst WHITEVALUE = -1;\r\nconst ColorScore = t.refinement(\r\n    t.Number,\r\n    (num) => num === BLACKVALUE || num === WHITEVALUE,\r\n    \"ColorScore\"\r\n);\r\nconst ScoreData = t.interface(\r\n    {\r\n        colorScores: t.list(ColorScore),\r\n        colors: t.list(types.Color),\r\n        id: types.Id,\r\n        isDummy: t.Boolean,\r\n        opponentResults: t.dict(types.Id, t.Number),\r\n        ratings: t.list(t.Number),\r\n        results: t.list(t.Number),\r\n        resultsNoByes: t.list(t.Number)\r\n    },\r\n    \"ScoreData\"\r\n);\r\nconst PairingData = t.interface(\r\n    {\r\n        avoidIds: t.list(types.Id),\r\n        colorScores: t.list(ColorScore),\r\n        colors: t.list(types.Color),\r\n        id: types.Id,\r\n        // isDueBye: t.Boolean,\r\n        isUpperHalf: t.Boolean,\r\n        opponents: t.list(types.Id),\r\n        rating: t.Number,\r\n        score: t.Number\r\n    },\r\n    \"PairingData\"\r\n);\r\nconst ScoreCalculator = t.func(\r\n    [t.dict(t.String, ScoreData), types.Id],\r\n    t.Number,\r\n    \"ScoreCalulator\"\r\n);\r\nconst Standing = t.interface(\r\n    {\r\n        id: types.Id,\r\n        score: t.Number,\r\n        tieBreaks: t.list(t.Number)\r\n    },\r\n    \"Standing\"\r\n);\r\n\r\nexport default Object.freeze({\r\n    BLACKVALUE,\r\n    PairingData,\r\n    ScoreCalculator,\r\n    ScoreData,\r\n    Standing,\r\n    WHITEVALUE\r\n});\r\n","// This implements the tiebreak methods specified in USCF § 34E.\r\n// This is incomplete; many more tiebreak methods need to be added. These are\r\n// simply the most commonly used.\r\nimport {\r\n    ascend,\r\n    init,\r\n    last,\r\n    pipe,\r\n    sort,\r\n    sum,\r\n    tail\r\n} from \"ramda\";\r\nimport t from \"tcomb\";\r\nimport types from \"./types\";\r\n\r\nfunction getOpponentScores(scoreData, id) {\r\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\r\n    return opponentIds.filter(\r\n        (oppId) => !scoreData[oppId].isDummy\r\n    ).map(\r\n        (oppId) => getPlayerScore(scoreData, oppId)\r\n    );\r\n}\r\n\r\n/*******************************************************************************\r\n * The main scoring methods\r\n ******************************************************************************/\r\nfunction getPlayerScore(scoreData, id) {\r\n    return sum(scoreData[id].results);\r\n}\r\nexport {getPlayerScore};\r\n\r\n\r\n// USCF § 34E1.\r\nfunction getModifiedMedianScore(scoreData, id) {\r\n    const scores = getOpponentScores(scoreData, id);\r\n    return pipe(\r\n        sort(ascend),\r\n        init,\r\n        tail,\r\n        sum\r\n    )(scores);\r\n}\r\n\r\n// USCF § 34E2.\r\nfunction getSolkoffScore(scoreData, id) {\r\n    return sum(getOpponentScores(scoreData, id));\r\n}\r\n// USCF § 34E3.\r\nfunction getCumulativeScore(scoreData, id) {\r\n    const scoreList = scoreData[id].resultsNoByes.reduce(\r\n        // turn the regular score list into a \"running\" score list\r\n        (acc, score) => acc.concat([last(acc) + score]),\r\n        [0]\r\n    );\r\n    return sum(scoreList);\r\n}\r\n\r\n// USCF § 34E9.\r\nfunction getCumulativeOfOpponentScore(scoreData, id) {\r\n    const opponentIds = Object.keys(scoreData[id].opponentResults);\r\n    const scoreList = opponentIds.filter(\r\n        (oppId) => !scoreData[oppId].isDummy\r\n    ).map(\r\n        // TODO: properly curry this function\r\n        (oppId) => getCumulativeScore(scoreData, oppId)\r\n    );\r\n    return sum(scoreList);\r\n}\r\n\r\nfunction getColorBalanceScore(scoreData, id) {\r\n    return sum(scoreData[id].colorScores);\r\n};\r\n\r\nconst {ScoreCalculator} = types;\r\nconst tieBreakMethods = {\r\n    0: {\r\n        func: ScoreCalculator.of(getModifiedMedianScore),\r\n        id: 0,\r\n        name: \"Modified median\"\r\n    },\r\n    1: {\r\n        func: ScoreCalculator.of(getSolkoffScore),\r\n        id: 1,\r\n        name: \"Solkoff\"\r\n    },\r\n    2: {\r\n        func: ScoreCalculator.of(getCumulativeScore),\r\n        id: 2,\r\n        name: \"Cumulative score\"\r\n    },\r\n    3: {\r\n        func: ScoreCalculator.of(getCumulativeOfOpponentScore),\r\n        id: 3,\r\n        name: \"Cumulative of opposition\"\r\n    },\r\n    4: {\r\n        func: ScoreCalculator.of(getColorBalanceScore),\r\n        id: 4,\r\n        name: \"Most black\"\r\n    }\r\n};\r\nObject.freeze(tieBreakMethods);\r\nexport {tieBreakMethods};\r\n\r\n// Returns the names of the tiebreak methods selected for your tournament.\r\nconst getTieBreakNames = (idList) => (\r\n    t.list(t.Number)(idList).map((i) => tieBreakMethods[i].name)\r\n);\r\nexport {getTieBreakNames};\r\n","import {\r\n    append,\r\n    descend,\r\n    lensIndex,\r\n    over,\r\n    path,\r\n    prop,\r\n    sortWith\r\n} from \"ramda\";\r\nimport {\r\n    getPlayerScore,\r\n    tieBreakMethods\r\n} from \"./scoring\";\r\nimport t from \"tcomb\";\r\nimport types from \"./types\";\r\n\r\n// This is useful for cases where the regular factory functions return empty\r\n// results because a player hasn't been added yet.\r\nconst createBlankScoreData = (id) => types.ScoreData({\r\n    colorScores: [],\r\n    colors: [],\r\n    id,\r\n    isDummy: false,\r\n    opponentResults: {},\r\n    ratings: [],\r\n    results: [],\r\n    resultsNoByes: []\r\n});\r\nexport {createBlankScoreData};\r\n\r\n// Sort the standings by score, see USCF tie-break rules from § 34.\r\n// Returns the list of the standings. Each standing has a `tieBreaks` property\r\n// which lists the score associated with each method. The order of these\r\n// coresponds to the order of the method names in the second list.\r\nexport function createStandingList(methods, scoreData) {\r\n    const selectedTieBreaks = methods.map((i) => tieBreakMethods[i]);\r\n    // Get a flat list of all of the players and their scores.\r\n    const standings = Object.keys(scoreData).map(\r\n        (id) => types.Standing({\r\n            id,\r\n            score: getPlayerScore(scoreData, id),\r\n            tieBreaks: selectedTieBreaks.map(({func}) => func(scoreData, id))\r\n        })\r\n    );\r\n    // create a list of functions to pass to `sortWith`. This will sort by\r\n    // scores and then by each tiebreak value.\r\n    const sortFuncList = Object.keys(selectedTieBreaks).reduce(\r\n        (acc, key) => acc.concat([descend(path([\"tieBreaks\", key]))]),\r\n        [descend(prop(\"score\"))]\r\n    );\r\n    const standingsSorted = sortWith(sortFuncList, standings);\r\n    return standingsSorted;\r\n}\r\n\r\nfunction areScoresEqual(standing1, standing2) {\r\n    // Check if any of them aren't equal\r\n    if (standing1.score !== standing2.score) {\r\n        return false;\r\n    }\r\n    // Check if any tie-break values are not equal\r\n    return !(\r\n        standing1.tieBreaks.reduce(\r\n            (acc, value, i) => acc.concat(value !== standing2.tieBreaks[i]),\r\n            []\r\n        ).includes(true)\r\n    );\r\n}\r\n\r\n// Groups the standings by score, see USCF tie-break rules from § 34.\r\n// example: `[[Dale, Audrey], [Pete], [Bob]]` Dale and Audrey are tied for\r\n// first, Pete is 2nd, Bob is 3rd.\r\nexport function createStandingTree(standingList) {\r\n    const standingsTree = t.list(types.Standing)(standingList).reduce(\r\n        function assignStandingsToTree(acc, standing, i, orig) {\r\n            const prevStanding = orig[i - 1];\r\n            // Always make a new rank for the first player\r\n            const isNewRank = (i === 0)\r\n                ? true\r\n                // Make a new rank if the scores aren't equal\r\n                : !areScoresEqual(standing, prevStanding);\r\n            return (isNewRank)\r\n                // If this player doesn't have the same score, create a new\r\n                // branch of the tree\r\n                ? append([standing], acc)\r\n                // If this player has the same score as the last, append it\r\n                // to the last branch\r\n                : over(lensIndex(acc.length - 1), append(standing), acc);\r\n        },\r\n        []\r\n    );\r\n    return standingsTree;\r\n}\r\n","// These functions are for converting data types defined in `../data-types` to\r\n// data that can be used by the scoring functions in rest of this module.\r\nimport {\r\n    BLACK,\r\n    WHITE,\r\n    isDummyId,\r\n    types\r\n} from \"../data-types\";\r\nimport {\r\n    add,\r\n    append,\r\n    assoc,\r\n    defaultTo,\r\n    lensPath,\r\n    lensProp,\r\n    over,\r\n    pipe,\r\n    sum\r\n} from \"ramda\";\r\nimport {createBlankScoreData} from \"./factories\";\r\nimport scoreTypes from \"./types\";\r\nimport t from \"tcomb\";\r\n\r\nfunction color2Score(color) {\r\n    return (types.Color(color) === BLACK)\r\n        ? scoreTypes.BLACKVALUE\r\n        : scoreTypes.WHITEVALUE;\r\n}\r\n\r\nfunction match2ScoreDataReducer(acc, match) {\r\n    const {playerIds, result, newRating, origRating} = match;\r\n    const [p1Data, p2Data] = [WHITE, BLACK].map(function (color) {\r\n        const id = playerIds[color];\r\n        const oppColor = (color === WHITE) ? BLACK : WHITE;\r\n        const oppId = playerIds[oppColor];\r\n        // Get existing score data to update, or create it fresh\r\n        // The ratings will always begin with the `origRating` of the\r\n        // first match they were in.\r\n        const origData = acc[id] || {id, ratings: [origRating[color]]};\r\n        return pipe(\r\n            over(lensProp(\"results\"), append(result[color])),\r\n            over(\r\n                lensProp(\"resultsNoByes\"),\r\n                (isDummyId(oppId)) ? defaultTo([]) : append(result[color])\r\n            ),\r\n            over(lensProp(\"colors\"), append(color)),\r\n            over(lensProp(\"colorScores\"), append(color2Score(color))),\r\n            over(\r\n                lensPath([\"opponentResults\", oppId]),\r\n                pipe(defaultTo(0), add(result[color]))\r\n            ),\r\n            over(lensProp(\"ratings\"), append(newRating[color])),\r\n            assoc(\"isDummy\", isDummyId(id))\r\n        )(origData);\r\n    });\r\n    return pipe(\r\n        assoc(p1Data.id, p1Data),\r\n        assoc(p2Data.id, p2Data)\r\n    )(acc);\r\n}\r\n\r\nexport function matches2ScoreData(matchList) {\r\n    const data = matchList.reduce(match2ScoreDataReducer, {});\r\n    // TODO: remove this tcomb check for production\r\n    return t.dict(types.Id, scoreTypes.ScoreData)(data);\r\n}\r\n\r\n// Flatten the `[[id1, id2], [id1, id3]]` structure into an easy-to-read\r\n// `{id1: [id2, id3], id2: [id1], id3: [id1]}` structure.\r\nexport function avoidPairReducer(acc, pair) {\r\n    return pipe(\r\n        over(lensProp(pair[0]), append(pair[1])),\r\n        over(lensProp(pair[1]), append(pair[0]))\r\n    )(t.dict(types.Id, t.list(types.Id))(acc));\r\n}\r\n\r\n// This is automatically curried for easy `pipe()`ing\r\nexport function createPairingData(playerData, avoidPairs, scoreData) {\r\n    if (avoidPairs === undefined) {\r\n        return createPairingData.bind(null, playerData);\r\n    } else if (scoreData === undefined) {\r\n        return createPairingData.bind(null, playerData, avoidPairs);\r\n    }\r\n    const avoidDict = avoidPairs.reduce(avoidPairReducer, {});\r\n    const pairingData = Object.values(playerData).reduce(\r\n        function pairingDataReducer(acc, data) {\r\n            // If there's no scoreData for a player, use empty values\r\n            const playerStats = (scoreData[data.id])\r\n                ? scoreData[data.id]\r\n                : createBlankScoreData(data.id);\r\n            // `isUpperHalf` and `isDueBye` default to `false` and will have to\r\n            // be set by another function later.\r\n            const pairData = {\r\n                avoidIds: avoidDict[data.id] || [],\r\n                colorScores: playerStats.colorScores,\r\n                colors: playerStats.colors,\r\n                id: data.id,\r\n                // isDueBye: false,\r\n                isUpperHalf: false,\r\n                opponents: Object.keys(playerStats.opponentResults),\r\n                rating: data.rating,\r\n                // `score` is calculated and cached here because the blossom\r\n                // pairing will reuse it many times.\r\n                score: sum(playerStats.results)\r\n            };\r\n            return acc.concat([pairData]);\r\n        },\r\n        []\r\n    );\r\n    // TODO: remove this tcomb check for production\r\n    return t.list(scoreTypes.PairingData)(pairingData);\r\n}\r\n","import {\r\n    add,\r\n    assoc,\r\n    descend,\r\n    filter,\r\n    findLastIndex,\r\n    last,\r\n    lensIndex,\r\n    map,\r\n    // over,\r\n    pipe,\r\n    pluck,\r\n    prop,\r\n    sort,\r\n    sortWith,\r\n    splitAt,\r\n    sum,\r\n    view\r\n} from \"ramda\";\r\nimport blossom from \"edmonds-blossom\";\r\nimport t from \"tcomb\";\r\nimport types from \"./types\";\r\n\r\nconst priority = (value) => (condition) => condition ? value : 0;\r\nconst divisiblePriority = (value) => (divider) => value / divider;\r\n\r\n// TODO: These probably need to be tweaked a lot.\r\n\r\n// The weight given to avoid players meeting twice. This same weight is given to\r\n// avoid matching players on each other's \"avoid\" list.\r\n// This is the highest priority. (USCF § 27A1)\r\nconst avoidMeetingTwice = priority(20);\r\n\r\n// The weight given to match players with equal scores. This gets divided\r\n// against the difference between each players' scores, plus one. For example,\r\n// players with scores `1` and `3` would have this priority divided by `3`.\r\n// Players with scores `0` and `3` would have this priority divided by `4`.\r\n// Players with equal scores would divide it by `1`, leaving it unchanged.\r\n// (USCF § 27A2)\r\nconst sameScores = divisiblePriority(16);\r\n\r\n// The weight given to match players in lower versus upper halves. This is only\r\n// applied to players being matched within the same score group. (USCF § 27A3)\r\nconst differentHalf = priority(2);\r\n\r\n// The weight given to match players with opposite due colors.\r\n// (USCF § 27A4 and § 27A5)\r\nconst differentDueColor = priority(1);\r\n\r\nconst maxPriority = pipe(\r\n    add(differentHalf(true)),\r\n    add(differentDueColor(true)),\r\n    add(sameScores(1)),\r\n    add(avoidMeetingTwice(true))\r\n)(0);\r\nexport {maxPriority};\r\n\r\n/**\r\n * The pairing code is broken up into several functions which take each other's\r\n * input to build the data necessary to pair players appropriately.\r\n * Using a function like Ramda's `pipe` to put them together, the final product\r\n * will look something like this (arguments removed for brevity):\r\n * ```js\r\n * const pairs = pipe(\r\n *     rounds2Matches,\r\n *     matches2ScoreData,\r\n *     createPairingData,\r\n *     sortDataForPairing,\r\n *     setUpperHalves,\r\n *     setByePlayer,\r\n *     pairPlayers // <-- the function that actually pairs them!\r\n * )(roundList);\r\n * ```\r\n * (This may be outdated as the actual functions aren't quite stable yet.)\r\n */\r\n\r\n// Given two `PairingData` objects, this assigns a number for how much they\r\n// should be matched. The number gets fed to the `blossom` algorithm.\r\nexport function calcPairIdeal(player1, player2) {\r\n    if (player1.id === player2.id) {\r\n        return 0;\r\n    }\r\n    const metBefore = player1.opponents.includes(player2.id);\r\n    const mustAvoid = player1.avoidIds.includes(player2.id);\r\n    const p1LastColor = last(player1.colors);\r\n    const p2LastColor = last(player2.colors);\r\n    return pipe(\r\n        add(differentHalf(\r\n            player1.isUpperHalf !== player2.isUpperHalf\r\n            && player1.score === player2.score\r\n        )),\r\n        add(differentDueColor(\r\n            (p1LastColor === undefined) || (p1LastColor !== p2LastColor)\r\n        )),\r\n        add(sameScores(Math.abs(player1.score - player2.score) + 1)),\r\n        add(avoidMeetingTwice(!metBefore && !mustAvoid))\r\n    )(0);\r\n}\r\n\r\n// Sort the data so matchups default to order by score and rating.\r\n// TODO: I'm not sure if this should be necessary to use, but it seems to break\r\n// the algorithm if it's removed. In the future, it may become obsolete.\r\nexport function sortDataForPairing(data) {\r\n    return sortWith(\r\n        [descend(prop(\"score\")), descend(prop(\"rating\"))],\r\n        data\r\n    );\r\n}\r\n\r\nconst splitInHalf = (list) => splitAt(list.length / 2, list);\r\n\r\n// for each object sent to this, it determines whether or not it's in the\r\n// \"upper half\" of it's score group.\r\n// (USCF § 29C1.)\r\nfunction upperHalfReducer(acc, playerData, ignore, src) {\r\n    const upperHalfIds = pipe(\r\n        filter((p2) => p2.score === playerData.score),\r\n        // this may be redundant if the list was already sorted.\r\n        sort(descend(prop(\"rating\"))),\r\n        splitInHalf,\r\n        view(lensIndex(0)),\r\n        map((p) => p.id)\r\n    )(src);\r\n    const isUpperHalf = upperHalfIds.includes(playerData.id);\r\n    return acc.concat([assoc(\"isUpperHalf\", isUpperHalf, playerData)]);\r\n}\r\nexport function setUpperHalves(data) {\r\n    return data.reduce(upperHalfReducer, []);\r\n}\r\n\r\n// This this returns a tuple of two objects: The modified array of player data\r\n// without the player assigned a bye, and the player assigned a bye.\r\n// If no player is assigned a bye, the second object is `null`.\r\n// After calling this, be sure to add the bye round after the non-bye'd\r\n// players are paired.\r\nexport function setByePlayer(byeQueue, dummyId, data) {\r\n    const hasNotHadBye2 = (p) => !p.opponents.includes(t.String(dummyId));\r\n    // if the list is even, just return it.\r\n    if (data.length % 2 === 0) {\r\n        return [data, null];\r\n    }\r\n    const playersWithoutByes = data.filter(hasNotHadBye2).map((p) => p.id);\r\n    const nextByeSignup = t.list(t.String)(byeQueue).filter(\r\n        (id) => playersWithoutByes.includes(id)\r\n    )[0];\r\n    const indexOfDueBye = (nextByeSignup)\r\n        // Assign the bye to the next person who signed up.\r\n        ? findLastIndex((p) => p.id === nextByeSignup, data)\r\n        // Assign a bye to the lowest-rated player in the lowest score group.\r\n        // Because the list is sorted, the last player is the lowest.\r\n        // (USCF § 29L2.)\r\n        : findLastIndex(hasNotHadBye2, data);\r\n    // In the impossible situation that *everyone* has played a bye round\r\n    // previously, then just pick the last player.\r\n    const index = (indexOfDueBye === -1)\r\n        ? data.length - 1\r\n        : indexOfDueBye;\r\n    const byeData = data[index];\r\n    const dataWithoutBye = data.filter((ignore, i) => i !== index);\r\n    return [dataWithoutBye, byeData];\r\n}\r\n\r\nconst netScoreDescend = (pair1, pair2) => (\r\n    sum(pluck(\"score\", pair2)) - sum(pluck(\"score\", pair1))\r\n);\r\nconst netRatingDescend = (pair1, pair2) => (\r\n    sum(pluck(\"rating\", pair2)) - sum(pluck(\"rating\", pair1))\r\n);\r\n\r\nconst PDataList = t.list(types.PairingData);\r\n\r\n// Create pairings according to the rules specified in USCF § 27, § 28,\r\n//  and § 29. This is a work in progress and does not account for all of the\r\n// rules yet.\r\nexport function pairPlayers(pairingData) {\r\n    // Because `blossom` has to use numbers that correspond to array indices,\r\n    // we'll use `playerIdArray` as our source for that.\r\n    const playerIdArray = PDataList(pairingData).map((p) => p.id);\r\n    // Turn the data into blossom-compatible input.\r\n    function pairIdealReducer(accArr, player1, index, srcArr) {\r\n        // slice out players who have already computed, plus the current one\r\n        const playerMatches = srcArr.slice(index + 1).map(\r\n            (player2) => [\r\n                playerIdArray.indexOf(player1.id),\r\n                playerIdArray.indexOf(player2.id),\r\n                calcPairIdeal(player1, player2)\r\n            ]\r\n        );\r\n        return accArr.concat(playerMatches);\r\n    }\r\n    const potentialMatches = pairingData.reduce(pairIdealReducer, []);\r\n    // Feed all of the potential matches to Edmonds-blossom and let the\r\n    // algorithm work its magic. This returns an array where each index is the\r\n    // ID of one player and each value is the ID of the matched player.\r\n    const blossomResults = blossom(potentialMatches);\r\n    // Translate those IDs into actual pairs of player Ids.\r\n    const reducedResults = blossomResults.reduce(\r\n        function (acc, p1Index, p2Index) {\r\n            // Filter out unmatched players. Blossom will automatically include\r\n            // their missing IDs in its results.\r\n            if (p1Index !== -1) {\r\n                // Translate the indices into ID strings\r\n                const p1Id = playerIdArray[p1Index];\r\n                const p2Id = playerIdArray[p2Index];\r\n                const p1 = pairingData.filter((p) => p.id === p1Id)[0];\r\n                const p2 = pairingData.filter((p) => p.id === p2Id)[0];\r\n\r\n                // TODO: in the future, we may store the ideal for debugging\r\n                // Because it rarely serves a purpose, we're not including it\r\n                // for simplification.\r\n                // const ideal = potentialMatches.filter(\r\n                //     (pair) => pair[0] === p1Id && pair[1] === p2Id\r\n                // )[0][2];\r\n\r\n                // Blossom returns a lot of redundant matches. Check that this\r\n                // matchup wasn't already added.\r\n                const matched = acc.map((pair) => pair[0]);\r\n                if (!matched.includes(p1) && !matched.includes(p2)) {\r\n                    return acc.concat([[p1, p2]]);\r\n                }\r\n            }\r\n            return acc;\r\n        },\r\n        []\r\n    );\r\n    // Sort by net score and rating for board placement.\r\n    const sortedResults = sortWith(\r\n        [netScoreDescend, netRatingDescend],\r\n        reducedResults\r\n    );\r\n    const matches = sortedResults.map(\r\n        function (pair) {\r\n            const [player1, player2] = pair;\r\n            // This is a quick-and-dirty heuristic to keep color balances\r\n            // mostly equal. Ideally, it would also examine due colors and how\r\n            // many times a player played each color last.\r\n            return (sum(player1.colorScores) < sum(player2.colorScores))\r\n                // player 1 has played as white more than player 2\r\n                ? [player2.id, player1.id]\r\n                // player 1 has played as black more than player 2\r\n                // (or they're equal).\r\n                : [player1.id, player2.id];\r\n        }\r\n    );\r\n    return matches;\r\n}\r\n","import {BLACK, WHITE} from \"../data-types\";\r\nimport EloRank from \"elo-rank\";\r\nimport t from \"tcomb\";\r\n\r\nfunction getkFactor(matchCount) {\r\n    const ne = t.Number(matchCount) || 1;\r\n    return (800 / ne);\r\n}\r\n\r\nfunction calcNewRatings(origRatings, matchCounts, result) {\r\n    t.tuple([t.Number, t.Number])(origRatings);\r\n    t.tuple([t.Number, t.Number])(matchCounts);\r\n    t.tuple([t.Number, t.Number])(result);\r\n    const whiteElo = new EloRank(getkFactor(matchCounts[WHITE]));\r\n    const blackElo = new EloRank(getkFactor(matchCounts[BLACK]));\r\n    const FLOOR = 100;\r\n    const scoreExpected = [\r\n        whiteElo.getExpected(origRatings[WHITE], origRatings[BLACK]),\r\n        blackElo.getExpected(origRatings[BLACK], origRatings[WHITE])\r\n    ];\r\n    const newRating = [\r\n        whiteElo.updateRating(\r\n            scoreExpected[WHITE],\r\n            result[WHITE],\r\n            origRatings[WHITE]\r\n        ),\r\n        blackElo.updateRating(\r\n            scoreExpected[BLACK],\r\n            result[BLACK],\r\n            origRatings[BLACK]\r\n        )\r\n    ];\r\n    return newRating.map((rating) => (rating < FLOOR) ? FLOOR : rating);\r\n}\r\n\r\nexport default Object.freeze({\r\n    calcNewRatings,\r\n    getkFactor\r\n});\r\n","import React from \"react\";\r\n\r\nconst SvgComponent = (props) => (\r\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 1024 1024\" {...props}>\r\n        <defs>\r\n            <clipPath clipPathUnits=\"userSpaceOnUse\" id=\"prefix__d\">\r\n                <circle\r\n                    r={480}\r\n                    cy={544}\r\n                    cx={512}\r\n                    fill=\"#363959\"\r\n                    fillRule=\"evenodd\"\r\n                    strokeWidth={16.307}\r\n                    strokeLinejoin=\"round\"\r\n                    paintOrder=\"fill markers stroke\"\r\n                />\r\n            </clipPath>\r\n            <clipPath clipPathUnits=\"userSpaceOnUse\" id=\"prefix__c\">\r\n                <circle\r\n                    r={480}\r\n                    cy={544}\r\n                    cx={512}\r\n                    fill=\"#363959\"\r\n                    fillRule=\"evenodd\"\r\n                    strokeWidth={16.307}\r\n                    strokeLinejoin=\"round\"\r\n                    paintOrder=\"fill markers stroke\"\r\n                />\r\n            </clipPath>\r\n            <clipPath clipPathUnits=\"userSpaceOnUse\" id=\"prefix__b\">\r\n                <circle\r\n                    r={480}\r\n                    cy={544}\r\n                    cx={512}\r\n                    fill=\"#363959\"\r\n                    fillRule=\"evenodd\"\r\n                    strokeWidth={16.307}\r\n                    strokeLinejoin=\"round\"\r\n                    paintOrder=\"fill markers stroke\"\r\n                />\r\n            </clipPath>\r\n            <clipPath clipPathUnits=\"userSpaceOnUse\" id=\"prefix__a\">\r\n                <circle\r\n                    cx={512}\r\n                    cy={544}\r\n                    r={480}\r\n                    fill=\"#363959\"\r\n                    fillRule=\"evenodd\"\r\n                    strokeWidth={16.307}\r\n                    strokeLinejoin=\"round\"\r\n                    paintOrder=\"fill markers stroke\"\r\n                />\r\n            </clipPath>\r\n        </defs>\r\n        <path\r\n            clipPath=\"url(#prefix__a)\"\r\n            fill=\"#363959\"\r\n            fillRule=\"evenodd\"\r\n            paintOrder=\"fill markers stroke\"\r\n            d=\"M0 0h1024v1024H0z\"\r\n        />\r\n        <path\r\n            d=\"M448 256L225.758 942.867h333.26l-31.637 97.37h192l8.012-24.66h.033l158.345-487.34h-4.242l69.768-215.63-484.762-29.32z\"\r\n            clipPath=\"url(#prefix__b)\"\r\n            fill=\"#0d7758\"\r\n            paintOrder=\"fill markers stroke\"\r\n        />\r\n        <g\r\n            clipRule=\"evenodd\"\r\n            fillRule=\"evenodd\"\r\n            imageRendering=\"optimizeQuality\"\r\n            shapeRendering=\"geometricPrecision\"\r\n            textRendering=\"geometricPrecision\"\r\n        >\r\n            <path\r\n                d=\"M709.574 146.473H688.49V107.54H663.73c-6.685 0-10.039-3.258-10.039-9.847v-.3c0-6.492 3.354-9.738 10.039-9.738h24.749V62.403c0-7.008 3.557-10.446 10.661-10.446 6.888 0 10.434 3.438 10.434 10.446v25.252h25.563c6.493 0 9.74 3.234 9.74 9.739v.3c0 6.588-3.247 9.834-9.74 9.834l-25.36.312zM532.39 454.6l-9.74-55.584c-.203 0-.502-.395-.91-1.21-1.018-1.425-3.857-3.246-8.517-5.474-4.564-2.336-10.038-6.193-16.124-11.764a503.005 503.005 0 0 1-20.388-17.849 101.93 101.93 0 0 1-13.177-14.818c-12.087-16.615-18.891-36.716-20.21-60.339-2.036-22.724 7.2-45.449 27.589-68.065 20.592-22.521 48.48-33.159 83.47-31.745 13.082.814 28.511 3.953 46.049 9.535 5.786 2.336 11.667 4.672 17.753 6.9l17.945 6.996c3.15 1.63 5.99 3.246 8.325 4.768a52.469 52.469 0 0 1-1.521-12.47c0-15.418 5.474-28.607 16.531-39.556 10.949-10.853 24.234-16.435 39.651-16.639 15.417 0 28.606 5.582 39.555 16.531C749.524 174.78 755 187.956 755 203.17c0 3.15-.407 7.307-1.21 12.482 2.731-1.725 5.474-3.246 8.014-4.468 9.128-3.953 21.083-8.625 35.997-13.896 17.047-5.774 32.356-9.02 46.048-9.835 34.991-1.629 62.783 9.02 83.172 31.745 19.98 22.617 29.313 45.341 27.887 68.054-1.521 23.635-8.421 43.724-20.484 60.35-3.953 5.38-8.422 10.339-13.393 15.01a485.156 485.156 0 0 1-19.885 17.646c-6.481 5.582-12.063 9.535-16.627 11.763-4.553 2.229-7.188 4.157-8.014 5.475a3.522 3.522 0 0 1-.6.922c-.203.204-.31.408-.31.6l-9.536 55.894 19.682 73.325c-9.943 8.924-32.152 16.231-66.533 22.005-34.488 5.786-74.342 8.625-119.48 8.625-45.94 0-86.418-3.042-121.205-9.032-34.884-6.085-56.793-13.692-65.718-22.712z\"\r\n                fill=\"#14b184\"\r\n            />\r\n            <path\r\n                d=\"M699.14 250.128a27.492 27.492 0 0 0-1.533-5.067 67.155 67.155 0 0 0-2.935-8.625c-.611-1.318-1.426-3.043-2.336-5.163a108.148 108.148 0 0 1-3.043-6.708c-.599-1.414-1.318-3.235-2.228-5.463-.815-2.336-1.63-4.468-2.24-6.397a20.784 20.784 0 0 1-.803-5.678c0-10.446 4.972-15.716 15.106-15.716 10.542 0 15.729 5.163 15.729 15.417 0 2.635-.408 4.456-1.126 5.678-2.84 7.499-4.253 11.56-4.457 12.17a425.588 425.588 0 0 0-5.678 11.56c-1.425 3.235-2.336 6.086-2.635 8.626-.611 1.21-1.018 2.228-1.222 3.138a25.37 25.37 0 0 1-.599 2.228zM665.862 352.67c-24.75.407-47.366 1.63-67.958 3.857-20.484 2.132-36.297 5.271-47.665 9.224a227.28 227.28 0 0 0-20.592-22.21 395.396 395.396 0 0 1-20.688-20.89c-9.943-10.147-14.807-21.204-14.807-33.267 0-14.914 2.432-25.755 7.404-32.655 5.27-8.026 13.596-13.896 24.653-17.753a101.655 101.655 0 0 1 33.565-5.786c14.303 0 27.888 3.15 40.97 9.535 12.889 6.708 21.406 12.075 25.563 16.028 13.488 13.692 24.042 28.51 31.54 44.527 2.54 5.99 4.469 14.303 5.787 24.845 1.317 10.661 2.036 18.771 2.228 24.557zm33.266-51.726c1.426-5.582 2.54-9.428 3.546-11.56 2.036-7.703 4.264-14.303 6.9-19.682 1.114-3.342 2.839-7.187 5.175-11.656 2.228-4.468 4.672-9.643 7.307-15.32 1.521-3.355 3.235-7.5 4.971-12.375 1.821-4.864 3.642-9.632 5.367-14.4 1.63-3.952 2.432-8.217 2.432-12.781 0-9.74-3.546-17.945-10.446-24.749-6.888-6.888-15.31-10.338-25.252-10.338-23.527 0-35.398 11.86-35.398 35.398 0 4.552.814 8.817 2.431 12.77 4.373 12.89 7.715 21.802 10.05 26.786 2.636 5.678 4.972 10.853 7.188 15.309 2.145 4.468 4.073 8.314 5.583 11.668 2.635 6.588 4.767 13.08 6.588 19.67.42 1.114 1.534 4.97 3.558 11.26zm-10.65 74.546c0-7.906-.203-18.867-.598-32.763-.408-13.991-1.93-25.66-4.469-34.979-8.11-26.474-20.388-47.88-36.92-64.1-8.517-8.326-21.502-16.136-39.147-23.24-20.185-7.906-39.352-11.86-57.405-11.86-31.241 0-54.469 11.153-69.479 33.578-8.517 11.86-12.781 26.774-12.781 44.515 0 19.478 4.767 35.398 14.207 47.88 4.971 7.092 14.495 15.92 28.594 26.474 14.004 10.446 25.97 20.173 35.602 29.11 17.25-3.762 36.716-7.008 58.423-9.847 21.706-2.743 49.701-4.36 83.974-4.768zM853.6 516.066l-8.828-35.1c-38.633-8.816-87.22-13.284-145.643-13.284-57.811 0-106.183 4.468-145.032 13.297l-9.427 35.386c37.614-11.452 89.149-17.238 154.77-17.238 31.434 0 60.747 1.63 87.628 4.768 26.977 3.138 49.187 7.2 66.532 12.17zm-7.702-88.85c-36.417-10.038-85.004-15.105-145.547-15.105-61.058 0-110.149 5.163-147.368 15.417l4.456 30.02c37.435-9.74 84.993-14.615 142.912-14.615 57.608 0 104.566 4.768 140.779 14.303zm-136.12-51.414c34.081.599 62.077 2.324 83.879 5.067 21.706 2.743 41.388 6.085 58.817 9.835 10.865-10.746 22.928-20.892 36.213-30.631s22.617-18.053 27.996-24.953c9.44-12.877 14.207-28.905 14.207-48.168 0-17.55-4.265-32.356-12.782-44.227-15.213-22.4-38.549-33.565-69.778-33.565-18.257 0-37.232 3.953-57.105 11.859-18.053 7.104-31.026 14.818-39.256 23.12-16.83 16.34-29.11 37.734-36.812 64.208-2.947 9.128-4.564 20.688-4.875 34.788-.312 14.099-.504 24.952-.504 32.667zm21.707-23.12c0-5.786.718-13.896 1.916-24.557 1.33-10.542 3.355-18.868 6.098-24.845 7.403-16.028 17.849-30.835 31.54-44.527 3.954-3.953 12.483-9.332 25.564-16.028a91.7 91.7 0 0 1 41.28-9.535c11.141 0 22.102 1.928 33.159 5.786 10.961 3.857 19.275 9.739 24.749 17.753 4.971 6.696 7.51 17.537 7.51 32.655 0 11.86-4.875 22.916-14.614 33.266a483.36 483.36 0 0 1-20.484 19.778c-7.307 6.588-14.399 14.399-21.083 23.323-11.476-3.953-27.493-7.092-47.989-9.224-20.484-2.228-43.005-3.45-67.646-3.857z\"\r\n                fill=\"#f9f9fa\"\r\n            />\r\n        </g>\r\n        <path\r\n            d=\"M64 384l-222.242 686.867h525.291l134.722-414.63h-4.242l69.768-215.63-484.762-29.32z\"\r\n            clipPath=\"url(#prefix__c)\"\r\n            fill=\"#c00043\"\r\n            paintOrder=\"fill markers stroke\"\r\n        />\r\n        <g\r\n            clipRule=\"evenodd\"\r\n            fillRule=\"evenodd\"\r\n            imageRendering=\"optimizeQuality\"\r\n            shapeRendering=\"geometricPrecision\"\r\n            textRendering=\"geometricPrecision\"\r\n        >\r\n            <path\r\n                d=\"M323.837 270.64h-21.295v-39.324h-25.01c-6.751 0-10.139-3.291-10.139-9.946v-.302c0-6.558 3.388-9.837 10.14-9.837h24.997v-25.506c0-7.078 3.593-10.55 10.768-10.55 6.958 0 10.539 3.472 10.539 10.55v25.506h25.82c6.558 0 9.837 3.267 9.837 9.837v.302c0 6.655-3.279 9.934-9.837 9.934l-25.614.314zM144.874 581.86l-9.837-56.141c-.205 0-.508-.4-.92-1.222-1.028-1.44-3.895-3.28-8.602-5.53-4.61-2.36-10.14-6.255-16.286-11.881a508.056 508.056 0 0 1-20.593-18.029 102.954 102.954 0 0 1-13.31-14.967c-12.208-16.782-19.08-37.084-20.411-60.945-2.057-22.952 7.272-45.905 27.865-68.749 20.799-22.747 48.966-33.49 84.309-32.063 13.212.823 28.796 3.993 46.51 9.631 5.844 2.36 11.785 4.719 17.931 6.97L249.655 336c3.182 1.646 6.05 3.28 8.41 4.816a52.996 52.996 0 0 1-1.537-12.596c0-15.572 5.53-28.893 16.697-39.952 11.059-10.962 24.477-16.6 40.05-16.806 15.571 0 28.893 5.638 39.951 16.697 10.963 11.071 16.492 24.38 16.492 39.747 0 3.182-.411 7.38-1.222 12.607 2.759-1.742 5.53-3.278 8.095-4.513 9.22-3.992 21.295-8.711 36.358-14.035 17.218-5.832 32.68-9.11 46.51-9.934 35.343-1.645 63.414 9.111 84.007 32.064 20.182 22.844 29.607 45.796 28.168 68.737-1.537 23.872-8.506 44.163-20.69 60.957-3.993 5.432-8.506 10.442-13.528 15.16a490.027 490.027 0 0 1-20.085 17.823c-6.546 5.638-12.184 9.631-16.794 11.882-4.598 2.25-7.26 4.198-8.094 5.529a3.557 3.557 0 0 1-.605.932c-.206.205-.315.411-.315.605l-9.63 56.456 19.878 74.06c-10.042 9.014-32.474 16.395-67.2 22.227-34.834 5.844-75.089 8.712-120.68 8.712-46.401 0-87.285-3.074-122.422-9.123-35.234-6.147-57.363-13.83-66.377-22.94z\"\r\n                fill=\"#ff0059\"\r\n            />\r\n            <path\r\n                d=\"M313.298 375.336a27.768 27.768 0 0 0-1.548-5.118 67.83 67.83 0 0 0-2.965-8.712c-.617-1.33-1.44-3.073-2.36-5.215a109.234 109.234 0 0 1-3.072-6.776c-.605-1.427-1.331-3.266-2.25-5.517-.824-2.36-1.646-4.513-2.263-6.461a20.993 20.993 0 0 1-.811-5.735c0-10.55 5.021-15.875 15.257-15.875 10.648 0 15.887 5.215 15.887 15.572 0 2.662-.412 4.501-1.138 5.736-2.867 7.574-4.295 11.675-4.5 12.293a429.86 429.86 0 0 0-5.736 11.676c-1.44 3.266-2.36 6.146-2.662 8.711-.617 1.222-1.028 2.25-1.234 3.17-.205.92-.411 1.646-.605 2.25zm-33.612 103.57c-24.997.412-47.841 1.646-68.64 3.897-20.69 2.154-36.661 5.324-48.144 9.316a229.563 229.563 0 0 0-20.799-22.432 399.366 399.366 0 0 1-20.895-21.101c-10.043-10.249-14.955-21.416-14.955-33.6 0-15.064 2.456-26.014 7.477-32.984 5.324-8.106 13.733-14.035 24.9-17.93a102.676 102.676 0 0 1 33.903-5.845c14.447 0 28.168 3.182 41.38 9.631 13.02 6.776 21.622 12.196 25.82 16.19 13.625 13.829 24.284 28.796 31.859 44.973 2.565 6.05 4.513 14.447 5.844 25.094 1.33 10.769 2.056 18.96 2.25 24.804zm33.6-52.244c1.44-5.639 2.565-9.523 3.582-11.676 2.057-7.78 4.307-14.447 6.969-19.88 1.125-3.376 2.868-7.26 5.227-11.773 2.25-4.513 4.719-9.74 7.38-15.475 1.537-3.388 3.267-7.574 5.022-12.499 1.839-4.912 3.678-9.727 5.42-14.543 1.646-3.993 2.457-8.3 2.457-12.91 0-9.837-3.582-18.125-10.551-24.998-6.957-6.957-15.463-10.441-25.506-10.441-23.763 0-35.754 11.978-35.754 35.753 0 4.598.823 8.906 2.457 12.898 4.416 13.02 7.792 22.021 10.151 27.055 2.662 5.735 5.021 10.962 7.26 15.463 2.165 4.513 4.113 8.397 5.638 11.785 2.662 6.654 4.816 13.212 6.655 19.867.423 1.125 1.548 5.021 3.593 11.374zm-10.756 75.294c0-7.985-.206-19.056-.605-33.092-.412-14.132-1.948-25.917-4.513-35.33-8.192-26.74-20.593-48.361-37.29-64.744-8.603-8.41-21.72-16.298-39.542-23.473-20.387-7.986-39.746-11.978-57.98-11.978-31.556 0-55.016 11.264-70.177 33.914-8.603 11.979-12.91 27.043-12.91 44.962 0 19.673 4.815 35.754 14.35 48.361 5.021 7.163 14.64 16.08 28.881 26.74 14.144 10.55 26.232 20.375 35.96 29.402 17.423-3.8 37.085-7.079 59.009-9.946 21.924-2.77 50.2-4.404 84.817-4.816zm166.779 141.987l-8.918-35.451c-39.02-8.905-88.096-13.418-147.105-13.418-58.392 0-107.25 4.513-146.488 13.43l-9.522 35.742c37.992-11.567 90.044-17.411 156.325-17.411 31.749 0 61.356 1.645 88.507 4.815 27.248 3.17 49.68 7.272 67.2 12.293zm-7.78-89.741c-36.783-10.14-85.858-15.258-147.009-15.258-61.67 0-111.254 5.215-148.847 15.572l4.501 30.322c37.81-9.837 85.846-14.762 144.346-14.762 58.187 0 105.616 4.816 142.193 14.447zM324.043 502.27c34.423.605 62.699 2.347 84.72 5.118 21.924 2.77 41.804 6.147 59.408 9.934 10.974-10.854 23.159-21.102 36.577-30.939 13.418-9.836 22.844-18.234 28.276-25.203 9.535-13.007 14.35-29.196 14.35-48.652 0-17.725-4.307-32.68-12.91-44.67-15.366-22.627-38.936-33.903-70.48-33.903-18.439 0-37.604 3.992-57.677 11.978-18.234 7.175-31.338 14.967-39.65 23.352-17 16.504-29.402 38.113-37.182 64.853-2.976 9.22-4.61 20.896-4.924 35.137-.315 14.24-.508 25.203-.508 32.995zm21.924-23.352c0-5.844.726-14.035 1.936-24.804 1.343-10.647 3.388-19.056 6.158-25.094 7.478-16.19 18.029-31.144 31.858-44.974 3.993-3.993 12.608-9.425 25.82-16.189a92.621 92.621 0 0 1 41.695-9.63c11.253 0 22.324 1.947 33.491 5.843 11.071 3.896 19.468 9.837 24.998 17.931 5.021 6.764 7.586 17.714 7.586 32.984 0 11.978-4.924 23.146-14.761 33.6a488.213 488.213 0 0 1-20.69 19.976c-7.38 6.655-14.544 14.543-21.295 23.557-11.592-3.992-27.768-7.162-48.47-9.316-20.69-2.25-43.438-3.485-68.326-3.896z\"\r\n                fill=\"#f9f9fa\"\r\n            />\r\n        </g>\r\n        <path\r\n            d=\"M256 640L33.758 1326.867h525.291l134.722-414.63h-4.242l69.768-215.63-484.762-29.32z\"\r\n            clipPath=\"url(#prefix__d)\"\r\n            fill=\"#07a2ff\"\r\n            paintOrder=\"fill markers stroke\"\r\n        />\r\n        <g\r\n            clipRule=\"evenodd\"\r\n            fillRule=\"evenodd\"\r\n            imageRendering=\"optimizeQuality\"\r\n            shapeRendering=\"geometricPrecision\"\r\n            textRendering=\"geometricPrecision\"\r\n        >\r\n            <path\r\n                d=\"M515.837 526.64h-21.295v-39.324h-25.01c-6.751 0-10.139-3.291-10.139-9.946v-.302c0-6.558 3.388-9.837 10.14-9.837h24.997v-25.506c0-7.078 3.593-10.55 10.768-10.55 6.958 0 10.539 3.472 10.539 10.55v25.506h25.82c6.558 0 9.837 3.267 9.837 9.837v.302c0 6.655-3.279 9.934-9.837 9.934l-25.614.314zM336.874 837.86l-9.837-56.141c-.205 0-.508-.4-.92-1.222-1.028-1.44-3.895-3.28-8.602-5.53-4.61-2.36-10.14-6.255-16.286-11.881a508.056 508.056 0 0 1-20.593-18.029 102.954 102.954 0 0 1-13.31-14.967c-12.208-16.782-19.08-37.084-20.411-60.945-2.057-22.952 7.272-45.905 27.865-68.749 20.799-22.747 48.966-33.49 84.309-32.063 13.212.823 28.796 3.993 46.51 9.631 5.844 2.36 11.785 4.719 17.931 6.97L441.655 592c3.182 1.646 6.05 3.28 8.41 4.816a52.996 52.996 0 0 1-1.537-12.596c0-15.572 5.53-28.893 16.697-39.952 11.059-10.962 24.477-16.6 40.05-16.806 15.571 0 28.893 5.638 39.952 16.697 10.962 11.071 16.491 24.38 16.491 39.747 0 3.182-.411 7.38-1.222 12.607 2.759-1.742 5.53-3.278 8.095-4.513 9.22-3.992 21.295-8.711 36.358-14.035 17.218-5.832 32.68-9.11 46.51-9.934 35.343-1.645 63.414 9.111 84.007 32.064 20.182 22.844 29.607 45.796 28.168 68.737-1.537 23.872-8.506 44.163-20.69 60.957-3.993 5.432-8.506 10.442-13.528 15.16a490.027 490.027 0 0 1-20.085 17.823c-6.546 5.638-12.184 9.631-16.794 11.882-4.598 2.25-7.26 4.198-8.094 5.529a3.557 3.557 0 0 1-.605.932c-.206.205-.315.411-.315.605l-9.63 56.456 19.878 74.06c-10.042 9.014-32.474 16.395-67.2 22.227-34.834 5.844-75.089 8.712-120.68 8.712-46.401 0-87.285-3.074-122.422-9.123-35.233-6.147-57.363-13.83-66.377-22.94z\"\r\n                fill=\"#47baff\"\r\n            />\r\n            <path\r\n                d=\"M505.298 631.336a27.768 27.768 0 0 0-1.548-5.118 67.83 67.83 0 0 0-2.965-8.712c-.617-1.33-1.44-3.073-2.36-5.215a109.234 109.234 0 0 1-3.072-6.776c-.605-1.427-1.331-3.266-2.25-5.517-.824-2.36-1.646-4.513-2.263-6.461a20.993 20.993 0 0 1-.811-5.735c0-10.55 5.021-15.875 15.257-15.875 10.648 0 15.887 5.215 15.887 15.572 0 2.662-.412 4.501-1.138 5.736-2.867 7.574-4.295 11.675-4.5 12.293a429.86 429.86 0 0 0-5.736 11.676c-1.44 3.266-2.359 6.146-2.662 8.711-.617 1.222-1.028 2.25-1.234 3.17-.205.92-.411 1.646-.605 2.25zm-33.612 103.57c-24.997.412-47.841 1.646-68.64 3.897-20.69 2.154-36.661 5.324-48.144 9.316a229.563 229.563 0 0 0-20.799-22.432 399.366 399.366 0 0 1-20.895-21.101c-10.043-10.249-14.955-21.416-14.955-33.6 0-15.064 2.456-26.014 7.477-32.984 5.324-8.106 13.733-14.035 24.9-17.93a102.676 102.676 0 0 1 33.903-5.845c14.447 0 28.168 3.182 41.38 9.631 13.02 6.776 21.622 12.196 25.82 16.19 13.625 13.829 24.284 28.796 31.859 44.973 2.565 6.05 4.513 14.447 5.844 25.094 1.33 10.769 2.057 18.96 2.25 24.804zm33.6-52.244c1.44-5.639 2.565-9.523 3.582-11.676 2.057-7.78 4.307-14.447 6.969-19.88 1.125-3.376 2.868-7.26 5.227-11.773 2.25-4.513 4.719-9.74 7.38-15.475 1.537-3.388 3.267-7.574 5.022-12.499 1.839-4.912 3.678-9.727 5.42-14.543 1.646-3.993 2.457-8.3 2.457-12.91 0-9.837-3.582-18.125-10.551-24.998-6.957-6.957-15.463-10.441-25.506-10.441-23.763 0-35.754 11.978-35.754 35.753 0 4.598.823 8.906 2.457 12.898 4.416 13.02 7.792 22.021 10.151 27.055 2.662 5.735 5.021 10.962 7.26 15.463 2.165 4.513 4.113 8.397 5.638 11.785 2.662 6.654 4.816 13.212 6.655 19.867.423 1.125 1.548 5.021 3.593 11.374zm-10.756 75.294c0-7.985-.206-19.056-.605-33.092-.412-14.132-1.948-25.917-4.513-35.33-8.192-26.74-20.593-48.361-37.29-64.744-8.603-8.41-21.72-16.298-39.542-23.473-20.387-7.986-39.746-11.978-57.98-11.978-31.556 0-55.016 11.264-70.177 33.914-8.603 11.979-12.91 27.043-12.91 44.962 0 19.673 4.816 35.754 14.35 48.361 5.021 7.163 14.64 16.08 28.881 26.74 14.144 10.55 26.232 20.375 35.96 29.402 17.423-3.8 37.085-7.079 59.009-9.946 21.924-2.77 50.2-4.404 84.817-4.816zm166.779 141.987l-8.918-35.451c-39.02-8.905-88.096-13.418-147.105-13.418-58.392 0-107.25 4.513-146.488 13.43l-9.522 35.742c37.992-11.567 90.044-17.411 156.325-17.411 31.749 0 61.356 1.645 88.507 4.815 27.248 3.17 49.68 7.272 67.2 12.293zm-7.78-89.741c-36.783-10.14-85.858-15.258-147.009-15.258-61.67 0-111.254 5.215-148.847 15.572l4.501 30.322c37.81-9.837 85.846-14.762 144.346-14.762 58.187 0 105.616 4.816 142.193 14.447zM516.043 758.27c34.423.605 62.699 2.347 84.72 5.118 21.924 2.77 41.804 6.147 59.408 9.934 10.974-10.854 23.159-21.102 36.577-30.939 13.418-9.836 22.844-18.234 28.276-25.203 9.535-13.007 14.35-29.196 14.35-48.652 0-17.725-4.307-32.68-12.91-44.67-15.366-22.627-38.936-33.903-70.48-33.903-18.439 0-37.604 3.992-57.677 11.978-18.234 7.175-31.338 14.967-39.65 23.352-17 16.504-29.402 38.113-37.182 64.853-2.976 9.22-4.61 20.896-4.924 35.137-.315 14.24-.508 25.203-.508 32.995zm21.924-23.352c0-5.844.726-14.035 1.936-24.804 1.343-10.647 3.388-19.056 6.158-25.094 7.478-16.19 18.029-31.144 31.858-44.974 3.993-3.993 12.608-9.425 25.82-16.189a92.621 92.621 0 0 1 41.695-9.63c11.253 0 22.324 1.947 33.491 5.843 11.071 3.896 19.468 9.837 24.998 17.931 5.021 6.764 7.586 17.714 7.586 32.984 0 11.978-4.924 23.146-14.761 33.6a488.213 488.213 0 0 1-20.69 19.976c-7.38 6.655-14.544 14.543-21.295 23.557-11.592-3.992-27.768-7.162-48.47-9.316-20.69-2.25-43.438-3.485-68.326-3.896z\"\r\n                fill=\"#f9f9fa\"\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default SvgComponent;\r\n\r\n","import Activity from \"react-feather/dist/icons/activity\";\r\nimport Alert from \"react-feather/dist/icons/alert-triangle\";\r\nimport ArrowDown from \"react-feather/dist/icons/arrow-down\";\r\nimport ArrowLeft from \"react-feather/dist/icons/arrow-left\";\r\nimport ArrowUp from \"react-feather/dist/icons/arrow-up\";\r\nimport Award from \"react-feather/dist/icons/award\";\r\nimport Check from \"react-feather/dist/icons/check\";\r\nimport CheckCircle from \"react-feather/dist/icons/check-circle\";\r\nimport ChevronDown from \"react-feather/dist/icons/chevron-down\";\r\nimport ChevronLeft from \"react-feather/dist/icons/chevron-left\";\r\nimport ChevronRight from \"react-feather/dist/icons/chevron-right\";\r\nimport ChevronUp from \"react-feather/dist/icons/chevron-up\";\r\nimport Circle from \"react-feather/dist/icons/circle\";\r\nimport Download from \"react-feather/dist/icons/download\";\r\nimport Edit from \"react-feather/dist/icons/edit\";\r\nimport Help from \"react-feather/dist/icons/help-circle\";\r\nimport Info from \"react-feather/dist/icons/info\";\r\nimport Javascript from \"simple-icons/icons/javascript\";\r\nimport Layers from \"react-feather/dist/icons/layers\";\r\nimport List from \"react-feather/dist/icons/list\";\r\nimport Logo from \"./logo\";\r\nimport Plus from \"react-feather/dist/icons/plus\";\r\nimport React from \"react\";\r\nimport ReactIcon from \"simple-icons/icons/react\";\r\nimport Repeat from \"react-feather/dist/icons/repeat\";\r\nimport Settings from \"react-feather/dist/icons/settings\";\r\nimport Sidebar from \"react-feather/dist/icons/sidebar\";\r\nimport Trash from \"react-feather/dist/icons/trash-2\";\r\nimport UserMinus from \"react-feather/dist/icons/user-minus\";\r\nimport UserPlus from \"react-feather/dist/icons/user-plus\";\r\nimport Users from \"react-feather/dist/icons/users\";\r\nimport X from \"react-feather/dist/icons/x\";\r\n\r\n// This converts a specified `simple-icons` icon into a React component.\r\nconst simpleIcon = (icon) => (props) => (\r\n    <span\r\n        dangerouslySetInnerHTML={{__html: icon.svg}}\r\n        aria-label={icon.title}\r\n        role=\"img\"\r\n        style={{fill: \"#\" + icon.hex}}\r\n        {...props}\r\n    />\r\n);\r\n\r\nexport default {\r\n    Activity,\r\n    Alert,\r\n    ArrowDown,\r\n    ArrowLeft,\r\n    ArrowUp,\r\n    Award,\r\n    Check,\r\n    CheckCircle,\r\n    ChevronDown,\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    ChevronUp,\r\n    Circle,\r\n    Download,\r\n    Edit,\r\n    Help,\r\n    Info,\r\n    Javascript: simpleIcon(Javascript),\r\n    Layers,\r\n    List,\r\n    Logo,\r\n    Plus,\r\n    React: simpleIcon(ReactIcon),\r\n    Repeat,\r\n    Settings,\r\n    Sidebar,\r\n    Trash,\r\n    UserMinus,\r\n    UserPlus,\r\n    Users,\r\n    X\r\n};\r\n","import {\r\n    assoc,\r\n    dissoc,\r\n    lensProp,\r\n    mergeLeft,\r\n    over\r\n} from \"ramda\";\r\nimport {createPlayer, createTournament, types} from \"../../data-types\";\r\nimport nanoid from \"nanoid\";\r\nimport t from \"tcomb\";\r\n\r\n// eslint-disable-next-line complexity\r\nexport default function genericDbReducer(state, action) {\r\n    const nextId = nanoid();\r\n    switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n        console.warn(\"Use a more specific action instead, please.\");\r\n        return assoc(nextId, action.item, state);\r\n    case \"ADD_TOURNEY\":\r\n        t.interface({name: t.String})(action);\r\n        return assoc(\r\n            nextId,\r\n            createTournament({id: nextId, name: action.name}),\r\n            state\r\n        );\r\n    case \"ADD_PLAYER\":\r\n        t.interface({\r\n            firstName: t.String,\r\n            lastName: t.String,\r\n            rating: t.Number\r\n        })(action);\r\n        return assoc(\r\n            nextId,\r\n            createPlayer({\r\n                firstName: action.firstName,\r\n                id: nextId,\r\n                lastName: action.lastName,\r\n                rating: action.rating\r\n            }),\r\n            state\r\n        );\r\n    case \"DEL_ITEM\":\r\n        // If using the player DB, be sure to delete avoid-pairs too.\r\n        t.interface({id: t.String})(action);\r\n        return dissoc(action.id, state);\r\n    case \"SET_PLAYER\":\r\n        // This is copied from players-reducer since the profile editor uses it\r\n        // TODO: unify those\r\n        t.interface({\r\n            firstName: t.String,\r\n            id: types.Id,\r\n            lastName: t.String,\r\n            matchCount: t.Number,\r\n            rating: t.Number\r\n        })(action);\r\n        return over(\r\n            lensProp(action.id),\r\n            mergeLeft(\r\n                {\r\n                    firstName: action.firstName,\r\n                    lastName: action.lastName,\r\n                    matchCount: action.matchCount,\r\n                    rating: action.rating\r\n                }\r\n            ),\r\n            state\r\n        );\r\n    case \"LOAD_STATE\":\r\n        return action.state;\r\n    default:\r\n        throw new Error(\"Unexpected action type\");\r\n    }\r\n}\r\n","import {append, assoc, filter, lensProp, over} from \"ramda\";\r\nimport t from \"tcomb\";\r\nimport {types} from \"../../data-types\";\r\n\r\n// eslint-disable-next-line complexity\r\nexport default function optionsReducer(state, action) {\r\n    switch (action.type) {\r\n    case \"ADD_AVOID_PAIR\":\r\n        t.interface({pair: types.AvoidPair})(action);\r\n        return over(\r\n            lensProp(\"avoidPairs\"),\r\n            append(action.pair),\r\n            state\r\n        );\r\n    case \"DEL_AVOID_PAIR\":\r\n        t.interface({pair: types.AvoidPair})(action);\r\n        return over(\r\n            lensProp(\"avoidPairs\"),\r\n            filter((pair) => !(\r\n                pair.includes(action.pair[0]) && pair.includes(action.pair[1])\r\n            )),\r\n            state\r\n        );\r\n    case \"DEL_AVOID_SINGLE\":\r\n        t.interface({id: types.Id})(action);\r\n        // call this when you delete a player ID\r\n        // TODO: make the avoidPairs list smartly auto-clean itself\r\n        return over(\r\n            lensProp(\"avoidPairs\"),\r\n            filter((pair) => !pair.includes(action.id)),\r\n            state\r\n        );\r\n    case \"SET_OPTION\":\r\n        t.interface({\r\n            option: t.String,\r\n            value: t.union([\r\n                t.Number,\r\n                t.list(types.AvoidPair)\r\n            ])\r\n        })(action);\r\n        return assoc(\r\n            action.option,\r\n            action.value,\r\n            state\r\n        );\r\n    case \"LOAD_STATE\":\r\n        return action.state;\r\n    default:\r\n        throw new Error(\"Unexpected action type.\");\r\n    }\r\n}\r\n\r\n","import {\r\n    assoc,\r\n    dissoc,\r\n    lensPath,\r\n    lensProp,\r\n    mergeLeft,\r\n    over,\r\n    set\r\n} from \"ramda\";\r\nimport {createPlayer, types} from \"../../data-types\";\r\nimport nanoid from \"nanoid\";\r\nimport t from \"tcomb\";\r\n\r\n// eslint-disable-next-line complexity\r\nexport default function playersReducer(state, action) {\r\n    const nextId = nanoid();\r\n    switch (action.type) {\r\n    case \"ADD_PLAYER\":\r\n        t.interface({\r\n            firstName: t.String,\r\n            lastName: t.String,\r\n            rating: t.Number\r\n        })(action);\r\n        return assoc(\r\n            nextId,\r\n            createPlayer({\r\n                firstName: action.firstName,\r\n                id: nextId,\r\n                lastName: action.lastName,\r\n                rating: action.rating\r\n            }),\r\n            state\r\n        );\r\n    case \"SET_PLAYER\":\r\n        t.interface({\r\n            firstName: t.String,\r\n            id: types.Id,\r\n            lastName: t.String,\r\n            matchCount: t.Number,\r\n            rating: t.Number\r\n        })(action);\r\n        return over(\r\n            lensProp(action.id),\r\n            mergeLeft(\r\n                {\r\n                    firstName: action.firstName,\r\n                    lastName: action.lastName,\r\n                    matchCount: action.matchCount,\r\n                    rating: action.rating\r\n                }\r\n            ),\r\n            state\r\n        );\r\n    case \"DEL_PLAYER\":\r\n        // You should delete all avoid-pairs with the id too.\r\n        t.interface({id: types.Id})(action);\r\n        return dissoc(\r\n            lensPath(action.id),\r\n            state\r\n        );\r\n    case \"SET_PLAYER_MATCHCOUNT\":\r\n        t.interface({\r\n            id: types.Id,\r\n            matchCount: t.Number\r\n        })(action);\r\n        return set(\r\n            lensPath([action.id, \"matchCount\"]),\r\n            action.matchCount,\r\n            state\r\n        );\r\n    case \"SET_PLAYER_RATING\":\r\n        t.interface({id: types.Id, rating: t.Number})(action);\r\n        return set(\r\n            lensPath([action.id, \"rating\"]),\r\n            action.rating,\r\n            state\r\n        );\r\n    case \"LOAD_STATE\":\r\n        return action.state;\r\n    default:\r\n        throw new Error(\"Unexpected action type\");\r\n    }\r\n}\r\n","// TODO: this file needs to be replaced with something more organized.\r\nimport {\r\n    BLACK,\r\n    DUMMY_ID,\r\n    WHITE,\r\n    createMatch,\r\n    getPlayerMaybe,\r\n    rounds2Matches,\r\n    types\r\n} from \"../../data-types\";\r\nimport {assoc, pipe} from \"ramda\";\r\nimport {\r\n    createPairingData,\r\n    matches2ScoreData,\r\n    pairPlayers,\r\n    setByePlayer,\r\n    setUpperHalves,\r\n    sortDataForPairing\r\n} from \"../../pairing-scoring\";\r\nimport t from \"tcomb\";\r\n\r\nexport function autoPair({\r\n    avoidList,\r\n    byeValue,\r\n    players,\r\n    roundId,\r\n    tourney\r\n}) {\r\n    const pairData = pipe(\r\n        (rounds) => rounds2Matches(rounds, roundId),\r\n        matches2ScoreData,\r\n        createPairingData(players, avoidList),\r\n        sortDataForPairing,\r\n        setUpperHalves,\r\n    )(tourney.roundList);\r\n    const [\r\n        pairDataNoByes,\r\n        byePlayerData\r\n    ] = setByePlayer(tourney.byeQueue, DUMMY_ID, pairData);\r\n    const pairs = pairPlayers(pairDataNoByes);\r\n    const pairsWithBye = (byePlayerData)\r\n        ? pairs.concat([[byePlayerData.id, DUMMY_ID]])\r\n        : pairs;\r\n    const getPlayer = getPlayerMaybe(players);\r\n    const newMatchList = pairsWithBye.map(\r\n        (idsPair) => (\r\n            createMatch({\r\n                newRating: [\r\n                    getPlayer(idsPair[WHITE]).rating,\r\n                    getPlayer(idsPair[BLACK]).rating\r\n                ],\r\n                origRating: [\r\n                    getPlayer(idsPair[WHITE]).rating,\r\n                    getPlayer(idsPair[BLACK]).rating\r\n                ],\r\n                playerIds: [idsPair[WHITE], idsPair[BLACK]]\r\n            })\r\n        )\r\n    );\r\n    return newMatchList.reduce(\r\n        // Set match results for bye matches\r\n        function (acc, match) {\r\n            if (match.playerIds[WHITE] === DUMMY_ID) {\r\n                return acc.concat([assoc(\"result\", [0, byeValue], match)]);\r\n            }\r\n            if (match.playerIds[BLACK] === DUMMY_ID) {\r\n                return acc.concat([assoc(\"result\", [byeValue, 0], match)]);\r\n            }\r\n            return acc.concat([match]);\r\n        },\r\n        []\r\n    );\r\n}\r\n\r\nexport function manualPair(pair, byeValue) {\r\n    t.tuple([types.Player, types.Player])(pair);\r\n    const match = createMatch({\r\n        newRating: [pair[WHITE].rating, pair[BLACK].rating],\r\n        origRating: [pair[WHITE].rating, pair[BLACK].rating],\r\n        playerIds: [pair[WHITE].id, pair[BLACK].id]\r\n    });\r\n    if (pair[WHITE].id === DUMMY_ID) {\r\n        return assoc(\"result\", [0, byeValue], match);\r\n    }\r\n    if (pair[BLACK].id === DUMMY_ID) {\r\n        return assoc(\"result\", [byeValue, 0], match);\r\n    }\r\n    return match;\r\n}\r\n","import {BLACK, DUMMY_ID, WHITE, types} from \"../../data-types\";\r\nimport {\r\n    __,\r\n    append,\r\n    assoc,\r\n    concat,\r\n    filter,\r\n    findIndex,\r\n    lensPath,\r\n    lensProp,\r\n    map,\r\n    mergeRight,\r\n    move,\r\n    over,\r\n    pipe,\r\n    propEq,\r\n    remove,\r\n    reverse,\r\n    set\r\n} from \"ramda\";\r\nimport {autoPair, manualPair} from \"./match-functions\";\r\nimport t from \"tcomb\";\r\n\r\n// eslint-disable-next-line complexity\r\nexport default function tournamentReducer(state, action) {\r\n    switch (action.type) {\r\n    case \"ADD_ROUND\":\r\n        return over(\r\n            lensProp(\"roundList\"),\r\n            append([]),\r\n            state\r\n        );\r\n    case \"DEL_LAST_ROUND\":\r\n        return over(\r\n            lensProp(\"roundList\"),\r\n            remove(-1, 1),\r\n            state\r\n        );\r\n    case \"ADD_TIEBREAK\":\r\n        t.interface({id: t.Number})(action);\r\n        return over(\r\n            lensProp(\"tieBreaks\"),\r\n            append(action.id),\r\n            state\r\n        );\r\n    case \"DEL_TIEBREAK\":\r\n        t.interface({id: t.Number})(action);\r\n        return over(\r\n            lensProp(\"tieBreaks\"),\r\n            filter((id) => id !== action.id),\r\n            state\r\n        );\r\n    case \"MOVE_TIEBREAK\":\r\n        t.interface({\r\n            newIndex: t.Number,\r\n            oldIndex: t.Number\r\n        })(action);\r\n        return over(\r\n            lensProp(\"tieBreaks\"),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    case \"SET_TOURNEY_PLAYERS\":\r\n        t.interface({playerIds: t.list(types.Id)})(action);\r\n        return assoc(\"playerIds\", action.playerIds, state);\r\n    case \"SET_BYE_QUEUE\":\r\n        t.interface({byeQueue: t.list(types.Id)})(action);\r\n        return assoc(\"byeQueue\", action.byeQueue, state);\r\n    case \"SET_NAME\":\r\n        t.interface({name: t.String})(action);\r\n        return assoc(\"name\", action.name, state);\r\n    case \"AUTO_PAIR\":\r\n        t.interface({\r\n            avoidList: t.list(types.AvoidPair),\r\n            byeValue: t.Number,\r\n            players: t.dict(types.Id, types.Player),\r\n            roundId: t.Number\r\n        })(action);\r\n        return over(\r\n            lensPath([\"roundList\", action.roundId]),\r\n            concat(\r\n                __,\r\n                autoPair({\r\n                    avoidList: action.avoidList,\r\n                    byeValue: action.byeValue,\r\n                    players: action.players,\r\n                    roundId: action.roundId,\r\n                    tourney: state\r\n                })\r\n            ),\r\n            state\r\n        );\r\n    case \"MANUAL_PAIR\":\r\n        t.interface({\r\n            byeValue: t.Number,\r\n            pair: t.tuple([types.Player, types.Player]),\r\n            roundId: t.Number\r\n        })(action);\r\n        return over(\r\n            lensPath([\"roundList\", action.roundId]),\r\n            append(manualPair(action.pair, action.byeValue)),\r\n            state\r\n        );\r\n    case \"SET_DATE\":\r\n        t.interface({date: Date})(action);\r\n        return assoc(\"date\", action.date, state);\r\n    case \"SET_MATCH_RESULT\":\r\n        t.interface({\r\n            matchId: t.String,\r\n            newRating: t.tuple([t.Number, t.Number]),\r\n            result: t.tuple([t.Number, t.Number]),\r\n            roundId: t.Number\r\n        })(action);\r\n        return pipe(\r\n            set(\r\n                lensPath([\r\n                    \"roundList\",\r\n                    action.roundId,\r\n                    findIndex(\r\n                        propEq(\"id\", action.matchId),\r\n                        state.roundList[action.roundId]\r\n                    ),\r\n                    \"result\"\r\n                ]),\r\n                action.result\r\n            ),\r\n            set(\r\n                lensPath([\r\n                    \"roundList\",\r\n                    action.roundId,\r\n                    findIndex(\r\n                        propEq(\"id\", action.matchId),\r\n                        state.roundList[action.roundId]\r\n                    ),\r\n                    \"newRating\"\r\n                ]),\r\n                action.newRating,\r\n            ),\r\n        )(state);\r\n    case \"DEL_MATCH\":\r\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\r\n        return over(\r\n            lensPath([\"roundList\", action.roundId]),\r\n            filter((match) => match.id !== action.matchId),\r\n            state\r\n        );\r\n    case \"SWAP_COLORS\":\r\n        t.interface({matchId: types.Id, roundId: t.Number})(action);\r\n        return over(\r\n            lensPath([\r\n                \"roundList\",\r\n                action.roundId,\r\n                findIndex(\r\n                    propEq(\"id\", action.matchId),\r\n                    state.roundList[action.roundId]\r\n                )\r\n            ]),\r\n            (match) => mergeRight(\r\n                match,\r\n                {\r\n                    newRating: reverse(match.newRating),\r\n                    origRating: reverse(match.origRating),\r\n                    playerIds: reverse(match.playerIds),\r\n                    result: reverse(match.result)\r\n                }\r\n            ),\r\n            state\r\n        );\r\n    case \"MOVE_MATCH\":\r\n        t.interface({\r\n            newIndex: t.Number,\r\n            oldIndex: t.Number,\r\n            roundId: t.Number\r\n        })(action);\r\n        return over(\r\n            lensPath([\"roundList\", action.roundId]),\r\n            move(action.oldIndex, action.newIndex),\r\n            state\r\n        );\r\n    case \"UPDATE_BYE_SCORES\":\r\n        t.interface({value: t.Number})(action);\r\n        return assoc(\r\n            \"roundList\",\r\n            map(\r\n                map(\r\n                    function (match) {\r\n                        if (match.playerIds[WHITE] === DUMMY_ID) {\r\n                            return assoc(\"result\", [0, action.value], match);\r\n                        } else if (match.playerIds[BLACK] === DUMMY_ID) {\r\n                            return assoc(\"result\", [action.value, 0], match);\r\n                        } else {\r\n                            return match;\r\n                        }\r\n                    }\r\n                ),\r\n                state.roundList\r\n            ),\r\n            state\r\n        );\r\n    case \"SET_STATE\":\r\n        console.log(\"setting state:\", action.state);\r\n        return action.state;\r\n    default:\r\n        throw new Error(\"Unexpected action type \" + action.type);\r\n    }\r\n}\r\n","import fromJSON from \"tcomb/lib/fromJSON\";\r\nimport options from \"./options.json\";\r\nimport players from \"./players.json\";\r\nimport t from \"tcomb\";\r\nimport tournaments from \"./tournaments.json\";\r\nimport {types} from \"../data-types\";\r\n\r\nexport default {\r\n    options,\r\n    players: t.dict(types.Id, types.Player)(players),\r\n    tournaments: fromJSON(tournaments, t.dict(types.Id, types.Tournament))\r\n};\r\n","import {ascend, descend, prop, sort} from \"ramda\";\r\nimport {useEffect, useState} from \"react\";\r\nimport t from \"tcomb\";\r\n\r\nexport function useSortedTable(origTable, defaultKey, defaultDescend = true) {\r\n    const [table, setTable] = useState(origTable);\r\n    const [key, setKey] = useState(defaultKey);\r\n    const [isDescending, setIsDescending] = useState(defaultDescend);\r\n    function toggleDirection() {\r\n        setIsDescending(!isDescending);\r\n    }\r\n    useEffect(\r\n        function () {\r\n            const direction = (isDescending) ? descend : ascend;\r\n            setTable(sort(direction(prop(key)), origTable));\r\n        },\r\n        [origTable, key, isDescending]\r\n    );\r\n    return {\r\n        isDescending,\r\n        key,\r\n        setIsDescending,\r\n        setKey,\r\n        setTable,\r\n        table,\r\n        toggleDirection\r\n    };\r\n}\r\n\r\nexport function useDocumentTitle(title) {\r\n    useEffect(\r\n        function () {\r\n            const origTitle = document.title;\r\n            document.title = \"Chessahoochee: \" + title;\r\n            return function () {\r\n                document.title = origTitle;\r\n            };\r\n        },\r\n        [title]\r\n    );\r\n}\r\n\r\nexport function useLoadingCursor(isLoaded) {\r\n    useEffect(\r\n        function () {\r\n            if (t.Boolean(isLoaded)) {\r\n                document.body.style.cursor = \"auto\";\r\n            } else {\r\n                document.body.style.cursor = \"wait\";\r\n            }\r\n            // Just in case the component unmounts before the data loads.\r\n            return function () {\r\n                document.body.style.cursor = \"auto\";\r\n            };\r\n        },\r\n        [isLoaded]\r\n    );\r\n}\r\n","import \"localforage-getitems\";\r\nimport {difference, filter} from \"ramda\";\r\nimport {genericDbReducer, optionsReducer} from \"./reducers\";\r\nimport {useEffect, useReducer, useState} from \"react\";\r\nimport defaultOptions from \"./default-options.json\";\r\nimport demoData from \"../demo-data\";\r\nimport localForage from \"localforage\";\r\nimport {extendPrototype as removeItemsPrototype} from \"localforage-removeitems\";\r\nimport {extendPrototype as setItemsPrototype} from \"localforage-setitems\";\r\nimport {types} from \"../data-types\";\r\nimport {useLoadingCursor} from \"./hooks\";\r\n\r\n/*******************************************************************************\r\n * Initialize the databases\r\n ******************************************************************************/\r\nsetItemsPrototype(localForage);\r\nremoveItemsPrototype(localForage);\r\nconst DATABASE_NAME = \"Chessahoochee\";\r\nconst optionsStore = localForage.createInstance({\r\n    name: DATABASE_NAME,\r\n    storeName: \"Options\"\r\n});\r\nconst playerStore = localForage.createInstance({\r\n    name: DATABASE_NAME,\r\n    storeName: \"Players\"\r\n});\r\nconst tourneyStore = localForage.createInstance({\r\n    name: DATABASE_NAME,\r\n    storeName: \"Tournaments\"\r\n});\r\n\r\nexport {optionsStore, playerStore, tourneyStore};\r\n\r\nexport async function loadDemoDB() {\r\n    document.body.style.cursor = \"wait\";\r\n    await optionsStore.setItems(demoData.options);\r\n    await playerStore.setItems(demoData.players);\r\n    await tourneyStore.setItems(demoData.tournaments);\r\n    // TODO: for some reason in Electron, this `window.alert()` will disable all\r\n    // focus after it runs. This affects other `window.alert()`s too.\r\n    // window.alert(\"Demo data loaded!\");\r\n    document.body.style.cursor = \"auto\";\r\n}\r\n\r\n/*******************************************************************************\r\n * Generic database hooks\r\n ******************************************************************************/\r\nfunction useAllItemsFromDb(store, type) {\r\n    const [items, dispatch] = useReducer(genericDbReducer, {});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    useLoadingCursor(isLoaded);\r\n    useEffect(\r\n        function loadItemsFromDb() {\r\n            store.getItems().then(function (results) {\r\n                console.log(\"loaded items from\", store._config.storeName);\r\n                // TODO: This will silently delete invalid entries from the DB.\r\n                // Because invalid entries are typically just older data that\r\n                // was created with a different tcomb interface, this should\r\n                // ideally update the data to a valid type instead of removing\r\n                // it completely.\r\n                const cleanResults =  filter(type.is, results);\r\n                dispatch({state: cleanResults, type: \"LOAD_STATE\"});\r\n                setIsLoaded(true);\r\n            }).catch(function () {\r\n                console.error(\r\n                    \"Couldn't load items from\",\r\n                    store._config.storeName\r\n                );\r\n            });\r\n        },\r\n        [store, type]\r\n    );\r\n    useEffect(\r\n        function saveChangesToDb() {\r\n            if (!isLoaded) {\r\n                return;\r\n            }\r\n            store.setItems(items).then(function () {\r\n                console.log(\"saved items to\", store._config.storeName);\r\n            });\r\n            store.keys().then(function (keys) {\r\n                const deleted = difference(keys, Object.keys(items));\r\n                if (deleted.length > 0 ) {\r\n                    store.removeItems(deleted).then(function () {\r\n                        console.log(\"Deleted \" + deleted.length + \" items.\");\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        [store, items, isLoaded]\r\n    );\r\n    return [items, dispatch];\r\n}\r\n\r\n/*******************************************************************************\r\n * Player & tournament wrapper hooks\r\n ******************************************************************************/\r\nexport function useAllPlayersDb() {\r\n    return useAllItemsFromDb(playerStore, types.Player);\r\n}\r\n\r\nexport function useAllTournamentsDb() {\r\n    return useAllItemsFromDb(tourneyStore, types.Tournament);\r\n}\r\n\r\n/*******************************************************************************\r\n * Options database hooks\r\n ******************************************************************************/\r\nexport function useOptionsDb() {\r\n    const [options, dispatch] = useReducer(optionsReducer, defaultOptions);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    useEffect(\r\n        function initOptionsFromDb() {\r\n            // I don't remember why I used `iterate()` instead of `getItems()`.\r\n            optionsStore.iterate(function (value, key) {\r\n                dispatch({option: key, type: \"SET_OPTION\", value: value});\r\n            }).then(function () {\r\n                setIsLoaded(true);\r\n            });\r\n        },\r\n        []\r\n    );\r\n    useEffect(\r\n        function writeChangesToDb() {\r\n            if (!isLoaded) {\r\n                return;\r\n            }\r\n            optionsStore.setItems(options);\r\n        },\r\n        [options, isLoaded]\r\n    );\r\n    return [options, dispatch];\r\n}\r\n","import React, {\r\n    createContext,\r\n    useContext,\r\n    useEffect,\r\n    useReducer,\r\n    useState\r\n} from \"react\";\r\nimport {filter, symmetricDifference} from \"ramda\";\r\nimport {\r\n    getAllPlayerIdsFromMatches,\r\n    getPlayerMaybe,\r\n    rounds2Matches\r\n} from \"../data-types\";\r\nimport {playerStore, tourneyStore} from \"./db\";\r\nimport {playersReducer, tournamentReducer} from \"./reducers\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useLoadingCursor} from \"./hooks\";\r\n\r\nconst TournamentContext = createContext(null);\r\n\r\nexport function useTournament() {\r\n    const state = useContext(TournamentContext);\r\n    return state;\r\n}\r\n\r\nexport function TournamentProvider({children, tourneyId}) {\r\n    const [tourney, tourneyDispatch] = useReducer(tournamentReducer, {});\r\n    const [players, playersDispatch] = useReducer(playersReducer, {});\r\n    const [isTourneyLoaded, setIsTourneyLoaded] = useState(false);\r\n    const [isPlayersLoaded, setIsPlayersLoaded] = useState(false);\r\n    const [isDbError, setIsDbError] = useState(false);\r\n    useLoadingCursor(isPlayersLoaded && isTourneyLoaded);\r\n    useEffect(\r\n        function initTourneyFromDb() {\r\n            tourneyStore.getItem(tourneyId).then(function (value) {\r\n                console.log(\"loaded:\", tourneyId);\r\n                if (!value) {\r\n                    setIsDbError(true);\r\n                }\r\n                tourneyDispatch({state: value || {}, type: \"SET_STATE\"});\r\n                setIsTourneyLoaded(true);\r\n            }).catch(function () {\r\n                setIsDbError(true);\r\n            });\r\n        },\r\n        [tourneyId]\r\n    );\r\n    useEffect(\r\n        function hydrateTourneyPlayersFromDb() {\r\n            if (!tourney.roundList || !tourney.playerIds) {\r\n                return; // the tournament hasn't been loaded yet\r\n            }\r\n            // Include players who have played matches but left the tournament,\r\n            // as well as players who are registered but havne't played yet.\r\n            const allTheIds = getAllPlayerIdsFromMatches(\r\n                rounds2Matches(tourney.roundList)\r\n            ).concat(\r\n                tourney.playerIds\r\n            );\r\n            // If there are no ids, update the player state and exit early.\r\n            if (allTheIds.length === 0) {\r\n                // This check prevents an infinite loop & memory leak.\r\n                if (Object.keys(players).length !== 0) {\r\n                    playersDispatch({state: {}, type: \"LOAD_STATE\"});\r\n                }\r\n                setIsPlayersLoaded(true);\r\n                return;\r\n            }\r\n            playerStore.getItems(allTheIds).then(function (values) {\r\n                // This safeguards against trying to fetch dummy IDs or IDs from\r\n                // deleted players. If we updated without this condition, then\r\n                // this `useEffect` would trigger an infinite loop and a memory\r\n                // leak.\r\n                const unChangedPlayers = symmetricDifference(\r\n                    Object.keys(values),\r\n                    Object.keys(players)\r\n                );\r\n                console.log(\"unchanged players:\", unChangedPlayers);\r\n                if (unChangedPlayers.length !== 0) {\r\n                    console.log(\"hydrated player data\");\r\n                    playersDispatch({state: values, type: \"LOAD_STATE\"});\r\n                }\r\n                setIsPlayersLoaded(true);\r\n            }).catch(function (error) {\r\n                console.error(\"Couldn't load ids:\", allTheIds);\r\n                console.error(error);\r\n            });\r\n        },\r\n        [tourney.roundList, players, tourney.playerIds]\r\n    );\r\n    useEffect(\r\n        function saveTourneyToDb() {\r\n            if (\r\n                !isTourneyLoaded\r\n                // The tourney length is 0 when it wasn't found in the DB\r\n                || Object.keys(tourney).length === 0\r\n                // I don't know why, but this happens sometimes with a bad URL\r\n                || tourneyId !== tourney.id\r\n            ) {\r\n                return;\r\n            }\r\n            tourneyStore.setItem(tourneyId, tourney).catch(function (error) {\r\n                console.log(\"error saving tourney:\", tourneyId, error);\r\n            });\r\n        },\r\n        [tourneyId, tourney, isTourneyLoaded]\r\n    );\r\n    useEffect(\r\n        function savePlayersToDb() {\r\n            if (!isPlayersLoaded) {\r\n                return;\r\n            }\r\n            playerStore.setItems(players).then(function (values) {\r\n                console.log(\"saved player changes to DB:\", values);\r\n            }).catch(function (error) {\r\n                console.log(\"couldn't save players to DB:\", error);\r\n            });\r\n        },\r\n        [players, isPlayersLoaded]\r\n    );\r\n    const getPlayer = getPlayerMaybe(players);\r\n    // `players` includes players in past matches who may have left\r\n    // `activePlayers` is only players to be matched in future matches.\r\n    const activePlayers = filter(\r\n        (p) => tourney.playerIds.includes(p.id),\r\n        players\r\n    );\r\n    if (isDbError) {\r\n        return <div>Error: tournament not found.</div>;\r\n    }\r\n    if (!isTourneyLoaded || !isPlayersLoaded) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <TournamentContext.Provider\r\n            value={{\r\n                activePlayers,\r\n                getPlayer,\r\n                players,\r\n                playersDispatch,\r\n                tourney,\r\n                tourneyDispatch\r\n            }}\r\n        >\r\n            {children}\r\n        </TournamentContext.Provider>\r\n    );\r\n}\r\nTournamentProvider.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    tourneyId: PropTypes.string.isRequired\r\n};\r\n","import {\r\n    createStandingList,\r\n    matches2ScoreData\r\n} from \"../../pairing-scoring\";\r\nimport Icons from \"../../components/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {last} from \"ramda\";\r\nimport numeral from \"numeral\";\r\nimport {rounds2Matches} from \"../../data-types\";\r\nimport style from \"./index.module.css\";\r\nimport {useTournament} from \"../../hooks\";\r\n\r\nexport default function Crosstable(props) {\r\n    const {tourney, getPlayer} = useTournament();\r\n    const {tieBreaks, roundList} = tourney;\r\n    const scoreData = matches2ScoreData(rounds2Matches(roundList));\r\n    const standings = createStandingList(tieBreaks, scoreData);\r\n\r\n    function getXScore(player1Id, player2Id) {\r\n        if (player1Id === player2Id) {\r\n            return <Icons.X className=\"disabled\" />;\r\n        }\r\n        const result = scoreData[player1Id].opponentResults[player2Id];\r\n        if (result === undefined) {\r\n            return null;\r\n        }\r\n        return numeral(result).format(\"1/2\");\r\n    }\r\n\r\n    function getRatingChangeTds(playerId) {\r\n        const firstRating = scoreData[playerId].ratings[0];\r\n        const lastRating = last(scoreData[playerId].ratings);\r\n        const change = numeral(lastRating - firstRating).format(\"+0\");\r\n        return (\r\n            <>\r\n            <td className=\"table__number\">\r\n                {lastRating}\r\n            </td>\r\n            <td className=\"table__number body-10\">\r\n                ({change})\r\n            </td>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <table className={style.table}>\r\n            <caption>Crosstable</caption>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    {/* Display a rank as a shorthand for each player. */}\r\n                    {Object.keys(standings).map((rank) =>\r\n                        <th key={rank}>\r\n                            {Number(rank) + 1}\r\n                        </th>\r\n                    )}\r\n                    <th>Score</th>\r\n                    <th colSpan={2}>Rating</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {/* Output a row for each player */}\r\n                {standings.map((standing, index)=>\r\n                    <tr key={index} className={style.row}>\r\n                        <th className={style.rank} scope=\"col\">\r\n                            {index + 1}\r\n                        </th>\r\n                        <th className={style.playerName} scope=\"row\">\r\n                            {getPlayer(standing.id).firstName}&nbsp;\r\n                            {getPlayer(standing.id).lastName}\r\n                        </th>\r\n                        {/* Output a cell for each other player */}\r\n                        {standings.map((opponent, index2) =>\r\n                            <td\r\n                                key={index2}\r\n                                className=\"table__number\"\r\n                            >\r\n                                {getXScore(standing.id, opponent.id)}\r\n                            </td>\r\n                        )}\r\n                        {/* Output their score and rating change */}\r\n                        <td className=\"table__number\">\r\n                            {numeral(standing.score).format(\"1/2\")}\r\n                        </td>\r\n                        {getRatingChangeTds(standing.id)}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nCrosstable.propTypes = {\r\n    tourneyId: PropTypes.string\r\n};\r\n","import Icons from \"./icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {omit} from \"ramda\";\r\nimport styles from \"./utility.module.css\";\r\n// import {usePlayers} from \"../state\";\r\n\r\nexport const Button = ({children, action}) => (\r\n    <button onClick={action}>\r\n        {children}\r\n    </button>\r\n);\r\nButton.propTypes = {\r\n    action: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired\r\n};\r\n\r\nexport const BackButton = ({action}) => (\r\n    <Button action={action}>&lt; Back</Button>\r\n);\r\nBackButton.propTypes = {\r\n    action: PropTypes.func.isRequired\r\n};\r\n\r\nexport const OpenButton = ({action}) => (\r\n    <Button action={action}>Open &gt;</Button>\r\n);\r\nOpenButton.propTypes = {\r\n    action: PropTypes.func.isRequired\r\n};\r\n\r\nexport function Panel({children, style}) {\r\n    return (\r\n        <div className={styles.panel} style={{...style}}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\nPanel.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    style: PropTypes.object\r\n};\r\n\r\nexport function PanelContainer(props) {\r\n    return (\r\n        <div {...props} className={styles.panels + \" \" + props.className}>\r\n            {props.children}\r\n            {/* {React.Children.map(props.children, (child) => child)} */}\r\n        </div>\r\n    );\r\n}\r\nPanelContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string\r\n};\r\n\r\nexport function DateFormat(props) {\r\n    const dateFormat = new Intl.DateTimeFormat(\r\n        \"en-US\",\r\n        {\r\n            day: \"2-digit\",\r\n            month: \"short\",\r\n            year: \"numeric\"\r\n        }\r\n    );\r\n    const cleanProps = omit([\"date\"], props);\r\n    return (\r\n        <time dateTime={props.date.toISOString()} {...cleanProps}>\r\n            {dateFormat.format(props.date)}\r\n        </time>\r\n    );\r\n}\r\nDateFormat.propTypes = {\r\n    date: PropTypes.instanceOf(Date)\r\n};\r\n\r\nexport function Notification(props) {\r\n    const [icon, className] = (function () {\r\n        if (props.success) {\r\n            return [<Icons.Check />, \"notification__success\"];\r\n        } else if (props.warning) {\r\n            return [<Icons.Alert />, \"notification__warning\"];\r\n        } else if (props.error) {\r\n            return [<Icons.X />, \"notification__error\"];\r\n        } else {\r\n            return [<Icons.Info />, \"notification__generic\"];\r\n        }\r\n    }());\r\n    const cleanProps = omit([\"warning\", \"error\", \"success\", \"tooltip\"], props);\r\n    return (\r\n        <div\r\n            {...cleanProps}\r\n            className={\"notification \" + className + \" \" + props.className}\r\n        >\r\n            <div\r\n                aria-label={props.tooltip}\r\n                className=\"notification__icon\"\r\n                title={props.tooltip}\r\n            >\r\n                {icon}\r\n            </div>\r\n            <div className=\"notification__text\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nNotification.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    className: PropTypes.string,\r\n    error: PropTypes.bool,\r\n    success: PropTypes.bool,\r\n    tooltip: PropTypes.string,\r\n    warning: PropTypes.bool\r\n};\r\n\r\n/**\r\n * This just creates empty space to balance the layout, e.g. if there's a button\r\n * on one side of a label that's offsetting it.\r\n */\r\nconst PlaceholderButton = () => (\r\n    <button\r\n        className=\"button-ghost placeholder\"\r\n        aria-hidden\r\n        disabled\r\n    />\r\n);\r\nexport {PlaceholderButton};\r\n\r\nexport function SortLabel({label, sortKey, data}) {\r\n    function toggleDirAndSetKey() {\r\n        data.setKey(sortKey);\r\n        data.toggleDirection();\r\n    }\r\n    function setKeyOrToggleDir() {\r\n        if (data.key === sortKey) {\r\n            data.toggleDirection();\r\n        } else {\r\n            data.setKey(sortKey);\r\n        }\r\n    }\r\n    return (\r\n        <span className=\"buttons-on-hover\">\r\n            <PlaceholderButton />\r\n            <button\r\n                className=\"button-micro dont-hide button-text-ghost title-20\"\r\n                onClick={setKeyOrToggleDir}\r\n            >\r\n                {label}\r\n            </button>\r\n            <button\r\n                className={\r\n                    (data.key === sortKey)\r\n                    ? \"dont-hide button-ghost\"\r\n                    : \"button-ghost\"}\r\n                onClick={toggleDirAndSetKey}\r\n            >\r\n                {(data.isDescending)\r\n                    ? <Icons.ChevronUp />\r\n                    : <Icons.ChevronDown />}\r\n            </button>\r\n        </span>\r\n    );\r\n}\r\nSortLabel.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    sortKey: PropTypes.string.isRequired\r\n};\r\n\r\n/*******************************************************************************\r\n * Non-JSX functions\r\n ******************************************************************************/\r\nexport function findById(id, list) {\r\n    return list.filter((x) => x.id === id)[0];\r\n}\r\n\r\nexport function findIndexById(id, list) {\r\n    return list.indexOf(findById(id, list));\r\n}\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {assoc} from \"ramda\";\r\n\r\nexport default function NewPlayer({dispatch}) {\r\n    const newPlayerDefault = {firstName: \"\", lastName: \"\", rating: 1200};\r\n    const [newPlayerData, setNewPlayerdata] = useState(newPlayerDefault);\r\n\r\n    const handleSubmit = function (event) {\r\n        event.preventDefault();\r\n        const {firstName, lastName, rating} = newPlayerData;\r\n        setNewPlayerdata(newPlayerDefault);\r\n        dispatch({\r\n            firstName,\r\n            lastName,\r\n            rating: Number(rating),\r\n            type: \"ADD_PLAYER\"\r\n        });\r\n    };\r\n\r\n    const updateField = function (event) {\r\n        event.preventDefault();\r\n        const {name, value} = event.currentTarget;\r\n        setNewPlayerdata((prevState) => assoc(name, value, prevState));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <fieldset>\r\n                <legend>Register a new player</legend>\r\n                <p>\r\n                    <label htmlFor=\"firstName\">First name</label>\r\n                    <input\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        value={newPlayerData.firstName}\r\n                        required\r\n                        onChange={updateField}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"lastName\">Last name</label>\r\n                    <input\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        value={newPlayerData.lastName}\r\n                        required\r\n                        onChange={updateField}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"rating\">Rating</label>\r\n                    <input\r\n                        name=\"rating\"\r\n                        type=\"number\"\r\n                        value={newPlayerData.rating}\r\n                        required\r\n                        onChange={updateField}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <input type=\"submit\" value=\"Add\"/>\r\n                </p>\r\n            </fieldset>\r\n        </form>\r\n    );\r\n}\r\nNewPlayer.propTypes = {\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n","import {useAllPlayersDb, useTournament} from \"../../../hooks\";\r\nimport NewPlayer from \"../../../components/new-player\";\r\nimport React from \"react\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\n\r\nexport default function Selecting(props) {\r\n    const {tourney, tourneyDispatch} = useTournament();\r\n    const [players, allPlayersDispatch] = useAllPlayersDb();\r\n\r\n    function togglePlayer(event) {\r\n        const id = event.target.value;\r\n        if (event.target.checked) {\r\n            tourneyDispatch({\r\n                playerIds: tourney.playerIds.concat([id]),\r\n                type: \"SET_TOURNEY_PLAYERS\"\r\n            });\r\n        } else {\r\n            tourneyDispatch({\r\n                playerIds: tourney.playerIds.filter((pId) => pId !== id),\r\n                type: \"SET_TOURNEY_PLAYERS\"\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"toolbar\">\r\n                <button\r\n                    className=\"button-micro\"\r\n                    onClick={() => tourneyDispatch({\r\n                        playerIds: Object.keys(players),\r\n                        type: \"SET_TOURNEY_PLAYERS\"\r\n                    })}\r\n                >\r\n                    Select all\r\n                </button>\r\n                <button\r\n                    className=\"button-micro\"\r\n                    onClick={() => tourneyDispatch({\r\n                        playerIds: [],\r\n                        type: \"SET_TOURNEY_PLAYERS\"\r\n                    })}\r\n                >\r\n                    Select none\r\n                </button>\r\n            </div>\r\n            <table>\r\n                <caption>Select players</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Select</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.values(players).map(({id, firstName, lastName}) =>\r\n                        <tr key={id}>\r\n                            <td>{firstName}</td>\r\n                            <td>{lastName}</td>\r\n                            <td>\r\n                                <VisuallyHidden>\r\n                                    <label htmlFor={\"select-\" + id}>\r\n                                        Select {firstName} {lastName}\r\n                                    </label>\r\n                                </VisuallyHidden>\r\n                                <input\r\n                                    checked={tourney.playerIds.includes(id)}\r\n                                    type=\"checkbox\"\r\n                                    value={id}\r\n                                    id={\"select-\" + id}\r\n                                    onChange={togglePlayer}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <NewPlayer dispatch={allPlayersDispatch}/>\r\n        </div>\r\n    );\r\n}\r\nSelecting.propTypes = {};\r\n","import {Panel, PanelContainer} from \"../../../components/utility\";\r\nimport React, {useState} from \"react\";\r\nimport {hasHadBye, rounds2Matches} from \"../../../data-types\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Icons from \"../../../components/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport Selecting from \"./selecting\";\r\nimport {useTournament} from \"../../../hooks\";\r\n\r\nfunction PlayerList({players, dispatch, byeQueue}) {\r\n    return (\r\n        <>\r\n        {Object.values(players).map((p) => (\r\n            <tr key={p.id} className={p.type + \" player\"}>\r\n                <td>{p.firstName}</td>\r\n                <td>{p.lastName}</td>\r\n                <td>\r\n                    <button\r\n                        className=\"button-micro\"\r\n                        disabled={byeQueue.includes(p.id)}\r\n                        onClick={() =>\r\n                            dispatch({\r\n                                byeQueue:\r\n                                    byeQueue.concat([p.id]),\r\n                                type: \"SET_BYE_QUEUE\"\r\n                            })\r\n                        }\r\n                    >\r\n                        Bye signup\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n        )}\r\n        </>\r\n    );\r\n}\r\nPlayerList.propTypes = {\r\n    byeQueue: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n    players: PropTypes.object.isRequired\r\n};\r\n\r\nexport default function PlayerSelect(props) {\r\n    const {tourney, tourneyDispatch, activePlayers} = useTournament();\r\n    const {playerIds, roundList, byeQueue} = tourney;\r\n    const dispatch = tourneyDispatch;\r\n    const [isSelecting, setIsSelecting] = useState(playerIds.length === 0);\r\n    const matches = rounds2Matches(roundList);\r\n    return (\r\n        <div className=\"content-area\">\r\n            <div className=\"toolbar\">\r\n                <button onClick={() => setIsSelecting(true)}>\r\n                    <Icons.Edit /> Edit player roster\r\n                </button>\r\n            </div>\r\n            <PanelContainer>\r\n                <Panel style={{flexShrink: \"0\"}}>\r\n                    <table>\r\n                        <caption>Current roster</caption>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan={2}>Name</th>\r\n                                <th>Options</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"content\">\r\n                            <PlayerList\r\n                                byeQueue={byeQueue}\r\n                                dispatch={dispatch}\r\n                                players={activePlayers}\r\n                            />\r\n                        </tbody>\r\n                    </table>\r\n                </Panel>\r\n                <Panel>\r\n                    <h3>Bye queue</h3>\r\n                    {byeQueue.length === 0 &&\r\n                        <p>No players have signed up for a bye round.</p>\r\n                    }\r\n                    <ol>\r\n                        {byeQueue.map((pId) => (\r\n                            <li\r\n                                key={pId}\r\n                                className={\r\n                                    (hasHadBye(matches, pId))\r\n                                    ? \"disabled buttons-on-hover\"\r\n                                    : \"buttons-on-hover\"\r\n                                }\r\n                            >\r\n                                {activePlayers[pId].firstName}{\" \"}\r\n                                {activePlayers[pId].lastName}{\" \"}\r\n                                <button\r\n                                    className=\"button-micro\"\r\n                                    onClick={() =>\r\n                                        dispatch({\r\n                                            byeQueue: byeQueue.filter(\r\n                                                (id) => pId !== id\r\n                                            ),\r\n                                            type: \"SET_BYE_QUEUE\"\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Remove\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </Panel>\r\n                <Dialog isOpen={isSelecting}>\r\n                    <button\r\n                        className=\"button-micro button-primary\"\r\n                        onClick={() => setIsSelecting(false)}\r\n                    >\r\n                        Done\r\n                    </button>\r\n                    <Selecting />\r\n                </Dialog>\r\n            </PanelContainer>\r\n        </div>\r\n    );\r\n}\r\nPlayerSelect.propTypes = {};\r\n","import {\r\n    avoidPairReducer,\r\n    createBlankScoreData\r\n} from \"../../../pairing-scoring\";\r\n// this component should eventually replace player-match-info.jsx\r\nimport {useOptionsDb, useTournament} from \"../../../hooks\";\r\nimport {DUMMY_ID} from \"../../../data-types\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {sum} from \"ramda\";\r\n\r\nexport default function PlayerInfo({playerId, scoreData}) {\r\n    const {getPlayer} = useTournament();\r\n    const [options] = useOptionsDb();\r\n    const avoidDict = options.avoidPairs.reduce(avoidPairReducer, {});\r\n    const playerData = scoreData[playerId] || createBlankScoreData(playerId);\r\n    const {\r\n        colorScores,\r\n        opponentResults,\r\n        results\r\n    } = playerData;\r\n    const colorBalance = sum(colorScores);\r\n    const player = getPlayer(playerId);\r\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\r\n    const avoidList = avoidDict[playerId] || [];\r\n    const prettyBalance = (function () {\r\n        if (colorBalance < 0) {\r\n            return \"White +\" + Math.abs(colorBalance);\r\n        } else if (colorBalance > 0) {\r\n            return \"Black +\" + colorBalance;\r\n        } else {\r\n            return \"Even\";\r\n        }\r\n    }());\r\n    return (\r\n        <dl className=\"player-card\">\r\n            <h3>\r\n                {player.firstName} {player.lastName}\r\n            </h3>\r\n            <p>Score: {sum(results)}</p>\r\n            <p data-testid={\"rating-\" + player.id}>\r\n                Rating: {player.rating}\r\n            </p>\r\n            <p>Color balance: {prettyBalance}</p>\r\n            <p>Has had a bye round: {hasBye ? \"Yes\" : \"No\"}</p>\r\n            <p>Opponent history:</p>\r\n            <ol>\r\n                {Object.entries(opponentResults).map(([opId, result]) => (\r\n                    <li key={opId}>\r\n                        {getPlayer(opId).firstName}{\" \"}\r\n                        {getPlayer(opId).lastName}{\" \"}\r\n                        -{\" \"}\r\n                        {result === 0 && \"Lost\"}\r\n                        {result === 1 && \"Won\"}\r\n                        {result === 0.5 && \"Draw\"}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n            <p>\r\n                Players to avoid:\r\n            </p>\r\n            <ol>\r\n                {avoidList.map((pId) => (\r\n                    <li key={pId}>\r\n                        {getPlayer(pId).firstName} {getPlayer(pId).lastName}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </dl>\r\n    );\r\n}\r\nPlayerInfo.propTypes = {\r\n    playerId: PropTypes.string,\r\n    scoreData: PropTypes.object\r\n};\r\n","import {\r\n    BLACK,\r\n    DUMMY_ID,\r\n    WHITE,\r\n    getUnmatched\r\n} from \"../../../data-types\";\r\nimport {assoc, lensIndex, set} from \"ramda\";\r\nimport Hidden from \"@reach/visually-hidden\";\r\nimport Icons from \"../../../components/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {useTournament} from \"../../../hooks\";\r\n\r\nexport default function SelectList({roundId, stagedPlayers, setStagedPlayers}) {\r\n    const {tourney, activePlayers, getPlayer} = useTournament();\r\n    // only use unmatched players if this is the last round.\r\n    const unmatched = (roundId === tourney.roundList.length - 1)\r\n        ? getUnmatched(tourney.roundList, activePlayers, roundId)\r\n        : {};\r\n\r\n    function selectPlayer(id) {\r\n        if (stagedPlayers[WHITE] === null) {\r\n            setStagedPlayers(\r\n                (prevState) => set(lensIndex(WHITE), id, prevState)\r\n            );\r\n        } else if (stagedPlayers[BLACK] === null) {\r\n            setStagedPlayers(\r\n                (prevState) => set(lensIndex(BLACK), id, prevState)\r\n            );\r\n        }\r\n        // else... nothing happens\r\n    }\r\n\r\n    const unmatchedCount = Object.keys(unmatched).length;\r\n\r\n    // make a new list so as not to affect auto-pairing\r\n    const unmatchedWithDummy = (\r\n        (unmatchedCount % 2 !== 0)\r\n        ? assoc(DUMMY_ID, getPlayer(DUMMY_ID), unmatched)\r\n        : unmatched\r\n    );\r\n    if (unmatchedCount === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            <ul className=\"content plain-list\">\r\n                {Object.values(unmatchedWithDummy).map(\r\n                    ({id, firstName, lastName}) => (\r\n                        <li key={id}>\r\n                            <button\r\n                                className=\"button-ghost\"\r\n                                disabled={\r\n                                    !stagedPlayers.includes(null)\r\n                                    || stagedPlayers.includes(id)\r\n                                }\r\n                                onClick={() => selectPlayer(id)}\r\n                            >\r\n                                <Icons.UserPlus/>\r\n                                <Hidden>\r\n                                    Select {firstName} {lastName}\r\n                                </Hidden>\r\n                            </button>\r\n                            {\" \"}\r\n                            {firstName} {lastName}\r\n                        </li>\r\n                    )\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nSelectList.propTypes = {\r\n    roundId: PropTypes.number,\r\n    setStagedPlayers: PropTypes.func,\r\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n","import {BLACK, WHITE} from \"../../../data-types\";\r\nimport React, {Fragment} from \"react\";\r\nimport {lensIndex, set} from \"ramda\";\r\nimport {useOptionsDb, useTournament} from \"../../../hooks\";\r\nimport Icons from \"../../../components/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Stage({\r\n    roundId,\r\n    stagedPlayers,\r\n    setStagedPlayers\r\n}) {\r\n    const {tourneyDispatch, getPlayer} = useTournament();\r\n    const dispatch = tourneyDispatch;\r\n    const [options] = useOptionsDb();\r\n    const [white, black] = stagedPlayers;\r\n\r\n    function unstage(color) {\r\n        setStagedPlayers((prevState) => set(lensIndex(color), null, prevState));\r\n    }\r\n\r\n    function match() {\r\n        dispatch({\r\n            byeValue: options.byeValue,\r\n            pair: [getPlayer(white), getPlayer(black)],\r\n            roundId,\r\n            type: \"MANUAL_PAIR\"\r\n        });\r\n        setStagedPlayers([null, null]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Selected for matching:</h2>\r\n            <div className=\"content\">\r\n                <p>\r\n                    White:{\" \"}\r\n                    {white !== null &&\r\n                        <Fragment>\r\n                            {getPlayer(white).firstName}{\" \"}\r\n                            {getPlayer(white).lastName}{\" \"}\r\n                            <button\r\n                                className=\"button-micro\"\r\n                                onClick={() => unstage(WHITE)}\r\n                            >\r\n                                <Icons.UserMinus /> Remove\r\n                            </button>\r\n                        </Fragment>\r\n                    }\r\n                </p>\r\n                <p>\r\n                    Black:{\" \"}\r\n                    {black !== null &&\r\n                        <Fragment>\r\n                            {getPlayer(black).firstName}{\" \"}\r\n                            {getPlayer(black).lastName}{\" \"}\r\n                            <button\r\n                                className=\"button-micro\"\r\n                                onClick={() => unstage(BLACK)}\r\n                            >\r\n                                <Icons.UserMinus /> Remove\r\n                            </button>\r\n                        </Fragment>\r\n                    }\r\n                </p>\r\n            </div>\r\n            <div className=\"toolbar\">\r\n                <button\r\n                    disabled={\r\n                        stagedPlayers.every((id) => id === null)\r\n                    }\r\n                    onClick={() => setStagedPlayers(\r\n                        (prevState) => ([prevState[BLACK], prevState[WHITE]])\r\n                    )}\r\n                >\r\n                    <Icons.Repeat/> Swap colors\r\n                </button>{\" \"}\r\n                <button\r\n                    className=\"button-primary\"\r\n                    disabled={stagedPlayers.includes(null)}\r\n                    onClick={match}\r\n                >\r\n                    <Icons.Check/> Match selected\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nStage.propTypes = {\r\n    roundId: PropTypes.number,\r\n    setStagedPlayers: PropTypes.func,\r\n    stagedPlayers: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n","import {Panel, PanelContainer} from \"../../../components/utility\";\r\nimport React, {useState} from \"react\";\r\nimport {\r\n    calcPairIdeal,\r\n    createPairingData,\r\n    matches2ScoreData,\r\n    maxPriority,\r\n    setUpperHalves,\r\n    sortDataForPairing\r\n} from \"../../../pairing-scoring\";\r\nimport {\r\n    getUnmatched,\r\n    rounds2Matches\r\n} from \"../../../data-types\";\r\nimport {useOptionsDb, useTournament} from \"../../../hooks\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport PlayerInfo from \"./player-info\";\r\nimport PropTypes from \"prop-types\";\r\nimport SelectList  from \"./select-list\";\r\nimport Selecting from \"../player-select/selecting\";\r\nimport Stage from \"./stage\";\r\nimport {findById} from \"../../../components/utility\";\r\nimport numeral from \"numeral\";\r\nimport {pipe} from \"ramda\";\r\n\r\nexport default function PairPicker({roundId}) {\r\n    const [stagedPlayers, setStagedPlayers] = useState([null, null]);\r\n    const [options] = useOptionsDb();\r\n    const {tourney, activePlayers, tourneyDispatch} = useTournament();\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [scoreData, pairData] = React.useMemo(\r\n        function memoizedGetStats() {\r\n            const matches = rounds2Matches(tourney.roundList, roundId);\r\n            const _scoreData = matches2ScoreData(matches);\r\n            const _pairData = pipe(\r\n                createPairingData(activePlayers, options.avoidPairs),\r\n                sortDataForPairing,\r\n                setUpperHalves\r\n            )(_scoreData);\r\n            return [_scoreData, _pairData];\r\n        },\r\n        [tourney.roundList, activePlayers, roundId, options.avoidPairs]\r\n    );\r\n    React.useEffect(\r\n        function cleanPlayersThatWereRemoved() {\r\n            const [p1, p2] = stagedPlayers;\r\n            if (!activePlayers[p1] && p1 !== null) {\r\n                setStagedPlayers((pair) => [null, pair[1]]);\r\n            }\r\n            if (!activePlayers[p2] && p2 !== null) {\r\n                setStagedPlayers((pair) => [pair[0], null]);\r\n            }\r\n        },\r\n        [activePlayers, stagedPlayers]\r\n    );\r\n    const matchIdeal = (function () {\r\n        if (stagedPlayers.includes(null)) {\r\n            return null;\r\n        }\r\n        const player0stats = findById(stagedPlayers[0], pairData);\r\n        const player1stats = findById(stagedPlayers[1], pairData);\r\n        if (!player0stats || !player1stats) {\r\n            return null;\r\n        }\r\n        const ideal = calcPairIdeal(player0stats, player1stats);\r\n        return numeral(ideal / maxPriority).format(\"%\");\r\n    }());\r\n    const unmatched = (roundId === tourney.roundList.length - 1)\r\n        ? getUnmatched(tourney.roundList, activePlayers, roundId)\r\n        : {};\r\n    const unmatchedCount = Object.keys(unmatched).length;\r\n    return (\r\n        <div className=\"content-area\">\r\n            <div className=\"toolbar\">\r\n                <button\r\n                    className=\"button-primary\"\r\n                    disabled={unmatchedCount === 0}\r\n                    onClick={() => tourneyDispatch({\r\n                        avoidList: options.avoidPairs,\r\n                        byeValue: options.byeValue,\r\n                        players: unmatched,\r\n                        roundId,\r\n                        type: \"AUTO_PAIR\"\r\n                    })}\r\n                >\r\n                    Auto-pair unmatched players\r\n                </button>{\" \"}\r\n                <button onClick={() => setIsModalOpen(true)}>\r\n                    Add or remove players from the roster.\r\n                </button>\r\n            </div>\r\n            <PanelContainer>\r\n                <Panel>\r\n                    <SelectList\r\n                        roundId={roundId}\r\n                        setStagedPlayers={setStagedPlayers}\r\n                        stagedPlayers={stagedPlayers}\r\n                    />\r\n                </Panel>\r\n                <Panel style={{flexGrow: \"1\"}}>\r\n                    <Stage\r\n                        roundId={roundId}\r\n                        setStagedPlayers={setStagedPlayers}\r\n                        stagedPlayers={stagedPlayers}\r\n                    />\r\n                    <PanelContainer>\r\n                        {stagedPlayers.map((id) =>\r\n                            id !== null && (\r\n                                <Panel key={id}>\r\n                                    <PlayerInfo\r\n                                        playerId={id}\r\n                                        roundId={roundId}\r\n                                        scoreData={scoreData}\r\n                                    />\r\n                                </Panel>\r\n                            )\r\n                        )}\r\n                    </PanelContainer>\r\n                    {!stagedPlayers.includes(null) &&\r\n                        <span>Match ideal: {matchIdeal}</span>\r\n                    }\r\n                </Panel>\r\n            </PanelContainer>\r\n            <Dialog isOpen={isModalOpen}>\r\n                <button\r\n                    className=\"button-micro\"\r\n                    onClick={() => setIsModalOpen(false)}\r\n                >\r\n                    Done\r\n                </button>\r\n                <Selecting />\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nPairPicker.propTypes = {\r\n    roundId: PropTypes.number,\r\n    tourneyId: PropTypes.number\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotFound = (props) => (\r\n    <div data-testid=\"404\">\r\n        <p>Page not found.</p>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import {\r\n    DUMMY_ID\r\n    // rounds2Matches\r\n} from \"../../../data-types\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {findById} from \"../../../components/utility\";\r\n// import {matches2ScoreData} from \"../../../pairing-scoring\";\r\nimport numeral from \"numeral\";\r\nimport {sum} from \"ramda\";\r\nimport {useTournament} from \"../../../hooks\";\r\n\r\nexport default function PlayerMatchInfo({matchId, color, roundId, scoreData}) {\r\n    const {tourney, getPlayer} = useTournament();\r\n    const matchList = tourney.roundList[roundId];\r\n    const match = findById(matchId, matchList);\r\n    const playerId = match.playerIds[color];\r\n    const player = getPlayer(playerId);\r\n    const {\r\n        colorScores,\r\n        opponentResults,\r\n        results\r\n    } = scoreData[match.playerIds[color]];\r\n    const colorBalance = sum(colorScores);\r\n    const hasBye = Object.keys(opponentResults).includes(DUMMY_ID);\r\n    const prettyBalance = (function () {\r\n        if (colorBalance < 0) {\r\n            return \"White +\" + Math.abs(colorBalance);\r\n        } else if (colorBalance > 0) {\r\n            return \"Black +\" + colorBalance;\r\n        } else {\r\n            return \"Even\";\r\n        }\r\n    }());\r\n    return (\r\n        <dl className=\"player-card\">\r\n            <h3>\r\n                {player.firstName} {player.lastName}\r\n            </h3>\r\n            <dt>Score</dt>\r\n            <dd>{sum(results)}</dd>\r\n            <dt>Rating</dt>\r\n            <dd data-testid={`rating-${playerId}`}>\r\n                {match.origRating[color]} (\r\n                {numeral(\r\n                    match.newRating[color] - match.origRating[color]\r\n                ).format(\"+0\")}\r\n                )\r\n            </dd>\r\n            <dt>Color balance</dt>\r\n            <dd>{prettyBalance}</dd>\r\n            <dt>Has had a bye round</dt>\r\n            <dd>{hasBye ? \"Yes\" : \"No\"}</dd>\r\n            <dt>Opponent history</dt>\r\n            <dd>\r\n                <ol>\r\n                    {Object.entries(\r\n                        opponentResults\r\n                    ).map(([opId, result], i, src) => (\r\n                        // don't show the most recent (current) opponent\r\n                        i < src.length - 1 && (\r\n                            <li key={opId}>\r\n                                {getPlayer(opId).firstName}{\" \"}\r\n                                {getPlayer(opId).lastName}{\" \"}\r\n                                -{\" \"}\r\n                                {result === 0 && \"Lost\"}\r\n                                {result === 1 && \"Won\"}\r\n                                {result === 0.5 && \"Draw\"}\r\n                            </li>\r\n                        )\r\n                    ))}\r\n                </ol>\r\n            </dd>\r\n        </dl>\r\n    );\r\n}\r\nPlayerMatchInfo.propTypes = {\r\n    color: PropTypes.number,\r\n    matchId: PropTypes.string,\r\n    roundId: PropTypes.number,\r\n    scoreData: PropTypes.object\r\n};\r\n","import \"@reach/dialog/styles.css\";\r\nimport {BLACK, DUMMY_ID, WHITE} from \"../../../data-types\";\r\nimport {Panel, PanelContainer} from \"../../../components/utility\";\r\nimport React, {useState} from \"react\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Hidden from \"@reach/visually-hidden\";\r\nimport Icons from \"../../../components/icons\";\r\nimport PlayerMatchInfo from \"./player-match-info\";\r\nimport PropTypes from \"prop-types\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport {ratings} from \"../../../pairing-scoring\";\r\nimport styles from \"./round.module.css\";\r\nimport {useTournament} from \"../../../hooks\";\r\n\r\nexport default function MatchRow({\r\n    compact,\r\n    pos,\r\n    match,\r\n    roundId,\r\n    selectedMatch,\r\n    setSelectedMatch,\r\n    scoreData\r\n}) {\r\n    const {\r\n        tourney,\r\n        tourneyDispatch,\r\n        players,\r\n        getPlayer,\r\n        playersDispatch\r\n    } = useTournament();\r\n    const dispatch = tourneyDispatch;\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const resultCode = (function () {\r\n        if (match.result[0] > match.result[1]) {\r\n            return \"WHITE\";\r\n        } else if (match.result[1] > match.result[0]) {\r\n            return \"BLACK\";\r\n        } else if (match.result.every((x) => x === 0.5)) {\r\n            return \"DRAW\";\r\n        } else {\r\n            return \"NOTSET\";\r\n        }\r\n    }());\r\n    const whitePlayer = getPlayer(match.playerIds[WHITE]);\r\n    const blackPlayer = getPlayer(match.playerIds[BLACK]);\r\n    const whiteName = whitePlayer.firstName + \" \" + whitePlayer.lastName;\r\n    const blackName = blackPlayer.firstName + \" \" + blackPlayer.lastName;\r\n\r\n    function ResultDisplay(color) {\r\n        if (resultCode === \"NOTSET\") {\r\n            return <VisuallyHidden>Not set</VisuallyHidden>;\r\n        } else if (resultCode === \"DRAW\") {\r\n            // return <Icons.Minus aria-label=\"Draw\" />;\r\n            // TODO: find a better icon for draws.\r\n            return (\r\n                <span\r\n                    aria-label=\"Draw\"\r\n                    role=\"img\"\r\n                    style={{filter: \"grayscale(100%)\"}}\r\n                >\r\n                    🤝\r\n                </span>\r\n            );\r\n        } else if (resultCode === color) {\r\n            return <Icons.Award  aria-label=\"Won\" />;\r\n        } else {\r\n            return <VisuallyHidden>Lost</VisuallyHidden>;\r\n        }\r\n    }\r\n\r\n    function setMatchResult(event) {\r\n        const result = (function () {\r\n            switch (event.target.value) {\r\n            case \"WHITE\":\r\n                return [1, 0];\r\n            case \"BLACK\":\r\n                return [0, 1];\r\n            case \"DRAW\":\r\n                return [0.5, 0.5];\r\n            case \"NOTSET\":\r\n                return [0, 0];\r\n            default:\r\n                throw new Error();\r\n            }\r\n        }());\r\n        const white = players[match.playerIds[WHITE]];\r\n        const black = players[match.playerIds[BLACK]];\r\n        const newRating = (\r\n            (event.currentTarget.value === \"NOTSET\")\r\n            ? match.origRating\r\n            : ratings.calcNewRatings(\r\n                match.origRating,\r\n                [white.matchCount, black.matchCount],\r\n                result\r\n            )\r\n        );\r\n        playersDispatch({\r\n            id: white.id,\r\n            rating: newRating[WHITE],\r\n            type: \"SET_PLAYER_RATING\"\r\n        });\r\n        playersDispatch({\r\n            id: black.id,\r\n            rating: newRating[BLACK],\r\n            type: \"SET_PLAYER_RATING\"\r\n        });\r\n        // if the result hasn't been scored yet, increment the matchCount\r\n        if (match.result.reduce((a, b) => a + b) === 0) {\r\n            playersDispatch({\r\n                id: white.id,\r\n                matchCount: white.matchCount + 1,\r\n                type: \"SET_PLAYER_MATCHCOUNT\"\r\n            });\r\n            playersDispatch({\r\n                id: black.id,\r\n                matchCount: black.matchCount + 1,\r\n                type: \"SET_PLAYER_MATCHCOUNT\"\r\n            });\r\n        }\r\n        dispatch({\r\n            matchId: match.id,\r\n            newRating,\r\n            result,\r\n            roundId,\r\n            type: \"SET_MATCH_RESULT\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            className={\r\n                (match.id === selectedMatch)\r\n                ? \"selected\"\r\n                : \"buttons-on-hover\"\r\n            }\r\n        >\r\n            <th className={\"table__number \" + styles.rowId} scope=\"row\">\r\n                {pos + 1}\r\n            </th>\r\n            <td className={styles.playerResult}>\r\n                {ResultDisplay(\"WHITE\")}\r\n            </td>\r\n            <td\r\n                className={\"table__player row__player \" + whitePlayer.type}\r\n                data-testid={`match-${pos}-white`}\r\n            >\r\n                {whiteName}\r\n            </td>\r\n            <td className={styles.playerResult}>\r\n                {ResultDisplay(\"BLACK\")}\r\n            </td>\r\n            <td\r\n                className={\"table__player row__player \" + blackPlayer.type}\r\n                data-testid={`match-${pos}-black`}\r\n            >\r\n                {blackName}\r\n            </td>\r\n            <td className={styles.matchResult + \" data__input row__controls\"}>\r\n                <select\r\n                    className={styles.winnerSelect}\r\n                    disabled={match.playerIds.includes(DUMMY_ID)}\r\n                    value={resultCode}\r\n                    onBlur={setMatchResult}\r\n                    onChange={setMatchResult}\r\n                >\r\n                    <option value=\"NOTSET\">\r\n                        Select winner\r\n                    </option>\r\n                    <option value=\"WHITE\">\r\n                        White won\r\n                    </option>\r\n                    <option value=\"BLACK\">\r\n                        Black won\r\n                    </option>\r\n                    <option value=\"DRAW\">\r\n                        Draw\r\n                    </option>\r\n                </select>\r\n            </td>\r\n            {!compact &&\r\n                <td className={styles.controls + \" data__input\"}>\r\n                    {(selectedMatch !== match.id)\r\n                    ? (\r\n                        <button\r\n                            className=\"button-ghost\"\r\n                            title=\"Edit match\"\r\n                            onClick={() => setSelectedMatch(match.id)}\r\n                        >\r\n                            <Icons.Circle />\r\n                            <VisuallyHidden>\r\n                                Edit match for {whiteName} versus {blackName}\r\n                            </VisuallyHidden>\r\n                        </button>\r\n                    ) : (\r\n                        <button\r\n                            className=\"button-ghost button-pressed\"\r\n                            title=\"End editing match\"\r\n                            onClick={() => setSelectedMatch(null)}\r\n                        >\r\n                            <Icons.CheckCircle />\r\n                        </button>\r\n                    )}\r\n                    <button\r\n                        className=\"button-ghost\"\r\n                        title=\"Open match information.\"\r\n                        onClick={() => setOpenModal(true)}\r\n                    >\r\n                        <Icons.Info />\r\n                        <Hidden>\r\n                            View information for match:{\" \"}\r\n                            {whiteName} versus {blackName}\r\n                        </Hidden>\r\n                    </button>\r\n                    <Dialog isOpen={openModal}>\r\n                        <button\r\n                            className=\"button-micro button-primary\"\r\n                            onClick={() => setOpenModal(false)}\r\n                        >\r\n                            close\r\n                        </button>\r\n                        <p>{tourney.name}</p>\r\n                        <p>Round {roundId + 1}, match {pos + 1}</p>\r\n                        <PanelContainer>\r\n                            <Panel>\r\n                                <PlayerMatchInfo\r\n                                    color={0}\r\n                                    matchId={match.id}\r\n                                    roundId={roundId}\r\n                                    scoreData={scoreData}\r\n                                />\r\n                            </Panel>\r\n                            <Panel>\r\n                                <PlayerMatchInfo\r\n                                    color={1}\r\n                                    matchId={match.id}\r\n                                    roundId={roundId}\r\n                                    scoreData={scoreData}\r\n                                />\r\n                            </Panel>\r\n                        </PanelContainer>\r\n                    </Dialog>\r\n                </td>\r\n            }\r\n        </tr>\r\n    );\r\n}\r\nMatchRow.propTypes = {\r\n    compact: PropTypes.bool,\r\n    match: PropTypes.object,\r\n    pos: PropTypes.number,\r\n    roundId: PropTypes.number,\r\n    scoreData: PropTypes.object,\r\n    selectedMatch: PropTypes.string,\r\n    setSelectedMatch: PropTypes.func\r\n};\r\n","import MatchRow from \"./match-row\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport {matches2ScoreData} from \"../../../pairing-scoring\";\r\nimport {rounds2Matches} from \"../../../data-types\";\r\nimport style from \"./round.module.css\";\r\nimport {useTournament} from \"../../../hooks\";\r\n\r\nexport default function RoundTable({\r\n    compact,\r\n    roundId,\r\n    selectedMatch,\r\n    setSelectedMatch\r\n}) {\r\n    const {tourney} = useTournament();\r\n    const matchList = tourney.roundList[roundId];\r\n    const scoreData = matches2ScoreData(rounds2Matches(tourney.roundList));\r\n    return (\r\n        <table className={style.table}>\r\n            {matchList.length > 0 &&\r\n                <>\r\n                <caption\r\n                    className={(compact) ? \"title-30\" : \"title-40\"}\r\n                >\r\n                    Round {roundId + 1} matches\r\n                </caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th className={style.rowId} scope=\"col\">\r\n                            #\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                            <VisuallyHidden>White result</VisuallyHidden>\r\n                        </th>\r\n                        <th className=\"row__player\" scope=\"col\">\r\n                            White\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                            <VisuallyHidden>Black result</VisuallyHidden>\r\n                        </th>\r\n                        <th className=\"row__player\" scope=\"col\">\r\n                            Black\r\n                        </th>\r\n                        <th className=\"row__result\" scope=\"col\">\r\n                            Match result\r\n                        </th>\r\n                        {!compact &&\r\n                            <th className=\"row__controls\" scope=\"col\">\r\n                                <VisuallyHidden>Controls</VisuallyHidden>\r\n                            </th>\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                </>\r\n            }\r\n            <tbody className={style.tbody + \" content\"}>\r\n                {matchList.map((match, pos) => (\r\n                    <MatchRow\r\n                        key={match.id}\r\n                        compact={compact}\r\n                        match={match}\r\n                        pos={pos}\r\n                        roundId={roundId}\r\n                        selectedMatch={selectedMatch}\r\n                        setSelectedMatch={setSelectedMatch}\r\n                        scoreData={scoreData}\r\n                    />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nRoundTable.propTypes = {\r\n    compact: PropTypes.bool,\r\n    roundId: PropTypes.number,\r\n    selectedMatch: PropTypes.string,\r\n    setSelectedMatch: PropTypes.func\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {findById, findIndexById} from \"../../../components/utility\";\r\nimport Icons from \"../../../components/icons\";\r\nimport NotFound from \"../../../components/404\";\r\nimport PropTypes from \"prop-types\";\r\nimport RoundTable from \"./round-table\";\r\nimport {useTournament} from \"../../../hooks\";\r\n\r\nexport default function Round({roundId}) {\r\n    const {\r\n        tourney,\r\n        players,\r\n        tourneyDispatch,\r\n        playersDispatch\r\n    } = useTournament();\r\n    const matchList = tourney.roundList[roundId];\r\n    const [selectedMatch, setSelectedMatch] = useState(null);\r\n    if (!matchList) {\r\n        return <NotFound />;\r\n    }\r\n    function unMatch(matchId) {\r\n        const match = findById(matchId, matchList);\r\n        if (match.result.reduce((a, b) => a + b) !== 0) {\r\n            // checks if the match has been scored yet & resets the players'\r\n            // records\r\n            match.playerIds.forEach(function (pId, color) {\r\n                // If there was a dummy player or a deleted player then bail\r\n                // on the dispatch.\r\n                if (!players[pId]) {\r\n                    return;\r\n                }\r\n                // Decrement the matchcount for each player\r\n                playersDispatch({\r\n                    id: pId,\r\n                    matchCount: players[pId].matchCount - 1,\r\n                    type: \"SET_PLAYER_MATCHCOUNT\"\r\n                });\r\n                // Set each player's rating to the original rating of the match\r\n                playersDispatch({\r\n                    id: pId,\r\n                    rating: match.origRating[color],\r\n                    type: \"SET_PLAYER_RATING\"\r\n                });\r\n            });\r\n        }\r\n        tourneyDispatch({matchId, roundId, type: \"DEL_MATCH\"});\r\n        setSelectedMatch(null);\r\n    }\r\n\r\n    function swapColors(matchId) {\r\n        tourneyDispatch({matchId, roundId, type: \"SWAP_COLORS\"});\r\n    }\r\n\r\n    function moveMatch(matchId, direction) {\r\n        const oldIndex = findIndexById(matchId, matchList);\r\n        const newIndex = (oldIndex + direction >= 0) ? oldIndex + direction : 0;\r\n        tourneyDispatch({newIndex, oldIndex, roundId, type: \"MOVE_MATCH\"});\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-area\">\r\n            <div className=\"toolbar\">\r\n                <button\r\n                    className=\"button-micro\"\r\n                    disabled={selectedMatch === null}\r\n                    onClick={() => unMatch(selectedMatch)}\r\n                >\r\n                    <Icons.Trash /> Unmatch\r\n                </button>{\" \"}\r\n                <button\r\n                    className=\"button-micro\"\r\n                    disabled={selectedMatch === null}\r\n                    onClick={() => swapColors(selectedMatch)}\r\n                >\r\n                    <Icons.Repeat /> Swap colors\r\n                </button>{\" \"}\r\n                <button\r\n                    className=\"button-micro\"\r\n                    disabled={selectedMatch === null}\r\n                    onClick={() => moveMatch(selectedMatch, -1)}\r\n                >\r\n                    <Icons.ArrowUp /> Move up\r\n                </button>{\" \"}\r\n                <button\r\n                    className=\"button-micro\"\r\n                    disabled={selectedMatch === null}\r\n                    onClick={() => moveMatch(selectedMatch, 1)}\r\n                >\r\n                    <Icons.ArrowDown /> Move down\r\n                </button>\r\n            </div>\r\n            {matchList.length === 0 &&\r\n                <p>No players matched yet.</p>\r\n            }\r\n            <RoundTable\r\n                roundId={roundId}\r\n                selectedMatch={selectedMatch}\r\n                setSelectedMatch={setSelectedMatch}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nRound.propTypes = {\r\n    roundId: PropTypes.number,\r\n    tourneyId: PropTypes.number\r\n};\r\n","import RoundPanels from \"./round-panels\";\r\nexport default RoundPanels;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\r\nimport Icons from \"../../../components/icons\";\r\nimport PairPicker from \"../pair-picker\";\r\nimport PropTypes from \"prop-types\";\r\nimport Round from \"./round\";\r\nimport {getUnmatched} from \"../../../data-types\";\r\nimport {useTournament} from \"../../../hooks\";\r\n\r\nexport default function RoundPanels(props) {\r\n    const roundId = Number(props.roundId); // Reach Router passes a string.\r\n    const {tourney, activePlayers} = useTournament();\r\n    // only use unmatched players if this is the last round.\r\n    const unmatched = (roundId === tourney.roundList.length - 1)\r\n        ? getUnmatched(tourney.roundList, activePlayers, roundId)\r\n        : {};\r\n    const unmatchedCount = Object.keys(unmatched).length;\r\n    const activePlayersCount = Object.keys(activePlayers).length;\r\n    const [openTab, setOpenTab] = useState(0);\r\n    useEffect(\r\n        function autoSwitchTab() {\r\n            if (openTab === 0) {\r\n                // If all of the players are unmatched then switch to the\r\n                // pair-picking tab\r\n                (unmatchedCount === activePlayersCount)\r\n                    ? setOpenTab(1)\r\n                    : setOpenTab(0);\r\n            }\r\n            if (openTab === 1 && unmatchedCount === 0) {\r\n                setOpenTab(0);\r\n            }\r\n        },\r\n        [unmatchedCount, activePlayersCount, openTab]\r\n    );\r\n    return (\r\n        <Tabs index={openTab} onChange={setOpenTab}>\r\n            <TabList>\r\n                <Tab disabled={unmatchedCount === activePlayersCount}>\r\n                    <Icons.List/> Matches\r\n                </Tab>\r\n                <Tab disabled={unmatchedCount === 0}>\r\n                    <Icons.Users/> Unmatched players\r\n                </Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n                <TabPanel>\r\n                    <Round roundId={roundId}/>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                    <PairPicker roundId={roundId} />\r\n                </TabPanel>\r\n            </TabPanels>\r\n        </Tabs>\r\n    );\r\n}\r\nRoundPanels.propTypes = {\r\n    path: PropTypes.string,\r\n    roundId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n","import {Panel, PanelContainer} from \"../../components/utility\";\r\nimport React, {useState} from \"react\";\r\nimport {Tab, TabList, TabPanel, TabPanels, Tabs} from \"@reach/tabs\";\r\nimport {\r\n    createStandingList,\r\n    createStandingTree,\r\n    getTieBreakNames,\r\n    matches2ScoreData,\r\n    tieBreakMethods\r\n} from \"../../pairing-scoring\";\r\nimport {defaultTo, filter, pipe} from \"ramda\";\r\nimport {isDummyObj, rounds2Matches} from \"../../data-types\";\r\nimport Icons from \"../../components/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport dashify from \"dashify\";\r\nimport numeral from \"numeral\";\r\nimport style from \"./index.module.css\";\r\nimport {useTournament} from \"../../hooks\";\r\n\r\nexport function ScoreTable({compact, title}) {\r\n    const {tourney, getPlayer} = useTournament();\r\n    const {tieBreaks, roundList} = tourney;\r\n    const tieBreakNames = getTieBreakNames(tieBreaks);\r\n    const standingTree = pipe(\r\n        rounds2Matches,\r\n        matches2ScoreData,\r\n        (data) => createStandingList(tieBreaks, data),\r\n        filter((obj) => !isDummyObj(obj)),\r\n        createStandingTree\r\n    )(roundList);\r\n    return (\r\n        <table\r\n            className={\r\n                (compact)\r\n                ? style.compact + \" \" + style.table\r\n                : style.table\r\n            }\r\n        >\r\n            <caption\r\n                className={(compact) ? \"title-30\" : \"title-40\"}\r\n            >\r\n                {title}\r\n            </caption>\r\n            <thead>\r\n                <tr className={style.topHeader}>\r\n                    <th className=\"title-10\" scope=\"col\">Rank</th>\r\n                    <th className=\"title-10\" scope=\"col\">Name</th>\r\n                    <th className=\"title-10\" scope=\"col\">Score</th>\r\n                    {!compact && tieBreakNames.map((name, i) => (\r\n                        <th key={i} className=\"title-10\" scope=\"col\">\r\n                            {name}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {standingTree.map((standingsFlat, rank) =>\r\n                    standingsFlat.map((standing, i, src) => (\r\n                        <tr key={standing.id} className={style.row}>\r\n                            {i === 0 && ( // Only display the rank once\r\n                                <th\r\n                                    className={\"table__number \" + style.rank}\r\n                                    rowSpan={src.length}\r\n                                    scope=\"row\"\r\n                                >\r\n                                    {rank + 1}\r\n                                </th>\r\n                            )}\r\n                            {(compact) // use <td> if it's compact.\r\n                            ? (\r\n                                <td className={style.playerName}>\r\n                                    {getPlayer(standing.id).firstName}&nbsp;\r\n                                    {getPlayer(standing.id).lastName}\r\n                                </td>\r\n                            ) : ( // Use the name as a header if not compact.\r\n                                <th\r\n                                    className={style.playerName}\r\n                                    data-testid={rank}\r\n                                    scope=\"row\"\r\n                                >\r\n                                    {getPlayer(standing.id).firstName}&nbsp;\r\n                                    {getPlayer(standing.id).lastName}\r\n                                </th>\r\n                            )}\r\n                            <td\r\n                                className=\"table__number\"\r\n                                data-testid={dashify(\r\n                                    getPlayer(standing.id).firstName\r\n                                    + getPlayer(standing.id).lastName\r\n                                    + \" score\"\r\n                                )}\r\n                            >\r\n                                {numeral(standing.score).format(\"1/2\")}\r\n                            </td>\r\n                            {!compact && standing.tieBreaks.map((score, j) => (\r\n                                <td\r\n                                    key={j}\r\n                                    className=\"table__number\"\r\n                                    data-testid={dashify(\r\n                                        getPlayer(standing.id).firstName\r\n                                        + getPlayer(standing.id).lastName\r\n                                        + tieBreakNames[j]\r\n                                    )}\r\n                                >\r\n                                    {numeral(score).format(\"1/2\")}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nScoreTable.propTypes = {\r\n    compact: PropTypes.bool,\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nfunction SelectTieBreaks(props) {\r\n    const {tourney, tourneyDispatch} = useTournament();\r\n    const dispatch = tourneyDispatch;\r\n    const {tieBreaks} = tourney;\r\n    const [selectedTb, setSelectedTb] = useState(null);\r\n\r\n    function toggleTb(id = null) {\r\n        const defaultId = defaultTo(selectedTb);\r\n        if (tieBreaks.includes(defaultId(id))) {\r\n            dispatch({id: defaultId(id), type: \"DEL_TIEBREAK\"});\r\n            setSelectedTb(null);\r\n        } else {\r\n            dispatch({id: defaultId(id), type: \"ADD_TIEBREAK\"});\r\n        }\r\n    }\r\n\r\n    function moveTb(direction) {\r\n        const index = tieBreaks.indexOf(selectedTb);\r\n        dispatch({\r\n            newIndex: index + direction,\r\n            oldIndex: index,\r\n            type: \"MOVE_TIEBREAK\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PanelContainer className=\"content-area\">\r\n            <Panel>\r\n                <div className=\"toolbar\">\r\n                    <button\r\n                        className=\"button-micro\"\r\n                        disabled={selectedTb === null}\r\n                        onClick={() => toggleTb()}\r\n                    >\r\n                        Toggle\r\n                    </button>\r\n                    <button\r\n                        className=\"button-micro\"\r\n                        disabled={selectedTb === null}\r\n                        onClick={() => moveTb(-1)}\r\n                    >\r\n                        <Icons.ArrowUp/> Move up\r\n                    </button>\r\n                    <button\r\n                        className=\"button-micro\"\r\n                        disabled={selectedTb === null}\r\n                        onClick={() => moveTb(1)}\r\n                    >\r\n                        <Icons.ArrowDown/> Move down\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            (selectedTb !== null)\r\n                            ? \"button-micro button-primary\"\r\n                            : \"button-micro\"\r\n                        }\r\n                        disabled={selectedTb === null}\r\n                        onClick={() => setSelectedTb(null)}\r\n                    >\r\n                        Done\r\n                    </button>\r\n                </div>\r\n                <table>\r\n                    <caption className=\"title-30\">\r\n                        Selected tiebreak methods\r\n                    </caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"content\">\r\n                        {tieBreaks.map((id) => (\r\n                            <tr\r\n                                key={id}\r\n                                className={selectedTb === id ? \"selected\" : \"\"}\r\n                            >\r\n                                <td>\r\n                                    {tieBreakMethods[id].name}\r\n                                </td>\r\n                                <td style={{width: \"48px\"}}>\r\n                                    <button\r\n                                        className=\"button-micro\"\r\n                                        disabled={\r\n                                            selectedTb !== null\r\n                                            && selectedTb !== id\r\n                                        }\r\n                                        onClick={() =>\r\n                                            selectedTb === id\r\n                                                ? setSelectedTb(null)\r\n                                                : setSelectedTb(id)\r\n                                        }\r\n                                    >\r\n                                        {selectedTb === id ? \"Done\" : \"Edit\"}\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Panel>\r\n            <Panel>\r\n                <div className=\"toolbar\">&nbsp;</div>\r\n                <table style={{marginTop: \"16px\"}}>\r\n                    <caption className=\"title-30\">\r\n                        Available tiebreak methods\r\n                    </caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"content\">\r\n                        {Object.values(tieBreakMethods).map(({name, id}) => (\r\n                            <tr key={id}>\r\n                                <td>\r\n                                    <span\r\n                                        className={\r\n                                            tieBreaks.includes(id)\r\n                                                ? \"disabled\"\r\n                                                : \"enabled\"\r\n                                        }\r\n                                    >\r\n                                        {name}\r\n                                    </span>\r\n                                </td>\r\n                                <td>\r\n                                    {!tieBreaks.includes(id) && (\r\n                                        <button\r\n                                            className=\"button-micro\"\r\n                                            onClick={() => toggleTb(id)}\r\n                                        >\r\n                                            Add\r\n                                        </button>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </Panel>\r\n        </PanelContainer>\r\n    );\r\n}\r\nSelectTieBreaks.propTypes = {};\r\n\r\nconst Scores = (props) => (\r\n    <Tabs>\r\n        <TabList>\r\n            <Tab><Icons.List /> Scores</Tab>\r\n            <Tab><Icons.Settings /> Edit tiebreak rules</Tab>\r\n        </TabList>\r\n        <TabPanels>\r\n            <TabPanel>\r\n                <ScoreTable title=\"Score detail\" />\r\n            </TabPanel>\r\n            <TabPanel>\r\n                <SelectTieBreaks />\r\n            </TabPanel>\r\n        </TabPanels>\r\n    </Tabs>\r\n);\r\nScores.propTypes = {\r\n    path: PropTypes.string\r\n};\r\n\r\nexport default Scores;\r\n","import {DateFormat, PlaceholderButton} from \"../../components/utility\";\r\nimport React, {useState} from \"react\";\r\nimport Icons from \"../../components/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useTournament} from \"../../hooks\";\r\n\r\nexport default function Header(props) {\r\n    const {tourney, tourneyDispatch} = useTournament();\r\n    const [isEditingName, setIsEditingName] = useState(false);\r\n    const [isEditingDate, setIsEditingDate] = useState(false);\r\n    const dateInput = (function () {\r\n        const year = tourney.date.getFullYear();\r\n        const month = (tourney.date.getMonth() < 9)\r\n            ? \"0\" + (tourney.date.getMonth() + 1)\r\n            : tourney.date.getMonth() + 1;\r\n        const day = (tourney.date.getDate() < 10)\r\n            ? \"0\" + tourney.date.getDate()\r\n            : tourney.date.getDate();\r\n        return year + \"-\" + month + \"-\" + day;\r\n    }());\r\n\r\n    function updateDate(event) {\r\n        const [\r\n            rawYear,\r\n            rawMonth,\r\n            rawDay\r\n        ] = event.currentTarget.value.split(\"-\");\r\n        const year = Number(rawYear);\r\n        const month = Number(rawMonth) - 1;\r\n        const day = Number(rawDay);\r\n        tourneyDispatch({\r\n            date: new Date(year, month, day),\r\n            type: \"SET_DATE\"\r\n        });\r\n    }\r\n    // TODO: Audit accesibility of these edit controls. (Keyboard focus etc.)\r\n    return (\r\n        <div className={props.className}>\r\n            {(isEditingName)\r\n            ? (\r\n                <p className=\"display-20\">\r\n                    <PlaceholderButton />{\" \"}\r\n                    <input\r\n                        className=\"display-20\"\r\n                        type=\"text\"\r\n                        value={tourney.name}\r\n                        onChange={(event) => tourneyDispatch({\r\n                            name: event.currentTarget.value,\r\n                            type: \"SET_NAME\"\r\n                        })}\r\n                    />{\" \"}\r\n                    <button\r\n                        className=\"button-ghost\"\r\n                        onClick={() => setIsEditingName(false)}\r\n                    >\r\n                        <Icons.Check />\r\n                    </button>\r\n                </p>\r\n            ) : (\r\n                <h1 className=\"buttons-on-hover\">\r\n                    <PlaceholderButton />{\" \"}\r\n                    <span className=\"inputPlaceholder\">\r\n                        {tourney.name}\r\n                    </span>{\" \"}\r\n                    <button\r\n                        className=\"button-ghost\"\r\n                        onClick={() => setIsEditingName(true)}\r\n                    >\r\n                        <Icons.Edit />\r\n                    </button>\r\n                </h1>\r\n            )}\r\n            {(isEditingDate)\r\n            ? (\r\n                <p className=\"caption-30\">\r\n                    <PlaceholderButton />{\" \"}\r\n                    <input\r\n                        className=\"caption-30\"\r\n                        type=\"date\"\r\n                        value={dateInput}\r\n                        onChange={updateDate}\r\n                    />{\" \"}\r\n                    <button\r\n                        className=\"button-ghost\"\r\n                        onClick={() => setIsEditingDate(false)}\r\n                    >\r\n                        <Icons.Check />\r\n                    </button>\r\n                </p>\r\n            )\r\n            : (\r\n                <p className=\"caption-30 buttons-on-hover\">\r\n                    <PlaceholderButton />{\" \"}\r\n                    <DateFormat date={tourney.date} />{\" \"}\r\n                    <button\r\n                        className=\"button-ghost\"\r\n                        onClick={() => setIsEditingDate(true)}\r\n                    >\r\n                        <Icons.Edit />\r\n                    </button>\r\n                </p>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\nHeader.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n","import {useDocumentTitle, useTournament} from \"../../hooks\";\r\nimport {Link} from \"@reach/router\";\r\nimport React from \"react\";\r\n\r\nexport default function Options() {\r\n    const {tourneyDispatch} = useTournament();\r\n    useDocumentTitle(\"tournament options\");\r\n    function changeToOne() {\r\n        tourneyDispatch({\r\n            type: \"UPDATE_BYE_SCORES\",\r\n            value: 1\r\n        });\r\n        window.alert(\"Bye value updated to 1.\");\r\n    }\r\n    function changeToOneHalf() {\r\n        tourneyDispatch({\r\n            type: \"UPDATE_BYE_SCORES\",\r\n            value: 0.5\r\n        });\r\n        window.alert(\"Bye value updated to ½.\");\r\n    }\r\n    return (\r\n        <div className=\"content-area\">\r\n            <h2>Change bye scores</h2>\r\n            <button onClick={changeToOne}>Change to 1</button>{\" \"}\r\n            <button onClick={changeToOneHalf}>Change to ½</button>\r\n            <p className=\"caption-30\">\r\n                This will update all bye matches which have been previously\r\n                scored in this tournament. To change the default bye value in\r\n                future matches, go to the{\" \"}\r\n                <Link to=\"/options\">app options</Link>.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n","import {calcNumOfRounds, isRoundComplete} from \"../../data-types\";\r\nimport {useDocumentTitle, useTournament} from \"../../hooks\";\r\nimport {DUMMY_ID} from \"../../data-types\";\r\nimport Icons from \"../../components/icons\";\r\nimport {Link} from \"@reach/router\";\r\nimport {Notification} from \"../../components/utility\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {last} from \"ramda\";\r\n\r\nexport default function Sidebar(props) {\r\n    const {\r\n        tourney,\r\n        getPlayer,\r\n        activePlayers,\r\n        playersDispatch,\r\n        tourneyDispatch\r\n    } = useTournament();\r\n    useDocumentTitle(tourney.name);\r\n    const {roundList} = tourney;\r\n    const isComplete = isRoundComplete(tourney, activePlayers);\r\n\r\n    const isNewRoundReady = (function () {\r\n        if (roundList.length === 0) {\r\n            return true;\r\n        }\r\n        return isComplete(roundList.length - 1);\r\n    }());\r\n    const roundCount = calcNumOfRounds(Object.keys(activePlayers).length);\r\n    const isItOver = roundList.length >= roundCount;\r\n    const [tooltipText, tooltipWarn] = (function () {\r\n        if (!isNewRoundReady) {\r\n            return [\r\n                \"Round in progress.\",\r\n                true\r\n            ];\r\n        } else if (isItOver) {\r\n            return [\"All rounds have completed.\", true];\r\n        } else {\r\n            return [\"Ready to begin a new round.\", false];\r\n        }\r\n    }());\r\n\r\n    function newRound() {\r\n        const confirmText = \"All rounds have completed. Are you sure you want \"\r\n            + \"to begin a new one?\";\r\n        if (isItOver) {\r\n            if (!window.confirm(confirmText)) {\r\n                return;\r\n            }\r\n        }\r\n        tourneyDispatch({type: \"ADD_ROUND\"});\r\n    }\r\n\r\n    async function delLastRound() {\r\n        if (window.confirm(\"Are you sure you want to delete the last round?\")) {\r\n            await props.navigate(\".\");\r\n            // If a match has been scored, then reset it.\r\n            // Should this logic be somewhere else?\r\n            last(roundList).forEach(function (match) {\r\n                if (match.result[0] + match.result[1] === 0) {\r\n                    return; // Don't change players who haven't scored.\r\n                }\r\n                match.playerIds.forEach(function (pId, color) {\r\n                    if (pId === DUMMY_ID) {\r\n                        return; // Don't try to set the dummy.\r\n                    }\r\n                    const {matchCount} = getPlayer(pId);\r\n                    playersDispatch({\r\n                        id: pId,\r\n                        matchCount: matchCount - 1,\r\n                        type: \"SET_PLAYER_MATCHCOUNT\"\r\n                    });\r\n                    playersDispatch({\r\n                        id: pId,\r\n                        rating: match.origRating[color],\r\n                        type: \"SET_PLAYER_RATING\"\r\n                    });\r\n                });\r\n            });\r\n            tourneyDispatch({type: \"DEL_LAST_ROUND\"});\r\n            if (tourney.roundList.length === 1) {\r\n                // Automatically remake round 1.\r\n                tourneyDispatch({type: \"ADD_ROUND\"});\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"..\">\r\n                            <Icons.X/>\r\n                            <span className=\"sidebar__hide-on-close\">\r\n                                &nbsp;Close\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <hr />\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\".\">\r\n                            <Icons.Users />\r\n                            <span className=\"sidebar__hide-on-close\">\r\n                                &nbsp;Players\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"status\">\r\n                            <Icons.Activity />\r\n                            <span className=\"sidebar__hide-on-close\">\r\n                                &nbsp;Status\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"crosstable\">\r\n                            <Icons.Layers />\r\n                            <span className=\"sidebar__hide-on-close\">\r\n                                &nbsp;Crosstable\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"scores\">\r\n                            <Icons.List />\r\n                            <span className=\"sidebar__hide-on-close\">\r\n                                &nbsp;Score detail\r\n                            </span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <hr />\r\n                <h5 className=\"sidebar__hide-on-close\">Rounds</h5>\r\n                <ul>\r\n                    {Object.keys(roundList).map((id) => (\r\n                        <li key={id}>\r\n                            <Link to={`round/${id}`}>\r\n                                {Number(id) + 1}\r\n                                {(isComplete(Number(id)))\r\n                                ? (\r\n                                    <span\r\n                                        className={\r\n                                            \"sidebar__hide-on-close \"\r\n                                            + \"caption-20\"}\r\n                                    >\r\n                                        &nbsp;Complete&nbsp;<Icons.Check />\r\n                                    </span>\r\n                                ) : (\r\n                                    <span\r\n                                        className={\r\n                                            \"sidebar__hide-on-close \"\r\n                                            + \"caption-20\"}\r\n                                    >\r\n                                        &nbsp;Not complete&nbsp;<Icons.Alert />\r\n                                    </span>\r\n                                )}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n            <hr />\r\n            <ul>\r\n                <li className=\"caption-30\">\r\n                    <span className=\" sidebar__hide-on-close\">\r\n                        Completion:{\" \"}\r\n                    </span>\r\n                    {roundList.length}/{roundCount}\r\n                </li>\r\n                <li>\r\n                    <Notification\r\n                        className=\"caption-20\"\r\n                        success={!tooltipWarn}\r\n                        tooltip={tooltipText}\r\n                    >\r\n                        <span className=\"sidebar__hide-on-close\">\r\n                            {tooltipText}\r\n                        </span>\r\n                    </Notification>\r\n                </li>\r\n            </ul>\r\n            <hr />\r\n            <ul>\r\n                <li>\r\n                    <button\r\n                        className={(tooltipWarn ? \"\" : \"button-primary\")}\r\n                        disabled={!isNewRoundReady}\r\n                        onClick={newRound}\r\n                    >\r\n                        <Icons.Plus/>\r\n                        <span className=\"sidebar__hide-on-close\">\r\n                            &nbsp;New round\r\n                        </span>\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button\r\n                        disabled={roundList.length === 0}\r\n                        onClick={delLastRound}\r\n                    >\r\n                        <Icons.Trash />\r\n                        <span className=\"sidebar__hide-on-close\">\r\n                            &nbsp;Remove last round\r\n                        </span>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n            <hr />\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"options\">\r\n                        <Icons.Settings />\r\n                        <span className=\"sidebar__hide-on-close\">\r\n                            &nbsp;Options\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nSidebar.propTypes = {\r\n    className: PropTypes.string,\r\n    navigate: PropTypes.func.isRequired\r\n};\r\n","import {Panel, PanelContainer} from \"../../components/utility\";\r\nimport React from \"react\";\r\nimport RoundTable from \"./round/round-table\";\r\nimport {ScoreTable} from \"./scores\";\r\nimport {useTournament} from \"../../hooks\";\r\n\r\nexport default function Status() {\r\n    const {tourney} = useTournament();\r\n    const lastRound = (function () {\r\n        if (tourney.roundList.length === 0) {\r\n            return <p>No rounds played yet.</p>;\r\n        }\r\n        const lastRoundId = tourney.roundList.length - 1;\r\n        if (tourney.roundList[lastRoundId].length === 0) {\r\n            return <p>Matched players will be shown here.</p>;\r\n        }\r\n        return (\r\n            <RoundTable\r\n                roundId={lastRoundId}\r\n                compact\r\n            />\r\n        );\r\n    }());\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: \"center\"}}>Tournament status</h2>\r\n            <PanelContainer\r\n                style={{justifyContent: \"center\"}}\r\n            >\r\n                <Panel>\r\n                    {lastRound}\r\n                </Panel>\r\n                <Panel>\r\n                    <ScoreTable title=\"Rankings\" compact />\r\n                </Panel>\r\n            </PanelContainer>\r\n        </>\r\n    );\r\n}\r\n","import Crosstable from \"./crosstable\";\r\nimport Header from \"./header\";\r\nimport NotFound from \"../../components/404\";\r\nimport Options from \"./options\";\r\nimport PlayerSelect from \"./player-select\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Round from \"./round\";\r\nimport {Router} from \"@reach/router\";\r\nimport Scores from \"./scores\";\r\nimport Sidebar from \"./sidebar\";\r\nimport Status from \"./status\";\r\nimport {TournamentProvider} from \"../../hooks\";\r\nimport styles from \"./index.module.css\";\r\n\r\nexport default function Tournament(props) {\r\n    return (\r\n        <TournamentProvider tourneyId={props.tourneyId}>\r\n            <div className={styles.tournament + \" has-sidebar\"}>\r\n                <Header className={styles.header} />\r\n                <Sidebar\r\n                    className={styles.sidebar + \" has-sidebar__sidebar\"}\r\n                    navigate={props.navigate}\r\n                />\r\n                <div className={styles.contentFrame + \" has-sidebar__content\"}>\r\n                    <Router>\r\n                        <PlayerSelect path=\"/\" />\r\n                        <Status path=\"status\" />\r\n                        <Crosstable path=\"crosstable\" />\r\n                        <Scores path=\"scores\" />\r\n                        <Round path=\"round/:roundId\" />\r\n                        <Options path=\"options\" />\r\n                        <NotFound default />\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        </TournamentProvider>\r\n    );\r\n}\r\nTournament.propTypes = {\r\n    children: PropTypes.node,\r\n    navigate: PropTypes.func,\r\n    path: PropTypes.string,\r\n    tourneyId: PropTypes.string\r\n};\r\n","import Icons from \"./icons\";\r\nimport {Link} from \"@reach/router\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <nav className=\"has-sidebar__sidebar\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/tourneys\">\r\n                        <Icons.Award />\r\n                        <span className=\"sidebar__hide-on-close\">\r\n                            &nbsp;Tournaments\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link  to=\"/players\">\r\n                        <Icons.Users />\r\n                        <span className=\"sidebar__hide-on-close\">\r\n                            &nbsp;Players\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/options\">\r\n                        <Icons.Settings />\r\n                        <span className=\"sidebar__hide-on-close\">\r\n                            &nbsp;Options\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default function HasSidebar({children}) {\r\n    return (\r\n        <div className=\"has-sidebar\">\r\n            <Sidebar />\r\n            <div className=\"has-sidebar__content\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nHasSidebar.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n};\r\n","import {DateFormat, SortLabel} from \"../../components/utility\";\r\nimport React, {useState} from \"react\";\r\nimport {\r\n    useAllTournamentsDb,\r\n    useDocumentTitle,\r\n    useSortedTable\r\n} from \"../../hooks\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport HasSidebar from \"../../components/sidebar-default\";\r\nimport Icons from \"../../components/icons\";\r\nimport {Link} from \"@reach/router\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\n\r\nexport default function TournamentList(props) {\r\n    const [tourneys, dispatch] = useAllTournamentsDb();\r\n    const sorted = useSortedTable(Object.values(tourneys), \"date\", true);\r\n    const [newTourneyName, setNewTourneyName] = useState(\"\");\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n    useDocumentTitle(\"tournament list\");\r\n\r\n    function updateNewName(event) {\r\n        setNewTourneyName(event.target.value);\r\n    }\r\n\r\n    function makeTournament(event) {\r\n        event.preventDefault();\r\n        dispatch({\r\n            name: newTourneyName,\r\n            type: \"ADD_TOURNEY\"\r\n        });\r\n        setNewTourneyName(\"\");\r\n        setIsFormOpen(false);\r\n    }\r\n\r\n    function deleteTournament(id, name) {\r\n        const message = \"Are you sure you want to delete “\" + name + \"”?\";\r\n        if (window.confirm(message)) {\r\n            dispatch({id, type: \"DEL_ITEM\"});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <HasSidebar>\r\n            <div className=\"content-area\">\r\n                <div className=\"toolbar toolbar__left\">\r\n                    <button\r\n                        onClick={() => setIsFormOpen(true)}\r\n                    >\r\n                        <Icons.Plus /> Add tournament\r\n                    </button>\r\n                </div>\r\n                {(Object.keys(tourneys).length > 0)\r\n                ?\r\n                <table>\r\n                    <caption>Tournament list</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <SortLabel\r\n                                    data={sorted}\r\n                                    label=\"Name\"\r\n                                    sortKey=\"name\"\r\n                                />\r\n                            </th>\r\n                            <th>\r\n                                <SortLabel\r\n                                    data={sorted}\r\n                                    label=\"Date\"\r\n                                    sortKey=\"date\"\r\n                                />\r\n                            </th>\r\n                            <th><VisuallyHidden>Controls</VisuallyHidden></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"content\">\r\n                        {sorted.table.map(({date, id, name}) =>\r\n                            <tr key={id} className=\"buttons-on-hover\">\r\n                                <td>\r\n                                    <Link to={id}>\r\n                                        {name}\r\n                                    </Link>\r\n                                </td>\r\n                                <td>\r\n                                    <DateFormat date={date} />\r\n                                </td>\r\n                                <td>\r\n                                    <button\r\n                                        aria-label={`Delete “${name}”`}\r\n                                        className=\"danger button-ghost\"\r\n                                        title={`Delete “${name}”`}\r\n                                        onClick={\r\n                                            () => deleteTournament(id, name)\r\n                                        }\r\n                                    >\r\n                                        <Icons.Trash />\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                : <p>No tournaments added yet.</p>\r\n                }\r\n                <Dialog isOpen={isFormOpen}>\r\n                    <button\r\n                        className=\"button-micro\"\r\n                        onClick={() => setIsFormOpen(false)}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                    <form onSubmit={makeTournament}>\r\n                        <fieldset>\r\n                            <legend>Make a new tournament</legend>\r\n                            <label htmlFor=\"tourney-name\">Name:</label>\r\n                            <input\r\n                                id=\"tourney-name\"\r\n                                name=\"tourney-name\"\r\n                                placeholder=\"tournament name\"\r\n                                required={true}\r\n                                type=\"text\"\r\n                                value={newTourneyName}\r\n                                onChange={updateNewName}\r\n                            />{\" \"}\r\n                            <input\r\n                                className=\"button-primary\"\r\n                                type=\"submit\"\r\n                                value=\"Create\"\r\n                            />\r\n                        </fieldset>\r\n                    </form>\r\n                </Dialog>\r\n            </div>\r\n        </HasSidebar>\r\n    );\r\n}\r\n","import Crosstable from \"./crosstable\";\r\nimport PlayerSelect from \"./player-select\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Round from \"./round\";\r\nimport Scores from \"./scores\";\r\nimport Tournament from \"./tournament\";\r\nimport TournamentList from \"./tournament-list\";\r\n\r\nconst TournamentIndex = (props) => (\r\n    <div className=\"passthrough\">\r\n        {props.children}\r\n    </div>\r\n);\r\nTournamentIndex.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default TournamentIndex;\r\nexport {Crosstable, PlayerSelect, Round, Scores, Tournament, TournamentList};\r\n","const electron = (window.require) ? window.require(\"electron\") : false;\r\nexport {electron};\r\n\r\n/**\r\n * Returns the result of a function. If Electron is not enabled, then it returns\r\n * `null`.\r\n * @param {function} fn\r\n */\r\nexport function ifElectron(fn) {\r\n    return (electron) ? fn() : null;\r\n}\r\n\r\nfunction toggleMaximize(win) {\r\n    if (!win.isMaximized()) {\r\n        win.maximize();\r\n    } else {\r\n        win.unmaximize();\r\n    }\r\n}\r\n/**\r\n * https://github.com/electron/electron/issues/16385#issuecomment-453955377\r\n */\r\nexport function macOSDoubleClick(event) {\r\n    ifElectron(function () {\r\n        if (!event.target.className.includes) {\r\n            return; // sometimes `className` isn't a string.\r\n        }\r\n        // We don't want double-clicking buttons to (un)maximize.\r\n        if (!event.target.className.includes(\"double-click-control\")) {\r\n            return;\r\n        }\r\n        const systemPrefs = electron.remote.systemPreferences;\r\n        const doubleClickAction = systemPrefs.getUserDefault(\r\n            \"AppleActionOnDoubleClick\",\r\n            \"string\"\r\n        );\r\n        const win = electron.remote.getCurrentWindow();\r\n        if (doubleClickAction === \"Minimize\") {\r\n            win.minimize();\r\n        } else if (doubleClickAction === \"Maximize\") {\r\n            toggleMaximize(win);\r\n        }\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Caution = () => (\r\n    <aside className={styles.caution + \" body-20\"}>\r\n        <p className={styles.caution__text}>\r\n            This is beta software. Want to help make it better? Check out the\r\n            {\" \"}\r\n            <span role=\"img\" aria-hidden>👉</span>\r\n            &nbsp;\r\n            <a\r\n                className={styles.caution__link}\r\n                href=\"https://github.com/johnridesabike/chessahoochee\"\r\n            >\r\n                Git repository\r\n            </a>.\r\n        </p>\r\n    </aside>\r\n);\r\n\r\nexport default Caution;\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport {\r\n    useAllPlayersDb,\r\n    useAllTournamentsDb,\r\n    useDocumentTitle,\r\n    useOptionsDb\r\n} from \"../hooks\";\r\nimport HasSidebar from \"../components/sidebar-default\";\r\nimport Icons from \"../components/icons\";\r\nimport demoData from \"../demo-data\";\r\n\r\nexport default function Options(props) {\r\n    const [tourneys, tourneysDispatch] = useAllTournamentsDb();\r\n    const [players, playersDispatch] = useAllPlayersDb();\r\n    const [text, setText] = useState(\"\");\r\n    const [options, optionsDispatch] = useOptionsDb();\r\n    useDocumentTitle(\"Options\");\r\n    // memoize this so the `useEffect` hook syncs with the correct states\r\n    const exportData = useMemo(\r\n        () => ({options, players, tourneys}),\r\n        [options, tourneys, players]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            setText(JSON.stringify(exportData, null, 4));\r\n        },\r\n        [exportData]\r\n    );\r\n    function loadData(data) {\r\n        tourneysDispatch({state: data.tournaments, type: \"LOAD_STATE\"});\r\n        optionsDispatch({state: data.options, type: \"LOAD_STATE\"});\r\n        playersDispatch({state: data.players, type: \"LOAD_STATE\"});\r\n        window.alert(\"Data loaded!\");\r\n    }\r\n    function handleText(event) {\r\n        event.preventDefault();\r\n        const importData = JSON.parse(text);\r\n        loadData(importData);\r\n    }\r\n    function handleFile(event) {\r\n        event.preventDefault();\r\n        const reader = new FileReader();\r\n        // eslint-disable-next-line fp/no-mutation\r\n        reader.onload = function (ev) {\r\n            const data = ev.target.result;\r\n            const importData = JSON.parse(data);\r\n            loadData(importData);\r\n        };\r\n        reader.readAsText(event.currentTarget.files[0]);\r\n        event.currentTarget.value = \"\"; // so the filename won't linger onscreen\r\n    }\r\n    function reloadDemoData(event) {\r\n        event.preventDefault();\r\n        loadData(demoData);\r\n    }\r\n    return (\r\n        <HasSidebar>\r\n            <div className=\"content-area\">\r\n                <h2>Game settings</h2>\r\n                <form>\r\n                    <fieldset>\r\n                        <legend>Default bye value</legend>\r\n                        <label className=\"monospace body-30\">\r\n                            1{\" \"}\r\n                            <input\r\n                                checked={options.byeValue === 1}\r\n                                type=\"radio\"\r\n                                onChange={() => optionsDispatch({\r\n                                    option: \"byeValue\",\r\n                                    type: \"SET_OPTION\",\r\n                                    value: 1\r\n                                })}\r\n                            />\r\n                        </label>\r\n                        <label className=\"monospace body-30\">\r\n                            ½{\" \"}\r\n                            <input\r\n                                checked={options.byeValue === 0.5}\r\n                                type=\"radio\"\r\n                                onChange={() => optionsDispatch({\r\n                                    option: \"byeValue\",\r\n                                    type: \"SET_OPTION\",\r\n                                    value: 0.5\r\n                                })}\r\n                            />\r\n                        </label>\r\n                    </fieldset>\r\n                </form>\r\n                <h2>Data</h2>\r\n                <fieldset>\r\n                    <legend>Manage data</legend>\r\n                    <p>\r\n                        <a\r\n                            download=\"chessahoochee.json\"\r\n                            href={\r\n                                \"data:application/json,\"\r\n                                + encodeURIComponent(JSON.stringify(exportData))\r\n                            }\r\n                        >\r\n                            <Icons.Download /> Export all data\r\n                        </a>\r\n                    </p>\r\n                    <label htmlFor=\"file\">Load data file:</label>\r\n                    <input\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        onChange={handleFile}\r\n                    />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Reset all changes</legend>\r\n                    <button onClick={reloadDemoData}>Reload demo data</button>\r\n                </fieldset>\r\n                <form onSubmit={handleText}>\r\n                    <fieldset>\r\n                        <legend>\r\n                            Advanced: manually edit data\r\n                        </legend>\r\n                        <textarea\r\n                            className=\"json\"\r\n                            cols={50}\r\n                            name=\"playerdata\"\r\n                            rows={25}\r\n                            spellCheck={false}\r\n                            value={text}\r\n                            onChange={\r\n                                (event) => setText(event.currentTarget.value)\r\n                            }\r\n                        />\r\n                        <p>\r\n                            <input type=\"submit\" value=\"Load\" />\r\n                        </p>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </HasSidebar>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Dialog} from \"@reach/dialog\";\r\nimport Icons from \"../../components/icons\";\r\nimport {Link} from \"@reach/router\";\r\nimport NewPlayer from \"../../components/new-player\";\r\nimport PropTypes from \"prop-types\";\r\nimport {SortLabel} from \"../../components/utility\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport styles from \"./index.module.css\";\r\nimport {useDocumentTitle} from \"../../hooks\";\r\n\r\nexport default function PlayerList({\r\n    sorted,\r\n    players,\r\n    playersDispatch,\r\n    optionsDispatch\r\n}) {\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n    useDocumentTitle(\"Players\");\r\n    const delPlayer = function (event, id) {\r\n        event.preventDefault();\r\n        const message = \"Are you sure you want to delete \"\r\n            + players[id].firstName + \" \" + players[id].lastName + \"?\";\r\n        if (window.confirm(message)) {\r\n            playersDispatch({id, type: \"DEL_ITEM\"});\r\n            optionsDispatch({id, type: \"DEL_AVOID_SINGLE\"});\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"content-area\">\r\n            <div className=\"toolbar toolbar__left\">\r\n                <button onClick={() => setIsFormOpen(true)}>\r\n                    <Icons.UserPlus /> Add a new player\r\n                </button>\r\n            </div>\r\n            <table className={styles.table}>\r\n                <caption>Player roster</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <SortLabel\r\n                                data={sorted}\r\n                                label=\"Name\"\r\n                                sortKey=\"firstName\"\r\n                            />\r\n                        </th>\r\n                        <th>\r\n                            <SortLabel\r\n                                data={sorted}\r\n                                label=\"Rating\"\r\n                                sortKey=\"rating\"\r\n                            />\r\n                        </th>\r\n                        <th>\r\n                            <SortLabel\r\n                                data={sorted}\r\n                                label=\"Matches\"\r\n                                sortKey=\"matchCount\"\r\n                            />\r\n                        </th>\r\n                        <th><VisuallyHidden>Controls</VisuallyHidden></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"content\">\r\n                    {sorted.table.map((player) =>\r\n                        <tr key={player.id}  className=\"buttons-on-hover\">\r\n                            <td className=\"table__player\">\r\n                                <Link to={player.id}>\r\n                                    {player.firstName} {player.lastName}\r\n                                </Link>\r\n                            </td>\r\n                            <td className=\"table__number\">\r\n                                {player.rating}\r\n                            </td>\r\n                            <td className=\"table__number\">\r\n                                {player.matchCount}\r\n                            </td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"danger button-ghost\"\r\n                                    onClick={\r\n                                        (event) => delPlayer(event, player.id)\r\n                                    }\r\n                                >\r\n                                    <Icons.Trash />\r\n                                    <VisuallyHidden>\r\n                                    Delete {player.firstName} {player.lastName}\r\n                                    </VisuallyHidden>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <Dialog isOpen={isFormOpen}>\r\n                <button\r\n                    className=\"button-micro\"\r\n                    onClick={() => setIsFormOpen(false)}\r\n                >\r\n                    Close\r\n                </button>\r\n                <NewPlayer dispatch={playersDispatch} />\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nPlayerList.propTypes = {\r\n    optionsDispatch: PropTypes.func.isRequired,\r\n    players: PropTypes.object.isRequired,\r\n    playersDispatch: PropTypes.func.isRequired,\r\n    sorted: PropTypes.object.isRequired\r\n};\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport Icons from \"../../components/icons\";\r\nimport {Link} from \"@reach/router\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getPlayerAvoidList} from \"../../data-types\";\r\nimport numeral from \"numeral\";\r\nimport {ratings} from \"../../pairing-scoring\";\r\nimport styles from \"./index.module.css\";\r\nimport {useDocumentTitle} from \"../../hooks\";\r\n\r\nfunction PlayerProfile({\r\n    playerId,\r\n    players,\r\n    playersDispatch,\r\n    options,\r\n    optionsDispatch\r\n}) {\r\n    const player = players[playerId];\r\n    const getAvoidList = getPlayerAvoidList(options.avoidPairs);\r\n    const [singAvoidList, setSingAvoidList] = useState(getAvoidList(playerId));\r\n    const playerName = (player) ? player.firstName + \" \" + player.lastName : \"\";\r\n    useDocumentTitle(\"profile for \" + playerName);\r\n    // Memoize this so useEffect doesn't cause a memory leak.\r\n    const unAvoided = useMemo(\r\n        () => Object.keys(players).filter(\r\n            (id) => !singAvoidList.includes(id) && id !== playerId\r\n        ),\r\n        [players, playerId, singAvoidList]\r\n    );\r\n    const [selectedAvoider, setSelectedAvoider] = useState(unAvoided[0]);\r\n    function avoidAdd(event) {\r\n        event.preventDefault();\r\n        optionsDispatch({\r\n            pair: [playerId, selectedAvoider],\r\n            type: \"ADD_AVOID_PAIR\"\r\n        });\r\n    }\r\n    useEffect(\r\n        function () {\r\n            setSingAvoidList(getAvoidList(playerId));\r\n        },\r\n        [getAvoidList, playerId]\r\n    );\r\n    useEffect(\r\n        function () {\r\n            setSelectedAvoider(unAvoided[0]);\r\n        },\r\n        [setSelectedAvoider, unAvoided]\r\n    );\r\n    function handleChange(event) {\r\n        event.preventDefault();\r\n        const {firstName, lastName, matchCount, rating} = event.currentTarget;\r\n        playersDispatch({\r\n            firstName: firstName.value,\r\n            id: playerId,\r\n            lastName: lastName.value,\r\n            matchCount: Number(matchCount.value),\r\n            rating: Number(rating.value),\r\n            type: \"SET_PLAYER\"\r\n        });\r\n    }\r\n    if (!player) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div className={styles.playerInfo + \" content-area\"}>\r\n            <Link to=\"..\"><Icons.ChevronLeft /> Back</Link>\r\n            <h2>\r\n                Profile for {player.firstName} {player.lastName}\r\n            </h2>\r\n            <form onChange={handleChange} onSubmit={handleChange}>\r\n                <p>\r\n                    <label htmlFor=\"firstName\">First name</label>\r\n                    <input\r\n                        defaultValue={player.firstName}\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"lastName\">Last name</label>\r\n                    <input\r\n                        defaultValue={player.lastName}\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"matchCount\">Matches played</label>\r\n                    <input\r\n                        defaultValue={String(player.matchCount)}\r\n                        name=\"matchCount\"\r\n                        type=\"number\"\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"rating\">Rating</label>\r\n                    <input\r\n                        defaultValue={String(player.rating)}\r\n                        name=\"rating\"\r\n                        type=\"number\"\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"Kfactor\">K factor</label>\r\n                    <input\r\n                        name=\"kfactor\"\r\n                        type=\"number\"\r\n                        disabled\r\n                        value={\r\n                            numeral(\r\n                                ratings.getkFactor(player.matchCount)\r\n                            ).format(\"00\")\r\n                        }\r\n                        readOnly\r\n                    />\r\n                </p>\r\n            </form>\r\n            <h3>Players to avoid</h3>\r\n            <ul>\r\n                {singAvoidList.map((pId) =>\r\n                    <li key={pId}>\r\n                        {players[pId].firstName} {players[pId].lastName}\r\n                        <button\r\n                            arial-label={`Remove \r\n${players[pId].firstName} ${players[pId].lastName} from avoid list.`}\r\n                            className=\"danger button-ghost\"\r\n                            title={`Remove ${players[pId].firstName} \r\n${players[pId].lastName}`}\r\n                            onClick={() =>\r\n                                optionsDispatch({\r\n                                    pair: [playerId, pId],\r\n                                    type: \"DEL_AVOID_PAIR\"\r\n                                })\r\n                            }\r\n                        >\r\n                            <Icons.Trash />\r\n                        </button>\r\n                    </li>\r\n                )}\r\n                {singAvoidList.length === 0 &&\r\n                    <li>None</li>\r\n                }\r\n            </ul>\r\n            <form onSubmit={avoidAdd}>\r\n                <fieldset>\r\n                    <legend>Add player to avoid</legend>\r\n                    <select\r\n                        onBlur={(event) =>\r\n                            setSelectedAvoider(event.target.value)\r\n                        }\r\n                    >\r\n                        {unAvoided.map((pId) => (\r\n                            <option key={pId} value={pId}>\r\n                                {players[pId].firstName} {players[pId].lastName}\r\n                            </option>\r\n                        ))}\r\n                    </select>{\" \"}\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nPlayerProfile.propTypes = {\r\n    options: PropTypes.object.isRequired,\r\n    optionsDispatch: PropTypes.func.isRequired,\r\n    playerId: PropTypes.string,\r\n    players: PropTypes.object.isRequired,\r\n    playersDispatch: PropTypes.func.isRequired\r\n};\r\n\r\nexport default function PlayerProfileWrapper(props) {\r\n    if (!props.players[props.playerId]) {\r\n        return <div>Error: player profile not found.</div>;\r\n    } else {\r\n        return <PlayerProfile {...props} />;\r\n    }\r\n}\r\nPlayerProfileWrapper.propTypes = {\r\n    playerId: PropTypes.string,\r\n    players: PropTypes.object.isRequired\r\n};\r\n","import {useAllPlayersDb, useOptionsDb, useSortedTable} from \"../../hooks\";\r\nimport HasSidebar from \"../../components/sidebar-default\";\r\nimport PlayerList from \"./player-list\";\r\nimport PlayerProfile from \"./player-profile\";\r\nimport React from \"react\";\r\nimport {Router} from \"@reach/router\";\r\n\r\nexport default function Players(props) {\r\n    const [players, playersDispatch] = useAllPlayersDb();\r\n    const sorted = useSortedTable(Object.values(players), \"firstName\", false);\r\n    const [options, optionsDispatch] = useOptionsDb();\r\n    const childProps = {options, optionsDispatch, players, playersDispatch};\r\n    return (\r\n        <HasSidebar>\r\n            <Router basepath=\"players\">\r\n                <PlayerList path=\"/\" sorted={sorted} {...childProps} />\r\n                <PlayerProfile path=\":playerId\" {...childProps} />\r\n            </Router>\r\n        </HasSidebar>\r\n    );\r\n}\r\nPlayers.propTypes = {};\r\n\r\nexport {PlayerProfile, PlayerList};\r\n","import HasSidebar from \"../components/sidebar-default\";\r\nimport Icons from \"../components/icons\";\r\nimport {Notification} from \"../components/utility\";\r\nimport React from \"react\";\r\nimport {loadDemoDB} from \"../hooks/db\";\r\nimport styles from \"./splash.module.css\";\r\n\r\nconst Splash = (props) => (\r\n    <HasSidebar>\r\n        <div className={styles.splash}>\r\n            <aside className={styles.hint}>\r\n                <ol>\r\n                    <li>\r\n                        <button\r\n                            className=\"button-primary\"\r\n                            onClick={() => loadDemoDB()}\r\n                        >\r\n                            Click here to load the demo data\r\n                        </button>{\" \"}\r\n                        (optional)\r\n                    </li>\r\n                    <li>\r\n                        <Icons.ArrowLeft /> Select a menu item.\r\n                    </li>\r\n                    <li>\r\n                        Start creating your tournaments!\r\n                    </li>\r\n                </ol>\r\n                <Notification warning>\r\n                    If you experience any glitches or crashes,<br />\r\n                    clear your browser cache and try again.\r\n                </Notification>\r\n            </aside>\r\n            <div className={styles.title}>\r\n                <div className={styles.titleIcon}>\r\n                    <Icons.Logo />\r\n                </div>\r\n                <div className={styles.titleText}>\r\n                    <h1>\r\n                        Chessahoochee\r\n                    </h1>\r\n                    <p className={styles.subtitle + \" caption-30\"}>\r\n                        a chess tournament app\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <footer className={\"body-20 \" + styles.footer}>\r\n                <p>\r\n                    This is an early, proof-of-concept chess tournament app.\r\n                    <br />\r\n                    <a href=\"https://github.com/johnridesabike/chessahoochee\">\r\n                        Suggetions, bug reports, and contributions are welcome.\r\n                    </a>\r\n                </p>\r\n                <p>\r\n                    Built with JavaScript and{\" \"}\r\n                    <a href=\"https://reactjs.org/\">React</a>.{\" \"}\r\n                    <span style={{fontSize: \"16px\"}}>\r\n                        <Icons.Javascript /> <Icons.React />\r\n                    </span>\r\n                </p>\r\n            </footer>\r\n        </div>\r\n    </HasSidebar>\r\n);\r\nexport default Splash;\r\n","// This handles the window controls for when the Electron app is running on\r\n// Windows.\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {electron, ifElectron} from \"../electron-utils\";\r\nimport styles from \"./windows-controls.module.css\";\r\n\r\n// https://github.com/microsoft/vscode/tree/master/src/vs/workbench/browser/parts/titlebar/media\r\nconst Close = () => (\r\n    <svg\r\n        fill=\"none\"\r\n        height=\"11\"\r\n        viewBox=\"0 0 11 11\"\r\n        width=\"11\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path\r\n            d=\"M6.279 5.5L11 10.221l-.779.779L5.5 6.279.779 11 0 10.221 4.721 5.5 0 .779.779 0 5.5 4.721 10.221 0 11 .779 6.279 5.5z\"\r\n            fill=\"#000\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nconst Maximize = () => (\r\n    <svg\r\n        fill=\"none\"\r\n        height=\"11\"\r\n        viewBox=\"0 0 11 11\"\r\n        width=\"11\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path d=\"M11 0v11H0V0h11zM9.899 1.101H1.1V9.9H9.9V1.1z\" fill=\"#000\"/>\r\n    </svg>\r\n);\r\n\r\nconst Minimize = () => (\r\n    <svg\r\n        fill=\"none\"\r\n        height=\"11\"\r\n        viewBox=\"0 0 11 11\"\r\n        width=\"11\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path d=\"M11 4.399V5.5H0V4.399h11z\" fill=\"#000\"/>\r\n    </svg>\r\n);\r\n\r\nconst Restore = () => (\r\n    <svg\r\n        fill=\"none\"\r\n        height=\"11\"\r\n        viewBox=\"0 0 11 11\"\r\n        width=\"11\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <path\r\n            d=\"M11 8.798H8.798V11H0V2.202h2.202V0H11v8.798zm-3.298-5.5h-6.6v6.6h6.6v-6.6zM9.9 1.1H3.298v1.101h5.5v5.5h1.1v-6.6z\"\r\n            fill=\"#000\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport default function Controls() {\r\n    const [isMaximized, setIsMaximized] = useState(false);\r\n    useEffect(\r\n        function () {\r\n            ifElectron(function () {\r\n                const win = electron.remote.getCurrentWindow();\r\n                win.on(\"maximize\", () => setIsMaximized(true));\r\n                win.on(\"unmaximize\", () => setIsMaximized(false));\r\n                setIsMaximized(win.isMaximized());\r\n            });\r\n        },\r\n        []\r\n    );\r\n    const win = electron.remote.getCurrentWindow();\r\n    return (\r\n        <div className={styles.container}>\r\n            <button\r\n                className={styles.winButton + \" button-ghost\"}\r\n                onClick={() => win.minimize()}\r\n            >\r\n                <Minimize />\r\n            </button>\r\n            {(isMaximized)\r\n            ? (\r\n                <button\r\n                    className={styles.winButton + \" button-ghost\"}\r\n                    onClick={() => win.unmaximize()}\r\n                >\r\n                    <Restore />\r\n                </button>\r\n            ) : (\r\n                <button\r\n                    className={styles.winButton + \" button-ghost\"}\r\n                    onClick={() => win.maximize()}\r\n                >\r\n                    <Maximize />\r\n                </button>\r\n            )}\r\n            <button\r\n                className={\r\n                    styles.winButton + \" \" + styles.close + \" button-ghost\"\r\n                }\r\n                onClick={() => win.close()}\r\n            >\r\n                <Close />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\nControls.propTypes = {\r\n    // isFullScreen: PropTypes.bool.isRequired\r\n};\r\n","import \"./side-effects\";\r\nimport {\r\n    Location,\r\n    LocationProvider,\r\n    Router,\r\n    createHistory\r\n} from \"@reach/router\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TournamentIndex, {\r\n    Tournament,\r\n    TournamentList\r\n} from \"./pages/tournament\";\r\nimport {electron, ifElectron, macOSDoubleClick} from \"./electron-utils\";\r\nimport Caution from \"./components/caution\";\r\nimport Icons from \"./components/icons\";\r\nimport NotFound from \"./components/404\";\r\nimport Options from \"./pages/options\";\r\nimport Players from \"./pages/players\";\r\nimport Splash from \"./pages/splash\";\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\nimport WindowsControls from \"./components/windows-controls\";\r\nimport classNames from \"classnames\";\r\nimport createHashSource from \"hash-source\";\r\nimport {useDocumentTitle} from \"./hooks\";\r\n// These are just for deploying to GitHub pages.\r\nlet source = createHashSource();\r\nlet history = createHistory(source);\r\n\r\nconst isWindowsAndElectron = (\r\n    navigator.appVersion.includes(\"Windows\")\r\n    && electron\r\n);\r\n\r\nfunction App() {\r\n    useDocumentTitle(\"a chess tournament app\");\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [isWindowBlur, setIsWindowBlur] = useState(false);\r\n    useEffect(\r\n        function () {\r\n            ifElectron(function () {\r\n                const win = electron.remote.getCurrentWindow();\r\n                win.on(\"enter-full-screen\", () => setIsFullScreen(true));\r\n                win.on(\"leave-full-screen\", () => setIsFullScreen(false));\r\n                win.on(\"blur\", () => setIsWindowBlur(true));\r\n                win.on(\"focus\", () => setIsWindowBlur(false));\r\n                setIsFullScreen(win.isFullScreen());\r\n                setIsWindowBlur(!win.isFocused());\r\n            });\r\n        },\r\n        []\r\n    );\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                \"app\",\r\n                {\"open-sidebar\": isSidebarOpen},\r\n                {\"closed-sidebar\": !isSidebarOpen},\r\n                {\"window-blur\": isWindowBlur},\r\n                {\"isWindows\": navigator.appVersion.includes(\"Windows\")},\r\n                {\"isElectron\": electron}\r\n            )}\r\n        >\r\n            <LocationProvider history={history}>\r\n                <header\r\n                    className={classNames(\r\n                        \"header\",\r\n                        \"double-click-control\",\r\n                        {\"traffic-light-padding\": (\r\n                            navigator.appVersion.includes(\"Mac\")\r\n                            && electron\r\n                            && !isFullScreen\r\n                        )}\r\n                    )}\r\n                    onDoubleClick={macOSDoubleClick}\r\n                >\r\n                    <div>\r\n                        {isWindowsAndElectron &&\r\n                            <span\r\n                                style={{\r\n                                    alignItems: \"center\",\r\n                                    display: \"inline-flex\",\r\n                                    marginRight: \"8px\"}\r\n                                }\r\n                            >\r\n                                <Icons.Logo/>\r\n                            </span>\r\n                        }\r\n                        <button\r\n                            className=\"button-ghost\"\r\n                            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\r\n                        >\r\n                            <Icons.Sidebar/>\r\n                            <VisuallyHidden>Toggle sidebar</VisuallyHidden>\r\n                        </button>\r\n                        <Location>\r\n                            {({location, navigate}) => (\r\n                                <button\r\n                                    className=\"button-ghost\"\r\n                                    disabled={location.pathname === \"/\"}\r\n                                    onClick={() => navigate(\"/\")}\r\n                                >\r\n                                    <Icons.Help />\r\n                                    <VisuallyHidden>About</VisuallyHidden>\r\n                                </button>\r\n                            )}\r\n                        </Location>\r\n                    </div>\r\n                    <div\r\n                        className={classNames(\r\n                            \"body-20\",\r\n                            \"double-click-control\",\r\n                            {\"disabled\": isWindowBlur}\r\n                        )}\r\n                        style={{\r\n                            left: \"0\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                            position: \"absolute\",\r\n                            right: \"0\",\r\n                            width: \"100px\"\r\n                        }}\r\n                    >\r\n                        Chessahoochee\r\n                    </div>\r\n                    {isWindowsAndElectron &&\r\n                        <WindowsControls />\r\n                    }\r\n                </header>\r\n                <main className=\"main\">\r\n                    <Router>\r\n                        <Splash path=\"/\" />\r\n                        <TournamentIndex path=\"tourneys\">\r\n                            <TournamentList path=\"/\" />\r\n                            <Tournament path=\":tourneyId/*\" />\r\n                        </TournamentIndex>\r\n                        <Players path=\"players/*\" />\r\n                        <Options path=\"options\" />\r\n                        <NotFound default />\r\n                    </Router>\r\n                </main>\r\n            </LocationProvider>\r\n            <footer className=\"footer\">\r\n                <Caution />\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import \"./styles\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport React, {StrictMode} from \"react\";\r\nimport App from \"./App\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(\r\n    <StrictMode><App /></StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"winnerSelect\":\"round_winnerSelect__34hAd\",\"table\":\"round_table__SUOa8\",\"tbody\":\"round_tbody__1lopf\",\"rowId\":\"round_rowId__2bQ3A\",\"controls\":\"round_controls__3TmW5\",\"matchResult\":\"round_matchResult__2mKfq\",\"playerResult\":\"round_playerResult__2x56m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splash\":\"splash_splash__32JCd\",\"hint\":\"splash_hint__3dQDf\",\"footer\":\"splash_footer__3KZow\",\"title\":\"splash_title__1FYpf\",\"titleIcon\":\"splash_titleIcon__1sqlI\",\"titleText\":\"splash_titleText__KSYxw\",\"subtitle\":\"splash_subtitle__1QKSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"windows-controls_container__39o4M\",\"winButton\":\"windows-controls_winButton__38mBI\",\"close\":\"windows-controls_close__23ocT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"players_table__1h5jy\",\"playerInfo\":\"players_playerInfo__321Ea\",\"controls\":\"players_controls__1r0qd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caution\":\"caution_caution__2rrOM\",\"caution__text\":\"caution_caution__text__LxysE\",\"caution__link\":\"caution_caution__link__3X8Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panels\":\"utility_panels__5PR5o\",\"panel\":\"utility_panel__12Wgy\"};"],"sourceRoot":""}