// Generated by BUCKLESCRIPT VERSION 6.0.3, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Utils$Coronate from "../Utils.bs.js";
import * as PageRound$Coronate from "./PageRound.bs.js";
import * as PageTourneyScores$Coronate from "./PageTourneyScores.bs.js";

function PageTournamentStatus(Props) {
  var tournament = Props.tournament;
  var tourney = tournament[/* tourney */7];
  var lastRound;
  if (tourney[/* roundList */5].length === 0) {
    lastRound = React.createElement("p", undefined, "No rounds played yet.");
  } else {
    var lastRoundId = tourney[/* roundList */5].length - 1 | 0;
    lastRound = tourney[/* roundList */5][lastRoundId].length === 0 ? React.createElement("p", undefined, "Matched players in the current round will be shown here.") : React.createElement(PageRound$Coronate.RoundTable[/* make */0], {
            isCompact: true,
            roundId: lastRoundId,
            tournament: tournament
          });
  }
  return React.createElement(React.Fragment, undefined, React.createElement("h2", {
                  style: {
                    textAlign: "center"
                  }
                }, "Tournament status"), React.createElement(Utils$Coronate.PanelContainer[/* make */0], {
                  children: null,
                  style: {
                    justifyContent: "center"
                  }
                }, React.createElement(Utils$Coronate.Panel[/* make */0], {
                      children: lastRound
                    }), React.createElement(Utils$Coronate.Panel[/* make */0], {
                      children: React.createElement(PageTourneyScores$Coronate.ScoreTable[/* make */0], {
                            isCompact: true,
                            tourney: tourney,
                            getPlayer: tournament[/* getPlayer */1],
                            title: "Rankings"
                          })
                    })));
}

var make = PageTournamentStatus;

export {
  make ,
  
}
/* react Not a pure module */
