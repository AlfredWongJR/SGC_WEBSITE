// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/bs-jest/src/jest.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as JestDom from "bs-jest-dom/src/JestDom.bs.js";
import * as PageRound$Coronate from "../PageTournament/PageRound.bs.js";
import * as ReactTestingLibrary from "bs-react-testing-library/src/ReactTestingLibrary.bs.js";
import * as TournamentData$Coronate from "../PageTournament/TournamentData.bs.js";

function RoundPanels_test$BattleForGothamCityRound(Props) {
  var children = Props.children;
  return React.createElement(TournamentData$Coronate.make, {
              children: children,
              tourneyId: "tvAdS4YbSOznrBgrg0ITA"
            });
}

var BattleForGothamCityRound = /* module */[/* make */RoundPanels_test$BattleForGothamCityRound];

Jest.describe("Tabs auto-change correctly.", (function (param) {
        var page = ReactTestingLibrary.render(undefined, undefined, React.createElement(RoundPanels_test$BattleForGothamCityRound, {
                  children: (function (t) {
                      return React.createElement(PageRound$Coronate.make, {
                                  roundId: 1,
                                  tournament: t
                                });
                    })
                }));
        var partial_arg_001 = (/unmatched players \(/i);
        var partial_arg = /* `RegExp */[
          889580489,
          partial_arg_001
        ];
        var selectTab = (function (eta) {
              var param = undefined;
              var param$1 = eta;
              return ReactTestingLibrary.getByText(partial_arg, param, param$1);
            })(page);
        var partial_arg_001$1 = (/^matches$/i);
        var partial_arg$1 = /* `RegExp */[
          889580489,
          partial_arg_001$1
        ];
        var matchesTab = (function (eta) {
              var param = undefined;
              var param$1 = eta;
              return ReactTestingLibrary.getByText(partial_arg$1, param, param$1);
            })(page);
        Jest.test("When no players are matched, it defaults to the pair-picker", (function (param) {
                return JestDom.toHaveAttribute("aria-selected", "true", Jest.Expect[/* expect */0](selectTab));
              }));
        Jest.test("Tab doesn't change focus if there are still players to be matched.", (function (param) {
                var partial_arg_001 = (/add bruce wayne/i);
                var partial_arg = /* `RegExp */[
                  889580489,
                  partial_arg_001
                ];
                var eta = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta);
                var partial_arg_001$1 = (/add dick grayson/i);
                var partial_arg$1 = /* `RegExp */[
                  889580489,
                  partial_arg_001$1
                ];
                var eta$1 = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg$1, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta$1);
                var partial_arg_001$2 = (/^match selected$/i);
                var partial_arg$2 = /* `RegExp */[
                  889580489,
                  partial_arg_001$2
                ];
                var eta$2 = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg$2, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta$2);
                return JestDom.toHaveAttribute("aria-selected", "true", Jest.Expect[/* expect */0](selectTab));
              }));
        Jest.test("The tab selection doesn't change if there are still matched players", (function (param) {
                var partial_arg_001 = (/add alfred pennyworth/i);
                var partial_arg = /* `RegExp */[
                  889580489,
                  partial_arg_001
                ];
                var eta = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta);
                var partial_arg_001$1 = (/add barbara gordon/i);
                var partial_arg$1 = /* `RegExp */[
                  889580489,
                  partial_arg_001$1
                ];
                var eta$1 = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg$1, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta$1);
                var partial_arg_001$2 = (/^match selected$/i);
                var partial_arg$2 = /* `RegExp */[
                  889580489,
                  partial_arg_001$2
                ];
                var eta$2 = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg$2, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta$2);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, matchesTab);
                var partial_arg_001$3 = (/edit match for bruce wayne versus dick grayson/i);
                var partial_arg$3 = /* `RegExp */[
                  889580489,
                  partial_arg_001$3
                ];
                var eta$3 = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg$3, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta$3);
                var partial_arg_001$4 = (/^unmatch$/i);
                var partial_arg$4 = /* `RegExp */[
                  889580489,
                  partial_arg_001$4
                ];
                var eta$4 = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg$4, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta$4);
                return JestDom.toHaveAttribute("aria-selected", "true", Jest.Expect[/* expect */0](matchesTab));
              }));
        Jest.test("The tab selection changes when all players have been unmatched", (function (param) {
                var partial_arg_001 = (/edit match for alfred pennyworth versus barbara gordon/i);
                var partial_arg = /* `RegExp */[
                  889580489,
                  partial_arg_001
                ];
                var eta = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta);
                var partial_arg_001$1 = (/^unmatch$/i);
                var partial_arg$1 = /* `RegExp */[
                  889580489,
                  partial_arg_001$1
                ];
                var eta$1 = (function (eta) {
                      var param = undefined;
                      var param$1 = eta;
                      return ReactTestingLibrary.getByText(partial_arg$1, param, param$1);
                    })(page);
                Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta$1);
                return JestDom.toHaveAttribute("aria-selected", "false", Jest.Expect[/* expect */0](selectTab));
              }));
        return Jest.test("The tab selection changes when all players have been paired", (function (param) {
                      var partial_arg_001 = (/^auto-pair unmatched players$/i);
                      var partial_arg = /* `RegExp */[
                        889580489,
                        partial_arg_001
                      ];
                      var eta = (function (eta) {
                            var param = undefined;
                            var param$1 = eta;
                            return ReactTestingLibrary.getByText(partial_arg, param, param$1);
                          })(page);
                      Curry._2(ReactTestingLibrary.FireEvent[/* click */8], undefined, eta);
                      return JestDom.toHaveAttribute("aria-selected", "false", Jest.Expect[/* expect */0](matchesTab));
                    }));
      }));

export {
  BattleForGothamCityRound ,
  
}
/*  Not a pure module */
