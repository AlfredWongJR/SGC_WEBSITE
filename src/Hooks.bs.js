// Generated by BUCKLESCRIPT VERSION 6.0.3, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Localforage from "localforage";
import * as DemoData$Coronate from "./DemoData.bs.js";
import * as LocalforageSetitems from "localforage-setitems";
import * as LocalforageRemoveitems from "localforage-removeitems";

((require("localforage-getitems")));

LocalforageSetitems.extendPrototype(Localforage.default);

LocalforageRemoveitems.extendPrototype(Localforage.default);

var database_name = "Coronate";

var optionsStore = Localforage.default.createInstance({
      name: database_name,
      storeName: "Options"
    });

var playerStore = Localforage.default.createInstance({
      name: database_name,
      storeName: "Players"
    });

var tourneyStore = Localforage.default.createInstance({
      name: database_name,
      storeName: "Tournaments"
    });

function loadDemoDB(param) {
  document.body.style.cursor = "wait";
  Promise.all(/* tuple */[
          optionsStore.setItems(/* Options */Block.__(2, [DemoData$Coronate.options])),
          playerStore.setItems(/* Players */Block.__(1, [DemoData$Coronate.players])),
          tourneyStore.setItems(/* Tourneys */Block.__(0, [DemoData$Coronate.tournaments]))
        ]).then((function (value) {
          window.alert("Demo data loaded!");
          document.body.style.cursor = "auto";
          return Promise.resolve(value);
        }));
  return /* () */0;
}

var Db = /* module */[
  /* database_name */database_name,
  /* optionsStore */optionsStore,
  /* playerStore */playerStore,
  /* tourneyStore */tourneyStore,
  /* loadDemoDB */loadDemoDB
];

export {
  Db ,
  
}
/*  Not a pure module */
